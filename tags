!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/45968eff/
ABCD_method	data/bpe_corpus_raw/train.py	/^utf-8	def	ABCD_method	(	self	)	:	\\n	$/;"	f
ABCD_method	data/data_raw/train.py	/^utf-8	def	ABCD_method	(	self	)	:	\\n	$/;"	f
APIScriptArgs	data/bpe_corpus_raw/valid.py	/^utf-8	def	APIScriptArgs	(	self	)	:	\\n	    	return	[	]	\\n		$/;"	f
APIScriptArgs	data/data_raw/valid.py	/^utf-8	def	APIScriptArgs	(	self	)	:	\\n	    	return	[	]	\\n		$/;"	f
AS_newreference	data/bpe_corpus_raw/train.py	/^utf-8	def	AS_newreference	(	self	,	ref	)	:	\\n	    	if	isinstance	(	ref	,	GenericReference	)	:	\\/;"	f
AS_newreference	data/data_raw/train.py	/^utf-8	def	AS_newreference	(	self	,	ref	)	:	\\n	    	if	isinstance	(	ref	,	GenericReference	)	:	\\/;"	f
AckSetResult	data/bpe_corpus_raw/valid.py	/^utf-8	def	AckSetResult	(	self	,	**	kwargs	)	:	\\n	    	return	AckSetResult	(	self	.	pid	.	value	/;"	f
AckSetResult	data/data_raw/valid.py	/^utf-8	def	AckSetResult	(	self	,	**	kwargs	)	:	\\n	    	return	AckSetResult	(	self	.	pid	.	value	/;"	f
ActiveUserMiddlewareMock	data/bpe_corpus_raw/train.py	/^utf-8	def	test_active_user_mocked	(	self	)	:	\\n	    	client	=	self	.	client	\\n	assertTrue	=	se/;"	c	function:test_active_user_mocked	file:
ActiveUserMiddlewareMock	data/data_raw/train.py	/^utf-8	def	test_active_user_mocked	(	self	)	:	\\n	    	client	=	self	.	client	\\n	assertTrue	=	se/;"	c	function:test_active_user_mocked	file:
Add	data/bpe_corpus_raw/valid.py	/^utf-8	def	Add	(	self	,	entry	)	:	\\n	    	if	not	isinstance	(	entry	,	PasswdMapEntry	)	:	\\n	   /;"	f
Add	data/data_raw/valid.py	/^utf-8	def	Add	(	self	,	entry	)	:	\\n	    	if	not	isinstance	(	entry	,	PasswdMapEntry	)	:	\\n	   /;"	f
AddArFileEntry	data/bpe_corpus_raw/valid.py	/^utf-8	def	AddArFileEntry	(	fileobj	,	filename	,	content	=	''	)	:	\\n	    	fileobj	.	write	(	(	fi/;"	f
AddArFileEntry	data/data_raw/valid.py	/^utf-8	def	AddArFileEntry	(	fileobj	,	filename	,	content	=	''	)	:	\\n	    	fileobj	.	write	(	(	fi/;"	f
AddArguments	data/bpe_corpus_raw/train.py	/^utf-8	@	classmethod	\\n	def	AddArguments	(	cls	,	argument_group	)	:	\\n	$/;"	f
AddArguments	data/data_raw/train.py	/^utf-8	@	classmethod	\\n	def	AddArguments	(	cls	,	argument_group	)	:	\\n	$/;"	f
AddType	data/bpe_corpus_raw/valid.py	/^utf-8	def	ToType	(	self	,	tokens	)	:	\\n	    	result	=	[	]	\\n	name_tokens	=	[	]	\\n	reference	=/;"	f	function:ToType	file:
AddType	data/data_raw/valid.py	/^utf-8	def	ToType	(	self	,	tokens	)	:	\\n	    	result	=	[	]	\\n	name_tokens	=	[	]	\\n	reference	=/;"	f	function:ToType	file:
AddrInfo	data/bpe_corpus_raw/train.py	/^utf-8	def	host_addrinfo	(	host	=	None	,	socket_family	=	None	,	ipv4_multicast	=	False	)	:	\\n	\\/;"	c	function:host_addrinfo	file:
AddrInfo	data/data_raw/train.py	/^utf-8	def	host_addrinfo	(	host	=	None	,	socket_family	=	None	,	ipv4_multicast	=	False	)	:	\\n	\\/;"	c	function:host_addrinfo	file:
AnotherMessage	data/bpe_corpus_raw/valid.py	/^utf-8	def	testEquality	(	self	)	:	\\n	\\n	\\n	    	class	MyEnum	(	messages	.	Enum	)	:	\\n	      /;"	c	class:testEquality.MyEnum
AnotherMessage	data/data_raw/valid.py	/^utf-8	def	testEquality	(	self	)	:	\\n	\\n	\\n	    	class	MyEnum	(	messages	.	Enum	)	:	\\n	      /;"	c	class:testEquality.MyEnum
ArcPotentialsFromTokens	data/bpe_corpus_raw/valid.py	/^utf-8	def	ArcPotentialsFromTokens	(	source_tokens	,	target_tokens	,	weights	)	:	\\n	    	check	./;"	f
ArcPotentialsFromTokens	data/data_raw/valid.py	/^utf-8	def	ArcPotentialsFromTokens	(	source_tokens	,	target_tokens	,	weights	)	:	\\n	    	check	./;"	f
Array	data/bpe_corpus_raw/valid.py	/^utf-8	def	Array	(	typecode_or_type	,	size_or_initializer	,	**	kwds	)	:	\\n	    	from	multiproces/;"	f
Array	data/data_raw/valid.py	/^utf-8	def	Array	(	typecode_or_type	,	size_or_initializer	,	**	kwds	)	:	\\n	    	from	multiproces/;"	f
AuthCASHandler	data/bpe_corpus_raw/valid.py	/^utf-8	def	AuthCASHandler	(	application	,	authority	)	:	\\n	    	assert	authority	.	endswith	(	'\//;"	f
AuthCASHandler	data/data_raw/valid.py	/^utf-8	def	AuthCASHandler	(	application	,	authority	)	:	\\n	    	assert	authority	.	endswith	(	'\//;"	f
Backup	data/bpe_corpus_raw/valid.py	/^utf-8	def	Backup	(	self	,	path	,	packages	=	None	,	apk	=	False	,	shared	=	False	,	nosystem	=	\\n/;"	f
Backup	data/data_raw/valid.py	/^utf-8	def	Backup	(	self	,	path	,	packages	=	None	,	apk	=	False	,	shared	=	False	,	nosystem	=	\\n/;"	f
BaseName	data/bpe_corpus_raw/valid.py	/^utf-8	def	BaseName	(	self	)	:	\\n	    	return	self	.	Split	(	)	[	1	]	\\n		$/;"	f
BaseName	data/data_raw/valid.py	/^utf-8	def	BaseName	(	self	)	:	\\n	    	return	self	.	Split	(	)	[	1	]	\\n		$/;"	f
BuildMetadata	data/bpe_corpus_raw/train.py	/^utf-8	def	BuildMetadata	(	sources	,	source_bytes	,	native_type	)	:	\\n	    	total_length	=	len	(/;"	f
BuildMetadata	data/data_raw/train.py	/^utf-8	def	BuildMetadata	(	sources	,	source_bytes	,	native_type	)	:	\\n	    	total_length	=	len	(/;"	f
BuilderFromSource	data/bpe_corpus_raw/train.py	/^utf-8	def	BuilderFromSource	(	source	,	filename	)	:	\\n	    	return	AstBuilder	(	tokenize	.	GetT/;"	f
BuilderFromSource	data/data_raw/train.py	/^utf-8	def	BuilderFromSource	(	source	,	filename	)	:	\\n	    	return	AstBuilder	(	tokenize	.	GetT/;"	f
CEscape	data/bpe_corpus_raw/valid.py	/^utf-8	def	CEscape	(	text	,	as_utf8	)	:	\\n	\\n	    	def	EscapeChar	(	c	)	:	\\n	        	"""Escap/;"	f
CEscape	data/data_raw/valid.py	/^utf-8	def	CEscape	(	text	,	as_utf8	)	:	\\n	\\n	    	def	EscapeChar	(	c	)	:	\\n	        	"""Escap/;"	f
COOKIES	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	COOKIES	(	self	)	:	\\n	    	depr	(	'BaseRequest.COOKIES was renamed to /;"	f
COOKIES	data/data_raw/train.py	/^utf-8	@	property	\\n	def	COOKIES	(	self	)	:	\\n	    	depr	(	'BaseRequest.COOKIES was renamed to /;"	f
CanonicalizeAlphabeticalOrder	data/bpe_corpus_raw/valid.py	/^utf-8	def	CanonicalizeAlphabeticalOrder	(	self	,	header_path	)	:	\\n	    	return	header_path	.	r/;"	f
CanonicalizeAlphabeticalOrder	data/data_raw/valid.py	/^utf-8	def	CanonicalizeAlphabeticalOrder	(	self	,	header_path	)	:	\\n	    	return	header_path	.	r/;"	f
CheckAccess	data/bpe_corpus_raw/valid.py	/^utf-8	def	CheckAccess	(	filename	,	clean_lines	,	linenum	,	nesting_state	,	error	)	:	\\n	    	li/;"	f
CheckAccess	data/data_raw/valid.py	/^utf-8	def	CheckAccess	(	filename	,	clean_lines	,	linenum	,	nesting_state	,	error	)	:	\\n	    	li/;"	f
CheckAltTokens	data/bpe_corpus_raw/valid.py	/^utf-8	def	CheckAltTokens	(	filename	,	clean_lines	,	linenum	,	error	)	:	\\n	    	line	=	clean_li/;"	f
CheckAltTokens	data/data_raw/valid.py	/^utf-8	def	CheckAltTokens	(	filename	,	clean_lines	,	linenum	,	error	)	:	\\n	    	line	=	clean_li/;"	f
CheckBegin	data/bpe_corpus_raw/valid.py	/^utf-8	def	CheckBegin	(	self	,	filename	,	clean_lines	,	linenum	,	error	)	:	\\n	    	pass	\\n		$/;"	f
CheckBegin	data/data_raw/valid.py	/^utf-8	def	CheckBegin	(	self	,	filename	,	clean_lines	,	linenum	,	error	)	:	\\n	    	pass	\\n		$/;"	f
CheckCStyleCast	data/bpe_corpus_raw/train.py	/^utf-8	def	CheckCStyleCast	(	filename	,	linenum	,	line	,	raw_line	,	cast_type	,	pattern	,	\\n	err/;"	f
CheckCStyleCast	data/data_raw/train.py	/^utf-8	def	CheckCStyleCast	(	filename	,	linenum	,	line	,	raw_line	,	cast_type	,	pattern	,	\\n	err/;"	f
CheckCheck	data/bpe_corpus_raw/valid.py	/^utf-8	def	CheckCheck	(	filename	,	clean_lines	,	linenum	,	error	)	:	\\n	    	lines	=	clean_lines/;"	f
CheckCheck	data/data_raw/valid.py	/^utf-8	def	CheckCheck	(	filename	,	clean_lines	,	linenum	,	error	)	:	\\n	    	lines	=	clean_lines/;"	f
CheckCompletedBlocks	data/bpe_corpus_raw/valid.py	/^utf-8	def	CheckCompletedBlocks	(	self	,	filename	,	error	)	:	\\n	    	for	obj	in	self	.	stack	:	/;"	f
CheckCompletedBlocks	data/data_raw/valid.py	/^utf-8	def	CheckCompletedBlocks	(	self	,	filename	,	error	)	:	\\n	    	for	obj	in	self	.	stack	:	/;"	f
CheckForIncludeWhatYouUse	data/bpe_corpus_raw/valid.py	/^utf-8	def	CheckForIncludeWhatYouUse	(	filename	,	clean_lines	,	include_state	,	error	,	\\n	io	=	/;"	f
CheckForIncludeWhatYouUse	data/data_raw/valid.py	/^utf-8	def	CheckForIncludeWhatYouUse	(	filename	,	clean_lines	,	include_state	,	error	,	\\n	io	=	/;"	f
CheckForNonStandardConstructs	data/bpe_corpus_raw/test.py	/^utf-8	def	CheckForNonStandardConstructs	(	filename	,	clean_lines	,	linenum	,	\\n	nesting_state	,/;"	f
CheckForNonStandardConstructs	data/data_raw/test.py	/^utf-8	def	CheckForNonStandardConstructs	(	filename	,	clean_lines	,	linenum	,	\\n	nesting_state	,/;"	f
CheckHeader	data/bpe_corpus_raw/valid.py	/^utf-8	def	CheckHeader	(	context	,	header_name	,	header	=	None	,	language	=	None	,	\\n	include_qu/;"	f
CheckHeader	data/data_raw/valid.py	/^utf-8	def	CheckHeader	(	context	,	header_name	,	header	=	None	,	language	=	None	,	\\n	include_qu/;"	f
CheckParameter	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	CheckParameter	(	cls	,	key	,	value	)	:	\\n	    	try	:	\\n	        	f/;"	f
CheckParameter	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	CheckParameter	(	cls	,	key	,	value	)	:	\\n	    	try	:	\\n	        	f/;"	f
CheckSqliteRowIter	data/bpe_corpus_raw/valid.py	/^utf-8	def	CheckSqliteRowIter	(	self	)	:	\\n	    	self	.	con	.	row_factory	=	sqlite	.	Row	\\n	row/;"	f
CheckSqliteRowIter	data/data_raw/valid.py	/^utf-8	def	CheckSqliteRowIter	(	self	)	:	\\n	    	self	.	con	.	row_factory	=	sqlite	.	Row	\\n	row/;"	f
CheckStyle	data/bpe_corpus_raw/train.py	/^utf-8	def	CheckStyle	(	filename	,	clean_lines	,	linenum	,	file_extension	,	\\n	nesting_state	,	e/;"	f
CheckStyle	data/data_raw/train.py	/^utf-8	def	CheckStyle	(	filename	,	clean_lines	,	linenum	,	file_extension	,	\\n	nesting_state	,	e/;"	f
CheckUserForLabels	data/bpe_corpus_raw/valid.py	/^utf-8	def	CheckUserForLabels	(	username	,	authorized_labels	,	token	=	None	)	:	\\n	    	authoriz/;"	f
CheckUserForLabels	data/data_raw/valid.py	/^utf-8	def	CheckUserForLabels	(	username	,	authorized_labels	,	token	=	None	)	:	\\n	    	authoriz/;"	f
CheckValue	data/bpe_corpus_raw/valid.py	/^utf-8	def	CheckValue	(	self	,	proposed_value	)	:	\\n	    	if	not	isinstance	(	proposed_value	,	s/;"	f
CheckValue	data/data_raw/valid.py	/^utf-8	def	CheckValue	(	self	,	proposed_value	)	:	\\n	    	if	not	isinstance	(	proposed_value	,	s/;"	f
ChooseOptimalRoot	data/bpe_corpus_raw/train.py	/^utf-8	def	ChooseOptimalRoot	(	examples	,	trainExamples	,	testExamples	,	attrs	,	\\n	nPossibleVal/;"	f
ChooseOptimalRoot	data/data_raw/train.py	/^utf-8	def	ChooseOptimalRoot	(	examples	,	trainExamples	,	testExamples	,	attrs	,	\\n	nPossibleVal/;"	f
CleanseComments	data/bpe_corpus_raw/valid.py	/^utf-8	def	CleanseComments	(	line	)	:	\\n	    	commentpos	=	line	.	find	(	'\/\/'	)	\\n	if	comment/;"	f
CleanseComments	data/data_raw/valid.py	/^utf-8	def	CleanseComments	(	line	)	:	\\n	    	commentpos	=	line	.	find	(	'\/\/'	)	\\n	if	comment/;"	f
CleanseRawStrings	data/bpe_corpus_raw/train.py	/^utf-8	def	CleanseRawStrings	(	raw_lines	)	:	\\n	    	delimiter	=	None	\\n	lines_without_raw_stri/;"	f
CleanseRawStrings	data/bpe_corpus_raw/valid.py	/^utf-8	def	CleanseRawStrings	(	raw_lines	)	:	\\n	    	delimiter	=	None	\\n	lines_without_raw_stri/;"	f
CleanseRawStrings	data/data_raw/train.py	/^utf-8	def	CleanseRawStrings	(	raw_lines	)	:	\\n	    	delimiter	=	None	\\n	lines_without_raw_stri/;"	f
CleanseRawStrings	data/data_raw/valid.py	/^utf-8	def	CleanseRawStrings	(	raw_lines	)	:	\\n	    	delimiter	=	None	\\n	lines_without_raw_stri/;"	f
Clone	data/bpe_corpus_raw/train.py	/^utf-8	def	Clone	(	self	)	:	\\n	    	return	_btk	.	btkPointCollection_Clone	(	self	)	\\n		$/;"	f
Clone	data/data_raw/train.py	/^utf-8	def	Clone	(	self	)	:	\\n	    	return	_btk	.	btkPointCollection_Clone	(	self	)	\\n		$/;"	f
Compose	data/bpe_corpus_raw/valid.py	/^utf-8	def	Compose	(	self	,	request	,	global_params	=	None	,	download	=	None	)	:	\\n	    	config	/;"	f
Compose	data/data_raw/valid.py	/^utf-8	def	Compose	(	self	,	request	,	global_params	=	None	,	download	=	None	)	:	\\n	    	config	/;"	f
Condition	data/bpe_corpus_raw/train.py	/^utf-8	def	Condition	(	lock	=	None	)	:	\\n	    	from	multiprocessing	.	synchronize	import	Conditi/;"	f
Condition	data/data_raw/train.py	/^utf-8	def	Condition	(	lock	=	None	)	:	\\n	    	from	multiprocessing	.	synchronize	import	Conditi/;"	f
ConvertModeToBase8	data/bpe_corpus_raw/test.py	/^utf-8	def	ConvertModeToBase8	(	mode	)	:	\\n	    	return	int	(	oct	(	mode	)	[	-	3	:	]	)	\\n		$/;"	f
ConvertModeToBase8	data/data_raw/test.py	/^utf-8	def	ConvertModeToBase8	(	mode	)	:	\\n	    	return	int	(	oct	(	mode	)	[	-	3	:	]	)	\\n		$/;"	f
CooperativelyShutdown	data/bpe_corpus_raw/train.py	/^utf-8	def	CooperativelyShutdown	(	self	,	proc	,	app_name	)	:	\\n	    	raise	NotImplementedError	/;"	f
CooperativelyShutdown	data/data_raw/train.py	/^utf-8	def	CooperativelyShutdown	(	self	,	proc	,	app_name	)	:	\\n	    	raise	NotImplementedError	/;"	f
Copy	data/bpe_corpus_raw/test.py	/^utf-8	def	Copy	(	self	)	:	\\n	    	p	=	Position	(	self	.	_x	,	self	.	_y	,	self	.	_w	,	self	.	_h	/;"	f
Copy	data/data_raw/test.py	/^utf-8	def	Copy	(	self	)	:	\\n	    	p	=	Position	(	self	.	_x	,	self	.	_y	,	self	.	_w	,	self	.	_h	/;"	f
CopyImageToDevice	data/bpe_corpus_raw/valid.py	/^utf-8	def	CopyImageToDevice	(	self	,	image	,	device	)	:	\\n	    	cmd	=	[	'dd'	,	'if=%s'	%	image	/;"	f
CopyImageToDevice	data/data_raw/valid.py	/^utf-8	def	CopyImageToDevice	(	self	,	image	,	device	)	:	\\n	    	cmd	=	[	'dd'	,	'if=%s'	%	image	/;"	f
CopyObjects	data/bpe_corpus_raw/valid.py	/^utf-8	def	CopyObjects	(	object_ids	,	translation	=	None	)	:	\\n	    	if	translation	:	\\n	      /;"	f
CopyObjects	data/data_raw/valid.py	/^utf-8	def	CopyObjects	(	object_ids	,	translation	=	None	)	:	\\n	    	if	translation	:	\\n	      /;"	f
CoroutineBiNode	data/bpe_corpus_raw/valid.py	/^utf-8	@	skip_on_condition	(	'sys.version_info >= (3,7)'	,	'test conflicts with PEP 479'	)	\\n	de/;"	c	function:test_codecorator_no_iteration	file:
CoroutineBiNode	data/data_raw/valid.py	/^utf-8	@	skip_on_condition	(	'sys.version_info >= (3,7)'	,	'test conflicts with PEP 479'	)	\\n	de/;"	c	function:test_codecorator_no_iteration	file:
CreateFromDOM	data/bpe_corpus_raw/train.py	/^utf-8	@	classmethod	\\n	def	CreateFromDOM	(	cls	,	node	,	namespace_context	=	None	,	schema_locat/;"	f
CreateFromDOM	data/data_raw/train.py	/^utf-8	@	classmethod	\\n	def	CreateFromDOM	(	cls	,	node	,	namespace_context	=	None	,	schema_locat/;"	f
CreateMenu_Tools	data/bpe_corpus_raw/valid.py	/^utf-8	def	CreateMenu_Tools	(	self	)	:	\\n	    	menu	=	wx	.	Menu	(	style	=	wx	.	MENU_TEAROFF	)	\\/;"	f
CreateMenu_Tools	data/data_raw/valid.py	/^utf-8	def	CreateMenu_Tools	(	self	)	:	\\n	    	menu	=	wx	.	Menu	(	style	=	wx	.	MENU_TEAROFF	)	\\/;"	f
CreatePyTypeInfo	data/bpe_corpus_raw/train.py	/^utf-8	def	CreatePyTypeInfo	(	desc	,	path	,	package_required	=	True	)	:	\\n	    	pypath	=	''	+	pa/;"	f
CreatePyTypeInfo	data/data_raw/train.py	/^utf-8	def	CreatePyTypeInfo	(	desc	,	path	,	package_required	=	True	)	:	\\n	    	pypath	=	''	+	pa/;"	f
CreateReadSession	data/bpe_corpus_raw/valid.py	/^utf-8	def	CreateReadSession	(	self	,	request	,	context	)	:	\\n	    	context	.	set_code	(	grpc	.	/;"	f
CreateReadSession	data/data_raw/valid.py	/^utf-8	def	CreateReadSession	(	self	,	request	,	context	)	:	\\n	    	context	.	set_code	(	grpc	.	/;"	f
CreateTransport	data/bpe_corpus_raw/train.py	/^utf-8	def	CreateTransport	(	self	,	service_url	,	protocol	=	protojson	)	:	\\n	    	return	transp/;"	f
CreateTransport	data/data_raw/train.py	/^utf-8	def	CreateTransport	(	self	,	service_url	,	protocol	=	protojson	)	:	\\n	    	return	transp/;"	f
CreateUserCookieDict	data/bpe_corpus_raw/train.py	/^utf-8	def	CreateUserCookieDict	(	self	,	user_id	,	device_id	,	user_name	=	None	,	\\n	viewpoint_i/;"	f
CreateUserCookieDict	data/data_raw/train.py	/^utf-8	def	CreateUserCookieDict	(	self	,	user_id	,	device_id	,	user_name	=	None	,	\\n	viewpoint_i/;"	f
D_to_nu	data/bpe_corpus_raw/valid.py	/^utf-8	@	u	.	quantity_input	(	D	=	u	.	rad	)	\\n	def	D_to_nu	(	D	)	:	\\n	    	return	(	D_to_nu_fas/;"	f
D_to_nu	data/data_raw/valid.py	/^utf-8	@	u	.	quantity_input	(	D	=	u	.	rad	)	\\n	def	D_to_nu	(	D	)	:	\\n	    	return	(	D_to_nu_fas/;"	f
DeadlockWrap	data/bpe_corpus_raw/valid.py	/^utf-8	def	DeadlockWrap	(	function	,	*	_args	,	**	_kwargs	)	:	\\n	    	sleeptime	=	_deadlock_MinS/;"	f
DeadlockWrap	data/data_raw/valid.py	/^utf-8	def	DeadlockWrap	(	function	,	*	_args	,	**	_kwargs	)	:	\\n	    	sleeptime	=	_deadlock_MinS/;"	f
Debug_SetHardwareBreakpoint	data/bpe_corpus_raw/valid.py	/^utf-8	def	Debug_SetHardwareBreakpoint	(	*	args	)	:	\\n	    	return	_x64dbgapi64	.	Debug_SetHardw/;"	f
Debug_SetHardwareBreakpoint	data/data_raw/valid.py	/^utf-8	def	Debug_SetHardwareBreakpoint	(	*	args	)	:	\\n	    	return	_x64dbgapi64	.	Debug_SetHardw/;"	f
DeclareKeyFlags	data/bpe_corpus_raw/valid.py	/^utf-8	def	DeclareKeyFlags	(	)	:	\\n	    	for	flag_name	in	DECLARED_KEY_FLAGS	:	\\n	        	flag/;"	f
DeclareKeyFlags	data/data_raw/valid.py	/^utf-8	def	DeclareKeyFlags	(	)	:	\\n	    	for	flag_name	in	DECLARED_KEY_FLAGS	:	\\n	        	flag/;"	f
DeleteTemplateValue	data/bpe_corpus_raw/valid.py	/^utf-8	def	DeleteTemplateValue	(	self	,	name	)	:	\\n	    	if	name	in	self	.	_def_dict	:	\\n	     /;"	f
DeleteTemplateValue	data/data_raw/valid.py	/^utf-8	def	DeleteTemplateValue	(	self	,	name	)	:	\\n	    	if	name	in	self	.	_def_dict	:	\\n	     /;"	f
Devices	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	Devices	(	cls	)	:	\\n	    	return	common	.	UsbHandle	.	FindDevices	(/;"	f
Devices	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	Devices	(	cls	)	:	\\n	    	return	common	.	UsbHandle	.	FindDevices	(/;"	f
DirEntryScanner	data/bpe_corpus_raw/valid.py	/^utf-8	def	DirEntryScanner	(	**	kw	)	:	\\n	    	kw	[	'node_factory'	]	=	SCons	.	Node	.	FS	.	Entry/;"	f
DirEntryScanner	data/data_raw/valid.py	/^utf-8	def	DirEntryScanner	(	**	kw	)	:	\\n	    	kw	[	'node_factory'	]	=	SCons	.	Node	.	FS	.	Entry/;"	f
DirScanner	data/bpe_corpus_raw/train.py	/^utf-8	def	DirScanner	(	**	kw	)	:	\\n	    	kw	[	'node_factory'	]	=	SCons	.	Node	.	FS	.	Entry	\\n	/;"	f
DirScanner	data/data_raw/train.py	/^utf-8	def	DirScanner	(	**	kw	)	:	\\n	    	kw	[	'node_factory'	]	=	SCons	.	Node	.	FS	.	Entry	\\n	/;"	f
DisplayWidth	data/bpe_corpus_raw/valid.py	/^utf-8	def	DisplayWidth	(	self	,	buf	)	:	\\n	    	if	not	isinstance	(	buf	,	six	.	string_types	)	/;"	f
DisplayWidth	data/data_raw/valid.py	/^utf-8	def	DisplayWidth	(	self	,	buf	)	:	\\n	    	if	not	isinstance	(	buf	,	six	.	string_types	)	/;"	f
DoGet	data/bpe_corpus_raw/valid.py	/^utf-8	def	DoGet	(	self	,	request	,	response	)	:	\\n	    	if	not	self	.	_publish_manager	:	\\n	  /;"	f
DoGet	data/data_raw/valid.py	/^utf-8	def	DoGet	(	self	,	request	,	response	)	:	\\n	    	if	not	self	.	_publish_manager	:	\\n	  /;"	f
DocFileSuite	data/bpe_corpus_raw/train.py	/^utf-8	def	DocFileSuite	(	*	paths	,	**	kw	)	:	\\n	    	suite	=	unittest	.	TestSuite	(	)	\\n	if	kw/;"	f
DocFileSuite	data/data_raw/train.py	/^utf-8	def	DocFileSuite	(	*	paths	,	**	kw	)	:	\\n	    	suite	=	unittest	.	TestSuite	(	)	\\n	if	kw/;"	f
DviPsStrFunction	data/bpe_corpus_raw/valid.py	/^utf-8	def	DviPsStrFunction	(	target	=	None	,	source	=	None	,	env	=	None	)	:	\\n	    	if	env	.	Ge/;"	f
DviPsStrFunction	data/data_raw/valid.py	/^utf-8	def	DviPsStrFunction	(	target	=	None	,	source	=	None	,	env	=	None	)	:	\\n	    	if	env	.	Ge/;"	f
EQ102	data/bpe_corpus_raw/valid.py	/^utf-8	def	EQ102	(	T	,	A	,	B	,	C	,	D	,	order	=	0	)	:	\\n	    	if	order	==	0	:	\\n	        	return/;"	f
EQ102	data/data_raw/valid.py	/^utf-8	def	EQ102	(	T	,	A	,	B	,	C	,	D	,	order	=	0	)	:	\\n	    	if	order	==	0	:	\\n	        	return/;"	f
EncodeField	data/bpe_corpus_raw/valid.py	/^utf-8	def	MessageEncoder	(	field_number	,	is_repeated	,	is_packed	)	:	\\n	    	tag	=	TagBytes	(	/;"	f	function:MessageEncoder.EncodeRepeatedField	file:
EncodeField	data/data_raw/valid.py	/^utf-8	def	MessageEncoder	(	field_number	,	is_repeated	,	is_packed	)	:	\\n	    	tag	=	TagBytes	(	/;"	f	function:MessageEncoder.EncodeRepeatedField	file:
EncodeRepeatedField	data/bpe_corpus_raw/valid.py	/^utf-8	def	MessageEncoder	(	field_number	,	is_repeated	,	is_packed	)	:	\\n	    	tag	=	TagBytes	(	/;"	f	function:MessageEncoder	file:
EncodeRepeatedField	data/data_raw/valid.py	/^utf-8	def	MessageEncoder	(	field_number	,	is_repeated	,	is_packed	)	:	\\n	    	tag	=	TagBytes	(	/;"	f	function:MessageEncoder	file:
Entity	data/bpe_corpus_raw/train.py	/^utf-8	def	dict_to_entity	(	dict	)	:	\\n	    	PARSERS	=	{	'source_date'	:	importer	.	validate_dat/;"	c	function:dict_to_entity	file:
Entity	data/data_raw/train.py	/^utf-8	def	dict_to_entity	(	dict	)	:	\\n	    	PARSERS	=	{	'source_date'	:	importer	.	validate_dat/;"	c	function:dict_to_entity	file:
EntityCount	data/bpe_corpus_raw/valid.py	/^utf-8	def	EntityCount	(	self	)	:	\\n	    	return	self	.	_Count	(	False	)	\\n		$/;"	f
EntityCount	data/data_raw/valid.py	/^utf-8	def	EntityCount	(	self	)	:	\\n	    	return	self	.	_Count	(	False	)	\\n		$/;"	f
Entry	data/bpe_corpus_raw/test.py	/^utf-8	def	run_entriesdump	(	path	)	:	\\n	    	exit_code	,	stdout_lines	,	stderr_lines	=	spawn_pr/;"	c	function:run_entriesdump	file:
Entry	data/data_raw/test.py	/^utf-8	def	run_entriesdump	(	path	)	:	\\n	    	exit_code	,	stdout_lines	,	stderr_lines	=	spawn_pr/;"	c	function:run_entriesdump	file:
ErrCheckHandle	data/bpe_corpus_raw/valid.py	/^utf-8	def	ErrCheckHandle	(	result	,	func	,	args	)	:	\\n	    	if	not	result	:	\\n	        	raise	/;"	f
ErrCheckHandle	data/data_raw/valid.py	/^utf-8	def	ErrCheckHandle	(	result	,	func	,	args	)	:	\\n	    	if	not	result	:	\\n	        	raise	/;"	f
EscapeChar	data/bpe_corpus_raw/valid.py	/^utf-8	def	CEscape	(	text	,	as_utf8	)	:	\\n	\\n	    	def	EscapeChar	(	c	)	:	\\n	        	"""Escap/;"	f	function:CEscape	file:
EscapeChar	data/data_raw/valid.py	/^utf-8	def	CEscape	(	text	,	as_utf8	)	:	\\n	\\n	    	def	EscapeChar	(	c	)	:	\\n	        	"""Escap/;"	f	function:CEscape	file:
EvalBinomialPmf	data/bpe_corpus_raw/valid.py	/^utf-8	def	EvalBinomialPmf	(	k	,	n	,	p	)	:	\\n	    	return	stats	.	binom	.	pmf	(	k	,	n	,	p	)	\\n	/;"	f
EvalBinomialPmf	data/data_raw/valid.py	/^utf-8	def	EvalBinomialPmf	(	k	,	n	,	p	)	:	\\n	    	return	stats	.	binom	.	pmf	(	k	,	n	,	p	)	\\n	/;"	f
ExceptionAppend	data/bpe_corpus_raw/valid.py	/^utf-8	def	ExceptionAppend	(	e	,	msg	)	:	\\n	    	if	not	e	.	args	:	\\n	        	e	.	args	=	msg	,/;"	f
ExceptionAppend	data/data_raw/valid.py	/^utf-8	def	ExceptionAppend	(	e	,	msg	)	:	\\n	    	if	not	e	.	args	:	\\n	        	e	.	args	=	msg	,/;"	f
ExecCopyInfoPlist	data/bpe_corpus_raw/train.py	/^utf-8	def	ExecCopyInfoPlist	(	self	,	source	,	dest	,	convert_to_binary	,	*	keys	)	:	\\n	    	fd	/;"	f
ExecCopyInfoPlist	data/data_raw/train.py	/^utf-8	def	ExecCopyInfoPlist	(	self	,	source	,	dest	,	convert_to_binary	,	*	keys	)	:	\\n	    	fd	/;"	f
ExecFilterLibtool	data/bpe_corpus_raw/train.py	/^utf-8	def	ExecFilterLibtool	(	self	,	*	cmd_list	)	:	\\n	    	libtool_re	=	re	.	compile	(	'^libto/;"	f
ExecFilterLibtool	data/data_raw/train.py	/^utf-8	def	ExecFilterLibtool	(	self	,	*	cmd_list	)	:	\\n	    	libtool_re	=	re	.	compile	(	'^libto/;"	f
ExplainGranted	data/bpe_corpus_raw/train.py	/^utf-8	def	ExplainGranted	(	self	,	request	,	context	)	:	\\n	    	reply	=	explain_pb2	.	ExplainGr/;"	f
ExplainGranted	data/data_raw/train.py	/^utf-8	def	ExplainGranted	(	self	,	request	,	context	)	:	\\n	    	reply	=	explain_pb2	.	ExplainGr/;"	f
Extension	data/bpe_corpus_raw/valid.py	/^utf-8	def	Extension	(	self	)	:	\\n	    	return	self	.	Split	(	)	[	2	]	\\n		$/;"	f
Extension	data/data_raw/valid.py	/^utf-8	def	Extension	(	self	)	:	\\n	    	return	self	.	Split	(	)	[	2	]	\\n		$/;"	f
Factory	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_startedConnecting	(	self	)	:	\\n	    	result	=	[	]	\\n	\\n	\\n	class	Factory	(	ob/;"	c	function:test_startedConnecting	file:
Factory	data/data_raw/valid.py	/^utf-8	def	test_startedConnecting	(	self	)	:	\\n	    	result	=	[	]	\\n	\\n	\\n	class	Factory	(	ob/;"	c	function:test_startedConnecting	file:
FakeCall	data/bpe_corpus_raw/valid.py	/^utf-8	def	testCallbackReCoiterate	(	self	)	:	\\n	    	calls	=	[	]	\\n	\\n	\\n	class	FakeCall	:	\\/;"	c	function:testCallbackReCoiterate	file:
FakeCall	data/data_raw/valid.py	/^utf-8	def	testCallbackReCoiterate	(	self	)	:	\\n	    	calls	=	[	]	\\n	\\n	\\n	class	FakeCall	:	\\/;"	c	function:testCallbackReCoiterate	file:
FieldSize	data/bpe_corpus_raw/train.py	/^utf-8	def	StringSizer	(	field_number	,	is_repeated	,	is_packed	)	:	\\n	    	tag_size	=	_TagSize	/;"	f	function:StringSizer.RepeatedFieldSize	file:
FieldSize	data/bpe_corpus_raw/valid.py	/^utf-8	def	_ModifiedSizer	(	compute_value_size	,	modify_value	)	:	\\n	\\n	    	def	SpecificSizer	/;"	f	function:_ModifiedSizer.SpecificSizer.PackedFieldSize.RepeatedFieldSize	file:
FieldSize	data/data_raw/train.py	/^utf-8	def	StringSizer	(	field_number	,	is_repeated	,	is_packed	)	:	\\n	    	tag_size	=	_TagSize	/;"	f	function:StringSizer.RepeatedFieldSize	file:
FieldSize	data/data_raw/valid.py	/^utf-8	def	_ModifiedSizer	(	compute_value_size	,	modify_value	)	:	\\n	\\n	    	def	SpecificSizer	/;"	f	function:_ModifiedSizer.SpecificSizer.PackedFieldSize.RepeatedFieldSize	file:
FileEquals	data/bpe_corpus_raw/test.py	/^utf-8	def	FileEquals	(	expected_file	,	actual_file	)	:	\\n	    	if	not	os	.	path	.	isfile	(	actu/;"	f
FileEquals	data/data_raw/test.py	/^utf-8	def	FileEquals	(	expected_file	,	actual_file	)	:	\\n	    	if	not	os	.	path	.	isfile	(	actu/;"	f
FilenameToUri	data/bpe_corpus_raw/valid.py	/^utf-8	def	FilenameToUri	(	self	,	path	,	use_http	=	False	,	use_ssl	=	False	,	port	=	8000	)	:	\\n/;"	f
FilenameToUri	data/data_raw/valid.py	/^utf-8	def	FilenameToUri	(	self	,	path	,	use_http	=	False	,	use_ssl	=	False	,	port	=	8000	)	:	\\n/;"	f
FindInstalledFiles	data/bpe_corpus_raw/valid.py	/^utf-8	def	FindInstalledFiles	(	self	)	:	\\n	    	from	SCons	.	Tool	import	install	\\n	if	install/;"	f
FindInstalledFiles	data/data_raw/valid.py	/^utf-8	def	FindInstalledFiles	(	self	)	:	\\n	    	from	SCons	.	Tool	import	install	\\n	if	install/;"	f
FindNextMultiLineCommentEnd	data/bpe_corpus_raw/valid.py	/^utf-8	def	FindNextMultiLineCommentEnd	(	lines	,	lineix	)	:	\\n	    	while	lineix	<	len	(	lines	)/;"	f
FindNextMultiLineCommentEnd	data/data_raw/valid.py	/^utf-8	def	FindNextMultiLineCommentEnd	(	lines	,	lineix	)	:	\\n	    	while	lineix	<	len	(	lines	)/;"	f
FindPreviousMatchingAngleBracket	data/bpe_corpus_raw/valid.py	/^utf-8	def	FindPreviousMatchingAngleBracket	(	clean_lines	,	linenum	,	init_prefix	)	:	\\n	    	li/;"	f
FindPreviousMatchingAngleBracket	data/data_raw/valid.py	/^utf-8	def	FindPreviousMatchingAngleBracket	(	clean_lines	,	linenum	,	init_prefix	)	:	\\n	    	li/;"	f
FindStartOfExpressionInLine	data/bpe_corpus_raw/train.py	/^utf-8	def	FindStartOfExpressionInLine	(	line	,	endpos	,	depth	,	startchar	,	endchar	)	:	\\n	    /;"	f
FindStartOfExpressionInLine	data/bpe_corpus_raw/valid.py	/^utf-8	def	FindStartOfExpressionInLine	(	line	,	endpos	,	depth	,	startchar	,	endchar	)	:	\\n	    /;"	f
FindStartOfExpressionInLine	data/data_raw/train.py	/^utf-8	def	FindStartOfExpressionInLine	(	line	,	endpos	,	depth	,	startchar	,	endchar	)	:	\\n	    /;"	f
FindStartOfExpressionInLine	data/data_raw/valid.py	/^utf-8	def	FindStartOfExpressionInLine	(	line	,	endpos	,	depth	,	startchar	,	endchar	)	:	\\n	    /;"	f
FlagCxx11Features	data/bpe_corpus_raw/train.py	/^utf-8	def	FlagCxx11Features	(	filename	,	clean_lines	,	linenum	,	error	)	:	\\n	    	line	=	clean/;"	f
FlagCxx11Features	data/data_raw/train.py	/^utf-8	def	FlagCxx11Features	(	filename	,	clean_lines	,	linenum	,	error	)	:	\\n	    	line	=	clean/;"	f
FormatErrorsDec	data/bpe_corpus_raw/train.py	/^utf-8	def	FormatErrorsDec	(	func	)	:	\\n	\\n	    	def	FormatErrorsWrap	(	context	)	:	\\n	       /;"	f
FormatErrorsDec	data/data_raw/train.py	/^utf-8	def	FormatErrorsDec	(	func	)	:	\\n	\\n	    	def	FormatErrorsWrap	(	context	)	:	\\n	       /;"	f
FormatErrorsWrap	data/bpe_corpus_raw/train.py	/^utf-8	def	FormatErrorsDec	(	func	)	:	\\n	\\n	    	def	FormatErrorsWrap	(	context	)	:	\\n	       /;"	f	function:FormatErrorsDec	file:
FormatErrorsWrap	data/data_raw/train.py	/^utf-8	def	FormatErrorsDec	(	func	)	:	\\n	\\n	    	def	FormatErrorsWrap	(	context	)	:	\\n	       /;"	f	function:FormatErrorsDec	file:
FormatLatLng	data/bpe_corpus_raw/valid.py	/^utf-8	def	FormatLatLng	(	lat_lng	)	:	\\n	    	return	'%0.6f,%0.6f'	%	lat_lng	\\n		$/;"	f
FormatLatLng	data/data_raw/valid.py	/^utf-8	def	FormatLatLng	(	lat_lng	)	:	\\n	    	return	'%0.6f,%0.6f'	%	lat_lng	\\n		$/;"	f
GenerateConfig	data/bpe_corpus_raw/valid.py	/^utf-8	def	GenerateConfig	(	context	)	:	\\n	    	resources	=	[	{	'name'	:	common	.	GenerateMachin/;"	f
GenerateConfig	data/data_raw/valid.py	/^utf-8	def	GenerateConfig	(	context	)	:	\\n	    	resources	=	[	{	'name'	:	common	.	GenerateMachin/;"	f
GenerateDataset	data/bpe_corpus_raw/valid.py	/^utf-8	def	GenerateDataset	(	self	,	num_of_dict_to_generate	=	10	)	:	\\n	    	random	.	seed	(	0	)/;"	f
GenerateDataset	data/data_raw/valid.py	/^utf-8	def	GenerateDataset	(	self	,	num_of_dict_to_generate	=	10	)	:	\\n	    	random	.	seed	(	0	)/;"	f
GenerateTests	data/bpe_corpus_raw/train.py	/^utf-8	def	GenerateTests	(	)	:	\\n	    	assert	len	(	_GROUPS	)	==	len	(	_GROUP_TEST_COUNTS	)	\\n	/;"	f
GenerateTests	data/data_raw/train.py	/^utf-8	def	GenerateTests	(	)	:	\\n	    	assert	len	(	_GROUPS	)	==	len	(	_GROUP_TEST_COUNTS	)	\\n	/;"	f
GetAccount	data/bpe_corpus_raw/train.py	/^utf-8	def	GetAccount	(	)	:	\\n	    	cmd	=	AWS_PREFIX	+	[	'sts'	,	'get-caller-identity'	]	\\n	std/;"	f
GetAccount	data/data_raw/train.py	/^utf-8	def	GetAccount	(	)	:	\\n	    	cmd	=	AWS_PREFIX	+	[	'sts'	,	'get-caller-identity'	]	\\n	std/;"	f
GetAllergies	data/bpe_corpus_raw/train.py	/^utf-8	def	GetAllergies	(	self	)	:	\\n	    	return	self	.	GetAlerts	(	)	\\n		$/;"	f
GetAllergies	data/data_raw/train.py	/^utf-8	def	GetAllergies	(	self	)	:	\\n	    	return	self	.	GetAlerts	(	)	\\n		$/;"	f
GetBiasedCodonUsage	data/bpe_corpus_raw/test.py	/^utf-8	def	GetBiasedCodonUsage	(	bias	=	1.0	)	:	\\n	    	frequencies	=	{	}	\\n	aas	=	{	}	\\n	for	/;"	f
GetBiasedCodonUsage	data/data_raw/test.py	/^utf-8	def	GetBiasedCodonUsage	(	bias	=	1.0	)	:	\\n	    	frequencies	=	{	}	\\n	aas	=	{	}	\\n	for	/;"	f
GetBuildOutputDirectory	data/bpe_corpus_raw/valid.py	/^utf-8	def	GetBuildOutputDirectory	(	opts	,	src_dir	=	None	)	:	\\n	    	src_dir	=	src_dir	or	'src/;"	f
GetBuildOutputDirectory	data/data_raw/valid.py	/^utf-8	def	GetBuildOutputDirectory	(	opts	,	src_dir	=	None	)	:	\\n	    	src_dir	=	src_dir	or	'src/;"	f
GetCategoryFilter	data/bpe_corpus_raw/valid.py	/^utf-8	def	GetCategoryFilter	(	self	)	:	\\n	    	included	=	set	(	)	\\n	for	i	in	xrange	(	self	.	/;"	f
GetCategoryFilter	data/data_raw/valid.py	/^utf-8	def	GetCategoryFilter	(	self	)	:	\\n	    	included	=	set	(	)	\\n	for	i	in	xrange	(	self	.	/;"	f
GetChannels	data/bpe_corpus_raw/train.py	/^utf-8	def	GetChannels	(	self	)	:	\\n	    	return	_btk	.	btkForcePlatformType2_GetChannels	(	self/;"	f
GetChannels	data/data_raw/train.py	/^utf-8	def	GetChannels	(	self	)	:	\\n	    	return	_btk	.	btkForcePlatformType2_GetChannels	(	self/;"	f
GetCommandOutput	data/bpe_corpus_raw/valid.py	/^utf-8	def	GetCommandOutput	(	env_cmd	)	:	\\n	    	environ	,	cmdline	=	env_cmd	\\n	environ	=	dict/;"	f
GetCommandOutput	data/data_raw/valid.py	/^utf-8	def	GetCommandOutput	(	env_cmd	)	:	\\n	    	environ	,	cmdline	=	env_cmd	\\n	environ	=	dict/;"	f
GetCurrentKeySet	data/bpe_corpus_raw/valid.py	/^utf-8	def	GetCurrentKeySet	(	self	)	:	\\n	    	result	=	self	.	GetKeySet	(	self	.	CurrentKeys	(	/;"	f
GetCurrentKeySet	data/data_raw/valid.py	/^utf-8	def	GetCurrentKeySet	(	self	)	:	\\n	    	result	=	self	.	GetKeySet	(	self	.	CurrentKeys	(	/;"	f
GetExecutionModeRunner	data/bpe_corpus_raw/train.py	/^utf-8	def	GetExecutionModeRunner	(	use_dx	,	device	,	mode	)	:	\\n	    	if	mode	==	'ri'	:	\\n	   /;"	f
GetExecutionModeRunner	data/data_raw/train.py	/^utf-8	def	GetExecutionModeRunner	(	use_dx	,	device	,	mode	)	:	\\n	    	if	mode	==	'ri'	:	\\n	   /;"	f
GetFieldIntegral	data/bpe_corpus_raw/train.py	/^utf-8	def	GetFieldIntegral	(	self	,	name	)	:	\\n	    	return	self	.	IntegrateField	(	self	.	GetF/;"	f
GetFieldIntegral	data/data_raw/train.py	/^utf-8	def	GetFieldIntegral	(	self	,	name	)	:	\\n	    	return	self	.	IntegrateField	(	self	.	GetF/;"	f
GetFileEntryByPath	data/bpe_corpus_raw/train.py	/^utf-8	def	GetFileEntryByPath	(	self	,	path	)	:	\\n	    	if	not	self	.	_file_entries	:	\\n	      /;"	f
GetFileEntryByPath	data/data_raw/train.py	/^utf-8	def	GetFileEntryByPath	(	self	,	path	)	:	\\n	    	if	not	self	.	_file_entries	:	\\n	      /;"	f
GetFunctions	data_utils/build_dataset.py	/^    class GetFunctions(ast.NodeVisitor):$/;"	c	function:get_fns_from_file	file:
GetHeaderGuardCPPVariable	data/bpe_corpus_raw/valid.py	/^utf-8	def	GetHeaderGuardCPPVariable	(	filename	)	:	\\n	    	filename	=	re	.	sub	(	'_flymake\\\\\\/;"	f
GetHeaderGuardCPPVariable	data/data_raw/valid.py	/^utf-8	def	GetHeaderGuardCPPVariable	(	filename	)	:	\\n	    	filename	=	re	.	sub	(	'_flymake\\\\\\/;"	f
GetIdlBuildData	data/bpe_corpus_raw/valid.py	/^utf-8	def	GetIdlBuildData	(	self	,	source	,	config	)	:	\\n	    	config	=	self	.	_TargetConfig	(	/;"	f
GetIdlBuildData	data/data_raw/valid.py	/^utf-8	def	GetIdlBuildData	(	self	,	source	,	config	)	:	\\n	    	config	=	self	.	_TargetConfig	(	/;"	f
GetImageList	data/bpe_corpus_raw/valid.py	/^utf-8	def	GetImageList	(	self	)	:	\\n	    	return	self	.	_imageList	\\n		$/;"	f
GetImageList	data/data_raw/valid.py	/^utf-8	def	GetImageList	(	self	)	:	\\n	    	return	self	.	_imageList	\\n		$/;"	f
GetLinearBinning	data/bpe_corpus_raw/valid.py	/^utf-8	def	GetLinearBinning	(	self	,	*	args	)	:	\\n	    	return	_gdal	.	RasterAttributeTable_GetL/;"	f
GetLinearBinning	data/data_raw/valid.py	/^utf-8	def	GetLinearBinning	(	self	,	*	args	)	:	\\n	    	return	_gdal	.	RasterAttributeTable_GetL/;"	f
GetLoginProfile	data/bpe_corpus_raw/valid.py	/^utf-8	def	GetLoginProfile	(	self	,	request	,	context	)	:	\\n	    	context	.	set_code	(	grpc	.	St/;"	f
GetLoginProfile	data/data_raw/valid.py	/^utf-8	def	GetLoginProfile	(	self	,	request	,	context	)	:	\\n	    	context	.	set_code	(	grpc	.	St/;"	f
GetMacBundleResources	data/bpe_corpus_raw/valid.py	/^utf-8	def	GetMacBundleResources	(	product_dir	,	xcode_settings	,	resources	)	:	\\n	    	dest	=	o/;"	f
GetMacBundleResources	data/data_raw/valid.py	/^utf-8	def	GetMacBundleResources	(	product_dir	,	xcode_settings	,	resources	)	:	\\n	    	dest	=	o/;"	f
GetMap	data/bpe_corpus_raw/valid.py	/^utf-8	def	GetMap	(	self	,	map_name	,	since	=	None	,	location	=	None	)	:	\\n	    	if	map_name	==	/;"	f
GetMap	data/data_raw/valid.py	/^utf-8	def	GetMap	(	self	,	map_name	,	since	=	None	,	location	=	None	)	:	\\n	    	if	map_name	==	/;"	f
GetMaxUploadCompressionBufferSize	data/bpe_corpus_raw/train.py	/^utf-8	def	GetMaxUploadCompressionBufferSize	(	)	:	\\n	    	return	HumanReadableToBytes	(	config	/;"	f
GetMaxUploadCompressionBufferSize	data/data_raw/train.py	/^utf-8	def	GetMaxUploadCompressionBufferSize	(	)	:	\\n	    	return	HumanReadableToBytes	(	config	/;"	f
GetMd5sum	data/bpe_corpus_raw/valid.py	/^utf-8	def	GetMd5sum	(	self	,	path	,	filename	)	:	\\n	    	stdout	,	_	=	self	.	RemoteCommand	(	'm/;"	f
GetMd5sum	data/data_raw/valid.py	/^utf-8	def	GetMd5sum	(	self	,	path	,	filename	)	:	\\n	    	stdout	,	_	=	self	.	RemoteCommand	(	'm/;"	f
GetMemUsed	data/bpe_corpus_raw/valid.py	/^utf-8	def	GetMemUsed	(	self	)	:	\\n	    	return	_snap	.	TRStr_GetMemUsed	(	self	)	\\n		$/;"	f
GetMemUsed	data/data_raw/valid.py	/^utf-8	def	GetMemUsed	(	self	)	:	\\n	    	return	_snap	.	TRStr_GetMemUsed	(	self	)	\\n		$/;"	f
GetObjectCoords	data/bpe_corpus_raw/test.py	/^utf-8	def	GetObjectCoords	(	self	,	obKey	,	none_ok	=	False	,	silent	=	False	)	:	\\n	    	res	=	s/;"	f
GetObjectCoords	data/data_raw/test.py	/^utf-8	def	GetObjectCoords	(	self	,	obKey	,	none_ok	=	False	,	silent	=	False	)	:	\\n	    	res	=	s/;"	f
GetPDBName	data/bpe_corpus_raw/valid.py	/^utf-8	def	GetPDBName	(	self	,	config	,	expand_special	,	default	)	:	\\n	    	config	=	self	.	_Ta/;"	f
GetPDBName	data/data_raw/valid.py	/^utf-8	def	GetPDBName	(	self	,	config	,	expand_special	,	default	)	:	\\n	    	config	=	self	.	_Ta/;"	f
GetParserPluginsInformation	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	GetParserPluginsInformation	(	cls	,	parser_filter_expression	=	None	/;"	f
GetParserPluginsInformation	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	GetParserPluginsInformation	(	cls	,	parser_filter_expression	=	None	/;"	f
GetPhoto	data/bpe_corpus_raw/train.py	/^utf-8	def	GetPhoto	(	self	,	contact_entry_or_url	)	:	\\n	    	url	=	None	\\n	if	isinstance	(	con/;"	f
GetPhoto	data/data_raw/train.py	/^utf-8	def	GetPhoto	(	self	,	contact_entry_or_url	)	:	\\n	    	url	=	None	\\n	if	isinstance	(	con/;"	f
GetPrototype	data/bpe_corpus_raw/train.py	/^utf-8	def	GetPrototype	(	self	,	descriptor	)	:	\\n	    	if	descriptor	.	full_name	not	in	self	.	/;"	f
GetPrototype	data/bpe_corpus_raw/valid.py	/^utf-8	def	GetPrototype	(	self	,	descriptor	)	:	\\n	    	if	descriptor	.	full_name	not	in	self	.	/;"	f
GetPrototype	data/data_raw/train.py	/^utf-8	def	GetPrototype	(	self	,	descriptor	)	:	\\n	    	if	descriptor	.	full_name	not	in	self	.	/;"	f
GetPrototype	data/data_raw/valid.py	/^utf-8	def	GetPrototype	(	self	,	descriptor	)	:	\\n	    	if	descriptor	.	full_name	not	in	self	.	/;"	f
GetSessionIdentifier	data/bpe_corpus_raw/valid.py	/^utf-8	def	GetSessionIdentifier	(	self	)	:	\\n	    	return	self	.	_session_identifier	\\n		$/;"	f
GetSessionIdentifier	data/data_raw/valid.py	/^utf-8	def	GetSessionIdentifier	(	self	)	:	\\n	    	return	self	.	_session_identifier	\\n		$/;"	f
GetSourceDir	data/bpe_corpus_raw/valid.py	/^utf-8	def	GetSourceDir	(	)	:	\\n	    	return	os	.	path	.	abspath	(	GetFlag	(	'source_dir'	)	)	\\/;"	f
GetSourceDir	data/data_raw/valid.py	/^utf-8	def	GetSourceDir	(	)	:	\\n	    	return	os	.	path	.	abspath	(	GetFlag	(	'source_dir'	)	)	\\/;"	f
GetTestExecutablePath	data/bpe_corpus_raw/train.py	/^utf-8	def	GetTestExecutablePath	(	executable_name	)	:	\\n	    	return	gtest_test_utils	.	GetTest/;"	f
GetTestExecutablePath	data/data_raw/train.py	/^utf-8	def	GetTestExecutablePath	(	executable_name	)	:	\\n	    	return	gtest_test_utils	.	GetTest/;"	f
GetValue	data/bpe_corpus_raw/valid.py	/^utf-8	def	GetValue	(	self	,	Channel	,	Parameter	)	:	\\n	    	try	:	\\n	        	if	(	Parameter	=/;"	f
GetValue	data/data_raw/valid.py	/^utf-8	def	GetValue	(	self	,	Channel	,	Parameter	)	:	\\n	    	try	:	\\n	        	if	(	Parameter	=/;"	f
GetView	data/bpe_corpus_raw/train.py	/^utf-8	def	GetView	(	self	)	:	\\n	    	return	self	.	camera	.	GetViewParams	(	)	\\n		$/;"	f
GetView	data/data_raw/train.py	/^utf-8	def	GetView	(	self	)	:	\\n	    	return	self	.	camera	.	GetViewParams	(	)	\\n		$/;"	f
GlobalConfigExists	data/bpe_corpus_raw/valid.py	/^utf-8	def	GlobalConfigExists	(	tern_config	)	:	\\n	    	return	os	.	path	.	exists	(	tern_config	/;"	f
GlobalConfigExists	data/data_raw/valid.py	/^utf-8	def	GlobalConfigExists	(	tern_config	)	:	\\n	    	return	os	.	path	.	exists	(	tern_config	/;"	f
GotNone	data/bpe_corpus_raw/train.py	/^utf-8	def	GotNone	(	self	,	_	,	results	)	:	\\n	    	if	not	results	:	\\n	        	return	self	.	/;"	f
GotNone	data/data_raw/train.py	/^utf-8	def	GotNone	(	self	,	_	,	results	)	:	\\n	    	if	not	results	:	\\n	        	return	self	.	/;"	f
Grib2Decode	data/bpe_corpus_raw/train.py	/^utf-8	def	Grib2Decode	(	filename	,	gribmsg	=	False	)	:	\\n	    	if	gribmsg	:	\\n	        	f	=	St/;"	f
Grib2Decode	data/data_raw/train.py	/^utf-8	def	Grib2Decode	(	filename	,	gribmsg	=	False	)	:	\\n	    	if	gribmsg	:	\\n	        	f	=	St/;"	f
Groups	data/bpe_corpus_raw/valid.py	/^utf-8	def	Groups	(	user_name	=	Name	(	)	,	server	=	None	)	:	\\n	    	return	win32net	.	NetUserGe/;"	f
Groups	data/data_raw/valid.py	/^utf-8	def	Groups	(	user_name	=	Name	(	)	,	server	=	None	)	:	\\n	    	return	win32net	.	NetUserGe/;"	f
GuiReferenceGetCellContent	data/bpe_corpus_raw/valid.py	/^utf-8	def	GuiReferenceGetCellContent	(	*	args	)	:	\\n	    	return	_x64dbgapi	.	GuiReferenceGetCe/;"	f
GuiReferenceGetCellContent	data/data_raw/valid.py	/^utf-8	def	GuiReferenceGetCellContent	(	*	args	)	:	\\n	    	return	_x64dbgapi	.	GuiReferenceGetCe/;"	f
H	data/bpe_corpus_raw/train.py	/^utf-8	def	H	(	s	)	:	\\n	    	return	md5_hex	(	s	)	\\n		$/;"	f
H	data/data_raw/train.py	/^utf-8	def	H	(	s	)	:	\\n	    	return	md5_hex	(	s	)	\\n		$/;"	f
H_two_step_pieces	data/bpe_corpus_raw/train.py	/^utf-8	def	H_two_step_pieces	(	)	:	\\n	    	forbidden_border_labels	=	[	'10'	,	'20'	,	'21'	,	'(21/;"	f
H_two_step_pieces	data/data_raw/train.py	/^utf-8	def	H_two_step_pieces	(	)	:	\\n	    	forbidden_border_labels	=	[	'10'	,	'20'	,	'21'	,	'(21/;"	f
HackedCompareObject	data/bpe_corpus_raw/valid.py	/^utf-8	def	filter_to_resume_point	(	self	,	store_path	,	enum_seeds	)	:	\\n	\\n	\\n	    	class	Hac/;"	c	function:filter_to_resume_point	file:
HackedCompareObject	data/data_raw/valid.py	/^utf-8	def	filter_to_resume_point	(	self	,	store_path	,	enum_seeds	)	:	\\n	\\n	\\n	    	class	Hac/;"	c	function:filter_to_resume_point	file:
HitTest	data/bpe_corpus_raw/valid.py	/^utf-8	def	HitTest	(	self	,	x	,	y	)	:	\\n	    	if	not	self	.	_useAero	:	\\n	        	if	self	.	ta/;"	f
HitTest	data/data_raw/valid.py	/^utf-8	def	HitTest	(	self	,	x	,	y	)	:	\\n	    	if	not	self	.	_useAero	:	\\n	        	if	self	.	ta/;"	f
InNamespaceBody	data/bpe_corpus_raw/valid.py	/^utf-8	def	InNamespaceBody	(	self	)	:	\\n	    	return	self	.	stack	and	isinstance	(	self	.	stack	/;"	f
InNamespaceBody	data/data_raw/valid.py	/^utf-8	def	InNamespaceBody	(	self	)	:	\\n	    	return	self	.	stack	and	isinstance	(	self	.	stack	/;"	f
InceptionV3	data/bpe_corpus_raw/valid.py	/^utf-8	def	InceptionV3	(	include_top	=	True	,	weights	=	'imagenet'	,	input_tensor	=	None	,	\\n	in/;"	f
InceptionV3	data/data_raw/valid.py	/^utf-8	def	InceptionV3	(	include_top	=	True	,	weights	=	'imagenet'	,	input_tensor	=	None	,	\\n	in/;"	f
InnerDecode	data/bpe_corpus_raw/valid.py	/^utf-8	def	_DoubleDecoder	(	)	:	\\n	    	local_unpack	=	struct	.	unpack	\\n	\\n	def	InnerDecode	(/;"	f	function:_DoubleDecoder	file:
InnerDecode	data/data_raw/valid.py	/^utf-8	def	_DoubleDecoder	(	)	:	\\n	    	local_unpack	=	struct	.	unpack	\\n	\\n	def	InnerDecode	(/;"	f	function:_DoubleDecoder	file:
Int2AP	data/bpe_corpus_raw/valid.py	/^utf-8	def	Int2AP	(	num	)	:	\\n	    	val	=	b''	\\n	AP	=	b'ABCDEFGHIJKLMNOP'	\\n	num	=	int	(	abs	(/;"	f
Int2AP	data/data_raw/valid.py	/^utf-8	def	Int2AP	(	num	)	:	\\n	    	val	=	b''	\\n	AP	=	b'ABCDEFGHIJKLMNOP'	\\n	num	=	int	(	abs	(/;"	f
InvokeWithModifiedEnv	data/bpe_corpus_raw/test.py	/^utf-8	def	InvokeWithModifiedEnv	(	extra_env	,	function	,	*	args	,	**	kwargs	)	:	\\n	    	try	:	\\/;"	f
InvokeWithModifiedEnv	data/bpe_corpus_raw/train.py	/^utf-8	def	InvokeWithModifiedEnv	(	extra_env	,	function	,	*	args	,	**	kwargs	)	:	\\n	    	try	:	\\/;"	f
InvokeWithModifiedEnv	data/bpe_corpus_raw/valid.py	/^utf-8	def	InvokeWithModifiedEnv	(	extra_env	,	function	,	*	args	,	**	kwargs	)	:	\\n	    	try	:	\\/;"	f
InvokeWithModifiedEnv	data/data_raw/test.py	/^utf-8	def	InvokeWithModifiedEnv	(	extra_env	,	function	,	*	args	,	**	kwargs	)	:	\\n	    	try	:	\\/;"	f
InvokeWithModifiedEnv	data/data_raw/train.py	/^utf-8	def	InvokeWithModifiedEnv	(	extra_env	,	function	,	*	args	,	**	kwargs	)	:	\\n	    	try	:	\\/;"	f
InvokeWithModifiedEnv	data/data_raw/valid.py	/^utf-8	def	InvokeWithModifiedEnv	(	extra_env	,	function	,	*	args	,	**	kwargs	)	:	\\n	    	try	:	\\/;"	f
IsBlankLine	data/bpe_corpus_raw/train.py	/^utf-8	def	IsBlankLine	(	line	)	:	\\n	    	return	not	line	or	line	.	isspace	(	)	\\n		$/;"	f
IsBlankLine	data/data_raw/train.py	/^utf-8	def	IsBlankLine	(	line	)	:	\\n	    	return	not	line	or	line	.	isspace	(	)	\\n		$/;"	f
IsDefinition	data/bpe_corpus_raw/valid.py	/^utf-8	def	IsDefinition	(	self	)	:	\\n	    	return	False	\\n		$/;"	f
IsDefinition	data/data_raw/valid.py	/^utf-8	def	IsDefinition	(	self	)	:	\\n	    	return	False	\\n		$/;"	f
IsDirectory	data/bpe_corpus_raw/train.py	/^utf-8	def	IsDirectory	(	ref	)	:	\\n	    	return	os	.	path	.	isdir	(	ref	)	\\n		$/;"	f
IsDirectory	data/data_raw/train.py	/^utf-8	def	IsDirectory	(	ref	)	:	\\n	    	return	os	.	path	.	isdir	(	ref	)	\\n		$/;"	f
IsFileUrlString	data/bpe_corpus_raw/train.py	/^utf-8	def	IsFileUrlString	(	url_str	)	:	\\n	    	return	_GetSchemeFromUrlString	(	url_str	)	==	'/;"	f
IsFileUrlString	data/data_raw/train.py	/^utf-8	def	IsFileUrlString	(	url_str	)	:	\\n	    	return	_GetSchemeFromUrlString	(	url_str	)	==	'/;"	f
IsFloating	data/bpe_corpus_raw/valid.py	/^utf-8	def	IsFloating	(	self	)	:	\\n	    	return	self	.	HasFlag	(	self	.	optionFloating	)	\\n		$/;"	f
IsFloating	data/data_raw/valid.py	/^utf-8	def	IsFloating	(	self	)	:	\\n	    	return	self	.	HasFlag	(	self	.	optionFloating	)	\\n		$/;"	f
IsRuleRunUnderCygwin	data/bpe_corpus_raw/valid.py	/^utf-8	def	IsRuleRunUnderCygwin	(	self	,	rule	)	:	\\n	    	return	int	(	rule	.	get	(	'msvs_cygwin/;"	f
IsRuleRunUnderCygwin	data/data_raw/valid.py	/^utf-8	def	IsRuleRunUnderCygwin	(	self	,	rule	)	:	\\n	    	return	int	(	rule	.	get	(	'msvs_cygwin/;"	f
IsTrackingRequest	data/bpe_corpus_raw/test.py	/^utf-8	def	IsTrackingRequest	(	self	,	request	)	:	\\n	    	return	request	.	request_id	in	self	.	/;"	f
IsTrackingRequest	data/data_raw/test.py	/^utf-8	def	IsTrackingRequest	(	self	,	request	)	:	\\n	    	return	request	.	request_id	in	self	.	/;"	f
LabelValueTable	data/bpe_corpus_raw/valid.py	/^utf-8	def	LabelValueTable	(	self	,	keys	=	None	)	:	\\n	    	keys	=	keys	or	self	.	superkey	\\n	r/;"	f
LabelValueTable	data/data_raw/valid.py	/^utf-8	def	LabelValueTable	(	self	,	keys	=	None	)	:	\\n	    	keys	=	keys	or	self	.	superkey	\\n	r/;"	f
Likelihood	data/bpe_corpus_raw/valid.py	/^utf-8	def	Likelihood	(	self	,	data	,	hypo	)	:	\\n	    	x	=	hypo	\/	100.0	\\n	if	data	==	'H'	:	\\/;"	f
Likelihood	data/data_raw/valid.py	/^utf-8	def	Likelihood	(	self	,	data	,	hypo	)	:	\\n	    	x	=	hypo	\/	100.0	\\n	if	data	==	'H'	:	\\/;"	f
Load	data/bpe_corpus_raw/valid.py	/^utf-8	def	Load	(	self	,	text	)	:	\\n	    	self	.	Body	=	zlib	.	compress	(	text	)	\\n		$/;"	f
Load	data/data_raw/valid.py	/^utf-8	def	Load	(	self	,	text	)	:	\\n	    	self	.	Body	=	zlib	.	compress	(	text	)	\\n		$/;"	f
LoadChecksFromFiles	data/bpe_corpus_raw/valid.py	/^utf-8	def	LoadChecksFromFiles	(	file_paths	,	overwrite_if_exists	=	True	)	:	\\n	    	loaded	=	[	/;"	f
LoadChecksFromFiles	data/data_raw/valid.py	/^utf-8	def	LoadChecksFromFiles	(	file_paths	,	overwrite_if_exists	=	True	)	:	\\n	    	loaded	=	[	/;"	f
LoadFromString	data/bpe_corpus_raw/train.py	/^utf-8	@	classmethod	\\n	def	LoadFromString	(	cls	,	yaml_doc	)	:	\\n	    	return	cls	(	**	googlea/;"	f
LoadFromString	data/data_raw/train.py	/^utf-8	@	classmethod	\\n	def	LoadFromString	(	cls	,	yaml_doc	)	:	\\n	    	return	cls	(	**	googlea/;"	f
LogLikelihood	data/bpe_corpus_raw/train.py	/^utf-8	def	LogLikelihood	(	self	,	data	,	hypo	)	:	\\n	    	raise	UnimplementedMethodException	(	)/;"	f
LogLikelihood	data/data_raw/train.py	/^utf-8	def	LogLikelihood	(	self	,	data	,	hypo	)	:	\\n	    	raise	UnimplementedMethodException	(	)/;"	f
LogUpdate	data/bpe_corpus_raw/test.py	/^utf-8	def	LogUpdate	(	self	,	data	)	:	\\n	    	for	hypo	in	self	.	Values	(	)	:	\\n	        	like/;"	f
LogUpdate	data/data_raw/test.py	/^utf-8	def	LogUpdate	(	self	,	data	)	:	\\n	    	for	hypo	in	self	.	Values	(	)	:	\\n	        	like/;"	f
LongFlag	data/bpe_corpus_raw/test.py	/^utf-8	def	LongFlag	(	self	,	long_name	,	arg_type	=	None	)	:	\\n	    	raise	NotImplementedError	\\/;"	f
LongFlag	data/data_raw/test.py	/^utf-8	def	LongFlag	(	self	,	long_name	,	arg_type	=	None	)	:	\\n	    	raise	NotImplementedError	\\/;"	f
Lookup	data/bpe_corpus_raw/train.py	/^utf-8	def	Lookup	(	self	,	name	)	:	\\n	    	try	:	\\n	        	return	self	.	_name2item	[	name	]/;"	f
Lookup	data/data_raw/train.py	/^utf-8	def	Lookup	(	self	,	name	)	:	\\n	    	try	:	\\n	        	return	self	.	_name2item	[	name	]/;"	f
Main	data/bpe_corpus_raw/valid.py	/^utf-8	def	Main	(	)	:	\\n	    	_ParseAndStripGTestFlags	(	sys	.	argv	)	\\n	if	GTEST_OUTPUT_VAR_NA/;"	f
Main	data/bpe_corpus_raw/valid.py	/^utf-8	def	Main	(	)	:	\\n	    	gtest_test_utils	.	Main	(	)	\\n		$/;"	f
Main	data/data_raw/valid.py	/^utf-8	def	Main	(	)	:	\\n	    	_ParseAndStripGTestFlags	(	sys	.	argv	)	\\n	if	GTEST_OUTPUT_VAR_NA/;"	f
Main	data/data_raw/valid.py	/^utf-8	def	Main	(	)	:	\\n	    	gtest_test_utils	.	Main	(	)	\\n		$/;"	f
MakeDescriptor	data/bpe_corpus_raw/train.py	/^utf-8	def	MakeDescriptor	(	desc_proto	,	package	=	''	)	:	\\n	    	full_message_name	=	[	desc_pro/;"	f
MakeDescriptor	data/data_raw/train.py	/^utf-8	def	MakeDescriptor	(	desc_proto	,	package	=	''	)	:	\\n	    	full_message_name	=	[	desc_pro/;"	f
MakeNuclearAttractionIntegrals	data/bpe_corpus_raw/train.py	/^utf-8	def	MakeNuclearAttractionIntegrals	(	self	,	Smh	=	True	)	:	\\n	    	Args	=	[	]	\\n	if	Smh	/;"	f
MakeNuclearAttractionIntegrals	data/data_raw/train.py	/^utf-8	def	MakeNuclearAttractionIntegrals	(	self	,	Smh	=	True	)	:	\\n	    	Args	=	[	]	\\n	if	Smh	/;"	f
Match	data/bpe_corpus_raw/valid.py	/^utf-8	def	Match	(	pattern	,	s	)	:	\\n	    	if	not	pattern	in	_regexp_compile_cache	:	\\n	       /;"	f
Match	data/bpe_corpus_raw/valid.py	/^utf-8	def	Match	(	pattern	,	s	)	:	\\n	    	if	pattern	not	in	_regexp_compile_cache	:	\\n	       /;"	f
Match	data/data_raw/valid.py	/^utf-8	def	Match	(	pattern	,	s	)	:	\\n	    	if	not	pattern	in	_regexp_compile_cache	:	\\n	       /;"	f
Match	data/data_raw/valid.py	/^utf-8	def	Match	(	pattern	,	s	)	:	\\n	    	if	pattern	not	in	_regexp_compile_cache	:	\\n	       /;"	f
MergeFrom	data/bpe_corpus_raw/valid.py	/^utf-8	def	MergeFrom	(	self	,	other	)	:	\\n	    	self	.	_values	.	extend	(	other	.	_values	)	\\n	/;"	f
MergeFrom	data/bpe_corpus_raw/valid.py	/^utf-8	def	MergeFrom	(	self	,	other	)	:	\\n	    	self	.	extend	(	other	.	_values	)	\\n		$/;"	f
MergeFrom	data/data_raw/valid.py	/^utf-8	def	MergeFrom	(	self	,	other	)	:	\\n	    	self	.	_values	.	extend	(	other	.	_values	)	\\n	/;"	f
MergeFrom	data/data_raw/valid.py	/^utf-8	def	MergeFrom	(	self	,	other	)	:	\\n	    	self	.	extend	(	other	.	_values	)	\\n		$/;"	f
MergeManualScaling	data/bpe_corpus_raw/train.py	/^utf-8	@	classmethod	\\n	def	MergeManualScaling	(	cls	,	appinclude_one	,	appinclude_two	)	:	\\n	\\/;"	f
MergeManualScaling	data/data_raw/train.py	/^utf-8	@	classmethod	\\n	def	MergeManualScaling	(	cls	,	appinclude_one	,	appinclude_two	)	:	\\n	\\/;"	f
MergeText	data/bpe_corpus_raw/valid.py	/^utf-8	def	MergeText	(	self	,	text	=	''	)	:	\\n	    	if	self	.	text	:	\\n	        	if	text	and	te/;"	f
MergeText	data/data_raw/valid.py	/^utf-8	def	MergeText	(	self	,	text	=	''	)	:	\\n	    	if	self	.	text	:	\\n	        	if	text	and	te/;"	f
MessageEncoder	data/bpe_corpus_raw/valid.py	/^utf-8	def	MessageEncoder	(	field_number	,	is_repeated	,	is_packed	)	:	\\n	    	tag	=	TagBytes	(	/;"	f
MessageEncoder	data/data_raw/valid.py	/^utf-8	def	MessageEncoder	(	field_number	,	is_repeated	,	is_packed	)	:	\\n	    	tag	=	TagBytes	(	/;"	f
MfI	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	MfI	(	self	)	:	\\n	    	if	getattr	(	self	,	'_MfI'	,	None	)	is	None	:	\\/;"	f
MfI	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	MfI	(	self	)	:	\\n	    	if	getattr	(	self	,	'_MfI'	,	None	)	is	None	:	\\/;"	f
MockLogger	data/bpe_corpus_raw/train.py	/^utf-8	def	testSignResumable	(	self	)	:	\\n	    	expected	=	sigs	.	TEST_SIGN_RESUMABLE	\\n	\\n	\\/;"	c	function:testSignResumable	file:
MockLogger	data/data_raw/train.py	/^utf-8	def	testSignResumable	(	self	)	:	\\n	    	expected	=	sigs	.	TEST_SIGN_RESUMABLE	\\n	\\n	\\/;"	c	function:testSignResumable	file:
MouseInput	data/bpe_corpus_raw/valid.py	/^utf-8	def	MouseInput	(	dx	:	int	,	dy	:	int	,	mouseData	:	int	=	0	,	dwFlags	:	int	=	\\n	MouseEven/;"	f
MouseInput	data/data_raw/valid.py	/^utf-8	def	MouseInput	(	dx	:	int	,	dy	:	int	,	mouseData	:	int	=	0	,	dwFlags	:	int	=	\\n	MouseEven/;"	f
Mult	data/bpe_corpus_raw/train.py	/^utf-8	def	Mult	(	self	,	x	,	factor	)	:	\\n	    	self	.	d	[	x	]	=	self	.	d	.	get	(	x	,	0	)	*	fact/;"	f
Mult	data/data_raw/train.py	/^utf-8	def	Mult	(	self	,	x	,	factor	)	:	\\n	    	self	.	d	[	x	]	=	self	.	d	.	get	(	x	,	0	)	*	fact/;"	f
MyDataSourceClient	data/bpe_corpus_raw/valid.py	/^utf-8	def	__do_test	(	self	,	rets	,	transfers	,	request_ixfr	,	zone_soa	=	begin_soa_rrset	)	:	\\/;"	c	function:__do_test	file:
MyDataSourceClient	data/data_raw/valid.py	/^utf-8	def	__do_test	(	self	,	rets	,	transfers	,	request_ixfr	,	zone_soa	=	begin_soa_rrset	)	:	\\/;"	c	function:__do_test	file:
MyEnum	data/bpe_corpus_raw/valid.py	/^utf-8	def	testEquality	(	self	)	:	\\n	\\n	\\n	    	class	MyEnum	(	messages	.	Enum	)	:	\\n	      /;"	c	function:testEquality	file:
MyEnum	data/data_raw/valid.py	/^utf-8	def	testEquality	(	self	)	:	\\n	\\n	\\n	    	class	MyEnum	(	messages	.	Enum	)	:	\\n	      /;"	c	function:testEquality	file:
MyMessage	data/bpe_corpus_raw/valid.py	/^utf-8	def	testEquality	(	self	)	:	\\n	\\n	\\n	    	class	MyEnum	(	messages	.	Enum	)	:	\\n	      /;"	c	class:testEquality.MyEnum.AnotherMessage
MyMessage	data/data_raw/valid.py	/^utf-8	def	testEquality	(	self	)	:	\\n	\\n	\\n	    	class	MyEnum	(	messages	.	Enum	)	:	\\n	      /;"	c	class:testEquality.MyEnum.AnotherMessage
NeedsPOSIXAttributeUpdate	data/bpe_corpus_raw/valid.py	/^utf-8	def	NeedsPOSIXAttributeUpdate	(	src_atime	,	dst_atime	,	src_mtime	,	dst_mtime	,	\\n	src_ui/;"	f
NeedsPOSIXAttributeUpdate	data/data_raw/valid.py	/^utf-8	def	NeedsPOSIXAttributeUpdate	(	src_atime	,	dst_atime	,	src_mtime	,	dst_mtime	,	\\n	src_ui/;"	f
NetFxSDKIncludes	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	NetFxSDKIncludes	(	self	)	:	\\n	    	if	self	.	vc_ver	<	14.0	or	not	sel/;"	f
NetFxSDKIncludes	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	NetFxSDKIncludes	(	self	)	:	\\n	    	if	self	.	vc_ver	<	14.0	or	not	sel/;"	f
NewStub	data/bpe_corpus_raw/test.py	/^utf-8	@	staticmethod	\\n	def	NewStub	(	rpc_stub_parameters	,	service_name	=	None	)	:	\\n	    	if/;"	f
NewStub	data/data_raw/test.py	/^utf-8	@	staticmethod	\\n	def	NewStub	(	rpc_stub_parameters	,	service_name	=	None	)	:	\\n	    	if/;"	f
NextSibling	data/bpe_corpus_raw/test.py	/^utf-8	def	NextSibling	(	self	)	:	\\n	    	ret	=	libxml2mod	.	xmlTextReaderNextSibling	(	self	.	_/;"	f
NextSibling	data/data_raw/test.py	/^utf-8	def	NextSibling	(	self	)	:	\\n	    	ret	=	libxml2mod	.	xmlTextReaderNextSibling	(	self	.	_/;"	f
NormalizeErrorMarker	data/bpe_corpus_raw/valid.py	/^utf-8	def	NormalizeErrorMarker	(	output	)	:	\\n	    	return	re	.	sub	(	' error: '	,	' Failure\\\\/;"	f
NormalizeErrorMarker	data/data_raw/valid.py	/^utf-8	def	NormalizeErrorMarker	(	output	)	:	\\n	    	return	re	.	sub	(	' error: '	,	' Failure\\\\/;"	f
NormalizeToCurrentPlatform	data/bpe_corpus_raw/valid.py	/^utf-8	def	NormalizeToCurrentPlatform	(	test_output	)	:	\\n	    	if	IS_WINDOWS	:	\\n	        	tes/;"	f
NormalizeToCurrentPlatform	data/data_raw/valid.py	/^utf-8	def	NormalizeToCurrentPlatform	(	test_output	)	:	\\n	    	if	IS_WINDOWS	:	\\n	        	tes/;"	f
NormalizeXml	data/bpe_corpus_raw/valid.py	/^utf-8	def	NormalizeXml	(	self	,	element	)	:	\\n	    	if	element	.	tagName	==	'testsuites'	:	\\n	/;"	f
NormalizeXml	data/data_raw/valid.py	/^utf-8	def	NormalizeXml	(	self	,	element	)	:	\\n	    	if	element	.	tagName	==	'testsuites'	:	\\n	/;"	f
OFDPA_GROUP_ENTRY_TYPE_tp_assign	data/bpe_corpus_raw/valid.py	/^utf-8	def	OFDPA_GROUP_ENTRY_TYPE_tp_assign	(	*	args	)	:	\\n	    	return	_OFDPA_python	.	OFDPA_GR/;"	f
OFDPA_GROUP_ENTRY_TYPE_tp_assign	data/data_raw/valid.py	/^utf-8	def	OFDPA_GROUP_ENTRY_TYPE_tp_assign	(	*	args	)	:	\\n	    	return	_OFDPA_python	.	OFDPA_GR/;"	f
OKFileDescriptor	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_shutdownDisconnectsCleanly	(	self	)	:	\\n	    	lostOK	=	[	False	]	\\n	\\n	\\n	cla/;"	c	member:test_shutdownDisconnectsCleanly.ProblematicFileDescriptor.connectionLost	file:
OKFileDescriptor	data/data_raw/valid.py	/^utf-8	def	test_shutdownDisconnectsCleanly	(	self	)	:	\\n	    	lostOK	=	[	False	]	\\n	\\n	\\n	cla/;"	c	member:test_shutdownDisconnectsCleanly.ProblematicFileDescriptor.connectionLost	file:
OPTIMIZE	data/bpe_corpus_raw/train.py	/^utf-8	def	OPTIMIZE	(	ix	,	writer	,	segments	)	:	\\n	    	from	whoosh	.	filedb	.	filereading	impo/;"	f
OPTIMIZE	data/data_raw/train.py	/^utf-8	def	OPTIMIZE	(	ix	,	writer	,	segments	)	:	\\n	    	from	whoosh	.	filedb	.	filereading	impo/;"	f
ObjectGroups	data/bpe_corpus_raw/train.py	/^utf-8	def	ObjectGroups	(	object_id	)	:	\\n	    	rhino_object	=	rhutil	.	coercerhinoobject	(	obje/;"	f
ObjectGroups	data/data_raw/train.py	/^utf-8	def	ObjectGroups	(	object_id	)	:	\\n	    	rhino_object	=	rhutil	.	coercerhinoobject	(	obje/;"	f
OnSecuritiesChanged	data/bpe_corpus_raw/valid.py	/^utf-8	def	OnSecuritiesChanged	(	self	,	algorithm	,	changes	)	:	\\n	    	for	security	in	changes	/;"	f
OnSecuritiesChanged	data/data_raw/valid.py	/^utf-8	def	OnSecuritiesChanged	(	self	,	algorithm	,	changes	)	:	\\n	    	for	security	in	changes	/;"	f
Override	data/bpe_corpus_raw/valid.py	/^utf-8	def	Override	(	self	,	overrides	)	:	\\n	    	if	not	overrides	:	\\n	        	return	self	\\/;"	f
Override	data/data_raw/valid.py	/^utf-8	def	Override	(	self	,	overrides	)	:	\\n	    	if	not	overrides	:	\\n	        	return	self	\\/;"	f
P	data/bpe_corpus_raw/valid.py	/^utf-8	def	P	(	self	)	:	\\n	    	if	self	.	data	.	minute	==	0	and	self	.	data	.	hour	==	0	:	\\n	 /;"	f
P	data/bpe_corpus_raw/valid.py	/^utf-8	def	P	(	self	)	:	\\n	    	return	HallLittlewood_p	(	self	)	\\n		$/;"	f
P	data/data_raw/valid.py	/^utf-8	def	P	(	self	)	:	\\n	    	if	self	.	data	.	minute	==	0	and	self	.	data	.	hour	==	0	:	\\n	 /;"	f
P	data/data_raw/valid.py	/^utf-8	def	P	(	self	)	:	\\n	    	return	HallLittlewood_p	(	self	)	\\n		$/;"	f
PDFEmitter	data/bpe_corpus_raw/train.py	/^utf-8	def	PDFEmitter	(	target	,	source	,	env	)	:	\\n	\\n	    	def	strip_suffixes	(	n	)	:	\\n	   /;"	f
PDFEmitter	data/data_raw/train.py	/^utf-8	def	PDFEmitter	(	target	,	source	,	env	)	:	\\n	\\n	    	def	strip_suffixes	(	n	)	:	\\n	   /;"	f
PRINT_NEWLINE_TO	data/bpe_corpus_raw/valid.py	/^utf-8	def	PRINT_NEWLINE_TO	(	self	,	pc	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
PRINT_NEWLINE_TO	data/data_raw/valid.py	/^utf-8	def	PRINT_NEWLINE_TO	(	self	,	pc	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
PackTag	data/bpe_corpus_raw/test.py	/^utf-8	def	PackTag	(	field_number	,	wire_type	)	:	\\n	    	if	not	0	<=	wire_type	<=	_WIRETYPE_MAX/;"	f
PackTag	data/data_raw/test.py	/^utf-8	def	PackTag	(	field_number	,	wire_type	)	:	\\n	    	if	not	0	<=	wire_type	<=	_WIRETYPE_MAX/;"	f
PackageVariable	data/bpe_corpus_raw/valid.py	/^utf-8	def	PackageVariable	(	key	,	help	,	default	,	searchfunc	=	None	)	:	\\n	    	help	=	'\\\\n /;"	f
PackageVariable	data/data_raw/valid.py	/^utf-8	def	PackageVariable	(	key	,	help	,	default	,	searchfunc	=	None	)	:	\\n	    	help	=	'\\\\n /;"	f
PackedFieldSize	data/bpe_corpus_raw/valid.py	/^utf-8	def	_ModifiedSizer	(	compute_value_size	,	modify_value	)	:	\\n	\\n	    	def	SpecificSizer	/;"	f	function:_ModifiedSizer.SpecificSizer	file:
PackedFieldSize	data/data_raw/valid.py	/^utf-8	def	_ModifiedSizer	(	compute_value_size	,	modify_value	)	:	\\n	\\n	    	def	SpecificSizer	/;"	f	function:_ModifiedSizer.SpecificSizer	file:
Parse	data/bpe_corpus_raw/train.py	/^utf-8	def	Parse	(	self	,	parsed_json	)	:	\\n	    	for	key	in	parsed_json	.	keys	(	)	:	\\n	      /;"	f
Parse	data/data_raw/train.py	/^utf-8	def	Parse	(	self	,	parsed_json	)	:	\\n	    	for	key	in	parsed_json	.	keys	(	)	:	\\n	      /;"	f
PatchRestore_	data/bpe_corpus_raw/train.py	/^utf-8	def	PatchRestore_	(	self	,	*	args	)	:	\\n	    	return	_x64dbgapi64	.	DBGFUNCTIONS_PatchRes/;"	f
PatchRestore_	data/data_raw/train.py	/^utf-8	def	PatchRestore_	(	self	,	*	args	)	:	\\n	    	return	_x64dbgapi64	.	DBGFUNCTIONS_PatchRes/;"	f
PauseQueue	data/bpe_corpus_raw/valid.py	/^utf-8	def	PauseQueue	(	self	,	request	,	context	)	:	\\n	    	context	.	set_code	(	grpc	.	StatusC/;"	f
PauseQueue	data/data_raw/valid.py	/^utf-8	def	PauseQueue	(	self	,	request	,	context	)	:	\\n	    	context	.	set_code	(	grpc	.	StatusC/;"	f
Person	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_data_contains_id_field	(	self	)	:	\\n	\\n	\\n	    	class	Person	(	Document	)	:	\\/;"	c	function:test_data_contains_id_field	file:
Person	data/data_raw/valid.py	/^utf-8	def	test_data_contains_id_field	(	self	)	:	\\n	\\n	\\n	    	class	Person	(	Document	)	:	\\/;"	c	function:test_data_contains_id_field	file:
PluginAssets	data/bpe_corpus_raw/valid.py	/^utf-8	def	PluginAssets	(	self	,	plugin_name	)	:	\\n	    	return	plugin_asset_util	.	ListAssets	(/;"	f
PluginAssets	data/data_raw/valid.py	/^utf-8	def	PluginAssets	(	self	,	plugin_name	)	:	\\n	    	return	plugin_asset_util	.	ListAssets	(/;"	f
PmfOfWaitTime	data/bpe_corpus_raw/train.py	/^utf-8	def	PmfOfWaitTime	(	pmf_zb	)	:	\\n	    	metapmf	=	thinkstats2	.	Pmf	(	)	\\n	for	gap	,	prob/;"	f
PmfOfWaitTime	data/data_raw/train.py	/^utf-8	def	PmfOfWaitTime	(	pmf_zb	)	:	\\n	    	metapmf	=	thinkstats2	.	Pmf	(	)	\\n	for	gap	,	prob/;"	f
PressMouse	data/bpe_corpus_raw/valid.py	/^utf-8	def	PressMouse	(	self	,	button	=	'left'	,	pressed	=	''	,	coords	=	(	0	,	0	)	)	:	\\n	    	_/;"	f
PressMouse	data/data_raw/valid.py	/^utf-8	def	PressMouse	(	self	,	button	=	'left'	,	pressed	=	''	,	coords	=	(	0	,	0	)	)	:	\\n	    	_/;"	f
PrintErrorCounts	data/bpe_corpus_raw/train.py	/^utf-8	def	PrintErrorCounts	(	self	)	:	\\n	    	for	category	,	count	in	self	.	errors_by_category/;"	f
PrintErrorCounts	data/data_raw/train.py	/^utf-8	def	PrintErrorCounts	(	self	)	:	\\n	    	for	category	,	count	in	self	.	errors_by_category/;"	f
PrintUsage	data/bpe_corpus_raw/train.py	/^utf-8	def	PrintUsage	(	message	)	:	\\n	    	sys	.	stderr	.	write	(	_USAGE	)	\\n	if	message	:	\\n/;"	f
PrintUsage	data/data_raw/train.py	/^utf-8	def	PrintUsage	(	message	)	:	\\n	    	sys	.	stderr	.	write	(	_USAGE	)	\\n	if	message	:	\\n/;"	f
ProblematicFileDescriptor	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_shutdownDisconnectsCleanly	(	self	)	:	\\n	    	lostOK	=	[	False	]	\\n	\\n	\\n	cla/;"	c	function:test_shutdownDisconnectsCleanly	file:
ProblematicFileDescriptor	data/data_raw/valid.py	/^utf-8	def	test_shutdownDisconnectsCleanly	(	self	)	:	\\n	    	lostOK	=	[	False	]	\\n	\\n	\\n	cla/;"	c	function:test_shutdownDisconnectsCleanly	file:
Process	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	Process	(	cls	,	host_data	,	os_name	=	None	,	cpe	=	None	,	labels	=	N/;"	f
Process	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	Process	(	cls	,	host_data	,	os_name	=	None	,	cpe	=	None	,	labels	=	N/;"	f
ProcessAutomaticScalingNode	data/bpe_corpus_raw/valid.py	/^utf-8	def	ProcessAutomaticScalingNode	(	self	,	node	)	:	\\n	    	automatic_scaling	=	AutomaticSc/;"	f
ProcessAutomaticScalingNode	data/data_raw/valid.py	/^utf-8	def	ProcessAutomaticScalingNode	(	self	,	node	)	:	\\n	    	automatic_scaling	=	AutomaticSc/;"	f
ProcessFileData	data/bpe_corpus_raw/test.py	/^utf-8	def	ProcessFileData	(	filename	,	file_extension	,	lines	,	error	,	\\n	extra_check_function/;"	f
ProcessFileData	data/bpe_corpus_raw/train.py	/^utf-8	def	ProcessFileData	(	filename	,	file_extension	,	lines	,	error	,	\\n	extra_check_function/;"	f
ProcessFileData	data/data_raw/test.py	/^utf-8	def	ProcessFileData	(	filename	,	file_extension	,	lines	,	error	,	\\n	extra_check_function/;"	f
ProcessFileData	data/data_raw/train.py	/^utf-8	def	ProcessFileData	(	filename	,	file_extension	,	lines	,	error	,	\\n	extra_check_function/;"	f
ProcessLine	data/bpe_corpus_raw/valid.py	/^utf-8	def	ProcessLine	(	filename	,	file_extension	,	clean_lines	,	line	,	include_state	,	\\n	fun/;"	f
ProcessLine	data/data_raw/valid.py	/^utf-8	def	ProcessLine	(	filename	,	file_extension	,	clean_lines	,	line	,	include_state	,	\\n	fun/;"	f
QueryWriteStatus	data/bpe_corpus_raw/train.py	/^utf-8	def	QueryWriteStatus	(	self	,	request	,	context	)	:	\\n	    	context	.	set_code	(	grpc	.	S/;"	f
QueryWriteStatus	data/data_raw/train.py	/^utf-8	def	QueryWriteStatus	(	self	,	request	,	context	)	:	\\n	    	context	.	set_code	(	grpc	.	S/;"	f
RGBToHTMLColor	data/bpe_corpus_raw/valid.py	/^utf-8	def	RGBToHTMLColor	(	self	,	rgb_tuple	)	:	\\n	    	hexcolor	=	'#%02x%02x%02x'	%	tuple	(	ma/;"	f
RGBToHTMLColor	data/data_raw/valid.py	/^utf-8	def	RGBToHTMLColor	(	self	,	rgb_tuple	)	:	\\n	    	hexcolor	=	'#%02x%02x%02x'	%	tuple	(	ma/;"	f
RaisingDNSServerFactory	data/bpe_corpus_raw/train.py	/^utf-8	def	test_allowQueryFalse	(	self	)	:	\\n	\\n	\\n	    	class	SendReplyException	(	Exception	/;"	c	class:test_allowQueryFalse.SendReplyException
RaisingDNSServerFactory	data/data_raw/train.py	/^utf-8	def	test_allowQueryFalse	(	self	)	:	\\n	\\n	\\n	    	class	SendReplyException	(	Exception	/;"	c	class:test_allowQueryFalse.SendReplyException
RandomHuntId	data/bpe_corpus_raw/valid.py	/^utf-8	def	RandomHuntId	(	)	:	\\n	    	return	'%08X'	%	random	.	PositiveUInt32	(	)	\\n		$/;"	f
RandomHuntId	data/data_raw/valid.py	/^utf-8	def	RandomHuntId	(	)	:	\\n	    	return	'%08X'	%	random	.	PositiveUInt32	(	)	\\n		$/;"	f
Read	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	Read	(	json_string	)	:	\\n	    	meta	=	json	.	loads	(	json_string	)/;"	f
Read	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	Read	(	json_string	)	:	\\n	    	meta	=	json	.	loads	(	json_string	)/;"	f
ReadApprovalRequests	data/bpe_corpus_raw/valid.py	/^utf-8	@	abc	.	abstractmethod	\\n	def	ReadApprovalRequests	(	self	,	requestor_username	,	approval/;"	f
ReadApprovalRequests	data/data_raw/valid.py	/^utf-8	@	abc	.	abstractmethod	\\n	def	ReadApprovalRequests	(	self	,	requestor_username	,	approval/;"	f
ReadBoards	data/bpe_corpus_raw/train.py	/^utf-8	def	ReadBoards	(	self	,	fname	)	:	\\n	    	with	open	(	fname	,	'r'	)	as	fd	:	\\n	        	/;"	f
ReadBoards	data/data_raw/train.py	/^utf-8	def	ReadBoards	(	self	,	fname	)	:	\\n	    	with	open	(	fname	,	'r'	)	as	fd	:	\\n	        	/;"	f
Refresh	data/bpe_corpus_raw/train.py	/^utf-8	@	track_statistics	(	)	\\n	def	Refresh	(	self	)	:	\\n	    	self	.	_load_config	(	force_upd/;"	f
Refresh	data/data_raw/train.py	/^utf-8	@	track_statistics	(	)	\\n	def	Refresh	(	self	)	:	\\n	    	self	.	_load_config	(	force_upd/;"	f
RefreshPackages	data/bpe_corpus_raw/train.py	/^utf-8	def	RefreshPackages	(	self	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
RefreshPackages	data/data_raw/train.py	/^utf-8	def	RefreshPackages	(	self	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
RegisterTest	data/bpe_corpus_raw/valid.py	/^utf-8	def	RegisterTest	(	self	,	test_class	)	:	\\n	    	for	property	in	test_class	.	PROVIDES	:	/;"	f
RegisterTest	data/data_raw/valid.py	/^utf-8	def	RegisterTest	(	self	,	test_class	)	:	\\n	    	for	property	in	test_class	.	PROVIDES	:	/;"	f
RemoveLocations	data/bpe_corpus_raw/valid.py	/^utf-8	def	RemoveLocations	(	test_output	)	:	\\n	    	return	re	.	sub	(	'.*[\/\\\\\\\\\\\\\\\\](./;"	f
RemoveLocations	data/data_raw/valid.py	/^utf-8	def	RemoveLocations	(	test_output	)	:	\\n	    	return	re	.	sub	(	'.*[\/\\\\\\\\\\\\\\\\](./;"	f
RemoveStackTraceDetails	data/bpe_corpus_raw/valid.py	/^utf-8	def	RemoveStackTraceDetails	(	output	)	:	\\n	    	return	re	.	sub	(	'Stack trace:(.|\\\\\\/;"	f
RemoveStackTraceDetails	data/data_raw/valid.py	/^utf-8	def	RemoveStackTraceDetails	(	output	)	:	\\n	    	return	re	.	sub	(	'Stack trace:(.|\\\\\\/;"	f
RemoveTypeInfoDetails	data/bpe_corpus_raw/valid.py	/^utf-8	def	RemoveTypeInfoDetails	(	test_output	)	:	\\n	    	return	re	.	sub	(	'unsigned int'	,	'u/;"	f
RemoveTypeInfoDetails	data/data_raw/valid.py	/^utf-8	def	RemoveTypeInfoDetails	(	test_output	)	:	\\n	    	return	re	.	sub	(	'unsigned int'	,	'u/;"	f
RenameMember	data/bpe_corpus_raw/valid.py	/^utf-8	def	RenameMember	(	self	,	interface_name	,	member_node	,	member	,	member_prefix	=	\\n	''	,/;"	f
RenameMember	data/data_raw/valid.py	/^utf-8	def	RenameMember	(	self	,	interface_name	,	member_node	,	member	,	member_prefix	=	\\n	''	,/;"	f
RepeatedFieldSize	data/bpe_corpus_raw/train.py	/^utf-8	def	StringSizer	(	field_number	,	is_repeated	,	is_packed	)	:	\\n	    	tag_size	=	_TagSize	/;"	f	function:StringSizer	file:
RepeatedFieldSize	data/bpe_corpus_raw/valid.py	/^utf-8	def	_ModifiedSizer	(	compute_value_size	,	modify_value	)	:	\\n	\\n	    	def	SpecificSizer	/;"	f	function:_ModifiedSizer.SpecificSizer.PackedFieldSize	file:
RepeatedFieldSize	data/data_raw/train.py	/^utf-8	def	StringSizer	(	field_number	,	is_repeated	,	is_packed	)	:	\\n	    	tag_size	=	_TagSize	/;"	f	function:StringSizer	file:
RepeatedFieldSize	data/data_raw/valid.py	/^utf-8	def	_ModifiedSizer	(	compute_value_size	,	modify_value	)	:	\\n	\\n	    	def	SpecificSizer	/;"	f	function:_ModifiedSizer.SpecificSizer.PackedFieldSize	file:
ResetNetwork	data/bpe_corpus_raw/valid.py	/^utf-8	@	check_stack	\\n	@	deprecated	(	''	,	'ResetNetwork is deprecated and will be removed in N/;"	f
ResetNetwork	data/data_raw/valid.py	/^utf-8	@	check_stack	\\n	@	deprecated	(	''	,	'ResetNetwork is deprecated and will be removed in N/;"	f
ResetWavelength	data/bpe_corpus_raw/valid.py	/^utf-8	def	ResetWavelength	(	)	:	\\n	    	if	'Wavelength'	in	ReductionSingleton	(	)	.	reduction_p/;"	f
ResetWavelength	data/data_raw/valid.py	/^utf-8	def	ResetWavelength	(	)	:	\\n	    	if	'Wavelength'	in	ReductionSingleton	(	)	.	reduction_p/;"	f
Rforce	data/bpe_corpus_raw/valid.py	/^utf-8	@	potential_physical_input	\\n	@	physical_conversion	(	'force'	,	pop	=	True	)	\\n	def	Rfor/;"	f
Rforce	data/data_raw/valid.py	/^utf-8	@	potential_physical_input	\\n	@	physical_conversion	(	'force'	,	pop	=	True	)	\\n	def	Rfor/;"	f
Run	data/bpe_corpus_raw/valid.py	/^utf-8	def	Run	(	benchmark_spec	)	:	\\n	    	logging	.	info	(	'Simulating %s scenario.'	,	FLAGS	./;"	f
Run	data/bpe_corpus_raw/valid.py	/^utf-8	def	Run	(	self	)	:	\\n	    	self	.	VerifyAndFinishInitialization	(	None	)	\\n	self	.	Setup/;"	f
Run	data/data_raw/valid.py	/^utf-8	def	Run	(	benchmark_spec	)	:	\\n	    	logging	.	info	(	'Simulating %s scenario.'	,	FLAGS	./;"	f
Run	data/data_raw/valid.py	/^utf-8	def	Run	(	self	)	:	\\n	    	self	.	VerifyAndFinishInitialization	(	None	)	\\n	self	.	Setup/;"	f
RunAndVerifyWithSharding	data/bpe_corpus_raw/train.py	/^utf-8	def	RunAndVerifyWithSharding	(	self	,	gtest_filter	,	total_shards	,	tests_to_run	,	\\n	arg/;"	f
RunAndVerifyWithSharding	data/data_raw/train.py	/^utf-8	def	RunAndVerifyWithSharding	(	self	,	gtest_filter	,	total_shards	,	tests_to_run	,	\\n	arg/;"	f
RunLintOverAllFiles	data/bpe_corpus_raw/valid.py	/^utf-8	def	RunLintOverAllFiles	(	linter	,	filenames	)	:	\\n	    	lint	=	[	]	\\n	for	filename	in	f/;"	f
RunLintOverAllFiles	data/data_raw/valid.py	/^utf-8	def	RunLintOverAllFiles	(	linter	,	filenames	)	:	\\n	    	lint	=	[	]	\\n	for	filename	in	f/;"	f
RunMetadata	data/bpe_corpus_raw/train.py	/^utf-8	def	RunMetadata	(	self	,	run	,	tag	)	:	\\n	    	accumulator	=	self	.	_GetAccumulator	(	run/;"	f
RunMetadata	data/data_raw/train.py	/^utf-8	def	RunMetadata	(	self	,	run	,	tag	)	:	\\n	    	accumulator	=	self	.	_GetAccumulator	(	run/;"	f
SIF_embedding	data/bpe_corpus_raw/valid.py	/^utf-8	def	SIF_embedding	(	We	,	x	,	w	,	params	)	:	\\n	    	emb	=	get_weighted_average	(	We	,	x	,/;"	f
SIF_embedding	data/data_raw/valid.py	/^utf-8	def	SIF_embedding	(	We	,	x	,	w	,	params	)	:	\\n	    	emb	=	get_weighted_average	(	We	,	x	,/;"	f
SaveFormat	data/bpe_corpus_raw/train.py	/^utf-8	def	SaveFormat	(	root	,	fmt	=	'eps'	,	**	options	)	:	\\n	    	_Underride	(	options	,	dpi	=/;"	f
SaveFormat	data/data_raw/train.py	/^utf-8	def	SaveFormat	(	root	,	fmt	=	'eps'	,	**	options	)	:	\\n	    	_Underride	(	options	,	dpi	=/;"	f
SaveNewKeySet	data/bpe_corpus_raw/train.py	/^utf-8	def	SaveNewKeySet	(	self	,	keySetName	,	keySet	)	:	\\n	    	if	not	idleConf	.	userCfg	[	'k/;"	f
SaveNewKeySet	data/data_raw/train.py	/^utf-8	def	SaveNewKeySet	(	self	,	keySetName	,	keySet	)	:	\\n	    	if	not	idleConf	.	userCfg	[	'k/;"	f
ScrollBounceElement	data/bpe_corpus_raw/valid.py	/^utf-8	def	ScrollBounceElement	(	self	,	selector	=	None	,	text	=	None	,	element_function	=	\\n	No/;"	f
ScrollBounceElement	data/data_raw/valid.py	/^utf-8	def	ScrollBounceElement	(	self	,	selector	=	None	,	text	=	None	,	element_function	=	\\n	No/;"	f
SelectAllVariables	data/bpe_corpus_raw/valid.py	/^utf-8	def	SelectAllVariables	(	self	)	:	\\n	    	for	prop	in	(	'PointVariables'	,	'EdgeVariables/;"	f
SelectAllVariables	data/data_raw/valid.py	/^utf-8	def	SelectAllVariables	(	self	)	:	\\n	    	for	prop	in	(	'PointVariables'	,	'EdgeVariables/;"	f
SendReplyException	data/bpe_corpus_raw/train.py	/^utf-8	def	test_allowQueryFalse	(	self	)	:	\\n	\\n	\\n	    	class	SendReplyException	(	Exception	/;"	c	function:test_allowQueryFalse	file:
SendReplyException	data/data_raw/train.py	/^utf-8	def	test_allowQueryFalse	(	self	)	:	\\n	\\n	\\n	    	class	SendReplyException	(	Exception	/;"	c	function:test_allowQueryFalse	file:
Seq2SeqDecoder	models/seq2seq.py	/^class Seq2SeqDecoder(FairseqIncrementalDecoder):$/;"	c
Seq2SeqEncoder	models/seq2seq.py	/^class Seq2SeqEncoder(FairseqEncoder):$/;"	c
Seq2SeqModel	models/seq2seq.py	/^class Seq2SeqModel(FairseqModel):$/;"	c
Serialize	data/bpe_corpus_raw/test.py	/^utf-8	def	Serialize	(	self	,	writer	)	:	\\n	    	super	(	StorageItem	,	self	)	.	Serialize	(	writ/;"	f
Serialize	data/data_raw/test.py	/^utf-8	def	Serialize	(	self	,	writer	)	:	\\n	    	super	(	StorageItem	,	self	)	.	Serialize	(	writ/;"	f
SetBackgroundImage	data/bpe_corpus_raw/valid.py	/^utf-8	def	SetBackgroundImage	(	self	,	image	)	:	\\n	    	self	.	_backgroundImage	=	image	\\n	sel/;"	f
SetBackgroundImage	data/data_raw/valid.py	/^utf-8	def	SetBackgroundImage	(	self	,	image	)	:	\\n	    	self	.	_backgroundImage	=	image	\\n	sel/;"	f
SetByteOrder	data/bpe_corpus_raw/train.py	/^utf-8	def	SetByteOrder	(	self	,	*	args	)	:	\\n	    	return	_btk	.	btkMOMFileIO_SetByteOrder	(	se/;"	f
SetByteOrder	data/data_raw/train.py	/^utf-8	def	SetByteOrder	(	self	,	*	args	)	:	\\n	    	return	_btk	.	btkMOMFileIO_SetByteOrder	(	se/;"	f
SetCacheMode	data/bpe_corpus_raw/train.py	/^utf-8	def	SetCacheMode	(	mode	)	:	\\n	    	global	cache_mode	\\n	if	mode	==	'auto'	:	\\n	       /;"	f
SetCacheMode	data/data_raw/train.py	/^utf-8	def	SetCacheMode	(	mode	)	:	\\n	    	global	cache_mode	\\n	if	mode	==	'auto'	:	\\n	       /;"	f
SetCorners	data/bpe_corpus_raw/train.py	/^utf-8	def	SetCorners	(	self	,	*	args	)	:	\\n	    	return	_btk	.	btkForcePlatformType4_SetCorners/;"	f
SetCorners	data/data_raw/train.py	/^utf-8	def	SetCorners	(	self	,	*	args	)	:	\\n	    	return	_btk	.	btkForcePlatformType4_SetCorners/;"	f
SetEnable	data/bpe_corpus_raw/train.py	/^utf-8	def	SetEnable	(	self	,	value	)	:	\\n	    	self	.	_SetProperty	(	VACATION_RESPONDER_ENABLE	/;"	f
SetEnable	data/data_raw/train.py	/^utf-8	def	SetEnable	(	self	,	value	)	:	\\n	    	self	.	_SetProperty	(	VACATION_RESPONDER_ENABLE	/;"	f
SetEnvVar	data/bpe_corpus_raw/test.py	/^utf-8	def	SetEnvVar	(	env_var	,	value	)	:	\\n	    	if	value	is	not	None	:	\\n	        	environ	[/;"	f
SetEnvVar	data/data_raw/test.py	/^utf-8	def	SetEnvVar	(	env_var	,	value	)	:	\\n	    	if	value	is	not	None	:	\\n	        	environ	[/;"	f
SetFlags	data/bpe_corpus_raw/test.py	/^utf-8	def	SetFlags	(	self	,	**	kwargs	)	:	\\n	    	pass	\\n		$/;"	f
SetFlags	data/data_raw/test.py	/^utf-8	def	SetFlags	(	self	,	**	kwargs	)	:	\\n	    	pass	\\n		$/;"	f
SetItem	data/bpe_corpus_raw/valid.py	/^utf-8	def	SetItem	(	self	,	key	,	value	,	raise_on_error	=	True	)	:	\\n	    	if	not	isinstance	(	/;"	f
SetItem	data/data_raw/valid.py	/^utf-8	def	SetItem	(	self	,	key	,	value	,	raise_on_error	=	True	)	:	\\n	    	if	not	isinstance	(	/;"	f
SetName	data/bpe_corpus_raw/valid.py	/^utf-8	def	SetName	(	self	,	value	)	:	\\n	    	self	.	_SetProperty	(	SENDAS_ALIAS_NAME	,	value	)	/;"	f
SetName	data/data_raw/valid.py	/^utf-8	def	SetName	(	self	,	value	)	:	\\n	    	self	.	_SetProperty	(	SENDAS_ALIAS_NAME	,	value	)	/;"	f
SetPointScale	data/bpe_corpus_raw/valid.py	/^utf-8	def	SetPointScale	(	self	,	*	args	)	:	\\n	    	return	_btk	.	btkC3DFileIO_SetPointScale	(	/;"	f
SetPointScale	data/data_raw/valid.py	/^utf-8	def	SetPointScale	(	self	,	*	args	)	:	\\n	    	return	_btk	.	btkC3DFileIO_SetPointScale	(	/;"	f
SetUnion	data/bpe_corpus_raw/test.py	/^utf-8	def	SetUnion	(	s1	,	s2	)	:	\\n	    	progress	=	False	\\n	for	i	in	range	(	size	)	:	\\n	   /;"	f
SetUnion	data/data_raw/test.py	/^utf-8	def	SetUnion	(	s1	,	s2	)	:	\\n	    	progress	=	False	\\n	for	i	in	range	(	size	)	:	\\n	   /;"	f
SetVerboseLevel	data/bpe_corpus_raw/valid.py	/^utf-8	def	SetVerboseLevel	(	self	,	level	)	:	\\n	    	last_verbose_level	=	self	.	verbose_level	/;"	f
SetVerboseLevel	data/data_raw/valid.py	/^utf-8	def	SetVerboseLevel	(	self	,	level	)	:	\\n	    	last_verbose_level	=	self	.	verbose_level	/;"	f
SetupClient	data/bpe_corpus_raw/valid.py	/^utf-8	def	SetupClient	(	self	)	:	\\n	    	pass	\\n		$/;"	f
SetupClient	data/data_raw/valid.py	/^utf-8	def	SetupClient	(	self	)	:	\\n	    	pass	\\n		$/;"	f
ShortFlag	data/bpe_corpus_raw/valid.py	/^utf-8	def	ShortFlag	(	self	,	short_name	,	arg_type	=	None	,	help	=	None	)	:	\\n	    	assert	shor/;"	f
ShortFlag	data/data_raw/valid.py	/^utf-8	def	ShortFlag	(	self	,	short_name	,	arg_type	=	None	,	help	=	None	)	:	\\n	    	assert	shor/;"	f
ShouldCheckNamespaceIndentation	data/bpe_corpus_raw/train.py	/^utf-8	def	ShouldCheckNamespaceIndentation	(	nesting_state	,	is_namespace_indent_item	,	\\n	raw_l/;"	f
ShouldCheckNamespaceIndentation	data/data_raw/train.py	/^utf-8	def	ShouldCheckNamespaceIndentation	(	nesting_state	,	is_namespace_indent_item	,	\\n	raw_l/;"	f
SocketClient	data/bpe_corpus_raw/train.py	/^utf-8	def	SocketClient	(	address	)	:	\\n	    	family	=	address_type	(	address	)	\\n	with	socket	/;"	f
SocketClient	data/data_raw/train.py	/^utf-8	def	SocketClient	(	address	)	:	\\n	    	family	=	address_type	(	address	)	\\n	with	socket	/;"	f
Spawner	data/bpe_corpus_raw/train.py	/^utf-8	def	test_agent_spawn_process	(	nsproxy	)	:	\\n	\\n	\\n	    	class	Spawner	(	Agent	)	:	\\n	/;"	c	function:test_agent_spawn_process	file:
Spawner	data/data_raw/train.py	/^utf-8	def	test_agent_spawn_process	(	nsproxy	)	:	\\n	\\n	\\n	    	class	Spawner	(	Agent	)	:	\\n	/;"	c	function:test_agent_spawn_process	file:
SpecificSizer	data/bpe_corpus_raw/valid.py	/^utf-8	def	_ModifiedSizer	(	compute_value_size	,	modify_value	)	:	\\n	\\n	    	def	SpecificSizer	/;"	f	function:_ModifiedSizer	file:
SpecificSizer	data/data_raw/valid.py	/^utf-8	def	_ModifiedSizer	(	compute_value_size	,	modify_value	)	:	\\n	\\n	    	def	SpecificSizer	/;"	f	function:_ModifiedSizer	file:
Split	data/bpe_corpus_raw/train.py	/^utf-8	def	Split	(	self	)	:	\\n	    	googlename	=	self	.	RepositoryName	(	)	\\n	project	,	rest	=	/;"	f
Split	data/data_raw/train.py	/^utf-8	def	Split	(	self	)	:	\\n	    	googlename	=	self	.	RepositoryName	(	)	\\n	project	,	rest	=	/;"	f
StopChannel	data/bpe_corpus_raw/valid.py	/^utf-8	def	StopChannel	(	self	,	channel_id	,	resource_id	,	provider	=	None	)	:	\\n	    	raise	Not/;"	f
StopChannel	data/data_raw/valid.py	/^utf-8	def	StopChannel	(	self	,	channel_id	,	resource_id	,	provider	=	None	)	:	\\n	    	raise	Not/;"	f
StringSizer	data/bpe_corpus_raw/train.py	/^utf-8	def	StringSizer	(	field_number	,	is_repeated	,	is_packed	)	:	\\n	    	tag_size	=	_TagSize	/;"	f
StringSizer	data/data_raw/train.py	/^utf-8	def	StringSizer	(	field_number	,	is_repeated	,	is_packed	)	:	\\n	    	tag_size	=	_TagSize	/;"	f
SubtractHistogram	data/bpe_corpus_raw/valid.py	/^utf-8	def	SubtractHistogram	(	histogram_json	,	start_histogram_json	)	:	\\n	    	start_histogram/;"	f
SubtractHistogram	data/data_raw/valid.py	/^utf-8	def	SubtractHistogram	(	histogram_json	,	start_histogram_json	)	:	\\n	    	start_histogram/;"	f
TestNonHelpFlag	data/bpe_corpus_raw/valid.py	/^utf-8	def	TestNonHelpFlag	(	self	,	flag	)	:	\\n	    	exit_code	,	output	=	RunWithFlag	(	flag	)	\\/;"	f
TestNonHelpFlag	data/data_raw/valid.py	/^utf-8	def	TestNonHelpFlag	(	self	,	flag	)	:	\\n	    	exit_code	,	output	=	RunWithFlag	(	flag	)	\\/;"	f
TestReturn	data/bpe_corpus_raw/train.py	/^utf-8	@	route	(	'\/return\/by\/accept\/class'	)	\\n	def	test_return_class_content_by_accepts	(	s/;"	c	function:test_return_class_content_by_accepts	file:
TestReturn	data/data_raw/train.py	/^utf-8	@	route	(	'\/return\/by\/accept\/class'	)	\\n	def	test_return_class_content_by_accepts	(	s/;"	c	function:test_return_class_content_by_accepts	file:
Time2Internaldate	data/bpe_corpus_raw/valid.py	/^utf-8	def	Time2Internaldate	(	date_time	)	:	\\n	    	if	isinstance	(	date_time	,	(	int	,	float	)/;"	f
Time2Internaldate	data/data_raw/valid.py	/^utf-8	def	Time2Internaldate	(	date_time	)	:	\\n	    	if	isinstance	(	date_time	,	(	int	,	float	)/;"	f
ToJsonString	data/bpe_corpus_raw/train.py	/^utf-8	def	ToJsonString	(	self	)	:	\\n	    	nanos	=	self	.	nanos	%	_NANOS_PER_SECOND	\\n	total_se/;"	f
ToJsonString	data/data_raw/train.py	/^utf-8	def	ToJsonString	(	self	)	:	\\n	    	nanos	=	self	.	nanos	%	_NANOS_PER_SECOND	\\n	total_se/;"	f
ToType	data/bpe_corpus_raw/valid.py	/^utf-8	def	ToType	(	self	,	tokens	)	:	\\n	    	result	=	[	]	\\n	name_tokens	=	[	]	\\n	reference	=/;"	f
ToType	data/data_raw/valid.py	/^utf-8	def	ToType	(	self	,	tokens	)	:	\\n	    	result	=	[	]	\\n	name_tokens	=	[	]	\\n	reference	=/;"	f
ToUnixLineEnding	data/bpe_corpus_raw/valid.py	/^utf-8	def	ToUnixLineEnding	(	s	)	:	\\n	    	return	s	.	replace	(	'\\\\r\\\\n'	,	'\\\\n'	)	.	repl/;"	f
ToUnixLineEnding	data/data_raw/valid.py	/^utf-8	def	ToUnixLineEnding	(	s	)	:	\\n	    	return	s	.	replace	(	'\\\\r\\\\n'	,	'\\\\n'	)	.	repl/;"	f
Tree	data/bpe_corpus_raw/train.py	/^utf-8	def	test_recursive_embedding	(	self	)	:	\\n	\\n	\\n	    	class	TreeNode	(	EmbeddedDocument/;"	c	class:test_recursive_embedding.TreeNode
Tree	data/data_raw/train.py	/^utf-8	def	test_recursive_embedding	(	self	)	:	\\n	\\n	\\n	    	class	TreeNode	(	EmbeddedDocument/;"	c	class:test_recursive_embedding.TreeNode
TreeNode	data/bpe_corpus_raw/train.py	/^utf-8	def	test_recursive_embedding	(	self	)	:	\\n	\\n	\\n	    	class	TreeNode	(	EmbeddedDocument/;"	c	function:test_recursive_embedding	file:
TreeNode	data/data_raw/train.py	/^utf-8	def	test_recursive_embedding	(	self	)	:	\\n	\\n	\\n	    	class	TreeNode	(	EmbeddedDocument/;"	c	function:test_recursive_embedding	file:
UnpackTag	data/bpe_corpus_raw/valid.py	/^utf-8	def	UnpackTag	(	tag	)	:	\\n	    	return	tag	>>	TAG_TYPE_BITS	,	tag	&	TAG_TYPE_MASK	\\n		$/;"	f
UnpackTag	data/data_raw/valid.py	/^utf-8	def	UnpackTag	(	tag	)	:	\\n	    	return	tag	>>	TAG_TYPE_BITS	,	tag	&	TAG_TYPE_MASK	\\n		$/;"	f
UserSerializer	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_serialize_single_resource_with_only_id_field	(	self	)	:	\\n	\\n	\\n	    	class	Us/;"	c	function:test_serialize_single_resource_with_only_id_field	file:
UserSerializer	data/data_raw/valid.py	/^utf-8	def	test_serialize_single_resource_with_only_id_field	(	self	)	:	\\n	\\n	\\n	    	class	Us/;"	c	function:test_serialize_single_resource_with_only_id_field	file:
VCLibraries	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	VCLibraries	(	self	)	:	\\n	    	if	self	.	vc_ver	>=	15.0	:	\\n	        /;"	f
VCLibraries	data/data_raw/train.py	/^utf-8	@	property	\\n	def	VCLibraries	(	self	)	:	\\n	    	if	self	.	vc_ver	>=	15.0	:	\\n	        /;"	f
VCRuntimeRedist	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	VCRuntimeRedist	(	self	)	:	\\n	    	arch_subdir	=	self	.	pi	.	target_di/;"	f
VCRuntimeRedist	data/data_raw/train.py	/^utf-8	@	property	\\n	def	VCRuntimeRedist	(	self	)	:	\\n	    	arch_subdir	=	self	.	pi	.	target_di/;"	f
ValidateCertificateHostname	data/bpe_corpus_raw/test.py	/^utf-8	def	ValidateCertificateHostname	(	cert	,	hostname	)	:	\\n	    	hosts	=	GetValidHostsForCer/;"	f
ValidateCertificateHostname	data/data_raw/test.py	/^utf-8	def	ValidateCertificateHostname	(	cert	,	hostname	)	:	\\n	    	hosts	=	GetValidHostsForCer/;"	f
VariantDir	data/bpe_corpus_raw/train.py	/^utf-8	def	VariantDir	(	self	,	variant_dir	,	src_dir	,	duplicate	=	1	)	:	\\n	    	if	not	isinstan/;"	f
VariantDir	data/data_raw/train.py	/^utf-8	def	VariantDir	(	self	,	variant_dir	,	src_dir	,	duplicate	=	1	)	:	\\n	    	if	not	isinstan/;"	f
WhichOneof	data/bpe_corpus_raw/train.py	/^utf-8	def	WhichOneof	(	self	,	oneof_group	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
WhichOneof	data/data_raw/train.py	/^utf-8	def	WhichOneof	(	self	,	oneof_group	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
WrappedIntent	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_nested_sequence	(	)	:	\\n	\\n	\\n	    	@	attr	.	s	\\n	class	WrappedIntent	(	objec/;"	c	function:test_nested_sequence	file:
WrappedIntent	data/data_raw/valid.py	/^utf-8	def	test_nested_sequence	(	)	:	\\n	\\n	\\n	    	@	attr	.	s	\\n	class	WrappedIntent	(	objec/;"	c	function:test_nested_sequence	file:
Write	data/bpe_corpus_raw/test.py	/^utf-8	def	Write	(	self	,	*	args	)	:	\\n	    	return	_btk	.	btkCLBFileIO_Write	(	self	,	*	args	)	/;"	f
Write	data/data_raw/test.py	/^utf-8	def	Write	(	self	,	*	args	)	:	\\n	    	return	_btk	.	btkCLBFileIO_Write	(	self	,	*	args	)	/;"	f
WriteSourceFlags	data/bpe_corpus_raw/valid.py	/^utf-8	def	WriteSourceFlags	(	self	,	spec	,	configs	)	:	\\n	    	config	=	configs	[	spec	[	'defau/;"	f
WriteSourceFlags	data/data_raw/valid.py	/^utf-8	def	WriteSourceFlags	(	self	,	spec	,	configs	)	:	\\n	    	config	=	configs	[	spec	[	'defau/;"	f
ZigZagEncode	data/bpe_corpus_raw/valid.py	/^utf-8	def	ZigZagEncode	(	value	)	:	\\n	    	if	value	>=	0	:	\\n	        	return	value	<<	1	\\n		/;"	f
ZigZagEncode	data/data_raw/valid.py	/^utf-8	def	ZigZagEncode	(	value	)	:	\\n	    	if	value	>=	0	:	\\n	        	return	value	<<	1	\\n		/;"	f
_	data/bpe_corpus_raw/valid.py	/^utf-8	def	_	(	val	)	:	\\n	    	return	val	\\n		$/;"	f
_	data/data_raw/valid.py	/^utf-8	def	_	(	val	)	:	\\n	    	return	val	\\n		$/;"	f
_AddShardedSaveOps	data/bpe_corpus_raw/train.py	/^utf-8	def	_AddShardedSaveOps	(	self	,	filename_tensor	,	per_device	)	:	\\n	    	if	self	.	_write/;"	f
_AddShardedSaveOps	data/data_raw/train.py	/^utf-8	def	_AddShardedSaveOps	(	self	,	filename_tensor	,	per_device	)	:	\\n	    	if	self	.	_write/;"	f
_AnonymousCategory	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_AnonymousCategory	(	cls	)	:	\\n	    	return	cls	.	__AnonymousCatego/;"	f
_AnonymousCategory	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_AnonymousCategory	(	cls	)	:	\\n	    	return	cls	.	__AnonymousCatego/;"	f
_BatchNormWithGlobalNormalizationGrad	data/bpe_corpus_raw/train.py	/^utf-8	@	ops	.	RegisterGradient	(	'BatchNormWithGlobalNormalization'	)	\\n	def	_BatchNormWithGlob/;"	f
_BatchNormWithGlobalNormalizationGrad	data/data_raw/train.py	/^utf-8	@	ops	.	RegisterGradient	(	'BatchNormWithGlobalNormalization'	)	\\n	def	_BatchNormWithGlob/;"	f
_CanProcessKeyWithPlugin	data/bpe_corpus_raw/train.py	/^utf-8	def	_CanProcessKeyWithPlugin	(	self	,	registry_key	,	plugin	)	:	\\n	    	for	registry_key_/;"	f
_CanProcessKeyWithPlugin	data/data_raw/train.py	/^utf-8	def	_CanProcessKeyWithPlugin	(	self	,	registry_key	,	plugin	)	:	\\n	    	for	registry_key_/;"	f
_CheckConfigNode	data/bpe_corpus_raw/valid.py	/^utf-8	def	_CheckConfigNode	(	node_uuid_or_name	,	node	,	accept_offline_node	)	:	\\n	    	if	node/;"	f
_CheckConfigNode	data/data_raw/valid.py	/^utf-8	def	_CheckConfigNode	(	node_uuid_or_name	,	node	,	accept_offline_node	)	:	\\n	    	if	node/;"	f
_ConstructAndTestGradient	data/bpe_corpus_raw/valid.py	/^utf-8	def	_ConstructAndTestGradient	(	self	,	image_shape	,	kernel_shape	,	strides	,	\\n	rates	,	/;"	f
_ConstructAndTestGradient	data/data_raw/valid.py	/^utf-8	def	_ConstructAndTestGradient	(	self	,	image_shape	,	kernel_shape	,	strides	,	\\n	rates	,	/;"	f
_CreateAllChildren	data/bpe_corpus_raw/test.py	/^utf-8	def	_CreateAllChildren	(	self	,	dbh	,	fixed_values	)	:	\\n	    	possible_children	=	self	./;"	f
_CreateAllChildren	data/data_raw/test.py	/^utf-8	def	_CreateAllChildren	(	self	,	dbh	,	fixed_values	)	:	\\n	    	possible_children	=	self	./;"	f
_Die	data/bpe_corpus_raw/test.py	/^utf-8	def	testReloadPopulatesFirstEventTimestamp	(	self	)	:	\\n	    	gen	=	_EventGenerator	(	)	\\/;"	f	function:testReloadPopulatesFirstEventTimestamp	file:
_Die	data/data_raw/test.py	/^utf-8	def	testReloadPopulatesFirstEventTimestamp	(	self	)	:	\\n	    	gen	=	_EventGenerator	(	)	\\/;"	f	function:testReloadPopulatesFirstEventTimestamp	file:
_DoubleDecoder	data/bpe_corpus_raw/valid.py	/^utf-8	def	_DoubleDecoder	(	)	:	\\n	    	local_unpack	=	struct	.	unpack	\\n	\\n	def	InnerDecode	(/;"	f
_DoubleDecoder	data/data_raw/valid.py	/^utf-8	def	_DoubleDecoder	(	)	:	\\n	    	local_unpack	=	struct	.	unpack	\\n	\\n	def	InnerDecode	(/;"	f
_DynamicPartitionShape	data/bpe_corpus_raw/train.py	/^utf-8	@	ops	.	RegisterShape	(	'DynamicPartition'	)	\\n	def	_DynamicPartitionShape	(	op	)	:	\\n	 /;"	f
_DynamicPartitionShape	data/data_raw/train.py	/^utf-8	@	ops	.	RegisterShape	(	'DynamicPartition'	)	\\n	def	_DynamicPartitionShape	(	op	)	:	\\n	 /;"	f
_Dynamic_DecodeBlobKey	data/bpe_corpus_raw/valid.py	/^utf-8	def	_Dynamic_DecodeBlobKey	(	self	,	request	,	response	,	unused_request_id	)	:	\\n	    	fo/;"	f
_Dynamic_DecodeBlobKey	data/data_raw/valid.py	/^utf-8	def	_Dynamic_DecodeBlobKey	(	self	,	request	,	response	,	unused_request_id	)	:	\\n	    	fo/;"	f
_FindDirectXInstallation	data/bpe_corpus_raw/valid.py	/^utf-8	def	_FindDirectXInstallation	(	)	:	\\n	    	if	hasattr	(	_FindDirectXInstallation	,	'dxsdk/;"	f
_FindDirectXInstallation	data/data_raw/valid.py	/^utf-8	def	_FindDirectXInstallation	(	)	:	\\n	    	if	hasattr	(	_FindDirectXInstallation	,	'dxsdk/;"	f
_FindResourceGivenNameAndSuffix	data/bpe_corpus_raw/train.py	/^utf-8	def	_FindResourceGivenNameAndSuffix	(	self	,	requested_name	,	extension	,	\\n	return_resou/;"	f
_FindResourceGivenNameAndSuffix	data/data_raw/train.py	/^utf-8	def	_FindResourceGivenNameAndSuffix	(	self	,	requested_name	,	extension	,	\\n	return_resou/;"	f
_GetAdditionalLibraryDirectories	data/bpe_corpus_raw/valid.py	/^utf-8	def	_GetAdditionalLibraryDirectories	(	self	,	root	,	config	,	gyp_to_build_path	)	:	\\n	  /;"	f
_GetAdditionalLibraryDirectories	data/data_raw/valid.py	/^utf-8	def	_GetAdditionalLibraryDirectories	(	self	,	root	,	config	,	gyp_to_build_path	)	:	\\n	  /;"	f
_GetLdManifestFlags	data/bpe_corpus_raw/train.py	/^utf-8	def	_GetLdManifestFlags	(	self	,	config	,	name	,	gyp_to_build_path	,	\\n	allow_isolation	,/;"	f
_GetLdManifestFlags	data/data_raw/train.py	/^utf-8	def	_GetLdManifestFlags	(	self	,	config	,	name	,	gyp_to_build_path	,	\\n	allow_isolation	,/;"	f
_GetMergeTaskStorageFilePath	data/bpe_corpus_raw/valid.py	/^utf-8	def	_GetMergeTaskStorageFilePath	(	self	,	task	)	:	\\n	    	filename	=	'{0:s}.plaso'	.	for/;"	f
_GetMergeTaskStorageFilePath	data/data_raw/valid.py	/^utf-8	def	_GetMergeTaskStorageFilePath	(	self	,	task	)	:	\\n	    	filename	=	'{0:s}.plaso'	.	for/;"	f
_GetPdbPath	data/bpe_corpus_raw/train.py	/^utf-8	def	_GetPdbPath	(	target_dict	,	config_name	,	vars	)	:	\\n	    	config	=	target_dict	[	'co/;"	f
_GetPdbPath	data/data_raw/train.py	/^utf-8	def	_GetPdbPath	(	target_dict	,	config_name	,	vars	)	:	\\n	    	config	=	target_dict	[	'co/;"	f
_GetStatusOutput	data/bpe_corpus_raw/valid.py	/^utf-8	def	_GetStatusOutput	(	cmd	)	:	\\n	    	if	os	.	name	==	'nt'	:	\\n	        	pipe	=	os	.	po/;"	f
_GetStatusOutput	data/data_raw/valid.py	/^utf-8	def	_GetStatusOutput	(	cmd	)	:	\\n	    	if	os	.	name	==	'nt'	:	\\n	        	pipe	=	os	.	po/;"	f
_GetTextInside	data/bpe_corpus_raw/train.py	/^utf-8	def	_GetTextInside	(	text	,	start_pattern	)	:	\\n	    	matching_punctuation	=	{	'('	:	')'	/;"	f
_GetTextInside	data/data_raw/train.py	/^utf-8	def	_GetTextInside	(	text	,	start_pattern	)	:	\\n	    	matching_punctuation	=	{	'('	:	')'	/;"	f
_GetTunFeatures	data/bpe_corpus_raw/valid.py	/^utf-8	def	_GetTunFeatures	(	fd	,	_ioctl	=	fcntl	.	ioctl	)	:	\\n	    	req	=	struct	.	pack	(	'I'	,/;"	f
_GetTunFeatures	data/data_raw/valid.py	/^utf-8	def	_GetTunFeatures	(	fd	,	_ioctl	=	fcntl	.	ioctl	)	:	\\n	    	req	=	struct	.	pack	(	'I'	,/;"	f
_IDMAPPER	data/bpe_corpus_raw/train.py	/^utf-8	def	func	(	self	)	:	\\n	    	global	_IDMAPPER	\\n	if	not	_IDMAPPER	:	\\n	        	from	eve/;"	x	function:func	file:
_IDMAPPER	data/data_raw/train.py	/^utf-8	def	func	(	self	)	:	\\n	    	global	_IDMAPPER	\\n	if	not	_IDMAPPER	:	\\n	        	from	eve/;"	x	function:func	file:
_ImageDecodeShape	data/bpe_corpus_raw/valid.py	/^utf-8	@	ops	.	RegisterShape	(	'DecodeJpeg'	)	\\n	@	ops	.	RegisterShape	(	'DecodePng'	)	\\n	def	_/;"	f
_ImageDecodeShape	data/data_raw/valid.py	/^utf-8	@	ops	.	RegisterShape	(	'DecodeJpeg'	)	\\n	@	ops	.	RegisterShape	(	'DecodePng'	)	\\n	def	_/;"	f
_Import	data/bpe_corpus_raw/train.py	/^utf-8	def	_Import	(	self	,	t	)	:	\\n	    	self	.	_fill	(	'import '	)	\\n	for	i	,	(	name	,	asname/;"	f
_Import	data/data_raw/train.py	/^utf-8	def	_Import	(	self	,	t	)	:	\\n	    	self	.	_fill	(	'import '	)	\\n	for	i	,	(	name	,	asname/;"	f
_IncompleteByReferenceArgumentDiagnoser	data/bpe_corpus_raw/valid.py	/^utf-8	def	_IncompleteByReferenceArgumentDiagnoser	(	msg	)	:	\\n	    	gcc_regex	=	(	_GCC_FILE_LIN/;"	f
_IncompleteByReferenceArgumentDiagnoser	data/data_raw/valid.py	/^utf-8	def	_IncompleteByReferenceArgumentDiagnoser	(	msg	)	:	\\n	    	gcc_regex	=	(	_GCC_FILE_LIN/;"	f
_Install	data/bpe_corpus_raw/valid.py	/^utf-8	def	_Install	(	vm	)	:	\\n	    	vm	.	InstallPackages	(	'numactl'	)	\\n		$/;"	f
_Install	data/data_raw/valid.py	/^utf-8	def	_Install	(	vm	)	:	\\n	    	vm	.	InstallPackages	(	'numactl'	)	\\n		$/;"	f
_InstallKillHandler	data/bpe_corpus_raw/valid.py	/^utf-8	def	_InstallKillHandler	(	self	)	:	\\n	    	for	sig	in	self	.	_SIGNALS	:	\\n	        	sign/;"	f
_InstallKillHandler	data/data_raw/valid.py	/^utf-8	def	_InstallKillHandler	(	self	)	:	\\n	    	for	sig	in	self	.	_SIGNALS	:	\\n	        	sign/;"	f
_Instances	data/bpe_corpus_raw/train.py	/^utf-8	@	classmethod	\\n	def	MergeManualScaling	(	cls	,	appinclude_one	,	appinclude_two	)	:	\\n	\\/;"	f	function:MergeManualScaling	file:
_Instances	data/data_raw/train.py	/^utf-8	@	classmethod	\\n	def	MergeManualScaling	(	cls	,	appinclude_one	,	appinclude_two	)	:	\\n	\\/;"	f	function:MergeManualScaling	file:
_InvokeCallback	data/bpe_corpus_raw/train.py	/^utf-8	def	_InvokeCallback	(	self	,	response	)	:	\\n	    	response	.	callback	(	response	.	contro/;"	f
_InvokeCallback	data/data_raw/train.py	/^utf-8	def	_InvokeCallback	(	self	,	response	)	:	\\n	    	response	.	callback	(	response	.	contro/;"	f
_IsSingletonList	data/bpe_corpus_raw/train.py	/^utf-8	def	_IsSingletonList	(	testcases	)	:	\\n	    	return	len	(	testcases	)	==	1	and	not	isinst/;"	f
_IsSingletonList	data/data_raw/train.py	/^utf-8	def	_IsSingletonList	(	testcases	)	:	\\n	    	return	len	(	testcases	)	==	1	and	not	isinst/;"	f
_IsTestFilename	data/bpe_corpus_raw/test.py	/^utf-8	def	_IsTestFilename	(	filename	)	:	\\n	    	if	filename	.	endswith	(	'_test.cc'	)	or	filen/;"	f
_IsTestFilename	data/data_raw/test.py	/^utf-8	def	_IsTestFilename	(	filename	)	:	\\n	    	if	filename	.	endswith	(	'_test.cc'	)	or	filen/;"	f
_LogLines	data/bpe_corpus_raw/valid.py	/^utf-8	def	_LogLines	(	self	)	:	\\n	    	if	not	os	.	path	.	isfile	(	self	.	_temp_log_file_path	)/;"	f
_LogLines	data/data_raw/valid.py	/^utf-8	def	_LogLines	(	self	)	:	\\n	    	if	not	os	.	path	.	isfile	(	self	.	_temp_log_file_path	)/;"	f
_MergeBuiltinsIncludes	data/bpe_corpus_raw/valid.py	/^utf-8	def	_MergeBuiltinsIncludes	(	appinfo_path	,	appyaml	,	open_fn	=	open	)	:	\\n	    	if	not	a/;"	f
_MergeBuiltinsIncludes	data/data_raw/valid.py	/^utf-8	def	_MergeBuiltinsIncludes	(	appinfo_path	,	appyaml	,	open_fn	=	open	)	:	\\n	    	if	not	a/;"	f
_ModifiedSizer	data/bpe_corpus_raw/valid.py	/^utf-8	def	_ModifiedSizer	(	compute_value_size	,	modify_value	)	:	\\n	\\n	    	def	SpecificSizer	/;"	f
_ModifiedSizer	data/data_raw/valid.py	/^utf-8	def	_ModifiedSizer	(	compute_value_size	,	modify_value	)	:	\\n	\\n	    	def	SpecificSizer	/;"	f
_NeedToUseReturnNullDiagnoser	data/bpe_corpus_raw/valid.py	/^utf-8	def	_NeedToUseReturnNullDiagnoser	(	msg	)	:	\\n	    	gcc_regex	=	(	\\n	"""instantiated fro/;"	f
_NeedToUseReturnNullDiagnoser	data/data_raw/valid.py	/^utf-8	def	_NeedToUseReturnNullDiagnoser	(	msg	)	:	\\n	    	gcc_regex	=	(	\\n	"""instantiated fro/;"	f
_Net_get_id_name	data/bpe_corpus_raw/train.py	/^utf-8	def	_Net_get_id_name	(	func	,	field	)	:	\\n	\\n	    	@	property	\\n	def	get_id_name	(	self/;"	f
_Net_get_id_name	data/data_raw/train.py	/^utf-8	def	_Net_get_id_name	(	func	,	field	)	:	\\n	\\n	    	@	property	\\n	def	get_id_name	(	self/;"	f
_Next	data/bpe_corpus_raw/train.py	/^utf-8	def	_Next	(	self	,	lex_mode	)	:	\\n	    	self	.	next_lex_mode	=	lex_mode	\\n		$/;"	f
_Next	data/data_raw/train.py	/^utf-8	def	_Next	(	self	,	lex_mode	)	:	\\n	    	self	.	next_lex_mode	=	lex_mode	\\n		$/;"	f
_OpaqueParamsToCanonical	data/bpe_corpus_raw/valid.py	/^utf-8	def	_OpaqueParamsToCanonical	(	self	)	:	\\n	    	with	ops	.	device	(	'\/gpu:0'	)	:	\\n	   /;"	f
_OpaqueParamsToCanonical	data/data_raw/valid.py	/^utf-8	def	_OpaqueParamsToCanonical	(	self	)	:	\\n	    	with	ops	.	device	(	'\/gpu:0'	)	:	\\n	   /;"	f
_OpenRoster	data/bpe_corpus_raw/train.py	/^utf-8	def	_OpenRoster	(	self	,	gtalk_version	)	:	\\n	    	self	.	InstallGTalkExtension	(	gtalk_v/;"	f
_OpenRoster	data/data_raw/train.py	/^utf-8	def	_OpenRoster	(	self	,	gtalk_version	)	:	\\n	    	self	.	InstallGTalkExtension	(	gtalk_v/;"	f
_PackageReport	data/bpe_corpus_raw/train.py	/^utf-8	def	_PackageReport	(	self	,	pinfo	)	:	\\n	    	pinfo	.	state	=	self	.	_GetPackageUpgradeSt/;"	f
_PackageReport	data/data_raw/train.py	/^utf-8	def	_PackageReport	(	self	,	pinfo	)	:	\\n	    	pinfo	.	state	=	self	.	_GetPackageUpgradeSt/;"	f
_ParseTensorName	data/bpe_corpus_raw/valid.py	/^utf-8	def	_ParseTensorName	(	tensor_name	)	:	\\n	    	components	=	tensor_name	.	split	(	':'	)	\\/;"	f
_ParseTensorName	data/data_raw/valid.py	/^utf-8	def	_ParseTensorName	(	tensor_name	)	:	\\n	    	components	=	tensor_name	.	split	(	':'	)	\\/;"	f
_PopulateQuantilesHistogram	data/bpe_corpus_raw/valid.py	/^utf-8	def	_PopulateQuantilesHistogram	(	self	,	hist	,	nums	)	:	\\n	    	if	not	nums	:	\\n	      /;"	f
_PopulateQuantilesHistogram	data/data_raw/valid.py	/^utf-8	def	_PopulateQuantilesHistogram	(	self	,	hist	,	nums	)	:	\\n	    	if	not	nums	:	\\n	      /;"	f
_ProcessBenchmarkReport	data/bpe_corpus_raw/valid.py	/^utf-8	def	_ProcessBenchmarkReport	(	self	,	content	,	handler	)	:	\\n	    	handler	.	send_respons/;"	f
_ProcessBenchmarkReport	data/data_raw/valid.py	/^utf-8	def	_ProcessBenchmarkReport	(	self	,	content	,	handler	)	:	\\n	    	handler	.	send_respons/;"	f
_RESOURCE	data/bpe_corpus_raw/train.py	/^utf-8	def	func	(	self	)	:	\\n	    	global	_IDMAPPER	\\n	if	not	_IDMAPPER	:	\\n	        	from	eve/;"	I	function:func	file:
_RESOURCE	data/data_raw/train.py	/^utf-8	def	func	(	self	)	:	\\n	    	global	_IDMAPPER	\\n	if	not	_IDMAPPER	:	\\n	        	from	eve/;"	I	function:func	file:
_ReplaceEnvDict	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	command	,	working_dir	=	None	,	capture_stderr	=	True	,	env	=	None	)	/;"	f	function:__init__	file:
_ReplaceEnvDict	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	command	,	working_dir	=	None	,	capture_stderr	=	True	,	env	=	None	)	/;"	f	function:__init__	file:
_RuntimeConfig	data/bpe_corpus_raw/train.py	/^utf-8	def	_RuntimeConfig	(	context	)	:	\\n	    	deployment_name	=	context	.	env	[	'deployment'	]/;"	f
_RuntimeConfig	data/data_raw/train.py	/^utf-8	def	_RuntimeConfig	(	context	)	:	\\n	    	deployment_name	=	context	.	env	[	'deployment'	]/;"	f
_SetCountingStyle	data/bpe_corpus_raw/valid.py	/^utf-8	def	_SetCountingStyle	(	level	)	:	\\n	    	_cpplint_state	.	SetCountingStyle	(	level	)	\\n/;"	f
_SetCountingStyle	data/data_raw/valid.py	/^utf-8	def	_SetCountingStyle	(	level	)	:	\\n	    	_cpplint_state	.	SetCountingStyle	(	level	)	\\n/;"	f
_SetFilters	data/bpe_corpus_raw/train.py	/^utf-8	def	_SetFilters	(	filters	)	:	\\n	    	_cpplint_state	.	SetFilters	(	filters	)	\\n		$/;"	f
_SetFilters	data/data_raw/train.py	/^utf-8	def	_SetFilters	(	filters	)	:	\\n	    	_cpplint_state	.	SetFilters	(	filters	)	\\n		$/;"	f
_ShouldPrintError	data/bpe_corpus_raw/valid.py	/^utf-8	def	_ShouldPrintError	(	category	,	confidence	,	linenum	)	:	\\n	    	if	IsErrorSuppressedB/;"	f
_ShouldPrintError	data/data_raw/valid.py	/^utf-8	def	_ShouldPrintError	(	category	,	confidence	,	linenum	)	:	\\n	    	if	IsErrorSuppressedB/;"	f
_SortQueryLink	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	_SortQueryLink	(	table	,	hash_key	,	sort_key	,	name	=	None	)	:	\\n	/;"	f
_SortQueryLink	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	_SortQueryLink	(	table	,	hash_key	,	sort_key	,	name	=	None	)	:	\\n	/;"	f
_StrConvert	data/bpe_corpus_raw/test.py	/^utf-8	def	_StrConvert	(	value	)	:	\\n	    	if	not	isinstance	(	value	,	str	)	:	\\n	        	retu/;"	f
_StrConvert	data/data_raw/test.py	/^utf-8	def	_StrConvert	(	value	)	:	\\n	    	if	not	isinstance	(	value	,	str	)	:	\\n	        	retu/;"	f
_SuffixName	data/bpe_corpus_raw/train.py	/^utf-8	def	_SuffixName	(	name	,	suffix	)	:	\\n	    	parts	=	name	.	rsplit	(	'#'	,	1	)	\\n	parts	[/;"	f
_SuffixName	data/data_raw/train.py	/^utf-8	def	_SuffixName	(	name	,	suffix	)	:	\\n	    	parts	=	name	.	rsplit	(	'#'	,	1	)	\\n	parts	[/;"	f
_TestApplySaturatesAvailableProcessesAndThreads	data/bpe_corpus_raw/valid.py	/^utf-8	@	RequiresIsolation	\\n	def	_TestApplySaturatesAvailableProcessesAndThreads	(	self	,	proce/;"	f
_TestApplySaturatesAvailableProcessesAndThreads	data/data_raw/valid.py	/^utf-8	@	RequiresIsolation	\\n	def	_TestApplySaturatesAvailableProcessesAndThreads	(	self	,	proce/;"	f
_UseForTag	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_UseForTag	(	cls	,	tag	,	raise_if_fail	=	True	)	:	\\n	    	try	:	\\n/;"	f
_UseForTag	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_UseForTag	(	cls	,	tag	,	raise_if_fail	=	True	)	:	\\n	    	try	:	\\n/;"	f
_ValidateAndSliceInputs	data/bpe_corpus_raw/valid.py	/^utf-8	def	_ValidateAndSliceInputs	(	self	,	names_to_variables	)	:	\\n	    	if	not	isinstance	(	n/;"	f
_ValidateAndSliceInputs	data/data_raw/valid.py	/^utf-8	def	_ValidateAndSliceInputs	(	self	,	names_to_variables	)	:	\\n	    	if	not	isinstance	(	n/;"	f
_ValidateContacts	data/bpe_corpus_raw/valid.py	/^utf-8	def	_ValidateContacts	(	self	,	identity_key	,	user_id	,	people_dict	)	:	\\n	    	contacts	/;"	f
_ValidateContacts	data/data_raw/valid.py	/^utf-8	def	_ValidateContacts	(	self	,	identity_key	,	user_id	,	people_dict	)	:	\\n	    	contacts	/;"	f
_VarUInt64ByteSizeNoTag	data/bpe_corpus_raw/valid.py	/^utf-8	def	_VarUInt64ByteSizeNoTag	(	uint64	)	:	\\n	    	if	uint64	<=	127	:	\\n	        	return	1/;"	f
_VarUInt64ByteSizeNoTag	data/data_raw/valid.py	/^utf-8	def	_VarUInt64ByteSizeNoTag	(	uint64	)	:	\\n	    	if	uint64	<=	127	:	\\n	        	return	1/;"	f
_VerifyPayload	data/bpe_corpus_raw/valid.py	/^utf-8	def	_VerifyPayload	(	self	)	:	\\n	    	if	self	.	signer	:	\\n	        	payload_file_name	=/;"	f
_VerifyPayload	data/data_raw/valid.py	/^utf-8	def	_VerifyPayload	(	self	)	:	\\n	    	if	self	.	signer	:	\\n	        	payload_file_name	=/;"	f
_VerifyValues	data/bpe_corpus_raw/valid.py	/^utf-8	def	_VerifyValues	(	self	,	tensor_in_sizes	,	filter_in_sizes	,	stride	,	padding	,	\\n	expe/;"	f
_VerifyValues	data/data_raw/valid.py	/^utf-8	def	_VerifyValues	(	self	,	tensor_in_sizes	,	filter_in_sizes	,	stride	,	padding	,	\\n	expe/;"	f
_WasGypIncludeFileModified	data/bpe_corpus_raw/valid.py	/^utf-8	def	_WasGypIncludeFileModified	(	params	,	files	)	:	\\n	    	if	params	[	'options'	]	.	inc/;"	f
_WasGypIncludeFileModified	data/data_raw/valid.py	/^utf-8	def	_WasGypIncludeFileModified	(	params	,	files	)	:	\\n	    	if	params	[	'options'	]	.	inc/;"	f
_WriteEntry	data/bpe_corpus_raw/train.py	/^utf-8	def	_WriteEntry	(	self	,	size	,	write_func	)	:	\\n	    	if	self	.	current_jar_size	+	size	/;"	f
_WriteEntry	data/data_raw/train.py	/^utf-8	def	_WriteEntry	(	self	,	size	,	write_func	)	:	\\n	    	if	self	.	current_jar_size	+	size	/;"	f
__abs__	data/bpe_corpus_raw/test.py	/^utf-8	@	abstractmethod	\\n	def	__abs__	(	self	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
__abs__	data/data_raw/test.py	/^utf-8	@	abstractmethod	\\n	def	__abs__	(	self	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
__addPythonFile	data/bpe_corpus_raw/train.py	/^utf-8	def	__addPythonFile	(	self	,	multifile	,	moduleDirs	,	moduleName	,	mdef	,	\\n	compressionL/;"	f
__addPythonFile	data/data_raw/train.py	/^utf-8	def	__addPythonFile	(	self	,	multifile	,	moduleDirs	,	moduleName	,	mdef	,	\\n	compressionL/;"	f
__add__	data/bpe_corpus_raw/valid.py	/^utf-8	@	abstractmethod	\\n	def	__add__	(	self	,	other	)	:	\\n	    	raise	NotImplementedError	\\n/;"	f
__add__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__add__	(	self	,	other	)	:	\\n	    	p	=	Program	(	)	\\n	p	.	inst	(	self	)	\\n	p	.	inst/;"	f
__add__	data/data_raw/valid.py	/^utf-8	@	abstractmethod	\\n	def	__add__	(	self	,	other	)	:	\\n	    	raise	NotImplementedError	\\n/;"	f
__add__	data/data_raw/valid.py	/^utf-8	def	__add__	(	self	,	other	)	:	\\n	    	p	=	Program	(	)	\\n	p	.	inst	(	self	)	\\n	p	.	inst/;"	f
__array_finalize__	data/bpe_corpus_raw/train.py	/^utf-8	def	__array_finalize__	(	self	,	obj	)	:	\\n	    	self	.	_update_from	(	obj	)	\\n	if	isinst/;"	f
__array_finalize__	data/data_raw/train.py	/^utf-8	def	__array_finalize__	(	self	,	obj	)	:	\\n	    	self	.	_update_from	(	obj	)	\\n	if	isinst/;"	f
__call__	data/bpe_corpus_raw/test.py	/^utf-8	def	__call__	(	self	,	*	args	,	**	kwargs	)	:	\\n	    	if	args	:	\\n	        	raise	TypeErr/;"	f
__call__	data/bpe_corpus_raw/test.py	/^utf-8	def	__call__	(	self	,	r	)	:	\\n	    	msg	=	self	.	string_to_sign	(	r	)	\\n	r	.	headers	[	'/;"	f
__call__	data/bpe_corpus_raw/train.py	/^utf-8	def	__call__	(	cls	,	value	,	names	=	None	,	module	=	None	,	type	=	None	)	:	\\n	    	if	na/;"	f
__call__	data/bpe_corpus_raw/train.py	/^utf-8	def	__call__	(	self	)	:	\\n	    	return	self	.	_weakref	(	)	\\n		$/;"	f
__call__	data/bpe_corpus_raw/train.py	/^utf-8	def	__call__	(	self	,	data	=	None	)	:	\\n	    	if	data	:	\\n	        	self	.	data	=	data	\\/;"	f
__call__	data/bpe_corpus_raw/train.py	/^utf-8	def	__call__	(	self	,	inputs	,	initial_state	=	None	,	dtype	=	None	,	sequence_length	=	\\n/;"	f
__call__	data/bpe_corpus_raw/train.py	/^utf-8	def	__call__	(	self	,	test_case	,	response	,	**	assertions	)	:	\\n	    	self	.	assert_x_ac/;"	f
__call__	data/bpe_corpus_raw/train.py	/^utf-8	def	__call__	(	self	,	value	,	*	args	,	**	kwargs	)	:	\\n	    	instance	=	kwargs	[	'instanc/;"	f
__call__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__call__	(	cls	,	value	,	names	=	None	,	module	=	None	,	type	=	None	,	start	=	1	)	:	\\/;"	f
__call__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__call__	(	self	,	*	args	,	**	kwargs	)	:	\\n	    	MAX_GROUP_COUNT	=	1024	\\n	SMALL_SEQ/;"	f
__call__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__call__	(	self	,	clf	,	X	,	y_true	,	sample_weight	=	None	,	lamb	=	None	)	:	\\n	    	y/;"	f
__call__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__call__	(	self	,	ctext	,	sloppy	=	False	,	stacklevel	=	1	)	:	\\n	    	try	:	\\n	     /;"	f
__call__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__call__	(	self	,	parser	,	namespace	,	values	,	option_string	=	None	)	:	\\n	    	if	n/;"	f
__call__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__call__	(	self	,	sid	)	:	\\n	    	return	ApplicationContext	(	self	.	_version	,	accou/;"	f
__call__	data/data_raw/test.py	/^utf-8	def	__call__	(	self	,	*	args	,	**	kwargs	)	:	\\n	    	if	args	:	\\n	        	raise	TypeErr/;"	f
__call__	data/data_raw/test.py	/^utf-8	def	__call__	(	self	,	r	)	:	\\n	    	msg	=	self	.	string_to_sign	(	r	)	\\n	r	.	headers	[	'/;"	f
__call__	data/data_raw/train.py	/^utf-8	def	__call__	(	cls	,	value	,	names	=	None	,	module	=	None	,	type	=	None	)	:	\\n	    	if	na/;"	f
__call__	data/data_raw/train.py	/^utf-8	def	__call__	(	self	)	:	\\n	    	return	self	.	_weakref	(	)	\\n		$/;"	f
__call__	data/data_raw/train.py	/^utf-8	def	__call__	(	self	,	data	=	None	)	:	\\n	    	if	data	:	\\n	        	self	.	data	=	data	\\/;"	f
__call__	data/data_raw/train.py	/^utf-8	def	__call__	(	self	,	inputs	,	initial_state	=	None	,	dtype	=	None	,	sequence_length	=	\\n/;"	f
__call__	data/data_raw/train.py	/^utf-8	def	__call__	(	self	,	test_case	,	response	,	**	assertions	)	:	\\n	    	self	.	assert_x_ac/;"	f
__call__	data/data_raw/train.py	/^utf-8	def	__call__	(	self	,	value	,	*	args	,	**	kwargs	)	:	\\n	    	instance	=	kwargs	[	'instanc/;"	f
__call__	data/data_raw/valid.py	/^utf-8	def	__call__	(	cls	,	value	,	names	=	None	,	module	=	None	,	type	=	None	,	start	=	1	)	:	\\/;"	f
__call__	data/data_raw/valid.py	/^utf-8	def	__call__	(	self	,	*	args	,	**	kwargs	)	:	\\n	    	MAX_GROUP_COUNT	=	1024	\\n	SMALL_SEQ/;"	f
__call__	data/data_raw/valid.py	/^utf-8	def	__call__	(	self	,	clf	,	X	,	y_true	,	sample_weight	=	None	,	lamb	=	None	)	:	\\n	    	y/;"	f
__call__	data/data_raw/valid.py	/^utf-8	def	__call__	(	self	,	ctext	,	sloppy	=	False	,	stacklevel	=	1	)	:	\\n	    	try	:	\\n	     /;"	f
__call__	data/data_raw/valid.py	/^utf-8	def	__call__	(	self	,	parser	,	namespace	,	values	,	option_string	=	None	)	:	\\n	    	if	n/;"	f
__call__	data/data_raw/valid.py	/^utf-8	def	__call__	(	self	,	sid	)	:	\\n	    	return	ApplicationContext	(	self	.	_version	,	accou/;"	f
__cb	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_report_event_to	(	home	,	name	)	:	\\n	    	func	=	getattr	(	home	,	name	)	\\n	\\n	/;"	f	function:add_report_event_to	file:
__cb	data/data_raw/valid.py	/^utf-8	def	add_report_event_to	(	home	,	name	)	:	\\n	    	func	=	getattr	(	home	,	name	)	\\n	\\n	/;"	f	function:add_report_event_to	file:
__clear_buffer_watch_old_method	data/bpe_corpus_raw/train.py	/^utf-8	def	__clear_buffer_watch_old_method	(	self	,	pid	,	address	,	size	)	:	\\n	    	warnings	.	/;"	f
__clear_buffer_watch_old_method	data/data_raw/train.py	/^utf-8	def	__clear_buffer_watch_old_method	(	self	,	pid	,	address	,	size	)	:	\\n	    	warnings	.	/;"	f
__compile_po_files	data/bpe_corpus_raw/valid.py	/^utf-8	def	__compile_po_files	(	)	:	\\n	    	localedir	=	'safeeyes\/config\/locale'	\\n	po_dirs	=/;"	f
__compile_po_files	data/data_raw/valid.py	/^utf-8	def	__compile_po_files	(	)	:	\\n	    	localedir	=	'safeeyes\/config\/locale'	\\n	po_dirs	=/;"	f
__contains__	data/bpe_corpus_raw/test.py	/^utf-8	def	__contains__	(	self	,	x	)	:	\\n	    	try	:	\\n	        	x	=	list	(	x	)	\\n		except	Typ/;"	f
__contains__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__contains__	(	self	,	other	)	:	\\n	    	if	not	isinstance	(	other	,	SourceLocation	)	/;"	f
__contains__	data/data_raw/test.py	/^utf-8	def	__contains__	(	self	,	x	)	:	\\n	    	try	:	\\n	        	x	=	list	(	x	)	\\n		except	Typ/;"	f
__contains__	data/data_raw/valid.py	/^utf-8	def	__contains__	(	self	,	other	)	:	\\n	    	if	not	isinstance	(	other	,	SourceLocation	)	/;"	f
__copy__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__copy__	(	self	)	:	\\n	    	return	Vector3	(	self	.	x	,	self	.	y	,	self	.	z	)	\\n		$/;"	f
__copy__	data/data_raw/valid.py	/^utf-8	def	__copy__	(	self	)	:	\\n	    	return	Vector3	(	self	.	x	,	self	.	y	,	self	.	z	)	\\n		$/;"	f
__delitem__	data/bpe_corpus_raw/train.py	/^utf-8	def	__delitem__	(	self	,	name	)	:	\\n	    	name	=	name	.	lower	(	)	\\n	newheaders	=	[	]	\\/;"	f
__delitem__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__delitem__	(	self	,	key	)	:	\\n	    	del	self	.	_values	[	key	]	\\n	self	.	_message_l/;"	f
__delitem__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__delitem__	(	self	,	key	)	:	\\n	    	del	self	.	dicts	[	-	1	]	[	key	]	\\n		$/;"	f
__delitem__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__delitem__	(	self	,	name	)	:	\\n	    	remove_cookie_by_name	(	self	,	name	)	\\n		$/;"	f
__delitem__	data/data_raw/train.py	/^utf-8	def	__delitem__	(	self	,	name	)	:	\\n	    	name	=	name	.	lower	(	)	\\n	newheaders	=	[	]	\\/;"	f
__delitem__	data/data_raw/valid.py	/^utf-8	def	__delitem__	(	self	,	key	)	:	\\n	    	del	self	.	_values	[	key	]	\\n	self	.	_message_l/;"	f
__delitem__	data/data_raw/valid.py	/^utf-8	def	__delitem__	(	self	,	key	)	:	\\n	    	del	self	.	dicts	[	-	1	]	[	key	]	\\n		$/;"	f
__delitem__	data/data_raw/valid.py	/^utf-8	def	__delitem__	(	self	,	name	)	:	\\n	    	remove_cookie_by_name	(	self	,	name	)	\\n		$/;"	f
__dict_replace	data/bpe_corpus_raw/valid.py	/^utf-8	def	__dict_replace	(	s	,	d	)	:	\\n	    	for	key	,	value	in	d	.	items	(	)	:	\\n	        	s	/;"	f
__dict_replace	data/data_raw/valid.py	/^utf-8	def	__dict_replace	(	s	,	d	)	:	\\n	    	for	key	,	value	in	d	.	items	(	)	:	\\n	        	s	/;"	f
__dir__	data/bpe_corpus_raw/test.py	/^utf-8	def	__dir__	(	self	)	:	\\n	    	result	=	list	(	new_module	.	__all__	)	\\n	result	.	extend/;"	f
__dir__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__dir__	(	self	)	:	\\n	    	extras	=	self	.	_mock_methods	or	[	]	\\n	from_type	=	dir	(/;"	f
__dir__	data/data_raw/test.py	/^utf-8	def	__dir__	(	self	)	:	\\n	    	result	=	list	(	new_module	.	__all__	)	\\n	result	.	extend/;"	f
__dir__	data/data_raw/valid.py	/^utf-8	def	__dir__	(	self	)	:	\\n	    	extras	=	self	.	_mock_methods	or	[	]	\\n	from_type	=	dir	(/;"	f
__do_test	data/bpe_corpus_raw/valid.py	/^utf-8	def	__do_test	(	self	,	rets	,	transfers	,	request_ixfr	,	zone_soa	=	begin_soa_rrset	)	:	\\/;"	f
__do_test	data/data_raw/valid.py	/^utf-8	def	__do_test	(	self	,	rets	,	transfers	,	request_ixfr	,	zone_soa	=	begin_soa_rrset	)	:	\\/;"	f
__eq__	data/bpe_corpus_raw/train.py	/^utf-8	def	__eq__	(	self	,	pd	)	:	\\n	    	return	(	self	.	name	==	pd	.	name	and	self	.	desc	==	p/;"	f
__eq__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__eq__	(	self	,	other	)	:	\\n	    	if	self	.	__class__	is	not	other	.	__class__	:	\\n	/;"	f
__eq__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__eq__	(	self	,	other	)	:	\\n	    	return	isinstance	(	other	,	self	.	__class__	)	and	/;"	f
__eq__	data/data_raw/train.py	/^utf-8	def	__eq__	(	self	,	pd	)	:	\\n	    	return	(	self	.	name	==	pd	.	name	and	self	.	desc	==	p/;"	f
__eq__	data/data_raw/valid.py	/^utf-8	def	__eq__	(	self	,	other	)	:	\\n	    	if	self	.	__class__	is	not	other	.	__class__	:	\\n	/;"	f
__eq__	data/data_raw/valid.py	/^utf-8	def	__eq__	(	self	,	other	)	:	\\n	    	return	isinstance	(	other	,	self	.	__class__	)	and	/;"	f
__exit__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__exit__	(	self	,	exc_type	,	exc_value	,	traceback	)	:	\\n	    	self	.	pop	(	)	\\n		$/;"	f
__exit__	data/data_raw/valid.py	/^utf-8	def	__exit__	(	self	,	exc_type	,	exc_value	,	traceback	)	:	\\n	    	self	.	pop	(	)	\\n		$/;"	f
__float__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__float__	(	self	)	:	\\n	    	if	self	.	_isnan	(	)	:	\\n	        	if	self	.	is_snan	(	/;"	f
__float__	data/data_raw/valid.py	/^utf-8	def	__float__	(	self	)	:	\\n	    	if	self	.	_isnan	(	)	:	\\n	        	if	self	.	is_snan	(	/;"	f
__floordiv__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__floordiv__	(	self	,	other	,	context	=	None	)	:	\\n	    	other	=	_convert_other	(	oth/;"	f
__floordiv__	data/data_raw/valid.py	/^utf-8	def	__floordiv__	(	self	,	other	,	context	=	None	)	:	\\n	    	other	=	_convert_other	(	oth/;"	f
__getRecordsByIdentifier	data/bpe_corpus_raw/valid.py	/^utf-8	def	__getRecordsByIdentifier	(	self	,	id	,	reference	)	:	\\n	    	result	=	[	]	\\n	records/;"	f
__getRecordsByIdentifier	data/data_raw/valid.py	/^utf-8	def	__getRecordsByIdentifier	(	self	,	id	,	reference	)	:	\\n	    	result	=	[	]	\\n	records/;"	f
__get__	data/bpe_corpus_raw/train.py	/^utf-8	def	__get__	(	self	,	obj	,	objtype	)	:	\\n	    	raw_path	=	super	(	Path	,	self	)	.	__get__/;"	f
__get__	data/data_raw/train.py	/^utf-8	def	__get__	(	self	,	obj	,	objtype	)	:	\\n	    	raw_path	=	super	(	Path	,	self	)	.	__get__/;"	f
__get_cookie_matching_name	data/bpe_corpus_raw/valid.py	/^utf-8	def	__get_cookie_matching_name	(	self	,	name	)	:	\\n	    	logging	.	warn	(	self	.	UNSUPPOR/;"	f
__get_cookie_matching_name	data/data_raw/valid.py	/^utf-8	def	__get_cookie_matching_name	(	self	,	name	)	:	\\n	    	logging	.	warn	(	self	.	UNSUPPOR/;"	f
__get_publishing_date	data/bpe_corpus_raw/valid.py	/^utf-8	def	__get_publishing_date	(	self	,	warc_record	,	article	)	:	\\n	    	if	'publish_date'	in/;"	f
__get_publishing_date	data/data_raw/valid.py	/^utf-8	def	__get_publishing_date	(	self	,	warc_record	,	article	)	:	\\n	    	if	'publish_date'	in/;"	f
__getattr__	data/bpe_corpus_raw/test.py	/^utf-8	def	__getattr__	(	cls	,	name	)	:	\\n	    	if	_is_dunder	(	name	)	:	\\n	        	raise	Attr/;"	f
__getattr__	data/bpe_corpus_raw/test.py	/^utf-8	def	__getattr__	(	self	,	attr	)	:	\\n	    	return	getattr	(	self	.	__instance	,	attr	)	\\n/;"	f
__getattr__	data/bpe_corpus_raw/train.py	/^utf-8	def	__getattr__	(	self	,	item	)	:	\\n	    	if	not	item	.	startswith	(	'get_'	)	:	\\n	     /;"	f
__getattr__	data/bpe_corpus_raw/train.py	/^utf-8	def	__getattr__	(	self	,	name	)	:	\\n	    	return	getattr	(	self	.	_first	,	name	)	\\n		$/;"	f
__getattr__	data/data_raw/test.py	/^utf-8	def	__getattr__	(	cls	,	name	)	:	\\n	    	if	_is_dunder	(	name	)	:	\\n	        	raise	Attr/;"	f
__getattr__	data/data_raw/test.py	/^utf-8	def	__getattr__	(	self	,	attr	)	:	\\n	    	return	getattr	(	self	.	__instance	,	attr	)	\\n/;"	f
__getattr__	data/data_raw/train.py	/^utf-8	def	__getattr__	(	self	,	item	)	:	\\n	    	if	not	item	.	startswith	(	'get_'	)	:	\\n	     /;"	f
__getattr__	data/data_raw/train.py	/^utf-8	def	__getattr__	(	self	,	name	)	:	\\n	    	return	getattr	(	self	.	_first	,	name	)	\\n		$/;"	f
__getattribute__	data/bpe_corpus_raw/test.py	/^utf-8	def	__getattribute__	(	self	,	attrname	)	:	\\n	    	if	'load'	in	attrname	or	'save'	in	att/;"	f
__getattribute__	data/bpe_corpus_raw/train.py	/^utf-8	def	__getattribute__	(	self	,	attr	)	:	\\n	    	proxy	=	object	.	__getattribute__	(	self	,/;"	f
__getattribute__	data/data_raw/test.py	/^utf-8	def	__getattribute__	(	self	,	attrname	)	:	\\n	    	if	'load'	in	attrname	or	'save'	in	att/;"	f
__getattribute__	data/data_raw/train.py	/^utf-8	def	__getattribute__	(	self	,	attr	)	:	\\n	    	proxy	=	object	.	__getattribute__	(	self	,/;"	f
__getitem__	data/bpe_corpus_raw/test.py	/^utf-8	def	__getitem__	(	self	,	ix	)	:	\\n	    	raise	AttributeError	(	'__getitem__'	)	\\n		$/;"	f
__getitem__	data/bpe_corpus_raw/test.py	/^utf-8	def	__getitem__	(	self	,	name	)	:	\\n	    	return	self	.	_find_no_duplicates	(	name	)	\\n	/;"	f
__getitem__	data/bpe_corpus_raw/train.py	/^utf-8	def	__getitem__	(	self	,	index	)	:	\\n	    	if	index	>=	0	and	index	<	self	.	point_count	:/;"	f
__getitem__	data/bpe_corpus_raw/train.py	/^utf-8	def	__getitem__	(	self	,	index	)	:	\\n	    	if	not	isinstance	(	index	,	tuple	)	:	\\n	    /;"	f
__getitem__	data/bpe_corpus_raw/train.py	/^utf-8	def	__getitem__	(	self	,	key	)	:	\\n	    	value	=	self	.	_get	(	key	)	\\n	if	key	==	'artis/;"	f
__getitem__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__getitem__	(	self	,	args	)	:	\\n	    	if	not	isinstance	(	args	,	(	tuple	,	list	)	)	:/;"	f
__getitem__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__getitem__	(	self	,	idx	)	:	\\n	    	if	idx	is	Column	.	PATH	:	\\n	        	return	se/;"	f
__getitem__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__getitem__	(	self	,	index	)	:	\\n	    	if	isinstance	(	index	,	(	int	,	long	)	)	:	\\n/;"	f
__getitem__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__getitem__	(	self	,	key	)	:	\\n	    	if	key	==	'thread'	:	\\n	        	return	self	.	/;"	f
__getitem__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__getitem__	(	self	,	key	)	:	\\n	    	return	self	.	_values	[	key	]	\\n		$/;"	f
__getitem__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__getitem__	(	self	,	offset	)	:	\\n	    	if	isinstance	(	offset	,	list	)	:	\\n	       /;"	f
__getitem__	data/data_raw/test.py	/^utf-8	def	__getitem__	(	self	,	ix	)	:	\\n	    	raise	AttributeError	(	'__getitem__'	)	\\n		$/;"	f
__getitem__	data/data_raw/test.py	/^utf-8	def	__getitem__	(	self	,	name	)	:	\\n	    	return	self	.	_find_no_duplicates	(	name	)	\\n	/;"	f
__getitem__	data/data_raw/train.py	/^utf-8	def	__getitem__	(	self	,	index	)	:	\\n	    	if	index	>=	0	and	index	<	self	.	point_count	:/;"	f
__getitem__	data/data_raw/train.py	/^utf-8	def	__getitem__	(	self	,	index	)	:	\\n	    	if	not	isinstance	(	index	,	tuple	)	:	\\n	    /;"	f
__getitem__	data/data_raw/train.py	/^utf-8	def	__getitem__	(	self	,	key	)	:	\\n	    	value	=	self	.	_get	(	key	)	\\n	if	key	==	'artis/;"	f
__getitem__	data/data_raw/valid.py	/^utf-8	def	__getitem__	(	self	,	args	)	:	\\n	    	if	not	isinstance	(	args	,	(	tuple	,	list	)	)	:/;"	f
__getitem__	data/data_raw/valid.py	/^utf-8	def	__getitem__	(	self	,	idx	)	:	\\n	    	if	idx	is	Column	.	PATH	:	\\n	        	return	se/;"	f
__getitem__	data/data_raw/valid.py	/^utf-8	def	__getitem__	(	self	,	index	)	:	\\n	    	if	isinstance	(	index	,	(	int	,	long	)	)	:	\\n/;"	f
__getitem__	data/data_raw/valid.py	/^utf-8	def	__getitem__	(	self	,	key	)	:	\\n	    	if	key	==	'thread'	:	\\n	        	return	self	.	/;"	f
__getitem__	data/data_raw/valid.py	/^utf-8	def	__getitem__	(	self	,	key	)	:	\\n	    	return	self	.	_values	[	key	]	\\n		$/;"	f
__getitem__	data/data_raw/valid.py	/^utf-8	def	__getitem__	(	self	,	offset	)	:	\\n	    	if	isinstance	(	offset	,	list	)	:	\\n	       /;"	f
__gt__	data/bpe_corpus_raw/valid.py	/^utf-8	def	filter_to_resume_point	(	self	,	store_path	,	enum_seeds	)	:	\\n	\\n	\\n	    	class	Hac/;"	m	class:filter_to_resume_point.HackedCompareObject
__gt__	data/data_raw/valid.py	/^utf-8	def	filter_to_resume_point	(	self	,	store_path	,	enum_seeds	)	:	\\n	\\n	\\n	    	class	Hac/;"	m	class:filter_to_resume_point.HackedCompareObject
__heartbeat_loop	data/bpe_corpus_raw/valid.py	/^utf-8	def	__heartbeat_loop	(	self	)	:	\\n	    	now	=	monotonic	(	)	\\n	if	self	.	send_sleep	!=	0/;"	f
__heartbeat_loop	data/data_raw/valid.py	/^utf-8	def	__heartbeat_loop	(	self	)	:	\\n	    	now	=	monotonic	(	)	\\n	if	self	.	send_sleep	!=	0/;"	f
__ic_nosplay	data/bpe_corpus_raw/valid.py	/^utf-8	def	__ic_nosplay	(	self	,	z	)	:	\\n	    	self	.	maxtilt	=	90	*	numpy	.	pi	\/	180	-	self	.	/;"	f
__ic_nosplay	data/data_raw/valid.py	/^utf-8	def	__ic_nosplay	(	self	,	z	)	:	\\n	    	self	.	maxtilt	=	90	*	numpy	.	pi	\/	180	-	self	.	/;"	f
__init__	data/bpe_corpus_raw/test.py	/^utf-8	def	__init__	(	self	)	:	\\n	    	self	.	o0	=	self	.	_get_objects	(	ignore	=	(	inspect	.	cu/;"	f
__init__	data/bpe_corpus_raw/test.py	/^utf-8	def	__init__	(	self	,	arg	)	:	\\n	    	parts	=	arg	.	split	(	' '	)	\\n	self	.	type	=	' '	./;"	f
__init__	data/bpe_corpus_raw/test.py	/^utf-8	def	__init__	(	self	,	args	)	:	\\n	    	self	.	learning_rate_fct	=	None	\\n	assert	args	.	/;"	f
__init__	data/bpe_corpus_raw/test.py	/^utf-8	def	__init__	(	self	,	callbacks	,	threshold	=	1024	*	256	)	:	\\n	    	self	.	_callbacks	=	/;"	f
__init__	data/bpe_corpus_raw/test.py	/^utf-8	def	__init__	(	self	,	columns	,	refcolumns	,	name	=	None	,	onupdate	=	None	,	ondelete	=	\\/;"	f
__init__	data/bpe_corpus_raw/test.py	/^utf-8	def	__init__	(	self	,	elf_file_path	,	addr2line_path	,	callback	,	inlines	=	False	,	\\n	ma/;"	f
__init__	data/bpe_corpus_raw/test.py	/^utf-8	def	__init__	(	self	,	encoding	=	None	,	object_hook	=	None	)	:	\\n	    	self	.	encoding	=	/;"	f
__init__	data/bpe_corpus_raw/test.py	/^utf-8	def	__init__	(	self	,	fin	=	0	,	rsv1	=	0	,	rsv2	=	0	,	rsv3	=	0	,	opcode	=	OPCODE_TEXT	,	ma/;"	f
__init__	data/bpe_corpus_raw/test.py	/^utf-8	def	__init__	(	self	,	hass	,	name	,	ccb	:	ComfoConnectBridge	,	sensor_type	)	->	None	:	\\n/;"	f
__init__	data/bpe_corpus_raw/test.py	/^utf-8	def	__init__	(	self	,	num_buckets	=	1024	,	own_hash	=	None	)	:	\\n	    	self	.	dict	=	[	]	/;"	f
__init__	data/bpe_corpus_raw/test.py	/^utf-8	def	__init__	(	self	,	opcode	,	data	=	b''	,	encoding	=	'utf-8'	)	:	\\n	    	self	.	opcode	/;"	f
__init__	data/bpe_corpus_raw/test.py	/^utf-8	def	__init__	(	self	,	pattern	,	flags	=	0	)	:	\\n	    	super	(	Regex	,	self	)	.	__init__	(/;"	f
__init__	data/bpe_corpus_raw/test.py	/^utf-8	def	__init__	(	self	,	pkey	)	:	\\n	    	self	.	_key	=	pkey	\\n		$/;"	f
__init__	data/bpe_corpus_raw/test.py	/^utf-8	def	__init__	(	self	,	rootnode	)	:	\\n	    	self	.	root	=	rootnode	\\n	self	.	disable	=	0	/;"	f
__init__	data/bpe_corpus_raw/test.py	/^utf-8	def	__init__	(	self	,	seed	=	DEFAULT_SEED	)	:	\\n	    	perm	=	self	.	_perm	=	[	0	]	*	256	\\/;"	f
__init__	data/bpe_corpus_raw/test.py	/^utf-8	def	__init__	(	self	,	server	,	params	)	:	\\n	    	super	(	RedisCache	,	self	)	.	__init__	/;"	f
__init__	data/bpe_corpus_raw/test.py	/^utf-8	def	__init__	(	self	,	server	,	spider	,	key	,	serializer	=	None	)	:	\\n	    	if	serializer/;"	f
__init__	data/bpe_corpus_raw/test.py	/^utf-8	def	__init__	(	self	,	validated	,	base_schema	)	:	\\n	    	self	.	validated	=	validated	\\/;"	f
__init__	data/bpe_corpus_raw/test.py	/^utf-8	def	__init__	(	self	,	value	)	:	\\n	    	if	len	(	Byte	.	_bytes	)	==	256	:	\\n	        	ra/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	@	abc	.	abstractmethod	\\n	def	__init__	(	self	,	*	args	,	**	kwargs	)	:	\\n	$/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	@	keyword_only	\\n	def	__init__	(	self	,	featuresCol	=	'features'	,	labelCol	=	'label'	,	p/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	@	route	(	'\/return\/by\/accept\/class'	)	\\n	def	test_return_class_content_by_accepts	(	s/;"	m	class:test_return_class_content_by_accepts.TestReturn
__init__	data/bpe_corpus_raw/train.py	/^utf-8	@	with_phil	\\n	def	__init__	(	self	,	oid	)	:	\\n	    	self	.	_id	=	oid	\\n		$/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	)	:	\\n	    	this	=	_OFDPA_python	.	new_ofdpaOamRemoteMpConfig_t	(	)	\\/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	*	args	,	**	kwds	)	:	\\n	    	if	len	(	args	)	>	1	:	\\n	        	rai/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	*	enums	,	**	kw	)	:	\\n	    	kw	.	pop	(	'strict'	,	None	)	\\n	valida/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	P	,	pobs	,	pi	=	None	,	dt_model	=	'1 step'	)	:	\\n	    	_MSM	.	__ini/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	aws_access_key_id	=	None	,	aws_secret_access_key	=	None	,	\\n	is_sec/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	completekey	=	'tab'	,	stdin	=	None	,	stdout	=	None	)	:	\\n	    	if	s/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	connection_manager	,	database_dir	)	:	\\n	    	self	.	__mgr	=	connec/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	connection_string	)	:	\\n	    	pass	\\n		$/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	controller	,	traverser	)	:	\\n	    	self	.	controller	=	x	=	controll/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	database	)	:	\\n	    	Loggable	.	__init__	(	self	)	\\n	self	.	_param/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	epsilon	=	0.05	,	gamma	=	0.8	,	alpha	=	0.2	,	numTraining	=	0	,	**	ar/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	fallback	=	None	,	ip	=	None	,	blue	=	None	,	cell	=	None	,	wifi	=	Non/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	file_path	)	:	\\n	    	self	.	file_path	=	file_path	\\n	self	.	_file/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	filename	,	init_args	,	state	)	:	\\n	    	self	.	filename	=	filename/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	identification	,	serialport_settings	,	logger	,	sleeptime	,	\\n	queu/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	item	=	None	,	verbosity	=	0	,	**	kwargs	)	:	\\n	    	super	(	Info	,	/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	loc_key	,	assignblks	)	:	\\n	    	assert	isinstance	(	loc_key	,	m2_e/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	message	,	source_file	=	None	,	line_number	=	None	,	send_email	=	Tru/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	mode	,	name	,	test	=	None	,	params	=	None	)	:	\\n	    	self	.	mode	=/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	n_classes	,	label_name	=	None	,	weight_column_name	=	None	,	\\n	enab/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	n_tasks	,	n_features	,	fit_transformers	=	[	]	,	n_evals	=	1	,	\\n	ba/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	name	,	attrs	=	None	)	:	\\n	    	self	.	_attrs	=	attrs	or	{	}	\\n	se/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	name	,	bytez	)	:	\\n	    	FdtProperty	.	__init__	(	self	,	name	)	\\n/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	name	,	ident	)	:	\\n	    	self	.	name	=	name	\\n	self	.	ident	=	iden/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	name	,	level	=	NOTSET	)	:	\\n	    	Filterer	.	__init__	(	self	)	\\n	/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	name	,	light	,	model	,	unique_id	)	:	\\n	    	super	(	)	.	__init__	(/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	name	,	root	=	None	,	onlyin	=	None	,	ts	=	None	,	verbose	=	False	)	:/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	normal_button	=	None	,	toggle_widget_alist	=	[	]	)	:	\\n	    	PangoB/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	obj	)	:	\\n	    	obj	.	addProperty	(	'App::PropertyVector'	,	'p1'	,	/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	on_test	)	:	\\n	    	super	(	TestByTestResult	,	self	)	.	__init__	(	/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	oui	=	None	,	GetFile	=	False	)	:	\\n	    	aircrackOUI	=	None	\\n	sel/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	param	,	parent	=	None	)	:	\\n	    	dictkey	=	param	.	_namespace	\\n	/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	params	,	name	,	destination_dir	,	install_prefix	)	:	\\n	    	self	./;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	parent	,	scales	,	phases	,	icases_fringe	,	icases_disp	,	\\n	icases_/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	parent	,	vec	)	:	\\n	    	self	.	_num_generators	=	len	(	parent	.	_l/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	path	=	None	,	include_egg	=	False	)	:	\\n	    	if	path	is	None	:	\\n/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	pubkey	)	:	\\n	    	self	.	_pubkey	=	pubkey	\\n		$/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	rng	,	input	,	n_in	,	n_out	,	W	=	None	,	b	=	None	,	activation	=	T	.	/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	scores	=	None	,	classes	=	None	)	:	\\n	    	if	scores	is	not	None	an/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	section	,	xunit	=	True	,	engine	=	'phantomjs'	,	url	=	None	)	:	\\n	 /;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	shutit_global_object	)	:	\\n	    	assert	self	.	only_one	is	None	\\n/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	status_code	=	None	,	text	=	None	,	url	=	None	,	request	=	None	,	\\n/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	user	,	pw	,	authurl	,	*	args	,	**	kwargs	)	:	\\n	    	super	(	NTLMCo/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	web_var_val	=	None	)	:	\\n	    	ReductionWrapper	.	__init__	(	self	,/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	width	,	significand	,	min	=	None	,	repeat	=	None	)	:	\\n	    	self	./;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	x	,	y	,	width	,	height	,	font	=	None	,	textColor	=	None	,	\\n	button/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	__init__	(	self	,	x	,	y	=	None	,	z	=	None	,	srid	=	None	)	:	\\n	    	if	isinstance	(	x/;"	f
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	host_addrinfo	(	host	=	None	,	socket_family	=	None	,	ipv4_multicast	=	False	)	:	\\n	\\/;"	m	class:host_addrinfo.AddrInfo
__init__	data/bpe_corpus_raw/train.py	/^utf-8	def	testSignResumable	(	self	)	:	\\n	    	expected	=	sigs	.	TEST_SIGN_RESUMABLE	\\n	\\n	\\/;"	m	class:testSignResumable.MockLogger
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	@	keyword_only	\\n	def	__init__	(	self	,	featuresCol	=	'features'	,	labelCol	=	'label'	,	p/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	@	use_file_name_or_kwds	\\n	def	__init__	(	self	,	grid	,	method	=	'D8'	,	flow_equation	=	'/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	)	:	\\n	    	if	not	self	.	is_configured	(	)	:	\\n	        	self	.	set/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	)	:	\\n	    	self	.	eps	=	0.02	\\n	self	.	alpha	=	0.005	\\n	self	.	gam/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	)	:	\\n	    	self	.	issues	=	tree	(	)	\\n		$/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	)	:	\\n	    	self	.	table	=	{	'AG'	:	{	'name'	:	'\\u767d\\u94f6'	,	'un/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	)	:	\\n	    	this	=	_OFDPA_python	.	new_ofdpaOamLbStatus_t	(	)	\\n	try/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	)	:	\\n	    	this	=	_OFDPA_python	.	new_ofdpaOamOdDmSnapshot_t	(	)	\\n/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	*	args	,	**	kwargs	)	:	\\n	    	name	=	kwargs	.	get	(	'name'	,	type	/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	*	args	,	**	kwargs	)	:	\\n	    	self	.	bus	=	kwargs	.	pop	(	'bus'	,	/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	*	clauses	,	**	kw	)	:	\\n	    	clauses	=	[	_literal_as_binds	(	c	)	f/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	*	elements	,	**	kw	)	:	\\n	    	ColumnCollectionConstraint	.	__init_/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	**	kwargs	)	:	\\n	    	self	.	_entries	=	{	}	\\n	self	.	_lastEntries/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	addr	,	size	,	perms	,	filename	,	offset	=	0	,	overlay	=	None	,	**	\\/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	ads_hub	,	ads_var	,	ads_type	,	name	,	unit_of_measurement	,	\\n	fact/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	algo_name	,	isolated_basedir	)	:	\\n	    	super	(	SavedState	,	self	/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	alias	,	*	args	)	:	\\n	    	AliasBase	.	__init__	(	self	,	*	args	)	\\/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	arg	=	None	,	color	=	None	,	colorsrc	=	None	,	family	=	None	,	\\n	fa/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	args	)	:	\\n	    	Monitor	.	__init__	(	self	,	args	)	\\n	if	args	.	h/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	cache_dir	,	config	,	folder	,	layout	,	index	)	:	\\n	    	self	.	fol/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	captcha_break_time	=	1	,	headers	=	None	,	**	kwargs	)	:	\\n	    	ass/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	check_name	,	object_name	,	object_limit	,	warning_func	=	None	)	:	\\/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	checker	=	None	,	verbose	=	None	,	optionflags	=	0	)	:	\\n	    	self	/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	cid	=	None	,	uid	=	None	)	:	\\n	    	self	.	cid	=	cid	\\n	self	.	nam/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	client	,	**	kwargs	)	:	\\n	    	self	.	transactions	=	{	}	\\n	super	/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	command	,	working_dir	=	None	,	capture_stderr	=	True	,	env	=	None	)	/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	config	)	:	\\n	    	self	.	config	=	config	\\n	today	=	datetime	.	da/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	config	,	verbose	=	False	)	:	\\n	    	super	(	OCServiceAccountSecret/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	connection_class	=	Connection	,	max_connections	=	None	,	**	\\n	conn/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	console	,	gameName	)	:	\\n	    	self	.	console	=	console	\\n	self	.	/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	contents	,	source	)	:	\\n	    	if	not	isinstance	(	source	,	StringSo/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	control_points	)	:	\\n	    	_o	=	len	(	control_points	)	\\n	self	.	_/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	controller	,	id	,	who	,	keeplog	=	None	)	:	\\n	    	WorkerProcess	.	/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	data	)	:	\\n	    	CharStream	.	__init__	(	self	)	\\n	self	.	strdata	/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	data	=	None	,	url	=	None	,	filename	=	None	,	embed	=	None	,	mimetype/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	default_settings	=	None	,	update_settings	=	None	,	\\n	input_encodin/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	device	)	:	\\n	    	import	lakeside	\\n	self	.	_temp	=	None	\\n	self/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	directory	,	loader_factory	,	path_filter	=	lambda	x	:	True	)	:	\\n	 /;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	executable_path	,	port	=	0	)	:	\\n	    	self	.	port	=	port	\\n	self	/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	expr	,	path	,	pos	=	None	)	:	\\n	    	if	not	isinstance	(	pos	,	base/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	field	)	:	\\n	    	self	.	specials	=	'()<>@,:;."[]'	\\n	self	.	pos	=/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	filename	,	key_column_index	=	TextFileIndex	.	WHOLE_LINE	,	\\n	value/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	filename	,	mode	=	'r'	,	buffering	=	None	,	compresslevel	=	9	)	:	\\n/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	fileobj	,	min_article_character	=	200	,	processes	=	None	,	\\n	lemma/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	filepath	)	:	\\n	    	self	.	filepath	=	filepath	\\n	self	.	hosts	=	/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	frame_obj	)	:	\\n	    	super	(	FrameIterator	,	self	)	.	__init__	(	)/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	full_result	=	False	,	**	mapper_options	)	:	\\n	    	import	routes	\\/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	functions	,	max_simultaneous_procs	=	20	)	:	\\n	    	if	not	isinstan/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	goal	,	gen	,	pruner	,	es	,	index	=	slice	(	None	)	,	weights	=	None	,/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	gross_returns	,	net_returns	,	costs	,	capital	,	\\n	weighted_flag	=	/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	images	,	labels	,	fake_data	=	False	,	one_hot	=	False	,	dtype	=	\\n	/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	input_api	,	output_api	,	paths	)	:	\\n	    	self	.	input_api	=	input/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	input_dim	,	K	,	variance	=	1.0	)	:	\\n	    	self	.	input_dim	=	input/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	ishttps	,	host	,	server_context	,	tap_context	=	None	,	port	=	80	,	\\/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	lambdaa	,	sigma2	,	lbl	,	kern	,	x_shape	)	:	\\n	    	self	.	datanum	/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	loc	,	scale	,	validate_args	=	True	,	allow_nan_stats	=	False	,	\\n	n/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	logits	=	None	,	probs	=	None	,	dtype	=	dtypes	.	int32	,	\\n	validate/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	mediator	=	None	)	:	\\n	    	super	(	FileEntryLister	,	self	)	.	__in/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	method	,	url	,	params	,	body	,	headers	,	timeout	,	stream	,	\\n	foll/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	methodName	)	:	\\n	    	unittest	.	TestCase	.	__init__	(	self	,	meth/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	min	=	0	,	max	=	64	*	1024	)	:	\\n	    	self	.	min	=	min	\\n	self	.	m/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	model_shards_paths	:	List	[	str	]	,	calls_shards_paths	:	List	[	\\n	/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	module_spec	,	check	=	True	)	:	\\n	    	if	type	(	module_spec	)	!=	d/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	name	,	**	kwargs	)	:	\\n	    	XODEfile	.	__init__	(	self	,	name	,	**/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	name	,	eight	,	sensor	,	units	)	:	\\n	    	super	(	)	.	__init__	(	ei/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	name	,	image_set	,	root_path	,	dataset_path	,	result_path	=	None	)	:/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	names	)	:	\\n	    	if	not	isinstance	(	names	,	dict	)	:	\\n	        /;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	namespaceHTMLElements	)	:	\\n	    	if	namespaceHTMLElements	:	\\n	  /;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	numPoles	=	1	,	markov	=	True	,	verbose	=	False	,	\\n	extraObservatio/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	operatorClass	,	operator_args	=	None	,	operator_kwargs	=	None	,	\\n	/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	opt	)	:	\\n	    	BaseModel	.	__init__	(	self	,	opt	)	\\n	self	.	loss/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	option	,	dbstate	,	uistate	,	track	,	override	)	:	\\n	    	Gtk	.	Box/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	outputs	)	:	\\n	    	if	not	isinstance	(	outputs	,	dict	)	:	\\n	    /;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	parent	,	title	,	text	,	modal	=	True	)	:	\\n	    	Toplevel	.	__init_/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	parent	=	None	)	:	\\n	    	QtGui	.	QFrame	.	__init__	(	self	,	parent/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	path	,	delimiter	=	None	,	mode	=	'r'	,	buffering	=	-	1	,	encoding	=	/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	path	,	fext	=	'.nii.gz'	)	:	\\n	    	self	.	_fext	=	fext	\\n	rpath	=/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	policy_config	,	verbose	=	False	)	:	\\n	    	super	(	PolicyUser	,	se/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	prefix	=	None	)	:	\\n	    	drake	.	cxx	.	LibraryConfiguration	.	__in/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	rank	,	points	,	problem_inputs	)	:	\\n	    	self	.	rank	=	rank	\\n	s/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	reader	,	writer	,	buffer_size	=	DEFAULT_BUFFER_SIZE	,	\\n	max_buffer/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	regexp	=	'.*'	,	mutability	=	'both'	,	depth	=	'both'	,	fallback	=	\\/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	root_path	)	:	\\n	    	super	(	GitDB	,	self	)	.	__init__	(	root_path/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	sample	=	None	)	:	\\n	    	self	.	tmessage	=	'Generic task, should b/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	sasl_client_factory	,	mechanism	,	trans	)	:	\\n	    	self	.	_trans	=/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	sess	,	bad_init_action	=	None	,	bad_run_start_action	=	None	,	\\n	ba/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	session	,	networkinterface	)	:	\\n	    	super	(	)	.	__init__	(	)	\\n/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	sqltext	,	name	=	None	,	deferrable	=	None	,	initially	=	None	,	\\n	t/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	statement	,	store	,	fields	=	None	,	schema	=	None	)	:	\\n	    	super/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	status	,	arch	,	cpu	,	soc	,	vendor	,	board_name	,	target	,	options	\\/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	stemmer_selected	=	PORTER_STEMMER	)	:	\\n	    	self	.	stemmer	=	None/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	subject	)	:	\\n	    	self	.	_subject	=	subject	\\n		$/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	task	=	None	,	**	kwargs	)	:	\\n	    	self	.	task	=	task	\\n	malfind	/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	testcase	,	test_config	,	_	)	:	\\n	    	self	.	testcase	=	testcase	\\/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	text_edit	)	:	\\n	    	assert	isinstance	(	text_edit	,	(	QtGui	.	QTe/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	transport	=	None	,	channel	=	None	,	credentials	=	None	,	\\n	client_/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	twilio	)	:	\\n	    	super	(	Fax	,	self	)	.	__init__	(	twilio	)	\\n	s/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	types	,	bounds	)	:	\\n	    	super	(	)	.	__init__	(	types	=	types	,	b/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	version	,	workspace_sid	)	:	\\n	    	super	(	EventList	,	self	)	.	__/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	vxvv	=	[	1.0	,	0.0	,	1.0	]	,	vo	=	220.0	,	ro	=	8.0	,	zo	=	0.025	,	\\/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	world	,	cx	,	cz	,	biomeID	=	None	)	:	\\n	    	self	.	dimension	=	wor/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	x	,	y	=	None	,	z	=	None	,	srid	=	None	)	:	\\n	    	if	isinstance	(	x/;"	f
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	load_kmf	(	chkfile	)	:	\\n	    	from	pyscf	.	lib	.	chkfile	import	load	\\n	kmf	=	load	/;"	m	class:load_kmf.fake_kmf
__init__	data/bpe_corpus_raw/valid.py	/^utf-8	def	testCallbackReCoiterate	(	self	)	:	\\n	    	calls	=	[	]	\\n	\\n	\\n	class	FakeCall	:	\\/;"	m	class:testCallbackReCoiterate.FakeCall
__init__	data/data_raw/test.py	/^utf-8	def	__init__	(	self	)	:	\\n	    	self	.	o0	=	self	.	_get_objects	(	ignore	=	(	inspect	.	cu/;"	f
__init__	data/data_raw/test.py	/^utf-8	def	__init__	(	self	,	arg	)	:	\\n	    	parts	=	arg	.	split	(	' '	)	\\n	self	.	type	=	' '	./;"	f
__init__	data/data_raw/test.py	/^utf-8	def	__init__	(	self	,	args	)	:	\\n	    	self	.	learning_rate_fct	=	None	\\n	assert	args	.	/;"	f
__init__	data/data_raw/test.py	/^utf-8	def	__init__	(	self	,	callbacks	,	threshold	=	1024	*	256	)	:	\\n	    	self	.	_callbacks	=	/;"	f
__init__	data/data_raw/test.py	/^utf-8	def	__init__	(	self	,	columns	,	refcolumns	,	name	=	None	,	onupdate	=	None	,	ondelete	=	\\/;"	f
__init__	data/data_raw/test.py	/^utf-8	def	__init__	(	self	,	elf_file_path	,	addr2line_path	,	callback	,	inlines	=	False	,	\\n	ma/;"	f
__init__	data/data_raw/test.py	/^utf-8	def	__init__	(	self	,	encoding	=	None	,	object_hook	=	None	)	:	\\n	    	self	.	encoding	=	/;"	f
__init__	data/data_raw/test.py	/^utf-8	def	__init__	(	self	,	fin	=	0	,	rsv1	=	0	,	rsv2	=	0	,	rsv3	=	0	,	opcode	=	OPCODE_TEXT	,	ma/;"	f
__init__	data/data_raw/test.py	/^utf-8	def	__init__	(	self	,	hass	,	name	,	ccb	:	ComfoConnectBridge	,	sensor_type	)	->	None	:	\\n/;"	f
__init__	data/data_raw/test.py	/^utf-8	def	__init__	(	self	,	num_buckets	=	1024	,	own_hash	=	None	)	:	\\n	    	self	.	dict	=	[	]	/;"	f
__init__	data/data_raw/test.py	/^utf-8	def	__init__	(	self	,	opcode	,	data	=	b''	,	encoding	=	'utf-8'	)	:	\\n	    	self	.	opcode	/;"	f
__init__	data/data_raw/test.py	/^utf-8	def	__init__	(	self	,	pattern	,	flags	=	0	)	:	\\n	    	super	(	Regex	,	self	)	.	__init__	(/;"	f
__init__	data/data_raw/test.py	/^utf-8	def	__init__	(	self	,	pkey	)	:	\\n	    	self	.	_key	=	pkey	\\n		$/;"	f
__init__	data/data_raw/test.py	/^utf-8	def	__init__	(	self	,	rootnode	)	:	\\n	    	self	.	root	=	rootnode	\\n	self	.	disable	=	0	/;"	f
__init__	data/data_raw/test.py	/^utf-8	def	__init__	(	self	,	seed	=	DEFAULT_SEED	)	:	\\n	    	perm	=	self	.	_perm	=	[	0	]	*	256	\\/;"	f
__init__	data/data_raw/test.py	/^utf-8	def	__init__	(	self	,	server	,	params	)	:	\\n	    	super	(	RedisCache	,	self	)	.	__init__	/;"	f
__init__	data/data_raw/test.py	/^utf-8	def	__init__	(	self	,	server	,	spider	,	key	,	serializer	=	None	)	:	\\n	    	if	serializer/;"	f
__init__	data/data_raw/test.py	/^utf-8	def	__init__	(	self	,	validated	,	base_schema	)	:	\\n	    	self	.	validated	=	validated	\\/;"	f
__init__	data/data_raw/test.py	/^utf-8	def	__init__	(	self	,	value	)	:	\\n	    	if	len	(	Byte	.	_bytes	)	==	256	:	\\n	        	ra/;"	f
__init__	data/data_raw/train.py	/^utf-8	@	abc	.	abstractmethod	\\n	def	__init__	(	self	,	*	args	,	**	kwargs	)	:	\\n	$/;"	f
__init__	data/data_raw/train.py	/^utf-8	@	keyword_only	\\n	def	__init__	(	self	,	featuresCol	=	'features'	,	labelCol	=	'label'	,	p/;"	f
__init__	data/data_raw/train.py	/^utf-8	@	route	(	'\/return\/by\/accept\/class'	)	\\n	def	test_return_class_content_by_accepts	(	s/;"	m	class:test_return_class_content_by_accepts.TestReturn
__init__	data/data_raw/train.py	/^utf-8	@	with_phil	\\n	def	__init__	(	self	,	oid	)	:	\\n	    	self	.	_id	=	oid	\\n		$/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	)	:	\\n	    	this	=	_OFDPA_python	.	new_ofdpaOamRemoteMpConfig_t	(	)	\\/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	*	args	,	**	kwds	)	:	\\n	    	if	len	(	args	)	>	1	:	\\n	        	rai/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	*	enums	,	**	kw	)	:	\\n	    	kw	.	pop	(	'strict'	,	None	)	\\n	valida/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	P	,	pobs	,	pi	=	None	,	dt_model	=	'1 step'	)	:	\\n	    	_MSM	.	__ini/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	aws_access_key_id	=	None	,	aws_secret_access_key	=	None	,	\\n	is_sec/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	completekey	=	'tab'	,	stdin	=	None	,	stdout	=	None	)	:	\\n	    	if	s/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	connection_manager	,	database_dir	)	:	\\n	    	self	.	__mgr	=	connec/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	connection_string	)	:	\\n	    	pass	\\n		$/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	controller	,	traverser	)	:	\\n	    	self	.	controller	=	x	=	controll/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	database	)	:	\\n	    	Loggable	.	__init__	(	self	)	\\n	self	.	_param/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	epsilon	=	0.05	,	gamma	=	0.8	,	alpha	=	0.2	,	numTraining	=	0	,	**	ar/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	fallback	=	None	,	ip	=	None	,	blue	=	None	,	cell	=	None	,	wifi	=	Non/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	file_path	)	:	\\n	    	self	.	file_path	=	file_path	\\n	self	.	_file/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	filename	,	init_args	,	state	)	:	\\n	    	self	.	filename	=	filename/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	identification	,	serialport_settings	,	logger	,	sleeptime	,	\\n	queu/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	item	=	None	,	verbosity	=	0	,	**	kwargs	)	:	\\n	    	super	(	Info	,	/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	loc_key	,	assignblks	)	:	\\n	    	assert	isinstance	(	loc_key	,	m2_e/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	message	,	source_file	=	None	,	line_number	=	None	,	send_email	=	Tru/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	mode	,	name	,	test	=	None	,	params	=	None	)	:	\\n	    	self	.	mode	=/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	n_classes	,	label_name	=	None	,	weight_column_name	=	None	,	\\n	enab/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	n_tasks	,	n_features	,	fit_transformers	=	[	]	,	n_evals	=	1	,	\\n	ba/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	name	,	attrs	=	None	)	:	\\n	    	self	.	_attrs	=	attrs	or	{	}	\\n	se/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	name	,	bytez	)	:	\\n	    	FdtProperty	.	__init__	(	self	,	name	)	\\n/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	name	,	ident	)	:	\\n	    	self	.	name	=	name	\\n	self	.	ident	=	iden/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	name	,	level	=	NOTSET	)	:	\\n	    	Filterer	.	__init__	(	self	)	\\n	/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	name	,	light	,	model	,	unique_id	)	:	\\n	    	super	(	)	.	__init__	(/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	name	,	root	=	None	,	onlyin	=	None	,	ts	=	None	,	verbose	=	False	)	:/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	normal_button	=	None	,	toggle_widget_alist	=	[	]	)	:	\\n	    	PangoB/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	obj	)	:	\\n	    	obj	.	addProperty	(	'App::PropertyVector'	,	'p1'	,	/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	on_test	)	:	\\n	    	super	(	TestByTestResult	,	self	)	.	__init__	(	/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	oui	=	None	,	GetFile	=	False	)	:	\\n	    	aircrackOUI	=	None	\\n	sel/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	param	,	parent	=	None	)	:	\\n	    	dictkey	=	param	.	_namespace	\\n	/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	params	,	name	,	destination_dir	,	install_prefix	)	:	\\n	    	self	./;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	parent	,	scales	,	phases	,	icases_fringe	,	icases_disp	,	\\n	icases_/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	parent	,	vec	)	:	\\n	    	self	.	_num_generators	=	len	(	parent	.	_l/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	path	=	None	,	include_egg	=	False	)	:	\\n	    	if	path	is	None	:	\\n/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	pubkey	)	:	\\n	    	self	.	_pubkey	=	pubkey	\\n		$/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	rng	,	input	,	n_in	,	n_out	,	W	=	None	,	b	=	None	,	activation	=	T	.	/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	scores	=	None	,	classes	=	None	)	:	\\n	    	if	scores	is	not	None	an/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	section	,	xunit	=	True	,	engine	=	'phantomjs'	,	url	=	None	)	:	\\n	 /;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	shutit_global_object	)	:	\\n	    	assert	self	.	only_one	is	None	\\n/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	status_code	=	None	,	text	=	None	,	url	=	None	,	request	=	None	,	\\n/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	user	,	pw	,	authurl	,	*	args	,	**	kwargs	)	:	\\n	    	super	(	NTLMCo/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	web_var_val	=	None	)	:	\\n	    	ReductionWrapper	.	__init__	(	self	,/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	width	,	significand	,	min	=	None	,	repeat	=	None	)	:	\\n	    	self	./;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	x	,	y	,	width	,	height	,	font	=	None	,	textColor	=	None	,	\\n	button/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	__init__	(	self	,	x	,	y	=	None	,	z	=	None	,	srid	=	None	)	:	\\n	    	if	isinstance	(	x/;"	f
__init__	data/data_raw/train.py	/^utf-8	def	host_addrinfo	(	host	=	None	,	socket_family	=	None	,	ipv4_multicast	=	False	)	:	\\n	\\/;"	m	class:host_addrinfo.AddrInfo
__init__	data/data_raw/train.py	/^utf-8	def	testSignResumable	(	self	)	:	\\n	    	expected	=	sigs	.	TEST_SIGN_RESUMABLE	\\n	\\n	\\/;"	m	class:testSignResumable.MockLogger
__init__	data/data_raw/valid.py	/^utf-8	@	keyword_only	\\n	def	__init__	(	self	,	featuresCol	=	'features'	,	labelCol	=	'label'	,	p/;"	f
__init__	data/data_raw/valid.py	/^utf-8	@	use_file_name_or_kwds	\\n	def	__init__	(	self	,	grid	,	method	=	'D8'	,	flow_equation	=	'/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	)	:	\\n	    	if	not	self	.	is_configured	(	)	:	\\n	        	self	.	set/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	)	:	\\n	    	self	.	eps	=	0.02	\\n	self	.	alpha	=	0.005	\\n	self	.	gam/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	)	:	\\n	    	self	.	issues	=	tree	(	)	\\n		$/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	)	:	\\n	    	self	.	table	=	{	'AG'	:	{	'name'	:	'\\u767d\\u94f6'	,	'un/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	)	:	\\n	    	this	=	_OFDPA_python	.	new_ofdpaOamLbStatus_t	(	)	\\n	try/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	)	:	\\n	    	this	=	_OFDPA_python	.	new_ofdpaOamOdDmSnapshot_t	(	)	\\n/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	*	args	,	**	kwargs	)	:	\\n	    	name	=	kwargs	.	get	(	'name'	,	type	/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	*	args	,	**	kwargs	)	:	\\n	    	self	.	bus	=	kwargs	.	pop	(	'bus'	,	/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	*	clauses	,	**	kw	)	:	\\n	    	clauses	=	[	_literal_as_binds	(	c	)	f/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	*	elements	,	**	kw	)	:	\\n	    	ColumnCollectionConstraint	.	__init_/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	**	kwargs	)	:	\\n	    	self	.	_entries	=	{	}	\\n	self	.	_lastEntries/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	addr	,	size	,	perms	,	filename	,	offset	=	0	,	overlay	=	None	,	**	\\/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	ads_hub	,	ads_var	,	ads_type	,	name	,	unit_of_measurement	,	\\n	fact/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	algo_name	,	isolated_basedir	)	:	\\n	    	super	(	SavedState	,	self	/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	alias	,	*	args	)	:	\\n	    	AliasBase	.	__init__	(	self	,	*	args	)	\\/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	arg	=	None	,	color	=	None	,	colorsrc	=	None	,	family	=	None	,	\\n	fa/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	args	)	:	\\n	    	Monitor	.	__init__	(	self	,	args	)	\\n	if	args	.	h/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	cache_dir	,	config	,	folder	,	layout	,	index	)	:	\\n	    	self	.	fol/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	captcha_break_time	=	1	,	headers	=	None	,	**	kwargs	)	:	\\n	    	ass/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	check_name	,	object_name	,	object_limit	,	warning_func	=	None	)	:	\\/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	checker	=	None	,	verbose	=	None	,	optionflags	=	0	)	:	\\n	    	self	/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	cid	=	None	,	uid	=	None	)	:	\\n	    	self	.	cid	=	cid	\\n	self	.	nam/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	client	,	**	kwargs	)	:	\\n	    	self	.	transactions	=	{	}	\\n	super	/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	command	,	working_dir	=	None	,	capture_stderr	=	True	,	env	=	None	)	/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	config	)	:	\\n	    	self	.	config	=	config	\\n	today	=	datetime	.	da/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	config	,	verbose	=	False	)	:	\\n	    	super	(	OCServiceAccountSecret/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	connection_class	=	Connection	,	max_connections	=	None	,	**	\\n	conn/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	console	,	gameName	)	:	\\n	    	self	.	console	=	console	\\n	self	.	/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	contents	,	source	)	:	\\n	    	if	not	isinstance	(	source	,	StringSo/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	control_points	)	:	\\n	    	_o	=	len	(	control_points	)	\\n	self	.	_/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	controller	,	id	,	who	,	keeplog	=	None	)	:	\\n	    	WorkerProcess	.	/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	data	)	:	\\n	    	CharStream	.	__init__	(	self	)	\\n	self	.	strdata	/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	data	=	None	,	url	=	None	,	filename	=	None	,	embed	=	None	,	mimetype/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	default_settings	=	None	,	update_settings	=	None	,	\\n	input_encodin/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	device	)	:	\\n	    	import	lakeside	\\n	self	.	_temp	=	None	\\n	self/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	directory	,	loader_factory	,	path_filter	=	lambda	x	:	True	)	:	\\n	 /;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	executable_path	,	port	=	0	)	:	\\n	    	self	.	port	=	port	\\n	self	/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	expr	,	path	,	pos	=	None	)	:	\\n	    	if	not	isinstance	(	pos	,	base/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	field	)	:	\\n	    	self	.	specials	=	'()<>@,:;."[]'	\\n	self	.	pos	=/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	filename	,	key_column_index	=	TextFileIndex	.	WHOLE_LINE	,	\\n	value/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	filename	,	mode	=	'r'	,	buffering	=	None	,	compresslevel	=	9	)	:	\\n/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	fileobj	,	min_article_character	=	200	,	processes	=	None	,	\\n	lemma/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	filepath	)	:	\\n	    	self	.	filepath	=	filepath	\\n	self	.	hosts	=	/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	frame_obj	)	:	\\n	    	super	(	FrameIterator	,	self	)	.	__init__	(	)/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	full_result	=	False	,	**	mapper_options	)	:	\\n	    	import	routes	\\/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	functions	,	max_simultaneous_procs	=	20	)	:	\\n	    	if	not	isinstan/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	goal	,	gen	,	pruner	,	es	,	index	=	slice	(	None	)	,	weights	=	None	,/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	gross_returns	,	net_returns	,	costs	,	capital	,	\\n	weighted_flag	=	/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	images	,	labels	,	fake_data	=	False	,	one_hot	=	False	,	dtype	=	\\n	/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	input_api	,	output_api	,	paths	)	:	\\n	    	self	.	input_api	=	input/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	input_dim	,	K	,	variance	=	1.0	)	:	\\n	    	self	.	input_dim	=	input/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	ishttps	,	host	,	server_context	,	tap_context	=	None	,	port	=	80	,	\\/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	lambdaa	,	sigma2	,	lbl	,	kern	,	x_shape	)	:	\\n	    	self	.	datanum	/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	loc	,	scale	,	validate_args	=	True	,	allow_nan_stats	=	False	,	\\n	n/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	logits	=	None	,	probs	=	None	,	dtype	=	dtypes	.	int32	,	\\n	validate/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	mediator	=	None	)	:	\\n	    	super	(	FileEntryLister	,	self	)	.	__in/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	method	,	url	,	params	,	body	,	headers	,	timeout	,	stream	,	\\n	foll/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	methodName	)	:	\\n	    	unittest	.	TestCase	.	__init__	(	self	,	meth/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	min	=	0	,	max	=	64	*	1024	)	:	\\n	    	self	.	min	=	min	\\n	self	.	m/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	model_shards_paths	:	List	[	str	]	,	calls_shards_paths	:	List	[	\\n	/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	module_spec	,	check	=	True	)	:	\\n	    	if	type	(	module_spec	)	!=	d/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	name	,	**	kwargs	)	:	\\n	    	XODEfile	.	__init__	(	self	,	name	,	**/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	name	,	eight	,	sensor	,	units	)	:	\\n	    	super	(	)	.	__init__	(	ei/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	name	,	image_set	,	root_path	,	dataset_path	,	result_path	=	None	)	:/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	names	)	:	\\n	    	if	not	isinstance	(	names	,	dict	)	:	\\n	        /;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	namespaceHTMLElements	)	:	\\n	    	if	namespaceHTMLElements	:	\\n	  /;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	numPoles	=	1	,	markov	=	True	,	verbose	=	False	,	\\n	extraObservatio/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	operatorClass	,	operator_args	=	None	,	operator_kwargs	=	None	,	\\n	/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	opt	)	:	\\n	    	BaseModel	.	__init__	(	self	,	opt	)	\\n	self	.	loss/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	option	,	dbstate	,	uistate	,	track	,	override	)	:	\\n	    	Gtk	.	Box/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	outputs	)	:	\\n	    	if	not	isinstance	(	outputs	,	dict	)	:	\\n	    /;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	parent	,	title	,	text	,	modal	=	True	)	:	\\n	    	Toplevel	.	__init_/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	parent	=	None	)	:	\\n	    	QtGui	.	QFrame	.	__init__	(	self	,	parent/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	path	,	delimiter	=	None	,	mode	=	'r'	,	buffering	=	-	1	,	encoding	=	/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	path	,	fext	=	'.nii.gz'	)	:	\\n	    	self	.	_fext	=	fext	\\n	rpath	=/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	policy_config	,	verbose	=	False	)	:	\\n	    	super	(	PolicyUser	,	se/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	prefix	=	None	)	:	\\n	    	drake	.	cxx	.	LibraryConfiguration	.	__in/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	rank	,	points	,	problem_inputs	)	:	\\n	    	self	.	rank	=	rank	\\n	s/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	reader	,	writer	,	buffer_size	=	DEFAULT_BUFFER_SIZE	,	\\n	max_buffer/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	regexp	=	'.*'	,	mutability	=	'both'	,	depth	=	'both'	,	fallback	=	\\/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	root_path	)	:	\\n	    	super	(	GitDB	,	self	)	.	__init__	(	root_path/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	sample	=	None	)	:	\\n	    	self	.	tmessage	=	'Generic task, should b/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	sasl_client_factory	,	mechanism	,	trans	)	:	\\n	    	self	.	_trans	=/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	sess	,	bad_init_action	=	None	,	bad_run_start_action	=	None	,	\\n	ba/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	session	,	networkinterface	)	:	\\n	    	super	(	)	.	__init__	(	)	\\n/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	sqltext	,	name	=	None	,	deferrable	=	None	,	initially	=	None	,	\\n	t/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	statement	,	store	,	fields	=	None	,	schema	=	None	)	:	\\n	    	super/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	status	,	arch	,	cpu	,	soc	,	vendor	,	board_name	,	target	,	options	\\/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	stemmer_selected	=	PORTER_STEMMER	)	:	\\n	    	self	.	stemmer	=	None/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	subject	)	:	\\n	    	self	.	_subject	=	subject	\\n		$/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	task	=	None	,	**	kwargs	)	:	\\n	    	self	.	task	=	task	\\n	malfind	/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	testcase	,	test_config	,	_	)	:	\\n	    	self	.	testcase	=	testcase	\\/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	text_edit	)	:	\\n	    	assert	isinstance	(	text_edit	,	(	QtGui	.	QTe/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	transport	=	None	,	channel	=	None	,	credentials	=	None	,	\\n	client_/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	twilio	)	:	\\n	    	super	(	Fax	,	self	)	.	__init__	(	twilio	)	\\n	s/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	types	,	bounds	)	:	\\n	    	super	(	)	.	__init__	(	types	=	types	,	b/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	version	,	workspace_sid	)	:	\\n	    	super	(	EventList	,	self	)	.	__/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	vxvv	=	[	1.0	,	0.0	,	1.0	]	,	vo	=	220.0	,	ro	=	8.0	,	zo	=	0.025	,	\\/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	world	,	cx	,	cz	,	biomeID	=	None	)	:	\\n	    	self	.	dimension	=	wor/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	x	,	y	=	None	,	z	=	None	,	srid	=	None	)	:	\\n	    	if	isinstance	(	x/;"	f
__init__	data/data_raw/valid.py	/^utf-8	def	load_kmf	(	chkfile	)	:	\\n	    	from	pyscf	.	lib	.	chkfile	import	load	\\n	kmf	=	load	/;"	m	class:load_kmf.fake_kmf
__init__	data/data_raw/valid.py	/^utf-8	def	testCallbackReCoiterate	(	self	)	:	\\n	    	calls	=	[	]	\\n	\\n	\\n	class	FakeCall	:	\\/;"	m	class:testCallbackReCoiterate.FakeCall
__init__	models/seq2seq.py	/^    def __init__($/;"	m	class:Seq2SeqDecoder
__init__	models/seq2seq.py	/^    def __init__($/;"	m	class:Seq2SeqEncoder
__init___2	data/bpe_corpus_raw/test.py	/^utf-8	@	__init__	.	register	(	object	,	int	,	int	,	str	,	str	,	int	,	int	,	str	,	int	)	\\n	def	_/;"	f
__init___2	data/data_raw/test.py	/^utf-8	@	__init__	.	register	(	object	,	int	,	int	,	str	,	str	,	int	,	int	,	str	,	int	)	\\n	def	_/;"	f
__inject_auth	data/bpe_corpus_raw/valid.py	/^utf-8	def	__inject_auth	(	self	,	keyword_args_to_modify	)	:	\\n	    	if	not	self	.	__auth_env	:	/;"	f
__inject_auth	data/data_raw/valid.py	/^utf-8	def	__inject_auth	(	self	,	keyword_args_to_modify	)	:	\\n	    	if	not	self	.	__auth_env	:	/;"	f
__invariant__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__invariant__	(	self	)	:	\\n	    	if	self	.	maximum_retry_count	is	not	None	:	\\n	    /;"	f
__invariant__	data/data_raw/valid.py	/^utf-8	def	__invariant__	(	self	)	:	\\n	    	if	self	.	maximum_retry_count	is	not	None	:	\\n	    /;"	f
__invert__	data/bpe_corpus_raw/train.py	/^utf-8	def	__invert__	(	self	)	:	\\n	    	return	NotAny	(	self	)	\\n		$/;"	f
__invert__	data/data_raw/train.py	/^utf-8	def	__invert__	(	self	)	:	\\n	    	return	NotAny	(	self	)	\\n		$/;"	f
__iter__	data/bpe_corpus_raw/train.py	/^utf-8	def	__iter__	(	self	)	:	\\n	    	seen	=	{	}	\\n	for	item	in	self	.	entries	:	\\n	        	/;"	f
__iter__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__iter__	(	self	)	:	\\n	    	for	x	in	self	.	config	.	__iter__	(	)	:	\\n	        	yiel/;"	f
__iter__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__iter__	(	self	)	:	\\n	    	return	iter	(	(	self	.	id	,	self	.	data	)	)	\\n		$/;"	f
__iter__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__iter__	(	self	)	:	\\n	    	return	iter	(	self	.	converters	)	\\n		$/;"	f
__iter__	data/data_raw/train.py	/^utf-8	def	__iter__	(	self	)	:	\\n	    	seen	=	{	}	\\n	for	item	in	self	.	entries	:	\\n	        	/;"	f
__iter__	data/data_raw/valid.py	/^utf-8	def	__iter__	(	self	)	:	\\n	    	for	x	in	self	.	config	.	__iter__	(	)	:	\\n	        	yiel/;"	f
__iter__	data/data_raw/valid.py	/^utf-8	def	__iter__	(	self	)	:	\\n	    	return	iter	(	(	self	.	id	,	self	.	data	)	)	\\n		$/;"	f
__iter__	data/data_raw/valid.py	/^utf-8	def	__iter__	(	self	)	:	\\n	    	return	iter	(	self	.	converters	)	\\n		$/;"	f
__le__	data/bpe_corpus_raw/train.py	/^utf-8	def	__le__	(	self	,	other	)	:	\\n	    	return	self	.	operate	(	le	,	other	)	\\n		$/;"	f
__le__	data/data_raw/train.py	/^utf-8	def	__le__	(	self	,	other	)	:	\\n	    	return	self	.	operate	(	le	,	other	)	\\n		$/;"	f
__len__	data/bpe_corpus_raw/test.py	/^utf-8	def	__len__	(	self	)	:	\\n	    	i	=	0	\\n	for	cookie	in	self	:	\\n	        	i	=	i	+	1	\\n	/;"	f
__len__	data/bpe_corpus_raw/train.py	/^utf-8	def	__len__	(	self	)	:	\\n	    	return	len	(	self	.	data	)	\\n		$/;"	f
__len__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__len__	(	self	)	:	\\n	    	return	len	(	self	.	_graphs	)	\\n		$/;"	f
__len__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__len__	(	self	)	:	\\n	    	return	len	(	self	.	_values	)	\\n		$/;"	f
__len__	data/data_raw/test.py	/^utf-8	def	__len__	(	self	)	:	\\n	    	i	=	0	\\n	for	cookie	in	self	:	\\n	        	i	=	i	+	1	\\n	/;"	f
__len__	data/data_raw/train.py	/^utf-8	def	__len__	(	self	)	:	\\n	    	return	len	(	self	.	data	)	\\n		$/;"	f
__len__	data/data_raw/valid.py	/^utf-8	def	__len__	(	self	)	:	\\n	    	return	len	(	self	.	_graphs	)	\\n		$/;"	f
__len__	data/data_raw/valid.py	/^utf-8	def	__len__	(	self	)	:	\\n	    	return	len	(	self	.	_values	)	\\n		$/;"	f
__lock_location	data/bpe_corpus_raw/train.py	/^utf-8	def	__lock_location	(	self	)	->	None	:	\\n	    	if	not	self	.	_is_active	:	\\n	        	if/;"	f
__lock_location	data/data_raw/train.py	/^utf-8	def	__lock_location	(	self	)	->	None	:	\\n	    	if	not	self	.	_is_active	:	\\n	        	if/;"	f
__lt__	data/bpe_corpus_raw/train.py	/^utf-8	def	__lt__	(	self	,	other	)	:	\\n	    	other	=	as_dimension	(	other	)	\\n	if	self	.	_value/;"	f
__lt__	data/data_raw/train.py	/^utf-8	def	__lt__	(	self	,	other	)	:	\\n	    	other	=	as_dimension	(	other	)	\\n	if	self	.	_value/;"	f
__mul__	data/bpe_corpus_raw/train.py	/^utf-8	def	__mul__	(	self	,	other	)	:	\\n	    	if	not	math_tools	.	is_integer	(	other	)	:	\\n	   /;"	f
__mul__	data/data_raw/train.py	/^utf-8	def	__mul__	(	self	,	other	)	:	\\n	    	if	not	math_tools	.	is_integer	(	other	)	:	\\n	   /;"	f
__ne__	data/bpe_corpus_raw/test.py	/^utf-8	def	__ne__	(	self	,	other	)	:	\\n	    	return	not	self	==	other	\\n		$/;"	f
__ne__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__ne__	(	self	,	other	)	:	\\n	    	return	not	self	==	other	\\n		$/;"	f
__ne__	data/data_raw/test.py	/^utf-8	def	__ne__	(	self	,	other	)	:	\\n	    	return	not	self	==	other	\\n		$/;"	f
__ne__	data/data_raw/valid.py	/^utf-8	def	__ne__	(	self	,	other	)	:	\\n	    	return	not	self	==	other	\\n		$/;"	f
__new__	data/bpe_corpus_raw/train.py	/^utf-8	def	__new__	(	cls	,	tracker_url	,	port	,	*	args	,	**	kwargs	)	:	\\n	    	if	cls	is	Announc/;"	f
__new__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__new__	(	_cls	,	manufacturer	,	data	)	:	\\n	    	sentence_type	=	data	[	0	]	or	data	[/;"	f
__new__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__new__	(	cls	)	:	\\n	    	builder	=	Builder	.	new_from_file	(	'UlauncherWindow'	)	\\n/;"	f
__new__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__new__	(	cls	,	mode	,	predictions	=	None	,	loss	=	None	,	train_op	=	None	,	\\n	eval_m/;"	f
__new__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__new__	(	cls	,	numerator	=	0	,	denominator	=	None	)	:	\\n	    	self	=	super	(	Fractio/;"	f
__new__	data/data_raw/train.py	/^utf-8	def	__new__	(	cls	,	tracker_url	,	port	,	*	args	,	**	kwargs	)	:	\\n	    	if	cls	is	Announc/;"	f
__new__	data/data_raw/valid.py	/^utf-8	def	__new__	(	_cls	,	manufacturer	,	data	)	:	\\n	    	sentence_type	=	data	[	0	]	or	data	[/;"	f
__new__	data/data_raw/valid.py	/^utf-8	def	__new__	(	cls	)	:	\\n	    	builder	=	Builder	.	new_from_file	(	'UlauncherWindow'	)	\\n/;"	f
__new__	data/data_raw/valid.py	/^utf-8	def	__new__	(	cls	,	mode	,	predictions	=	None	,	loss	=	None	,	train_op	=	None	,	\\n	eval_m/;"	f
__new__	data/data_raw/valid.py	/^utf-8	def	__new__	(	cls	,	numerator	=	0	,	denominator	=	None	)	:	\\n	    	self	=	super	(	Fractio/;"	f
__next__	data/bpe_corpus_raw/train.py	/^utf-8	def	__next__	(	self	)	:	\\n	    	if	not	self	.	tarfile	.	_loaded	:	\\n	        	tarinfo	=	/;"	f
__next__	data/data_raw/train.py	/^utf-8	def	__next__	(	self	)	:	\\n	    	if	not	self	.	tarfile	.	_loaded	:	\\n	        	tarinfo	=	/;"	f
__nonzero__	data/bpe_corpus_raw/train.py	/^utf-8	def	__nonzero__	(	self	)	:	\\n	    	return	bool	(	len	(	self	.	traces	)	)	\\n		$/;"	f
__nonzero__	data/data_raw/train.py	/^utf-8	def	__nonzero__	(	self	)	:	\\n	    	return	bool	(	len	(	self	.	traces	)	)	\\n		$/;"	f
__norm_value	data/bpe_corpus_raw/train.py	/^utf-8	def	__norm_value	(	current_value	,	init_value	,	lower_bound	,	upper_bound	,	\\n	epsilon	=	/;"	f
__norm_value	data/data_raw/train.py	/^utf-8	def	__norm_value	(	current_value	,	init_value	,	lower_bound	,	upper_bound	,	\\n	epsilon	=	/;"	f
__or__	data/bpe_corpus_raw/valid.py	/^utf-8	@	util	.	deprecated	(	'0.9'	,	\\n	'The :meth:`.ClauseElement.__or__` method is deprecated /;"	f
__or__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__or__	(	self	,	other	:	'BitVec'	)	->	'BitVec'	:	\\n	    	if	isinstance	(	other	,	BitV/;"	f
__or__	data/data_raw/valid.py	/^utf-8	@	util	.	deprecated	(	'0.9'	,	\\n	'The :meth:`.ClauseElement.__or__` method is deprecated /;"	f
__or__	data/data_raw/valid.py	/^utf-8	def	__or__	(	self	,	other	:	'BitVec'	)	->	'BitVec'	:	\\n	    	if	isinstance	(	other	,	BitV/;"	f
__parse_element	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	__parse_element	(	cls	,	element	,	this_node	)	:	\\n	    	this_node	./;"	f
__parse_element	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	__parse_element	(	cls	,	element	,	this_node	)	:	\\n	    	this_node	./;"	f
__parse_kwargs	data/bpe_corpus_raw/train.py	/^utf-8	def	__parse_kwargs	(	func	)	:	\\n	\\n	    	def	wrapper	(	self	,	verb	,	request	,	**	kwargs/;"	f
__parse_kwargs	data/data_raw/train.py	/^utf-8	def	__parse_kwargs	(	func	)	:	\\n	\\n	    	def	wrapper	(	self	,	verb	,	request	,	**	kwargs/;"	f
__print_table	data/bpe_corpus_raw/train.py	/^utf-8	def	__print_table	(	data	,	headers	,	show_header	=	False	)	:	\\n	\\n	    	def	get_max_size/;"	f
__print_table	data/data_raw/train.py	/^utf-8	def	__print_table	(	data	,	headers	,	show_header	=	False	)	:	\\n	\\n	    	def	get_max_size/;"	f
__radd__	data/bpe_corpus_raw/train.py	/^utf-8	def	__radd__	(	self	,	values	)	:	\\n	    	out	=	list	(	values	)	\\n	out	.	extend	(	list	(	/;"	f
__radd__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__radd__	(	self	,	y	)	:	\\n	    	return	0.0	\\n		$/;"	f
__radd__	data/data_raw/train.py	/^utf-8	def	__radd__	(	self	,	values	)	:	\\n	    	out	=	list	(	values	)	\\n	out	.	extend	(	list	(	/;"	f
__radd__	data/data_raw/valid.py	/^utf-8	def	__radd__	(	self	,	y	)	:	\\n	    	return	0.0	\\n		$/;"	f
__repr__	data/bpe_corpus_raw/test.py	/^utf-8	def	__repr__	(	self	)	:	\\n	    	output	=	[	]	\\n	for	dist	,	adjs	in	self	.	adjacency_list/;"	f
__repr__	data/bpe_corpus_raw/train.py	/^utf-8	def	__repr__	(	self	)	:	\\n	    	quoted_table	=	self	.	tables	[	'quoted_statements'	]	\\n	/;"	f
__repr__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__repr__	(	self	)	:	\\n	    	if	self	.	_baseclass	is	np	.	ndarray	:	\\n	        	name	/;"	f
__repr__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__repr__	(	self	)	:	\\n	    	return	'%s(%s, %r)'	%	(	self	.	__class__	.	__name__	,	typ/;"	f
__repr__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__repr__	(	self	)	:	\\n	    	return	'<Twilio.Messaging.V1.ParticipantPage>'	\\n		$/;"	f
__repr__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__repr__	(	self	)	:	\\n	    	return	'<Twilio.Preview.BulkExports.ExportPage>'	\\n		$/;"	f
__repr__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__repr__	(	self	)	:	\\n	    	return	'<Twilio.Verify.V2.VerificationPage>'	\\n		$/;"	f
__repr__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__repr__	(	self	)	:	\\n	    	return	self	.	to_str	(	)	\\n		$/;"	f
__repr__	data/bpe_corpus_raw/valid.py	/^utf-8	def	testCallbackReCoiterate	(	self	)	:	\\n	    	calls	=	[	]	\\n	\\n	\\n	class	FakeCall	:	\\/;"	f	member:testCallbackReCoiterate.FakeCall.__init__	file:
__repr__	data/data_raw/test.py	/^utf-8	def	__repr__	(	self	)	:	\\n	    	output	=	[	]	\\n	for	dist	,	adjs	in	self	.	adjacency_list/;"	f
__repr__	data/data_raw/train.py	/^utf-8	def	__repr__	(	self	)	:	\\n	    	quoted_table	=	self	.	tables	[	'quoted_statements'	]	\\n	/;"	f
__repr__	data/data_raw/valid.py	/^utf-8	def	__repr__	(	self	)	:	\\n	    	if	self	.	_baseclass	is	np	.	ndarray	:	\\n	        	name	/;"	f
__repr__	data/data_raw/valid.py	/^utf-8	def	__repr__	(	self	)	:	\\n	    	return	'%s(%s, %r)'	%	(	self	.	__class__	.	__name__	,	typ/;"	f
__repr__	data/data_raw/valid.py	/^utf-8	def	__repr__	(	self	)	:	\\n	    	return	'<Twilio.Messaging.V1.ParticipantPage>'	\\n		$/;"	f
__repr__	data/data_raw/valid.py	/^utf-8	def	__repr__	(	self	)	:	\\n	    	return	'<Twilio.Preview.BulkExports.ExportPage>'	\\n		$/;"	f
__repr__	data/data_raw/valid.py	/^utf-8	def	__repr__	(	self	)	:	\\n	    	return	'<Twilio.Verify.V2.VerificationPage>'	\\n		$/;"	f
__repr__	data/data_raw/valid.py	/^utf-8	def	__repr__	(	self	)	:	\\n	    	return	self	.	to_str	(	)	\\n		$/;"	f
__repr__	data/data_raw/valid.py	/^utf-8	def	testCallbackReCoiterate	(	self	)	:	\\n	    	calls	=	[	]	\\n	\\n	\\n	class	FakeCall	:	\\/;"	f	member:testCallbackReCoiterate.FakeCall.__init__	file:
__reversed__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__reversed__	(	self	)	:	\\n	    	return	iter	(	tuple	(	self	.	_queue	)	)	\\n		$/;"	f
__reversed__	data/data_raw/valid.py	/^utf-8	def	__reversed__	(	self	)	:	\\n	    	return	iter	(	tuple	(	self	.	_queue	)	)	\\n		$/;"	f
__rewriteproxy	data/bpe_corpus_raw/valid.py	/^utf-8	def	__rewriteproxy	(	self	,	header	)	:	\\n	    	host	,	endpt	=	None	,	None	\\n	hdrs	=	head/;"	f
__rewriteproxy	data/data_raw/valid.py	/^utf-8	def	__rewriteproxy	(	self	,	header	)	:	\\n	    	host	,	endpt	=	None	,	None	\\n	hdrs	=	head/;"	f
__rrshift__	data/bpe_corpus_raw/train.py	/^utf-8	@	abstractmethod	\\n	def	__rrshift__	(	self	,	other	)	:	\\n	    	raise	NotImplementedError/;"	f
__rrshift__	data/data_raw/train.py	/^utf-8	@	abstractmethod	\\n	def	__rrshift__	(	self	,	other	)	:	\\n	    	raise	NotImplementedError/;"	f
__rsub__	data/bpe_corpus_raw/train.py	/^utf-8	def	__rsub__	(	self	,	other	)	:	\\n	    	if	isinstance	(	other	,	basestring	)	:	\\n	      /;"	f
__rsub__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__rsub__	(	self	,	other	)	:	\\n	    	if	isinstance	(	other	,	basestring	)	:	\\n	      /;"	f
__rsub__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__rsub__	(	self	,	other	)	:	\\n	    	return	-	self	+	other	\\n		$/;"	f
__rsub__	data/data_raw/train.py	/^utf-8	def	__rsub__	(	self	,	other	)	:	\\n	    	if	isinstance	(	other	,	basestring	)	:	\\n	      /;"	f
__rsub__	data/data_raw/valid.py	/^utf-8	def	__rsub__	(	self	,	other	)	:	\\n	    	if	isinstance	(	other	,	basestring	)	:	\\n	      /;"	f
__rsub__	data/data_raw/valid.py	/^utf-8	def	__rsub__	(	self	,	other	)	:	\\n	    	return	-	self	+	other	\\n		$/;"	f
__run	data/bpe_corpus_raw/train.py	/^utf-8	def	__run	(	self	,	test	,	compileflags	,	out	)	:	\\n	    	failures	=	tries	=	0	\\n	origina/;"	f
__run	data/data_raw/train.py	/^utf-8	def	__run	(	self	,	test	,	compileflags	,	out	)	:	\\n	    	failures	=	tries	=	0	\\n	origina/;"	f
__rxor__	data/bpe_corpus_raw/train.py	/^utf-8	@	abstractmethod	\\n	def	__rxor__	(	self	,	other	)	:	\\n	    	raise	NotImplementedError	\\/;"	f
__rxor__	data/data_raw/train.py	/^utf-8	@	abstractmethod	\\n	def	__rxor__	(	self	,	other	)	:	\\n	    	raise	NotImplementedError	\\/;"	f
__seqToRE	data/bpe_corpus_raw/valid.py	/^utf-8	def	__seqToRE	(	self	,	to_convert	,	directive	)	:	\\n	    	to_convert	=	sorted	(	to_conver/;"	f
__seqToRE	data/data_raw/valid.py	/^utf-8	def	__seqToRE	(	self	,	to_convert	,	directive	)	:	\\n	    	to_convert	=	sorted	(	to_conver/;"	f
__setitem__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__setitem__	(	self	,	key	,	value	)	:	\\n	    	dict	.	__setitem__	(	self	,	key	,	value	/;"	f
__setitem__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__setitem__	(	self	,	n	,	value	)	:	\\n	    	if	isinstance	(	n	,	tuple	)	:	\\n	        /;"	f
__setitem__	data/data_raw/valid.py	/^utf-8	def	__setitem__	(	self	,	key	,	value	)	:	\\n	    	dict	.	__setitem__	(	self	,	key	,	value	/;"	f
__setitem__	data/data_raw/valid.py	/^utf-8	def	__setitem__	(	self	,	n	,	value	)	:	\\n	    	if	isinstance	(	n	,	tuple	)	:	\\n	        /;"	f
__sleep	data/bpe_corpus_raw/train.py	/^utf-8	def	__sleep	(	self	,	seconds	)	:	\\n	    	if	not	hasattr	(	self	.	__sleep	.	im_func	,	'las/;"	f
__sleep	data/data_raw/train.py	/^utf-8	def	__sleep	(	self	,	seconds	)	:	\\n	    	if	not	hasattr	(	self	.	__sleep	.	im_func	,	'las/;"	f
__stop_threaded_tcp_server	data/bpe_corpus_raw/train.py	/^utf-8	def	__stop_threaded_tcp_server	(	self	)	:	\\n	    	try	:	\\n	        	self	.	server	.	shut/;"	f
__stop_threaded_tcp_server	data/data_raw/train.py	/^utf-8	def	__stop_threaded_tcp_server	(	self	)	:	\\n	    	try	:	\\n	        	self	.	server	.	shut/;"	f
__str__	data/bpe_corpus_raw/test.py	/^utf-8	def	__str__	(	self	)	:	\\n	    	return	str	(	float	(	self	)	)	\\n		$/;"	f
__str__	data/bpe_corpus_raw/train.py	/^utf-8	def	__str__	(	self	)	:	\\n	    	sysid	=	self	.	getSystemId	(	)	\\n	if	sysid	is	None	:	\\n	/;"	f
__str__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__str__	(	self	)	:	\\n	    	_MAX_OUT	=	50	\\n	text	=	self	.	get_text	(	no_crlf	=	True	/;"	f
__str__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__str__	(	self	)	:	\\n	    	if	self	.	p	==	-	1	:	\\n	        	self	.	fillBuffer	(	)	\\/;"	f
__str__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__str__	(	self	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
__str__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__str__	(	self	)	:	\\n	    	return	'%s:%s'	%	(	self	.	kind	,	self	.	match	)	\\n		$/;"	f
__str__	data/bpe_corpus_raw/valid.py	/^utf-8	def	__str__	(	self	)	:	\\n	    	return	self	.	id	\\n		$/;"	f
__str__	data/data_raw/test.py	/^utf-8	def	__str__	(	self	)	:	\\n	    	return	str	(	float	(	self	)	)	\\n		$/;"	f
__str__	data/data_raw/train.py	/^utf-8	def	__str__	(	self	)	:	\\n	    	sysid	=	self	.	getSystemId	(	)	\\n	if	sysid	is	None	:	\\n	/;"	f
__str__	data/data_raw/valid.py	/^utf-8	def	__str__	(	self	)	:	\\n	    	_MAX_OUT	=	50	\\n	text	=	self	.	get_text	(	no_crlf	=	True	/;"	f
__str__	data/data_raw/valid.py	/^utf-8	def	__str__	(	self	)	:	\\n	    	if	self	.	p	==	-	1	:	\\n	        	self	.	fillBuffer	(	)	\\/;"	f
__str__	data/data_raw/valid.py	/^utf-8	def	__str__	(	self	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
__str__	data/data_raw/valid.py	/^utf-8	def	__str__	(	self	)	:	\\n	    	return	'%s:%s'	%	(	self	.	kind	,	self	.	match	)	\\n		$/;"	f
__str__	data/data_raw/valid.py	/^utf-8	def	__str__	(	self	)	:	\\n	    	return	self	.	id	\\n		$/;"	f
__sub__	data/bpe_corpus_raw/train.py	/^utf-8	def	__sub__	(	self	,	other	)	:	\\n	    	if	isinstance	(	other	,	basestring	)	:	\\n	       /;"	f
__sub__	data/bpe_corpus_raw/train.py	/^utf-8	def	__sub__	(	self	,	other	)	:	\\n	    	if	isinstance	(	other	,	timedelta	)	:	\\n	        /;"	f
__sub__	data/data_raw/train.py	/^utf-8	def	__sub__	(	self	,	other	)	:	\\n	    	if	isinstance	(	other	,	basestring	)	:	\\n	       /;"	f
__sub__	data/data_raw/train.py	/^utf-8	def	__sub__	(	self	,	other	)	:	\\n	    	if	isinstance	(	other	,	timedelta	)	:	\\n	        /;"	f
__subcommand_chuser	data/bpe_corpus_raw/train.py	/^utf-8	def	__subcommand_chuser	(	user	,	args	)	:	\\n	    	if	len	(	args	)	!=	0	:	\\n	        	sys/;"	f
__subcommand_chuser	data/data_raw/train.py	/^utf-8	def	__subcommand_chuser	(	user	,	args	)	:	\\n	    	if	len	(	args	)	!=	0	:	\\n	        	sys/;"	f
__translate_widget_strings	data/bpe_corpus_raw/train.py	/^utf-8	@	staticmethod	\\n	def	__translate_widget_strings	(	a_widget	)	:	\\n	    	for	str_prop	in	/;"	f
__translate_widget_strings	data/data_raw/train.py	/^utf-8	@	staticmethod	\\n	def	__translate_widget_strings	(	a_widget	)	:	\\n	    	for	str_prop	in	/;"	f
__upgrade_install__	data/bpe_corpus_raw/train.py	/^utf-8	def	__upgrade_install__	(	self	,	name	)	:	\\n	    	install_cmd	=	[	name	,	'-b'	,	self	.	pa/;"	f
__upgrade_install__	data/data_raw/train.py	/^utf-8	def	__upgrade_install__	(	self	,	name	)	:	\\n	    	install_cmd	=	[	name	,	'-b'	,	self	.	pa/;"	f
__worker_call	data/bpe_corpus_raw/valid.py	/^utf-8	def	__worker_call	(	self	,	call	,	wait	=	True	)	:	\\n	    	return	self	.	__worker_calls	(	/;"	f
__worker_call	data/data_raw/valid.py	/^utf-8	def	__worker_call	(	self	,	call	,	wait	=	True	)	:	\\n	    	return	self	.	__worker_calls	(	/;"	f
_access	data/bpe_corpus_raw/train.py	/^utf-8	def	_access	(	data	,	iloc	)	:	\\n	    	if	HAS_PANDAS	:	\\n	        	import	pandas	as	pd	\\/;"	f
_access	data/data_raw/train.py	/^utf-8	def	_access	(	data	,	iloc	)	:	\\n	    	if	HAS_PANDAS	:	\\n	        	import	pandas	as	pd	\\/;"	f
_add_	data/bpe_corpus_raw/valid.py	/^utf-8	def	_add_	(	self	,	x	)	:	\\n	    	try	:	\\n	        	return	InfinitePolynomial_sparse	(	se/;"	f
_add_	data/data_raw/valid.py	/^utf-8	def	_add_	(	self	,	x	)	:	\\n	    	try	:	\\n	        	return	InfinitePolynomial_sparse	(	se/;"	f
_add_callback_signalsafe	data/bpe_corpus_raw/valid.py	/^utf-8	def	_add_callback_signalsafe	(	self	,	handle	)	:	\\n	    	self	.	_add_callback	(	handle	)	/;"	f
_add_callback_signalsafe	data/data_raw/valid.py	/^utf-8	def	_add_callback_signalsafe	(	self	,	handle	)	:	\\n	    	self	.	_add_callback	(	handle	)	/;"	f
_add_comparison_methods	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_add_comparison_methods	(	cls	)	:	\\n	\\n	    	def	_make_compare	(	o/;"	f
_add_comparison_methods	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_add_comparison_methods	(	cls	)	:	\\n	\\n	    	def	_make_compare	(	o/;"	f
_add_e2e_one_time_keys	data/bpe_corpus_raw/valid.py	/^utf-8	@	defer	.	inlineCallbacks	\\n	def	add_e2e_one_time_keys	(	self	,	user_id	,	device_id	,	tim/;"	f	function:add_e2e_one_time_keys	file:
_add_e2e_one_time_keys	data/data_raw/valid.py	/^utf-8	@	defer	.	inlineCallbacks	\\n	def	add_e2e_one_time_keys	(	self	,	user_id	,	device_id	,	tim/;"	f	function:add_e2e_one_time_keys	file:
_add_hadoop_bin_for_envvar	data/bpe_corpus_raw/train.py	/^utf-8	def	_add_hadoop_bin_for_envvar	(	self	,	envvar	,	*	dirnames	)	:	\\n	    	os	.	environ	[	en/;"	f
_add_hadoop_bin_for_envvar	data/data_raw/train.py	/^utf-8	def	_add_hadoop_bin_for_envvar	(	self	,	envvar	,	*	dirnames	)	:	\\n	    	os	.	environ	[	en/;"	f
_add_include_paths	data/bpe_corpus_raw/valid.py	/^utf-8	def	_add_include_paths	(	self	,	add_paths	)	:	\\n	    	self	.	print_r	(	'Include files sea/;"	f
_add_include_paths	data/data_raw/valid.py	/^utf-8	def	_add_include_paths	(	self	,	add_paths	)	:	\\n	    	self	.	print_r	(	'Include files sea/;"	f
_add_test	data/bpe_corpus_raw/valid.py	/^utf-8	def	_add_tests	(	self	,	testcases	)	:	\\n	\\n	    	def	_add_test	(	test_runner	,	test_dict/;"	f	function:_add_tests	file:
_add_test	data/data_raw/valid.py	/^utf-8	def	_add_tests	(	self	,	testcases	)	:	\\n	\\n	    	def	_add_test	(	test_runner	,	test_dict/;"	f	function:_add_tests	file:
_add_tests	data/bpe_corpus_raw/valid.py	/^utf-8	def	_add_tests	(	self	,	testcases	)	:	\\n	\\n	    	def	_add_test	(	test_runner	,	test_dict/;"	f
_add_tests	data/data_raw/valid.py	/^utf-8	def	_add_tests	(	self	,	testcases	)	:	\\n	\\n	    	def	_add_test	(	test_runner	,	test_dict/;"	f
_allocate_connectors_from_snapshot	data/bpe_corpus_raw/train.py	/^utf-8	def	_allocate_connectors_from_snapshot	(	cluster_uuid	,	payload	,	key_name	,	\\n	backend_i/;"	f
_allocate_connectors_from_snapshot	data/data_raw/train.py	/^utf-8	def	_allocate_connectors_from_snapshot	(	cluster_uuid	,	payload	,	key_name	,	\\n	backend_i/;"	f
_an_element_	data/bpe_corpus_raw/valid.py	/^utf-8	def	_an_element_	(	self	)	:	\\n	    	N	=	self	.	level	(	)	\\n	return	self	(	[	1	-	N	,	-	N	/;"	f
_an_element_	data/bpe_corpus_raw/valid.py	/^utf-8	def	_an_element_	(	self	)	:	\\n	    	resu	=	self	.	element_class	(	self	.	_vmodule	,	self	/;"	f
_an_element_	data/data_raw/valid.py	/^utf-8	def	_an_element_	(	self	)	:	\\n	    	N	=	self	.	level	(	)	\\n	return	self	(	[	1	-	N	,	-	N	/;"	f
_an_element_	data/data_raw/valid.py	/^utf-8	def	_an_element_	(	self	)	:	\\n	    	resu	=	self	.	element_class	(	self	.	_vmodule	,	self	/;"	f
_apply	data/bpe_corpus_raw/train.py	/^utf-8	def	_apply	(	self	,	config	)	:	\\n	    	which_env	=	config	.	get	(	'environment'	)	\\n	if	/;"	f
_apply	data/data_raw/train.py	/^utf-8	def	_apply	(	self	,	config	)	:	\\n	    	which_env	=	config	.	get	(	'environment'	)	\\n	if	/;"	f
_apply_functor	data/bpe_corpus_raw/train.py	/^utf-8	def	_apply_functor	(	self	,	R	)	:	\\n	    	return	FreeDendriformAlgebra	(	R	,	self	.	vars	/;"	f
_apply_functor	data/data_raw/train.py	/^utf-8	def	_apply_functor	(	self	,	R	)	:	\\n	    	return	FreeDendriformAlgebra	(	R	,	self	.	vars	/;"	f
_apply_incoming_copying_manipulators	data/bpe_corpus_raw/valid.py	/^utf-8	def	_apply_incoming_copying_manipulators	(	self	,	son	,	collection	)	:	\\n	    	for	manipu/;"	f
_apply_incoming_copying_manipulators	data/data_raw/valid.py	/^utf-8	def	_apply_incoming_copying_manipulators	(	self	,	son	,	collection	)	:	\\n	    	for	manipu/;"	f
_apply_transform	data/bpe_corpus_raw/valid.py	/^utf-8	def	_apply_transform	(	self	,	input_tensors	,	**	kwargs	)	:	\\n	    	input_tensor	=	input_/;"	f
_apply_transform	data/data_raw/valid.py	/^utf-8	def	_apply_transform	(	self	,	input_tensors	,	**	kwargs	)	:	\\n	    	input_tensor	=	input_/;"	f
_assert_quats	data/bpe_corpus_raw/valid.py	/^utf-8	def	_assert_quats	(	actual	,	desired	,	dist_tol	=	0.003	,	angle_tol	=	5.0	)	:	\\n	    	tra/;"	f
_assert_quats	data/data_raw/valid.py	/^utf-8	def	_assert_quats	(	actual	,	desired	,	dist_tol	=	0.003	,	angle_tol	=	5.0	)	:	\\n	    	tra/;"	f
_attribute_checker	data/bpe_corpus_raw/train.py	/^utf-8	def	_attribute_checker	(	self	,	operator	,	attribute	,	value	=	''	)	:	\\n	    	if	operator/;"	f
_attribute_checker	data/data_raw/train.py	/^utf-8	def	_attribute_checker	(	self	,	operator	,	attribute	,	value	=	''	)	:	\\n	    	if	operator/;"	f
_auc_convert_hist_to_auc	data/bpe_corpus_raw/train.py	/^utf-8	def	_auc_convert_hist_to_auc	(	hist_true_acc	,	hist_false_acc	,	nbins	)	:	\\n	    	normed_/;"	f
_auc_convert_hist_to_auc	data/data_raw/train.py	/^utf-8	def	_auc_convert_hist_to_auc	(	hist_true_acc	,	hist_false_acc	,	nbins	)	:	\\n	    	normed_/;"	f
_audio_summary_v2	data/bpe_corpus_raw/valid.py	/^utf-8	def	_audio_summary_v2	(	tag	,	tensor	,	sample_rate	,	max_outputs	=	3	,	name	=	None	)	:	\\n/;"	f
_audio_summary_v2	data/data_raw/valid.py	/^utf-8	def	_audio_summary_v2	(	tag	,	tensor	,	sample_rate	,	max_outputs	=	3	,	name	=	None	)	:	\\n/;"	f
_auth_key_callback	data/bpe_corpus_raw/test.py	/^utf-8	def	_auth_key_callback	(	self	:	'TelegramClient'	,	auth_key	)	:	\\n	    	self	.	session	.	/;"	f
_auth_key_callback	data/data_raw/test.py	/^utf-8	def	_auth_key_callback	(	self	:	'TelegramClient'	,	auth_key	)	:	\\n	    	self	.	session	.	/;"	f
_autozoom_out	data/bpe_corpus_raw/valid.py	/^utf-8	def	_autozoom_out	(	self	,	lvl	,	p1lat	,	p1lon	,	p2lat	,	p2lon	)	:	\\n	    	if	not	(	self	/;"	f
_autozoom_out	data/data_raw/valid.py	/^utf-8	def	_autozoom_out	(	self	,	lvl	,	p1lat	,	p1lon	,	p2lat	,	p2lon	)	:	\\n	    	if	not	(	self	/;"	f
_background	data/bpe_corpus_raw/valid.py	/^utf-8	def	_background	(	stdin	=	'\/dev\/null'	,	stdout	=	'\/dev\/null'	,	stderr	=	'\/dev\/null'	/;"	f
_background	data/data_raw/valid.py	/^utf-8	def	_background	(	stdin	=	'\/dev\/null'	,	stdout	=	'\/dev\/null'	,	stderr	=	'\/dev\/null'	/;"	f
_basic_auth_str	data/bpe_corpus_raw/valid.py	/^utf-8	def	_basic_auth_str	(	username	,	password	)	:	\\n	    	if	not	isinstance	(	username	,	base/;"	f
_basic_auth_str	data/data_raw/valid.py	/^utf-8	def	_basic_auth_str	(	username	,	password	)	:	\\n	    	if	not	isinstance	(	username	,	base/;"	f
_bit_length	data/bpe_corpus_raw/valid.py	/^utf-8	def	_bit_length	(	n	)	:	\\n	    	try	:	\\n	        	return	n	.	bit_length	(	)	\\n		except	/;"	f
_bit_length	data/data_raw/valid.py	/^utf-8	def	_bit_length	(	n	)	:	\\n	    	try	:	\\n	        	return	n	.	bit_length	(	)	\\n		except	/;"	f
_block	data/bpe_corpus_raw/valid.py	/^utf-8	def	_block	(	self	,	count	)	:	\\n	    	blocks	,	remainder	=	divmod	(	count	,	BLOCKSIZE	)	\\/;"	f
_block	data/data_raw/valid.py	/^utf-8	def	_block	(	self	,	count	)	:	\\n	    	blocks	,	remainder	=	divmod	(	count	,	BLOCKSIZE	)	\\/;"	f
_bn_relu	data/bpe_corpus_raw/train.py	/^utf-8	def	_bn_relu	(	input	)	:	\\n	    	norm	=	BatchNormalization	(	axis	=	CHANNEL_AXIS	)	(	inpu/;"	f
_bn_relu	data/data_raw/train.py	/^utf-8	def	_bn_relu	(	input	)	:	\\n	    	norm	=	BatchNormalization	(	axis	=	CHANNEL_AXIS	)	(	inpu/;"	f
_build	data/bpe_corpus_raw/test.py	/^utf-8	def	_build	(	self	,	inputs	)	:	\\n	    	shape_inputs	=	inputs	.	get_shape	(	)	.	as_list	(	/;"	f
_build	data/bpe_corpus_raw/valid.py	/^utf-8	def	_build	(	self	,	g	,	prev_state	)	:	\\n	    	b1	=	self	.	_beta1	\\n	b2	=	self	.	_beta2	/;"	f
_build	data/data_raw/test.py	/^utf-8	def	_build	(	self	,	inputs	)	:	\\n	    	shape_inputs	=	inputs	.	get_shape	(	)	.	as_list	(	/;"	f
_build	data/data_raw/valid.py	/^utf-8	def	_build	(	self	,	g	,	prev_state	)	:	\\n	    	b1	=	self	.	_beta1	\\n	b2	=	self	.	_beta2	/;"	f
_buildTemplates	data/bpe_corpus_raw/train.py	/^utf-8	def	_buildTemplates	(	self	)	:	\\n	    	jsontree_classes	=	build_D3treeStandard	(	0	,	99	,/;"	f
_buildTemplates	data/data_raw/train.py	/^utf-8	def	_buildTemplates	(	self	)	:	\\n	    	jsontree_classes	=	build_D3treeStandard	(	0	,	99	,/;"	f
_build_err_msg	data/bpe_corpus_raw/test.py	/^utf-8	def	assert_almost_equal	(	actual	,	desired	,	decimal	=	7	,	err_msg	=	''	,	verbose	=	True	)/;"	f	function:assert_almost_equal	file:
_build_err_msg	data/data_raw/test.py	/^utf-8	def	assert_almost_equal	(	actual	,	desired	,	decimal	=	7	,	err_msg	=	''	,	verbose	=	True	)/;"	f	function:assert_almost_equal	file:
_build_exe	data/bpe_corpus_raw/train.py	/^utf-8	def	get_cmdclass	(	)	:	\\n	    	if	'versioneer'	in	sys	.	modules	:	\\n	        	del	sys	.	/;"	x	member:get_cmdclass.cmd_version.initialize_options.finalize_options.run.cmd_build_py.run	file:
_build_exe	data/data_raw/train.py	/^utf-8	def	get_cmdclass	(	)	:	\\n	    	if	'versioneer'	in	sys	.	modules	:	\\n	        	del	sys	.	/;"	x	member:get_cmdclass.cmd_version.initialize_options.finalize_options.run.cmd_build_py.run	file:
_build_from_requirements	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_build_from_requirements	(	cls	,	req_spec	)	:	\\n	    	ws	=	cls	(	[	/;"	f
_build_from_requirements	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_build_from_requirements	(	cls	,	req_spec	)	:	\\n	    	ws	=	cls	(	[	/;"	f
_build_layout	data/bpe_corpus_raw/valid.py	/^utf-8	def	_build_layout	(	self	,	root	)	:	\\n	    	raise	NotImplementedError	(	)	\\n		$/;"	f
_build_layout	data/data_raw/valid.py	/^utf-8	def	_build_layout	(	self	,	root	)	:	\\n	    	raise	NotImplementedError	(	)	\\n		$/;"	f
_build_py	data/bpe_corpus_raw/train.py	/^utf-8	def	get_cmdclass	(	)	:	\\n	    	if	'versioneer'	in	sys	.	modules	:	\\n	        	del	sys	.	/;"	x	function:get_cmdclass.cmd_version.initialize_options.finalize_options.run	file:
_build_py	data/data_raw/train.py	/^utf-8	def	get_cmdclass	(	)	:	\\n	    	if	'versioneer'	in	sys	.	modules	:	\\n	        	del	sys	.	/;"	x	function:get_cmdclass.cmd_version.initialize_options.finalize_options.run	file:
_calc_max	data/bpe_corpus_raw/train.py	/^utf-8	def	_calc_max	(	self	)	:	\\n	    	if	self	.	_is_sorted	:	\\n	        	return	self	.	data	[/;"	f
_calc_max	data/data_raw/train.py	/^utf-8	def	_calc_max	(	self	)	:	\\n	    	if	self	.	_is_sorted	:	\\n	        	return	self	.	data	[/;"	f
_call_	data/bpe_corpus_raw/valid.py	/^utf-8	def	_call_	(	self	,	x	)	:	\\n	    	parent	=	self	.	parent	(	)	\\n	return	self	.	_scalar	*	/;"	f
_call_	data/data_raw/valid.py	/^utf-8	def	_call_	(	self	,	x	)	:	\\n	    	parent	=	self	.	parent	(	)	\\n	return	self	.	_scalar	*	/;"	f
_checkResult	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_performRequestUsesFreeConnection	(	self	)	:	\\n	\\n	    	def	_checkResult	(	resul/;"	f	function:test_performRequestUsesFreeConnection	file:
_checkResult	data/data_raw/valid.py	/^utf-8	def	test_performRequestUsesFreeConnection	(	self	)	:	\\n	\\n	    	def	_checkResult	(	resul/;"	f	function:test_performRequestUsesFreeConnection	file:
_checkSeekable	data/bpe_corpus_raw/train.py	/^utf-8	def	_checkSeekable	(	self	,	msg	=	None	)	:	\\n	    	if	not	self	.	seekable	(	)	:	\\n	     /;"	f
_checkSeekable	data/data_raw/train.py	/^utf-8	def	_checkSeekable	(	self	,	msg	=	None	)	:	\\n	    	if	not	self	.	seekable	(	)	:	\\n	     /;"	f
_check_cg_simp	data/bpe_corpus_raw/valid.py	/^utf-8	def	_check_cg_simp	(	expr	,	simp	,	sign	,	lt	,	term_list	,	variables	,	\\n	dep_variables	,/;"	f
_check_cg_simp	data/data_raw/valid.py	/^utf-8	def	_check_cg_simp	(	expr	,	simp	,	sign	,	lt	,	term_list	,	variables	,	\\n	dep_variables	,/;"	f
_check_cl_exists_in_vc_dir	data/bpe_corpus_raw/valid.py	/^utf-8	def	_check_cl_exists_in_vc_dir	(	env	,	vc_dir	,	msvc_version	)	:	\\n	    	if	env	:	\\n	   /;"	f
_check_cl_exists_in_vc_dir	data/data_raw/valid.py	/^utf-8	def	_check_cl_exists_in_vc_dir	(	env	,	vc_dir	,	msvc_version	)	:	\\n	    	if	env	:	\\n	   /;"	f
_check_docker_method_args	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_check_docker_method_args	(	cls	,	method	,	args	,	required	,	yaml_me/;"	f
_check_docker_method_args	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_check_docker_method_args	(	cls	,	method	,	args	,	required	,	yaml_me/;"	f
_check_filename	data/bpe_corpus_raw/test.py	/^utf-8	def	_check_filename	(	self	,	fn	)	:	\\n	    	if	os	.	path	.	isfile	(	fn	)	:	\\n	        	s/;"	f
_check_filename	data/data_raw/test.py	/^utf-8	def	_check_filename	(	self	,	fn	)	:	\\n	    	if	os	.	path	.	isfile	(	fn	)	:	\\n	        	s/;"	f
_check_if_atb_can_be_disabled	data/bpe_corpus_raw/valid.py	/^utf-8	def	_check_if_atb_can_be_disabled	(	runner	,	report_processor	,	corosync_conf	,	\\n	was_en/;"	f
_check_if_atb_can_be_disabled	data/data_raw/valid.py	/^utf-8	def	_check_if_atb_can_be_disabled	(	runner	,	report_processor	,	corosync_conf	,	\\n	was_en/;"	f
_check_labels_and_scores	data/bpe_corpus_raw/valid.py	/^utf-8	def	_check_labels_and_scores	(	boolean_labels	,	scores	,	check_shape	)	:	\\n	    	with	ops/;"	f
_check_labels_and_scores	data/data_raw/valid.py	/^utf-8	def	_check_labels_and_scores	(	boolean_labels	,	scores	,	check_shape	)	:	\\n	    	with	ops/;"	f
_check_long_column_names	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_check_long_column_names	(	cls	)	:	\\n	    	errors	=	[	]	\\n	allowed/;"	f
_check_long_column_names	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_check_long_column_names	(	cls	)	:	\\n	    	errors	=	[	]	\\n	allowed/;"	f
_check_name	data/bpe_corpus_raw/valid.py	/^utf-8	def	_check_name	(	method	)	:	\\n	\\n	    	def	_check_name_wrapper	(	self	,	name	=	None	,	*/;"	f
_check_name	data/data_raw/valid.py	/^utf-8	def	_check_name	(	method	)	:	\\n	\\n	    	def	_check_name_wrapper	(	self	,	name	=	None	,	*/;"	f
_check_name_wrapper	data/bpe_corpus_raw/valid.py	/^utf-8	def	_check_name	(	method	)	:	\\n	\\n	    	def	_check_name_wrapper	(	self	,	name	=	None	,	*/;"	f	function:_check_name	file:
_check_name_wrapper	data/data_raw/valid.py	/^utf-8	def	_check_name	(	method	)	:	\\n	\\n	    	def	_check_name_wrapper	(	self	,	name	=	None	,	*/;"	f	function:_check_name	file:
_check_ocsp_response	data/bpe_corpus_raw/train.py	/^utf-8	def	_check_ocsp_response	(	response_ocsp	,	request_ocsp	,	issuer_cert	)	:	\\n	    	if	resp/;"	f
_check_ocsp_response	data/data_raw/train.py	/^utf-8	def	_check_ocsp_response	(	response_ocsp	,	request_ocsp	,	issuer_cert	)	:	\\n	    	if	resp/;"	f
_check_params	data/bpe_corpus_raw/train.py	/^utf-8	def	_check_params	(	X	,	metric	,	p	,	metric_params	)	:	\\n	    	params	=	zip	(	[	'metric'	/;"	f
_check_params	data/data_raw/train.py	/^utf-8	def	_check_params	(	X	,	metric	,	p	,	metric_params	)	:	\\n	    	params	=	zip	(	[	'metric'	/;"	f
_check_remove_mto_resupply_rules	data/bpe_corpus_raw/valid.py	/^utf-8	def	_check_remove_mto_resupply_rules	(	self	,	cr	,	uid	,	warehouse	,	context	=	None	)	:	\\/;"	f
_check_remove_mto_resupply_rules	data/data_raw/valid.py	/^utf-8	def	_check_remove_mto_resupply_rules	(	self	,	cr	,	uid	,	warehouse	,	context	=	None	)	:	\\/;"	f
_check_retval_	data/bpe_corpus_raw/train.py	/^utf-8	def	_check_retval_	(	self	)	:	\\n	    	return	array	(	self	)	\\n		$/;"	f
_check_retval_	data/data_raw/train.py	/^utf-8	def	_check_retval_	(	self	)	:	\\n	    	return	array	(	self	)	\\n		$/;"	f
_check_stop	data/bpe_corpus_raw/valid.py	/^utf-8	def	_check_stop	(	self	)	:	\\n	    	return	False	\\n		$/;"	f
_check_stop	data/data_raw/valid.py	/^utf-8	def	_check_stop	(	self	)	:	\\n	    	return	False	\\n		$/;"	f
_check_values	data/bpe_corpus_raw/train.py	/^utf-8	def	_check_values	(	self	,	value	)	:	\\n	    	key	=	self	.	to_field_name	or	'pk'	\\n	try	:/;"	f
_check_values	data/data_raw/train.py	/^utf-8	def	_check_values	(	self	,	value	)	:	\\n	    	key	=	self	.	to_field_name	or	'pk'	\\n	try	:/;"	f
_checkindex	data/bpe_corpus_raw/train.py	/^utf-8	def	_checkindex	(	self	,	index	)	:	\\n	    	sz	=	self	.	size	\\n	if	sz	<	1	or	index	<	0	or/;"	f
_checkindex	data/data_raw/train.py	/^utf-8	def	_checkindex	(	self	,	index	)	:	\\n	    	sz	=	self	.	size	\\n	if	sz	<	1	or	index	<	0	or/;"	f
_choose_signer	data/bpe_corpus_raw/test.py	/^utf-8	def	_choose_signer	(	self	,	operation_name	,	signing_type	,	context	)	:	\\n	    	signing_t/;"	f
_choose_signer	data/data_raw/test.py	/^utf-8	def	_choose_signer	(	self	,	operation_name	,	signing_type	,	context	)	:	\\n	    	signing_t/;"	f
_clamp	data/bpe_corpus_raw/test.py	/^utf-8	def	_clamp	(	self	,	x	,	y	)	:	\\n	    	rx	=	x	\\n	ry	=	y	\\n	if	x	>	self	.	imgw	:	\\n	    /;"	f
_clamp	data/data_raw/test.py	/^utf-8	def	_clamp	(	self	,	x	,	y	)	:	\\n	    	rx	=	x	\\n	ry	=	y	\\n	if	x	>	self	.	imgw	:	\\n	    /;"	f
_clean_inheritance_tokens	data/bpe_corpus_raw/valid.py	/^utf-8	def	_clean_inheritance_tokens	(	self	)	:	\\n	    	c	=	self	.	_copy	(	)	\\n	x	=	c	.	_data	\\/;"	f
_clean_inheritance_tokens	data/data_raw/valid.py	/^utf-8	def	_clean_inheritance_tokens	(	self	)	:	\\n	    	c	=	self	.	_copy	(	)	\\n	x	=	c	.	_data	\\/;"	f
_clean_manga	data/bpe_corpus_raw/valid.py	/^utf-8	def	_clean_manga	(	self	,	hours	,	sources	,	list_	)	:	\\n	    	today	=	timezone	.	now	(	)	/;"	f
_clean_manga	data/data_raw/valid.py	/^utf-8	def	_clean_manga	(	self	,	hours	,	sources	,	list_	)	:	\\n	    	today	=	timezone	.	now	(	)	/;"	f
_cleanup_tensors	data/bpe_corpus_raw/valid.py	/^utf-8	def	_cleanup_tensors	(	self	)	:	\\n	    	for	filename	in	os	.	listdir	(	self	.	_dump_path	/;"	f
_cleanup_tensors	data/data_raw/valid.py	/^utf-8	def	_cleanup_tensors	(	self	)	:	\\n	    	for	filename	in	os	.	listdir	(	self	.	_dump_path	/;"	f
_clone	data/bpe_corpus_raw/train.py	/^utf-8	def	_clone	(	self	,	klass	=	None	,	setup	=	False	,	**	kwargs	)	:	\\n	    	kwargs	.	update	/;"	f
_clone	data/data_raw/train.py	/^utf-8	def	_clone	(	self	,	klass	=	None	,	setup	=	False	,	**	kwargs	)	:	\\n	    	kwargs	.	update	/;"	f
_cmap_obj	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	_cmap_obj	(	self	)	:	\\n	    	try	:	\\n	        	return	ctables	.	regis/;"	f
_cmap_obj	data/data_raw/train.py	/^utf-8	@	property	\\n	def	_cmap_obj	(	self	)	:	\\n	    	try	:	\\n	        	return	ctables	.	regis/;"	f
_cmd_segmetrics	data/bpe_corpus_raw/train.py	/^utf-8	def	_cmd_segmetrics	(	args	)	:	\\n	    	if	not	0.0	<	args	.	alpha	<=	1.0	:	\\n	        	ra/;"	f
_cmd_segmetrics	data/data_raw/train.py	/^utf-8	def	_cmd_segmetrics	(	args	)	:	\\n	    	if	not	0.0	<	args	.	alpha	<=	1.0	:	\\n	        	ra/;"	f
_cmp_node	data/bpe_corpus_raw/valid.py	/^utf-8	def	_cmp_node	(	self	)	:	\\n	    	return	self	.	name	,	self	.	namespace	,	tuple	(	self	.	v/;"	f
_cmp_node	data/data_raw/valid.py	/^utf-8	def	_cmp_node	(	self	)	:	\\n	    	return	self	.	name	,	self	.	namespace	,	tuple	(	self	.	v/;"	f
_coerce_scalar_to_index	data/bpe_corpus_raw/valid.py	/^utf-8	def	_coerce_scalar_to_index	(	self	,	item	)	:	\\n	    	return	PeriodIndex	(	[	item	]	,	**	/;"	f
_coerce_scalar_to_index	data/data_raw/valid.py	/^utf-8	def	_coerce_scalar_to_index	(	self	,	item	)	:	\\n	    	return	PeriodIndex	(	[	item	]	,	**	/;"	f
_collapse_addresses_internal	data/bpe_corpus_raw/valid.py	/^utf-8	def	_collapse_addresses_internal	(	addresses	)	:	\\n	    	to_merge	=	list	(	addresses	)	\\/;"	f
_collapse_addresses_internal	data/data_raw/valid.py	/^utf-8	def	_collapse_addresses_internal	(	addresses	)	:	\\n	    	to_merge	=	list	(	addresses	)	\\/;"	f
_collect_update_objects	data/bpe_corpus_raw/valid.py	/^utf-8	def	_collect_update_objects	(	revision_ids	)	:	\\n	    	revisions	=	all_models	.	Revision	/;"	f
_collect_update_objects	data/data_raw/valid.py	/^utf-8	def	_collect_update_objects	(	revision_ids	)	:	\\n	    	revisions	=	all_models	.	Revision	/;"	f
_compare_quota_usage	data/bpe_corpus_raw/valid.py	/^utf-8	def	_compare_quota_usage	(	self	,	old_usage	,	new_usage	,	expect_diff	=	True	)	:	\\n	    	/;"	f
_compare_quota_usage	data/data_raw/valid.py	/^utf-8	def	_compare_quota_usage	(	self	,	old_usage	,	new_usage	,	expect_diff	=	True	)	:	\\n	    	/;"	f
_compare_to_walk	data/bpe_corpus_raw/train.py	/^utf-8	def	_compare_to_walk	(	self	,	walk_kwargs	,	fwalk_kwargs	)	:	\\n	    	walk_kwargs	=	walk_k/;"	f
_compare_to_walk	data/data_raw/train.py	/^utf-8	def	_compare_to_walk	(	self	,	walk_kwargs	,	fwalk_kwargs	)	:	\\n	    	walk_kwargs	=	walk_k/;"	f
_compile	data/bpe_corpus_raw/valid.py	/^utf-8	def	customize_compiler_for_nvcc	(	self	)	:	\\n	    	self	.	src_extensions	.	append	(	'.cu'/;"	f	function:customize_compiler_for_nvcc	file:
_compile	data/data_raw/valid.py	/^utf-8	def	customize_compiler_for_nvcc	(	self	)	:	\\n	    	self	.	src_extensions	.	append	(	'.cu'/;"	f	function:customize_compiler_for_nvcc	file:
_compress_hextets	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_compress_hextets	(	cls	,	hextets	)	:	\\n	    	best_doublecolon_star/;"	f
_compress_hextets	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_compress_hextets	(	cls	,	hextets	)	:	\\n	    	best_doublecolon_star/;"	f
_compute	data/bpe_corpus_raw/valid.py	/^utf-8	def	_compute	(	self	)	:	\\n	    	self	.	data_b64	=	base64	.	b64encode	(	self	.	data	)	\\n	/;"	f
_compute	data/data_raw/valid.py	/^utf-8	def	_compute	(	self	)	:	\\n	    	self	.	data_b64	=	base64	.	b64encode	(	self	.	data	)	\\n	/;"	f
_computeRemovedSlot	data/bpe_corpus_raw/test.py	/^utf-8	def	_computeRemovedSlot	(	self	,	compute_id	)	:	\\n	    	if	compute_id	in	self	.	_computes/;"	f
_computeRemovedSlot	data/data_raw/test.py	/^utf-8	def	_computeRemovedSlot	(	self	,	compute_id	)	:	\\n	    	if	compute_id	in	self	.	_computes/;"	f
_computeSimpleBarLabelPositions	data/bpe_corpus_raw/valid.py	/^utf-8	def	_computeSimpleBarLabelPositions	(	self	)	:	\\n	    	cA	,	vA	=	self	.	categoryAxis	,	se/;"	f
_computeSimpleBarLabelPositions	data/data_raw/valid.py	/^utf-8	def	_computeSimpleBarLabelPositions	(	self	)	:	\\n	    	cA	,	vA	=	self	.	categoryAxis	,	se/;"	f
_compute_loss	data/bpe_corpus_raw/valid.py	/^utf-8	def	_compute_loss	(	self	,	input_dict	)	:	\\n	    	logits	=	input_dict	[	'decoder_output'	/;"	f
_compute_loss	data/data_raw/valid.py	/^utf-8	def	_compute_loss	(	self	,	input_dict	)	:	\\n	    	logits	=	input_dict	[	'decoder_output'	/;"	f
_compute_normalized_data	data/bpe_corpus_raw/train.py	/^utf-8	def	_compute_normalized_data	(	self	,	data_array	)	:	\\n	    	if	self	.	_dirty	:	\\n	     /;"	f
_compute_normalized_data	data/data_raw/train.py	/^utf-8	def	_compute_normalized_data	(	self	,	data_array	)	:	\\n	    	if	self	.	_dirty	:	\\n	     /;"	f
_compute_r	data/bpe_corpus_raw/valid.py	/^utf-8	def	_compute_r	(	self	)	:	\\n	    	losses	=	self	.	_losses_arr	\\n	mean_losses	=	losses	.	/;"	f
_compute_r	data/data_raw/valid.py	/^utf-8	def	_compute_r	(	self	)	:	\\n	    	losses	=	self	.	_losses_arr	\\n	mean_losses	=	losses	.	/;"	f
_concatenate_context_input	data/bpe_corpus_raw/train.py	/^utf-8	def	_concatenate_context_input	(	sequence_input	,	context_input	)	:	\\n	    	seq_rank_chec/;"	f
_concatenate_context_input	data/data_raw/train.py	/^utf-8	def	_concatenate_context_input	(	sequence_input	,	context_input	)	:	\\n	    	seq_rank_chec/;"	f
_config_cert_plugin	data/bpe_corpus_raw/test.py	/^utf-8	def	_config_cert_plugin	(	self	)	:	\\n	    	cert_plugin_config	=	{	'return_value.get_plugi/;"	f
_config_cert_plugin	data/data_raw/test.py	/^utf-8	def	_config_cert_plugin	(	self	)	:	\\n	    	cert_plugin_config	=	{	'return_value.get_plugi/;"	f
_configure_qtcreator	data/bpe_corpus_raw/train.py	/^utf-8	def	_configure_qtcreator	(	qibuild_cfg	)	:	\\n	    	ide	=	qibuild	.	config	.	IDE	(	)	\\n	i/;"	f
_configure_qtcreator	data/data_raw/train.py	/^utf-8	def	_configure_qtcreator	(	qibuild_cfg	)	:	\\n	    	ide	=	qibuild	.	config	.	IDE	(	)	\\n	i/;"	f
_connected	data/bpe_corpus_raw/valid.py	/^utf-8	def	_connected	(	self	,	uri	)	:	\\n	    	self	.	_uri	=	uri	\\n		$/;"	f
_connected	data/data_raw/valid.py	/^utf-8	def	_connected	(	self	,	uri	)	:	\\n	    	self	.	_uri	=	uri	\\n		$/;"	f
_connectionLost	data/bpe_corpus_raw/valid.py	/^utf-8	def	_connectionLost	(	self	,	reason	)	:	\\n	    	WebSocketProtocol	.	_connectionLost	(	sel/;"	f
_connectionLost	data/data_raw/valid.py	/^utf-8	def	_connectionLost	(	self	,	reason	)	:	\\n	    	WebSocketProtocol	.	_connectionLost	(	sel/;"	f
_construct_dask_df_with_divisions	data/bpe_corpus_raw/train.py	/^utf-8	def	_construct_dask_df_with_divisions	(	df	)	:	\\n	    	divisions	=	_get_divisions	(	df	)	/;"	f
_construct_dask_df_with_divisions	data/data_raw/train.py	/^utf-8	def	_construct_dask_df_with_divisions	(	df	)	:	\\n	    	divisions	=	_get_divisions	(	df	)	/;"	f
_continuous_eval	data/bpe_corpus_raw/valid.py	/^utf-8	def	_continuous_eval	(	self	,	input_fn	,	name	,	delay_secs	,	throttle_delay_secs	,	\\n	eva/;"	f
_continuous_eval	data/data_raw/valid.py	/^utf-8	def	_continuous_eval	(	self	,	input_fn	,	name	,	delay_secs	,	throttle_delay_secs	,	\\n	eva/;"	f
_convert	data/bpe_corpus_raw/valid.py	/^utf-8	def	literal_eval	(	node_or_string	)	:	\\n	    	_safe_names	=	{	'None'	:	None	,	'True'	:	Tr/;"	f	function:literal_eval	file:
_convert	data/data_raw/valid.py	/^utf-8	def	literal_eval	(	node_or_string	)	:	\\n	    	_safe_names	=	{	'None'	:	None	,	'True'	:	Tr/;"	f	function:literal_eval	file:
_convert_T	data/bpe_corpus_raw/valid.py	/^utf-8	def	_convert_T	(	self	)	:	\\n	    	self	.	bus	.	write_byte	(	68	)	\\n	self	.	_wait	(	self	/;"	f
_convert_T	data/data_raw/valid.py	/^utf-8	def	_convert_T	(	self	)	:	\\n	    	self	.	bus	.	write_byte	(	68	)	\\n	self	.	_wait	(	self	/;"	f
_convert_params	data/bpe_corpus_raw/valid.py	/^utf-8	def	_convert_params	(	sql	,	params	)	:	\\n	    	args	=	[	sql	]	\\n	if	params	is	not	None	:/;"	f
_convert_params	data/data_raw/valid.py	/^utf-8	def	_convert_params	(	sql	,	params	)	:	\\n	    	args	=	[	sql	]	\\n	if	params	is	not	None	:/;"	f
_cookie_attrs	data/bpe_corpus_raw/valid.py	/^utf-8	def	_cookie_attrs	(	self	,	cookies	)	:	\\n	    	cookies	.	sort	(	key	=	lambda	arg	:	len	(	/;"	f
_cookie_attrs	data/data_raw/valid.py	/^utf-8	def	_cookie_attrs	(	self	,	cookies	)	:	\\n	    	cookies	.	sort	(	key	=	lambda	arg	:	len	(	/;"	f
_cookies_for_request	data/bpe_corpus_raw/valid.py	/^utf-8	def	_cookies_for_request	(	self	,	request	)	:	\\n	    	cookies	=	[	]	\\n	for	domain	in	sel/;"	f
_cookies_for_request	data/data_raw/valid.py	/^utf-8	def	_cookies_for_request	(	self	,	request	)	:	\\n	    	cookies	=	[	]	\\n	for	domain	in	sel/;"	f
_copy	data/bpe_corpus_raw/valid.py	/^utf-8	def	_copy	(	self	)	:	\\n	    	items	=	self	.	items	(	)	\\n	subs	=	{	}	\\n	for	f	in	(	self	/;"	f
_copy	data/data_raw/valid.py	/^utf-8	def	_copy	(	self	)	:	\\n	    	items	=	self	.	items	(	)	\\n	subs	=	{	}	\\n	for	f	in	(	self	/;"	f
_copy_bytes	data/bpe_corpus_raw/valid.py	/^utf-8	def	_copy_bytes	(	start	,	end	,	seq	)	:	\\n	    	if	isinstance	(	seq	,	_memoryview	)	:	\\n/;"	f
_copy_bytes	data/data_raw/valid.py	/^utf-8	def	_copy_bytes	(	start	,	end	,	seq	)	:	\\n	    	if	isinstance	(	seq	,	_memoryview	)	:	\\n/;"	f
_copy_skps	data/bpe_corpus_raw/train.py	/^utf-8	def	_copy_skps	(	self	)	:	\\n	    	version_file	=	self	.	m	.	vars	.	infrabots_dir	.	join	(/;"	f
_copy_skps	data/data_raw/train.py	/^utf-8	def	_copy_skps	(	self	)	:	\\n	    	version_file	=	self	.	m	.	vars	.	infrabots_dir	.	join	(/;"	f
_count_messages	data/bpe_corpus_raw/train.py	/^utf-8	@	defer	.	inlineCallbacks	\\n	def	count_daily_messages	(	self	)	:	\\n	\\n	    	def	_count_/;"	f	function:count_daily_messages	file:
_count_messages	data/data_raw/train.py	/^utf-8	@	defer	.	inlineCallbacks	\\n	def	count_daily_messages	(	self	)	:	\\n	\\n	    	def	_count_/;"	f	function:count_daily_messages	file:
_create	data/bpe_corpus_raw/train.py	/^utf-8	def	_create	(	self	,	fname	)	:	\\n	    	return	self	.	openshift_cmd	(	[	'create'	,	'-f'	,	/;"	f
_create	data/bpe_corpus_raw/valid.py	/^utf-8	def	_create	(	self	,	typeid	,	*	args	,	**	kwds	)	:	\\n	    	assert	self	.	_state	.	value	=/;"	f
_create	data/data_raw/train.py	/^utf-8	def	_create	(	self	,	fname	)	:	\\n	    	return	self	.	openshift_cmd	(	[	'create'	,	'-f'	,	/;"	f
_create	data/data_raw/valid.py	/^utf-8	def	_create	(	self	,	typeid	,	*	args	,	**	kwds	)	:	\\n	    	assert	self	.	_state	.	value	=/;"	f
_create_course	data/bpe_corpus_raw/train.py	/^utf-8	def	_create_course	(	self	,	store_type	)	:	\\n	    	with	self	.	store	.	default_store	(	st/;"	f
_create_course	data/data_raw/train.py	/^utf-8	def	_create_course	(	self	,	store_type	)	:	\\n	    	with	self	.	store	.	default_store	(	st/;"	f
_create_except	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_create_except	(	cls	,	*	selects	,	**	kwargs	)	:	\\n	    	return	Com/;"	f
_create_except	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_create_except	(	cls	,	*	selects	,	**	kwargs	)	:	\\n	    	return	Com/;"	f
_create_flags	data/bpe_corpus_raw/train.py	/^utf-8	def	_create_flags	(	self	,	kw	)	:	\\n	    	flags	=	{	}	\\n	for	k	in	kw	.	keys	(	)	:	\\n	  /;"	f
_create_flags	data/data_raw/train.py	/^utf-8	def	_create_flags	(	self	,	kw	)	:	\\n	    	flags	=	{	}	\\n	for	k	in	kw	.	keys	(	)	:	\\n	  /;"	f
_create_from_content	data/bpe_corpus_raw/test.py	/^utf-8	def	_create_from_content	(	self	,	rname	,	content	)	:	\\n	    	fname	=	Utils	.	create_tmpf/;"	f
_create_from_content	data/bpe_corpus_raw/valid.py	/^utf-8	def	_create_from_content	(	self	,	rname	,	content	)	:	\\n	    	fname	=	Utils	.	create_tmpf/;"	f
_create_from_content	data/data_raw/test.py	/^utf-8	def	_create_from_content	(	self	,	rname	,	content	)	:	\\n	    	fname	=	Utils	.	create_tmpf/;"	f
_create_from_content	data/data_raw/valid.py	/^utf-8	def	_create_from_content	(	self	,	rname	,	content	)	:	\\n	    	fname	=	Utils	.	create_tmpf/;"	f
_create_parser	data/bpe_corpus_raw/valid.py	/^utf-8	def	_create_parser	(	cb	)	:	\\n	    	parser	=	xml	.	sax	.	make_parser	(	)	\\n	handler	=	Pa/;"	f
_create_parser	data/data_raw/valid.py	/^utf-8	def	_create_parser	(	cb	)	:	\\n	    	parser	=	xml	.	sax	.	make_parser	(	)	\\n	handler	=	Pa/;"	f
_create_payload	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	_create_payload	(	payload	)	:	\\n	    	blocks	,	remainder	=	divmod	/;"	f
_create_payload	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	_create_payload	(	payload	)	:	\\n	    	blocks	,	remainder	=	divmod	/;"	f
_create_place_goal	data/bpe_corpus_raw/valid.py	/^utf-8	def	_create_place_goal	(	self	,	group	,	target	,	places	)	:	\\n	    	goal	=	PlaceGoal	(	)	/;"	f
_create_place_goal	data/data_raw/valid.py	/^utf-8	def	_create_place_goal	(	self	,	group	,	target	,	places	)	:	\\n	    	goal	=	PlaceGoal	(	)	/;"	f
_create_protocol	data/bpe_corpus_raw/valid.py	/^utf-8	def	_create_protocol	(	self	,	host	=	None	,	port	=	0	)	:	\\n	    	protocol	=	self	.	protoc/;"	f
_create_protocol	data/data_raw/valid.py	/^utf-8	def	_create_protocol	(	self	,	host	=	None	,	port	=	0	)	:	\\n	    	protocol	=	self	.	protoc/;"	f
_create_socks_endpoint	data/bpe_corpus_raw/valid.py	/^utf-8	@	defer	.	inlineCallbacks	\\n	def	_create_socks_endpoint	(	reactor	,	control_protocol	,	so/;"	f
_create_socks_endpoint	data/data_raw/valid.py	/^utf-8	@	defer	.	inlineCallbacks	\\n	def	_create_socks_endpoint	(	reactor	,	control_protocol	,	so/;"	f
_create_ui	data/bpe_corpus_raw/test.py	/^utf-8	def	_create_ui	(	self	)	:	\\n	    	self	.	preview	=	None	\\n	self	.	about_dialog	=	None	\\/;"	f
_create_ui	data/data_raw/test.py	/^utf-8	def	_create_ui	(	self	)	:	\\n	    	self	.	preview	=	None	\\n	self	.	about_dialog	=	None	\\/;"	f
_cut_files_to_clipboard	data/bpe_corpus_raw/valid.py	/^utf-8	def	_cut_files_to_clipboard	(	self	,	widget	=	None	,	data	=	None	)	:	\\n	    	self	.	_copy/;"	f
_cut_files_to_clipboard	data/data_raw/valid.py	/^utf-8	def	_cut_files_to_clipboard	(	self	,	widget	=	None	,	data	=	None	)	:	\\n	    	self	.	_copy/;"	f
_date	data/bpe_corpus_raw/train.py	/^utf-8	def	_date	(	self	,	level	,	date	)	:	\\n	    	self	.	_datewritten	=	True	\\n	start	=	date	./;"	f
_date	data/data_raw/train.py	/^utf-8	def	_date	(	self	,	level	,	date	)	:	\\n	    	self	.	_datewritten	=	True	\\n	start	=	date	./;"	f
_decode_value	data/bpe_corpus_raw/valid.py	/^utf-8	def	_decode_value	(	self	,	value	)	:	\\n	    	if	isinstance	(	value	,	cgi	.	FieldStorage	)/;"	f
_decode_value	data/data_raw/valid.py	/^utf-8	def	_decode_value	(	self	,	value	)	:	\\n	    	if	isinstance	(	value	,	cgi	.	FieldStorage	)/;"	f
_decompose_page	data/bpe_corpus_raw/train.py	/^utf-8	def	_decompose_page	(	self	)	:	\\n	    	if	not	(	hasattr	(	self	,	'_text'	)	or	self	.	text/;"	f
_decompose_page	data/data_raw/train.py	/^utf-8	def	_decompose_page	(	self	)	:	\\n	    	if	not	(	hasattr	(	self	,	'_text'	)	or	self	.	text/;"	f
_decorator	data/bpe_corpus_raw/valid.py	/^utf-8	def	omit_exception	(	method	=	None	,	return_value	=	None	)	:	\\n	    	if	method	is	None	:	/;"	f	function:omit_exception	file:
_decorator	data/data_raw/valid.py	/^utf-8	def	omit_exception	(	method	=	None	,	return_value	=	None	)	:	\\n	    	if	method	is	None	:	/;"	f	function:omit_exception	file:
_dedup_history	data/bpe_corpus_raw/valid.py	/^utf-8	def	_dedup_history	(	self	)	:	\\n	    	self	.	history	=	{	x	:	self	.	_dedup_deque	(	self	./;"	f
_dedup_history	data/data_raw/valid.py	/^utf-8	def	_dedup_history	(	self	)	:	\\n	    	self	.	history	=	{	x	:	self	.	_dedup_deque	(	self	./;"	f
_default_dupe_key_error	data/bpe_corpus_raw/valid.py	/^utf-8	@	filters	(	'mysql'	,	sqla_exc	.	IntegrityError	,	\\n	"^.*\\\\\\\\b1062\\\\\\\\b.*Duplicat/;"	f
_default_dupe_key_error	data/data_raw/valid.py	/^utf-8	@	filters	(	'mysql'	,	sqla_exc	.	IntegrityError	,	\\n	"^.*\\\\\\\\b1062\\\\\\\\b.*Duplicat/;"	f
_default_key_normalizer	data/bpe_corpus_raw/valid.py	/^utf-8	def	_default_key_normalizer	(	key_class	,	request_context	)	:	\\n	    	context	=	{	}	\\n	f/;"	f
_default_key_normalizer	data/data_raw/valid.py	/^utf-8	def	_default_key_normalizer	(	key_class	,	request_context	)	:	\\n	    	context	=	{	}	\\n	f/;"	f
_define_helper	data/bpe_corpus_raw/valid.py	/^utf-8	def	_define_helper	(	flag_name	,	default_value	,	docstring	,	flagtype	)	:	\\n	    	_global/;"	f
_define_helper	data/data_raw/valid.py	/^utf-8	def	_define_helper	(	flag_name	,	default_value	,	docstring	,	flagtype	)	:	\\n	    	_global/;"	f
_delegatedToUIDs	data/bpe_corpus_raw/valid.py	/^utf-8	@	inlineCallbacks	\\n	def	_delegatedToUIDs	(	self	,	txn	,	delegate	,	readWrite	,	onlyThisS/;"	f
_delegatedToUIDs	data/data_raw/valid.py	/^utf-8	@	inlineCallbacks	\\n	def	_delegatedToUIDs	(	self	,	txn	,	delegate	,	readWrite	,	onlyThisS/;"	f
_delete	data/bpe_corpus_raw/valid.py	/^utf-8	def	_delete	(	self	,	resource	,	data	,	query_id	=	None	,	subcategory	=	None	,	\\n	second_q/;"	f
_delete	data/data_raw/valid.py	/^utf-8	def	_delete	(	self	,	resource	,	data	,	query_id	=	None	,	subcategory	=	None	,	\\n	second_q/;"	f
_delete_fields	data/bpe_corpus_raw/train.py	/^utf-8	def	_delete_fields	(	srv	,	data	)	:	\\n	    	if	srv	[	0	]	in	DELETE_FIELDS	:	\\n	        	/;"	f
_delete_fields	data/data_raw/train.py	/^utf-8	def	_delete_fields	(	srv	,	data	)	:	\\n	    	if	srv	[	0	]	in	DELETE_FIELDS	:	\\n	        	/;"	f
_delete_last	data/bpe_corpus_raw/train.py	/^utf-8	def	_delete_last	(	self	)	:	\\n	    	last_address	=	self	.	current	+	1	\\n	try	:	\\n	     /;"	f
_delete_last	data/data_raw/train.py	/^utf-8	def	_delete_last	(	self	)	:	\\n	    	last_address	=	self	.	current	+	1	\\n	try	:	\\n	     /;"	f
_deps_var	data/bpe_corpus_raw/train.py	/^utf-8	def	_deps_var	(	deps_globals	)	:	\\n	\\n	    	def	_var_impl	(	var_name	)	:	\\n	        	""/;"	f
_deps_var	data/data_raw/train.py	/^utf-8	def	_deps_var	(	deps_globals	)	:	\\n	\\n	    	def	_var_impl	(	var_name	)	:	\\n	        	""/;"	f
_detect_gce_environment	data/bpe_corpus_raw/valid.py	/^utf-8	def	_detect_gce_environment	(	)	:	\\n	    	connection	=	six	.	moves	.	http_client	.	HTTPCo/;"	f
_detect_gce_environment	data/data_raw/valid.py	/^utf-8	def	_detect_gce_environment	(	)	:	\\n	    	connection	=	six	.	moves	.	http_client	.	HTTPCo/;"	f
_determine_joins	data/bpe_corpus_raw/valid.py	/^utf-8	def	_determine_joins	(	self	)	:	\\n	    	if	self	.	secondaryjoin	is	not	None	and	self	.	se/;"	f
_determine_joins	data/data_raw/valid.py	/^utf-8	def	_determine_joins	(	self	)	:	\\n	    	if	self	.	secondaryjoin	is	not	None	and	self	.	se/;"	f
_display_main_menu	data/bpe_corpus_raw/test.py	/^utf-8	def	_display_main_menu	(	self	,	output	)	:	\\n	    	if	debugger_cli_common	.	MAIN_MENU_KEY/;"	f
_display_main_menu	data/data_raw/test.py	/^utf-8	def	_display_main_menu	(	self	,	output	)	:	\\n	    	if	debugger_cli_common	.	MAIN_MENU_KEY/;"	f
_do_code_blocks	data/bpe_corpus_raw/train.py	/^utf-8	def	_do_code_blocks	(	self	,	text	)	:	\\n	    	code_block_re	=	re	.	compile	(	\\n	"""\\n  /;"	f
_do_code_blocks	data/data_raw/train.py	/^utf-8	def	_do_code_blocks	(	self	,	text	)	:	\\n	    	code_block_re	=	re	.	compile	(	\\n	"""\\n  /;"	f
_do_extra_actions	data/bpe_corpus_raw/valid.py	/^utf-8	def	_do_extra_actions	(	api_content	,	cc_content	,	request_fields	,	actions_form	,	\\n	con/;"	f
_do_extra_actions	data/data_raw/valid.py	/^utf-8	def	_do_extra_actions	(	api_content	,	cc_content	,	request_fields	,	actions_form	,	\\n	con/;"	f
_do_wait_for_mongos_retarget	data/bpe_corpus_raw/valid.py	/^utf-8	def	_do_wait_for_mongos_retarget	(	self	)	:	\\n	    	if	not	self	.	_should_wait_for_mongos/;"	f
_do_wait_for_mongos_retarget	data/data_raw/valid.py	/^utf-8	def	_do_wait_for_mongos_retarget	(	self	)	:	\\n	    	if	not	self	.	_should_wait_for_mongos/;"	f
_downsample	data/bpe_corpus_raw/train.py	/^utf-8	def	_downsample	(	self	,	maxpts	=	None	,	x	=	None	,	z	=	None	)	:	\\n	    	if	maxpts	is	Non/;"	f
_downsample	data/data_raw/train.py	/^utf-8	def	_downsample	(	self	,	maxpts	=	None	,	x	=	None	,	z	=	None	)	:	\\n	    	if	maxpts	is	Non/;"	f
_drawline	data/bpe_corpus_raw/valid.py	/^utf-8	def	_drawline	(	self	,	lineitem	,	coordlist	=	None	,	fill	=	None	,	width	=	None	,	top	=	Fa/;"	f
_drawline	data/data_raw/valid.py	/^utf-8	def	_drawline	(	self	,	lineitem	,	coordlist	=	None	,	fill	=	None	,	width	=	None	,	top	=	Fa/;"	f
_dtype	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	_dtype	(	self	)	:	\\n	    	if	self	.	_dtype_	is	not	None	:	\\n	        /;"	f
_dtype	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	_dtype	(	self	)	:	\\n	    	if	self	.	_dtype_	is	not	None	:	\\n	        /;"	f
_dump_response	data/bpe_corpus_raw/valid.py	/^utf-8	def	_dump_response	(	http_response	)	:	\\n	    	output	=	'HttpResponse\\\\n  status: %s\\\\/;"	f
_dump_response	data/data_raw/valid.py	/^utf-8	def	_dump_response	(	http_response	)	:	\\n	    	output	=	'HttpResponse\\\\n  status: %s\\\\/;"	f
_e	data/bpe_corpus_raw/valid.py	/^utf-8	def	_e	(	op	,	inv	=	False	)	:	\\n	\\n	    	def	inner	(	self	,	rhs	)	:	\\n	        	if	inv	/;"	f
_e	data/data_raw/valid.py	/^utf-8	def	_e	(	op	,	inv	=	False	)	:	\\n	\\n	    	def	inner	(	self	,	rhs	)	:	\\n	        	if	inv	/;"	f
_email_entry_changed	data/bpe_corpus_raw/train.py	/^utf-8	def	_email_entry_changed	(	self	,	x	,	y	)	:	\\n	    	ok_button	=	self	.	get_widget_for_res/;"	f
_email_entry_changed	data/data_raw/train.py	/^utf-8	def	_email_entry_changed	(	self	,	x	,	y	)	:	\\n	    	ok_button	=	self	.	get_widget_for_res/;"	f
_encode	data/bpe_corpus_raw/train.py	/^utf-8	def	_encode	(	self	,	provider	,	entity	,	pretty	,	subtree	)	:	\\n	    	bundle_name	=	_get_/;"	f
_encode	data/data_raw/train.py	/^utf-8	def	_encode	(	self	,	provider	,	entity	,	pretty	,	subtree	)	:	\\n	    	bundle_name	=	_get_/;"	f
_encode64	data/bpe_corpus_raw/train.py	/^utf-8	def	unix_md5_passwd	(	password	,	salt	,	magic	=	'$1$'	,	**	kwargs	)	:	\\n	\\n	    	def	_en/;"	f	function:unix_md5_passwd	file:
_encode64	data/data_raw/train.py	/^utf-8	def	unix_md5_passwd	(	password	,	salt	,	magic	=	'$1$'	,	**	kwargs	)	:	\\n	\\n	    	def	_en/;"	f	function:unix_md5_passwd	file:
_end_progress_cb	data/bpe_corpus_raw/train.py	/^utf-8	def	_end_progress_cb	(	self	,	*	args	)	:	\\n	    	for	collection	in	self	.	collections	.	i/;"	f
_end_progress_cb	data/data_raw/train.py	/^utf-8	def	_end_progress_cb	(	self	,	*	args	)	:	\\n	    	for	collection	in	self	.	collections	.	i/;"	f
_eq	data/bpe_corpus_raw/valid.py	/^utf-8	def	_eq	(	self	,	other	)	:	\\n	    	return	(	self	.	type	,	self	.	children	)	==	(	other	.	/;"	f
_eq	data/bpe_corpus_raw/valid.py	/^utf-8	def	_eq	(	self	,	other	)	:	\\n	    	return	(	self	.	type	,	self	.	value	)	==	(	other	.	typ/;"	f
_eq	data/data_raw/valid.py	/^utf-8	def	_eq	(	self	,	other	)	:	\\n	    	return	(	self	.	type	,	self	.	children	)	==	(	other	.	/;"	f
_eq	data/data_raw/valid.py	/^utf-8	def	_eq	(	self	,	other	)	:	\\n	    	return	(	self	.	type	,	self	.	value	)	==	(	other	.	typ/;"	f
_equivalent_columns	data/bpe_corpus_raw/train.py	/^utf-8	@	_memoized_configured_property	\\n	def	_equivalent_columns	(	self	)	:	\\n	    	result	=	u/;"	f
_equivalent_columns	data/data_raw/train.py	/^utf-8	@	_memoized_configured_property	\\n	def	_equivalent_columns	(	self	)	:	\\n	    	result	=	u/;"	f
_erase_existing_command	data/bpe_corpus_raw/valid.py	/^utf-8	def	_erase_existing_command	(	self	)	:	\\n	    	existing_len	=	len	(	self	.	_command_textb/;"	f
_erase_existing_command	data/data_raw/valid.py	/^utf-8	def	_erase_existing_command	(	self	)	:	\\n	    	existing_len	=	len	(	self	.	_command_textb/;"	f
_err_details_to_string	data/bpe_corpus_raw/valid.py	/^utf-8	def	_err_details_to_string	(	self	,	test	,	err	=	None	,	details	=	None	)	:	\\n	    	if	err/;"	f
_err_details_to_string	data/data_raw/valid.py	/^utf-8	def	_err_details_to_string	(	self	,	test	,	err	=	None	,	details	=	None	)	:	\\n	    	if	err/;"	f
_escape	data/bpe_corpus_raw/train.py	/^utf-8	def	_escape	(	value	)	:	\\n	    	if	isinstance	(	value	,	(	list	,	tuple	)	)	:	\\n	        /;"	f
_escape	data/bpe_corpus_raw/valid.py	/^utf-8	def	_escape	(	s	)	:	\\n	    	e	=	s	\\n	e	=	e	.	replace	(	'\\\\\\\\'	,	'\\\\\\\\\\\\\\\\'	)/;"	f
_escape	data/data_raw/train.py	/^utf-8	def	_escape	(	value	)	:	\\n	    	if	isinstance	(	value	,	(	list	,	tuple	)	)	:	\\n	        /;"	f
_escape	data/data_raw/valid.py	/^utf-8	def	_escape	(	s	)	:	\\n	    	e	=	s	\\n	e	=	e	.	replace	(	'\\\\\\\\'	,	'\\\\\\\\\\\\\\\\'	)/;"	f
_evalf_	data/bpe_corpus_raw/valid.py	/^utf-8	def	_evalf_	(	self	,	x	,	y	,	parent	=	None	,	algorithm	=	'pari'	)	:	\\n	    	R	=	parent	or/;"	f
_evalf_	data/data_raw/valid.py	/^utf-8	def	_evalf_	(	self	,	x	,	y	,	parent	=	None	,	algorithm	=	'pari'	)	:	\\n	    	R	=	parent	or/;"	f
_evaluate_compare	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_add_comparison_methods	(	cls	)	:	\\n	\\n	    	def	_make_compare	(	o/;"	f	function:_add_comparison_methods._make_compare	file:
_evaluate_compare	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_add_comparison_methods	(	cls	)	:	\\n	\\n	    	def	_make_compare	(	o/;"	f	function:_add_comparison_methods._make_compare	file:
_exec_command	data/bpe_corpus_raw/valid.py	/^utf-8	def	_exec_command	(	command	,	use_shell	=	None	,	use_tee	=	None	,	**	env	)	:	\\n	    	if	u/;"	f
_exec_command	data/data_raw/valid.py	/^utf-8	def	_exec_command	(	command	,	use_shell	=	None	,	use_tee	=	None	,	**	env	)	:	\\n	    	if	u/;"	f
_execute	data/bpe_corpus_raw/valid.py	/^utf-8	@	skip_on_condition	(	'sys.version_info >= (3,7)'	,	'test conflicts with PEP 479'	)	\\n	de/;"	f	member:test_codecorator_no_iteration.CoroutineBiNode.is_trainable	file:
_execute	data/data_raw/valid.py	/^utf-8	@	skip_on_condition	(	'sys.version_info >= (3,7)'	,	'test conflicts with PEP 479'	)	\\n	de/;"	f	member:test_codecorator_no_iteration.CoroutineBiNode.is_trainable	file:
_expand_classname	data/bpe_corpus_raw/test.py	/^utf-8	def	_expand_classname	(	classname	)	:	\\n	    	result	=	[	]	\\n	parts	=	classname	.	split	/;"	f
_expand_classname	data/data_raw/test.py	/^utf-8	def	_expand_classname	(	classname	)	:	\\n	    	result	=	[	]	\\n	parts	=	classname	.	split	/;"	f
_extend_numeric	data/bpe_corpus_raw/valid.py	/^utf-8	def	_extend_numeric	(	self	,	type_	,	spec	)	:	\\n	    	if	not	self	.	_mysql_type	(	type_	)/;"	f
_extend_numeric	data/data_raw/valid.py	/^utf-8	def	_extend_numeric	(	self	,	type_	,	spec	)	:	\\n	    	if	not	self	.	_mysql_type	(	type_	)/;"	f
_extract_keys	data/bpe_corpus_raw/valid.py	/^utf-8	def	_extract_keys	(	self	,	predictions	,	predict_keys	)	:	\\n	    	if	not	predict_keys	:	\\/;"	f
_extract_keys	data/data_raw/valid.py	/^utf-8	def	_extract_keys	(	self	,	predictions	,	predict_keys	)	:	\\n	    	if	not	predict_keys	:	\\/;"	f
_fast_kde_2d	data/bpe_corpus_raw/train.py	/^utf-8	def	_fast_kde_2d	(	x	,	y	,	gridsize	=	(	128	,	128	)	,	circular	=	False	)	:	\\n	    	x	=	np/;"	f
_fast_kde_2d	data/data_raw/train.py	/^utf-8	def	_fast_kde_2d	(	x	,	y	,	gridsize	=	(	128	,	128	)	,	circular	=	False	)	:	\\n	    	x	=	np/;"	f
_fetch_more_columns	data/bpe_corpus_raw/valid.py	/^utf-8	def	_fetch_more_columns	(	self	)	:	\\n	    	self	.	table_header	.	model	(	)	.	fetch_more	(/;"	f
_fetch_more_columns	data/data_raw/valid.py	/^utf-8	def	_fetch_more_columns	(	self	)	:	\\n	    	self	.	table_header	.	model	(	)	.	fetch_more	(/;"	f
_file_in_repo	data/bpe_corpus_raw/valid.py	/^utf-8	def	_file_in_repo	(	filename	,	all_files	)	:	\\n	    	new_file	=	_fix_filename	(	filename	/;"	f
_file_in_repo	data/data_raw/valid.py	/^utf-8	def	_file_in_repo	(	filename	,	all_files	)	:	\\n	    	new_file	=	_fix_filename	(	filename	/;"	f
_filterwarnings	data/bpe_corpus_raw/test.py	/^utf-8	def	_filterwarnings	(	filters	,	quiet	=	False	)	:	\\n	    	frame	=	sys	.	_getframe	(	2	)	\\/;"	f
_filterwarnings	data/data_raw/test.py	/^utf-8	def	_filterwarnings	(	filters	,	quiet	=	False	)	:	\\n	    	frame	=	sys	.	_getframe	(	2	)	\\/;"	f
_find_build_tool	data/bpe_corpus_raw/train.py	/^utf-8	def	_find_build_tool	(	toolname	)	:	\\n	    	return	_find_executable	(	toolname	)	or	_read/;"	f
_find_build_tool	data/data_raw/train.py	/^utf-8	def	_find_build_tool	(	toolname	)	:	\\n	    	return	_find_executable	(	toolname	)	or	_read/;"	f
_find_target_guid_recursively	data/bpe_corpus_raw/train.py	/^utf-8	def	_find_target_guid_recursively	(	self	,	id	)	:	\\n	    	try	:	\\n	        	return	self	/;"	f
_find_target_guid_recursively	data/data_raw/train.py	/^utf-8	def	_find_target_guid_recursively	(	self	,	id	)	:	\\n	    	try	:	\\n	        	return	self	/;"	f
_find_worker_queues	data/bpe_corpus_raw/valid.py	/^utf-8	def	_find_worker_queues	(	self	,	proc	)	:	\\n	    	try	:	\\n	        	return	next	(	q	for	/;"	f
_find_worker_queues	data/data_raw/valid.py	/^utf-8	def	_find_worker_queues	(	self	,	proc	)	:	\\n	    	try	:	\\n	        	return	next	(	q	for	/;"	f
_fitInViewActionSlot	data/bpe_corpus_raw/valid.py	/^utf-8	def	_fitInViewActionSlot	(	self	)	:	\\n	    	view	=	self	.	uiGraphicsView	\\n	bounding_rec/;"	f
_fitInViewActionSlot	data/data_raw/valid.py	/^utf-8	def	_fitInViewActionSlot	(	self	)	:	\\n	    	view	=	self	.	uiGraphicsView	\\n	bounding_rec/;"	f
_fixup_pe_header	data/bpe_corpus_raw/train.py	/^utf-8	def	_fixup_pe_header	(	self	,	pe	)	:	\\n	    	for	section	in	pe	.	sections	:	\\n	        	/;"	f
_fixup_pe_header	data/data_raw/train.py	/^utf-8	def	_fixup_pe_header	(	self	,	pe	)	:	\\n	    	for	section	in	pe	.	sections	:	\\n	        	/;"	f
_flow_mod_modify_strict	data/bpe_corpus_raw/valid.py	/^utf-8	def	_flow_mod_modify_strict	(	self	,	flow_mod	,	connection	,	table	)	:	\\n	    	self	.	_fl/;"	f
_flow_mod_modify_strict	data/data_raw/valid.py	/^utf-8	def	_flow_mod_modify_strict	(	self	,	flow_mod	,	connection	,	table	)	:	\\n	    	self	.	_fl/;"	f
_fn	data/bpe_corpus_raw/valid.py	/^utf-8	def	resource_url_fn	(	model	,	urlconf_detail_re	=	'(?P<pk>\\\\\\\\d+)'	,	mixins	=	(	)	,	\\/;"	f	function:resource_url_fn	file:
_fn	data/data_raw/valid.py	/^utf-8	def	resource_url_fn	(	model	,	urlconf_detail_re	=	'(?P<pk>\\\\\\\\d+)'	,	mixins	=	(	)	,	\\/;"	f	function:resource_url_fn	file:
_fn_matches	data/bpe_corpus_raw/valid.py	/^utf-8	def	_fn_matches	(	fn	,	glob	)	:	\\n	    	if	glob	not	in	_pattern_cache	:	\\n	        	patt/;"	f
_fn_matches	data/data_raw/valid.py	/^utf-8	def	_fn_matches	(	fn	,	glob	)	:	\\n	    	if	glob	not	in	_pattern_cache	:	\\n	        	patt/;"	f
_format	data/bpe_corpus_raw/train.py	/^utf-8	def	dump	(	node	,	annotate_fields	=	True	,	include_attributes	=	False	)	:	\\n	\\n	    	def/;"	f	function:dump	file:
_format	data/data_raw/train.py	/^utf-8	def	dump	(	node	,	annotate_fields	=	True	,	include_attributes	=	False	)	:	\\n	\\n	    	def/;"	f	function:dump	file:
_formatMessage	data/bpe_corpus_raw/valid.py	/^utf-8	def	_formatMessage	(	self	,	msg	,	standardMsg	)	:	\\n	    	if	not	self	.	longMessage	:	\\n/;"	f
_formatMessage	data/data_raw/valid.py	/^utf-8	def	_formatMessage	(	self	,	msg	,	standardMsg	)	:	\\n	    	if	not	self	.	longMessage	:	\\n/;"	f
_format_fields_tokens	data/bpe_corpus_raw/valid.py	/^utf-8	def	_format_fields_tokens	(	self	,	fields	,	title_width	=	0	)	:	\\n	    	out	=	[	]	\\n	if	/;"	f
_format_fields_tokens	data/data_raw/valid.py	/^utf-8	def	_format_fields_tokens	(	self	,	fields	,	title_width	=	0	)	:	\\n	    	out	=	[	]	\\n	if	/;"	f
_format_progress_event	data/bpe_corpus_raw/train.py	/^utf-8	def	_format_progress_event	(	status	,	progress	,	total	,	step	)	:	\\n	    	return	{	'statu/;"	f
_format_progress_event	data/data_raw/train.py	/^utf-8	def	_format_progress_event	(	status	,	progress	,	total	,	step	)	:	\\n	    	return	{	'statu/;"	f
_format_select	data/bpe_corpus_raw/valid.py	/^utf-8	def	_format_select	(	formatter	,	name	)	:	\\n	    	for	caster	in	formatter	.	split	(	'-'	)/;"	f
_format_select	data/data_raw/valid.py	/^utf-8	def	_format_select	(	formatter	,	name	)	:	\\n	    	for	caster	in	formatter	.	split	(	'-'	)/;"	f
_format_test_record	data/bpe_corpus_raw/valid.py	/^utf-8	def	_format_test_record	(	self	,	test_event	)	:	\\n	    	valid	,	error	=	self	.	_validate_/;"	f
_format_test_record	data/data_raw/valid.py	/^utf-8	def	_format_test_record	(	self	,	test_event	)	:	\\n	    	valid	,	error	=	self	.	_validate_/;"	f
_from_base_type	data/bpe_corpus_raw/valid.py	/^utf-8	def	_from_base_type	(	self	,	ent	)	:	\\n	    	if	ent	.	_projection	:	\\n	        	return	_/;"	f
_from_base_type	data/data_raw/valid.py	/^utf-8	def	_from_base_type	(	self	,	ent	)	:	\\n	    	if	ent	.	_projection	:	\\n	        	return	_/;"	f
_from_site_terminals	data/bpe_corpus_raw/train.py	/^utf-8	def	_from_site_terminals	(	elem	,	passage	,	elem2node	)	:	\\n	    	layer0	.	Layer0	(	passa/;"	f
_from_site_terminals	data/data_raw/train.py	/^utf-8	def	_from_site_terminals	(	elem	,	passage	,	elem2node	)	:	\\n	    	layer0	.	Layer0	(	passa/;"	f
_gen_parser	data/bpe_corpus_raw/valid.py	/^utf-8	def	_gen_parser	(	)	:	\\n	    	char	=	(	'['	+	pp	.	CaselessKeyword	(	'char'	)	+	']'	+	pp	./;"	f
_gen_parser	data/data_raw/valid.py	/^utf-8	def	_gen_parser	(	)	:	\\n	    	char	=	(	'['	+	pp	.	CaselessKeyword	(	'char'	)	+	']'	+	pp	./;"	f
_generate	data/bpe_corpus_raw/valid.py	/^utf-8	def	select	(	self	,	stream	,	namespaces	=	None	,	variables	=	None	)	:	\\n	    	if	namespac/;"	f	function:select	file:
_generate	data/data_raw/valid.py	/^utf-8	def	select	(	self	,	stream	,	namespaces	=	None	,	variables	=	None	)	:	\\n	    	if	namespac/;"	f	function:select	file:
_generate_base_anchors	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	_generate_base_anchors	(	base_size	,	scales	,	ratios	)	:	\\n	    	b/;"	f
_generate_base_anchors	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	_generate_base_anchors	(	base_size	,	scales	,	ratios	)	:	\\n	    	b/;"	f
_generate_cache_header_key	data/bpe_corpus_raw/train.py	/^utf-8	def	_generate_cache_header_key	(	key_prefix	,	request	)	:	\\n	    	path	=	hashlib	.	md5	(	/;"	f
_generate_cache_header_key	data/data_raw/train.py	/^utf-8	def	_generate_cache_header_key	(	key_prefix	,	request	)	:	\\n	    	path	=	hashlib	.	md5	(	/;"	f
_generate_empty_row	data/bpe_corpus_raw/train.py	/^utf-8	@	staticmethod	\\n	def	_generate_empty_row	(	scan_number	,	status	=	'In-Queue'	,	ws_name	=/;"	f
_generate_empty_row	data/data_raw/train.py	/^utf-8	@	staticmethod	\\n	def	_generate_empty_row	(	scan_number	,	status	=	'In-Queue'	,	ws_name	=/;"	f
_generate_pattern	data/bpe_corpus_raw/valid.py	/^utf-8	def	_generate_pattern	(	self	,	text	)	:	\\n	    	chars	=	list	(	text	)	\\n	for	i	in	range	/;"	f
_generate_pattern	data/data_raw/valid.py	/^utf-8	def	_generate_pattern	(	self	,	text	)	:	\\n	    	chars	=	list	(	text	)	\\n	for	i	in	range	/;"	f
_generate_union	data/bpe_corpus_raw/valid.py	/^utf-8	def	_generate_union	(	self	,	union_type	)	:	\\n	    	union_name	=	fmt_type_name	(	union_ty/;"	f
_generate_union	data/data_raw/valid.py	/^utf-8	def	_generate_union	(	self	,	union_type	)	:	\\n	    	union_name	=	fmt_type_name	(	union_ty/;"	f
_get	data/bpe_corpus_raw/train.py	/^utf-8	def	_get	(	self	,	resource	,	name	=	None	,	selector	=	None	)	:	\\n	    	cmd	=	[	'get'	,	re/;"	f
_get	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get	(	self	,	resource	,	name	=	None	,	selector	=	None	)	:	\\n	    	cmd	=	[	'get'	,	re/;"	f
_get	data/bpe_corpus_raw/valid.py	/^utf-8	def	_load_static_data	(	filename	)	:	\\n	    	is_frozen	=	hasattr	(	sys	,	'frozen'	)	or	im/;"	x	function:_load_static_data	file:
_get	data/data_raw/train.py	/^utf-8	def	_get	(	self	,	resource	,	name	=	None	,	selector	=	None	)	:	\\n	    	cmd	=	[	'get'	,	re/;"	f
_get	data/data_raw/valid.py	/^utf-8	def	_get	(	self	,	resource	,	name	=	None	,	selector	=	None	)	:	\\n	    	cmd	=	[	'get'	,	re/;"	f
_get	data/data_raw/valid.py	/^utf-8	def	_load_static_data	(	filename	)	:	\\n	    	is_frozen	=	hasattr	(	sys	,	'frozen'	)	or	im/;"	x	function:_load_static_data	file:
_getAssertEqualityFunc	data/bpe_corpus_raw/valid.py	/^utf-8	def	_getAssertEqualityFunc	(	self	,	first	,	second	)	:	\\n	    	if	type	(	first	)	is	type	/;"	f
_getAssertEqualityFunc	data/data_raw/valid.py	/^utf-8	def	_getAssertEqualityFunc	(	self	,	first	,	second	)	:	\\n	    	if	type	(	first	)	is	type	/;"	f
_getAvailablePlugins	data/bpe_corpus_raw/train.py	/^utf-8	def	_getAvailablePlugins	(	self	)	:	\\n	    	try	:	\\n	        	import	hytra	\\n	exportPlu/;"	f
_getAvailablePlugins	data/data_raw/train.py	/^utf-8	def	_getAvailablePlugins	(	self	)	:	\\n	    	try	:	\\n	        	import	hytra	\\n	exportPlu/;"	f
_getDeclarations	data/bpe_corpus_raw/valid.py	/^utf-8	def	_getDeclarations	(	self	)	:	\\n	    	doctype	=	self	.	context	.	ownerDocument	.	doctyp/;"	f
_getDeclarations	data/data_raw/valid.py	/^utf-8	def	_getDeclarations	(	self	)	:	\\n	    	doctype	=	self	.	context	.	ownerDocument	.	doctyp/;"	f
_getDigestStartPos	data/bpe_corpus_raw/train.py	/^utf-8	def	_getDigestStartPos	(	self	,	line	,	mode	)	:	\\n	    	if	mode	==	0	:	\\n	        	retur/;"	f
_getDigestStartPos	data/data_raw/train.py	/^utf-8	def	_getDigestStartPos	(	self	,	line	,	mode	)	:	\\n	    	if	mode	==	0	:	\\n	        	retur/;"	f
_getHandlers	data/bpe_corpus_raw/valid.py	/^utf-8	def	_getHandlers	(	self	)	:	\\n	    	master_struct	=	self	.	_getFormMetadata	(	self	.	form/;"	f
_getHandlers	data/data_raw/valid.py	/^utf-8	def	_getHandlers	(	self	)	:	\\n	    	master_struct	=	self	.	_getFormMetadata	(	self	.	form/;"	f
_getScalesDiag	data/bpe_corpus_raw/train.py	/^utf-8	def	_getScalesDiag	(	self	,	termx	=	0	)	:	\\n	    	assert	self	.	P	>	1	,	'VarianceDecompos/;"	f
_getScalesDiag	data/data_raw/train.py	/^utf-8	def	_getScalesDiag	(	self	,	termx	=	0	)	:	\\n	    	assert	self	.	P	>	1	,	'VarianceDecompos/;"	f
_getTarball	data/bpe_corpus_raw/train.py	/^utf-8	@	_handleAuth	\\n	def	_getTarball	(	url	,	into_directory	,	cache_key	,	origin_info	=	None	/;"	f
_getTarball	data/data_raw/train.py	/^utf-8	@	_handleAuth	\\n	def	_getTarball	(	url	,	into_directory	,	cache_key	,	origin_info	=	None	/;"	f
_get_LMv1_response	data/bpe_corpus_raw/train.py	/^utf-8	@	staticmethod	\\n	def	_get_LMv1_response	(	password	,	lmhash	,	server_challenge	)	:	\\n	 /;"	f
_get_LMv1_response	data/data_raw/train.py	/^utf-8	@	staticmethod	\\n	def	_get_LMv1_response	(	password	,	lmhash	,	server_challenge	)	:	\\n	 /;"	f
_get_action_	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_action_	(	self	,	S	,	op	,	self_on_left	)	:	\\n	    	import	operator	\\n	if	is_Fre/;"	f
_get_action_	data/data_raw/valid.py	/^utf-8	def	_get_action_	(	self	,	S	,	op	,	self_on_left	)	:	\\n	    	import	operator	\\n	if	is_Fre/;"	f
_get_active_template_in_combo	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_active_template_in_combo	(	self	)	:	\\n	    	model	=	self	.	combobox	.	get_model	/;"	f
_get_active_template_in_combo	data/data_raw/valid.py	/^utf-8	def	_get_active_template_in_combo	(	self	)	:	\\n	    	model	=	self	.	combobox	.	get_model	/;"	f
_get_arg_type	data/bpe_corpus_raw/train.py	/^utf-8	def	_get_arg_type	(	self	,	arg_value	:	Union	[	str	,	bytes	,	bool	,	int	,	float	,	\\n	tupl/;"	f
_get_arg_type	data/data_raw/train.py	/^utf-8	def	_get_arg_type	(	self	,	arg_value	:	Union	[	str	,	bytes	,	bool	,	int	,	float	,	\\n	tupl/;"	f
_get_auth_service	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_auth_service	(	app	)	:	\\n	    	return	_utils	.	get_app_service	(	app	,	_AUTH_ATT/;"	f
_get_auth_service	data/data_raw/valid.py	/^utf-8	def	_get_auth_service	(	app	)	:	\\n	    	return	_utils	.	get_app_service	(	app	,	_AUTH_ATT/;"	f
_get_automatic_captions	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_automatic_captions	(	self	,	video_id	,	webpage	)	:	\\n	    	self	.	to_screen	(	'%/;"	f
_get_automatic_captions	data/data_raw/valid.py	/^utf-8	def	_get_automatic_captions	(	self	,	video_id	,	webpage	)	:	\\n	    	self	.	to_screen	(	'%/;"	f
_get_bad_options	data/bpe_corpus_raw/test.py	/^utf-8	@	classmethod	\\n	def	_get_bad_options	(	cls	,	prunes	,	point_strings	,	namespaces	,	cance/;"	f
_get_bad_options	data/data_raw/test.py	/^utf-8	@	classmethod	\\n	def	_get_bad_options	(	cls	,	prunes	,	point_strings	,	namespaces	,	cance/;"	f
_get_binner	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_binner	(	self	)	:	\\n	    	binner	,	bins	,	binlabels	=	self	.	_get_binner_for_tim/;"	f
_get_binner	data/data_raw/valid.py	/^utf-8	def	_get_binner	(	self	)	:	\\n	    	binner	,	bins	,	binlabels	=	self	.	_get_binner_for_tim/;"	f
_get_children	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_children	(	self	)	:	\\n	    	return	self	.	_children	\\n		$/;"	f
_get_children	data/data_raw/valid.py	/^utf-8	def	_get_children	(	self	)	:	\\n	    	return	self	.	_children	\\n		$/;"	f
_get_codes_for_values	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_codes_for_values	(	values	,	categories	)	:	\\n	    	from	pandas	.	core	.	algorith/;"	f
_get_codes_for_values	data/data_raw/valid.py	/^utf-8	def	_get_codes_for_values	(	values	,	categories	)	:	\\n	    	from	pandas	.	core	.	algorith/;"	f
_get_cohort_messages	data/bpe_corpus_raw/train.py	/^utf-8	def	_get_cohort_messages	(	self	,	type	,	wait_for_messages	=	False	)	:	\\n	    	title_css	/;"	f
_get_cohort_messages	data/data_raw/train.py	/^utf-8	def	_get_cohort_messages	(	self	,	type	,	wait_for_messages	=	False	)	:	\\n	    	title_css	/;"	f
_get_common_context	data/bpe_corpus_raw/train.py	/^utf-8	def	_get_common_context	(	self	,	commits	)	:	\\n	    	submitter_name	=	self	.	review_reque/;"	f
_get_common_context	data/data_raw/train.py	/^utf-8	def	_get_common_context	(	self	,	commits	)	:	\\n	    	submitter_name	=	self	.	review_reque/;"	f
_get_conn	data/bpe_corpus_raw/train.py	/^utf-8	def	_get_conn	(	self	,	timeout	=	None	)	:	\\n	    	conn	=	None	\\n	try	:	\\n	        	conn/;"	f
_get_conn	data/data_raw/train.py	/^utf-8	def	_get_conn	(	self	,	timeout	=	None	)	:	\\n	    	conn	=	None	\\n	try	:	\\n	        	conn/;"	f
_get_contig_based_lessthan	data/bpe_corpus_raw/train.py	/^utf-8	def	_get_contig_based_lessthan	(	contigs	)	:	\\n	    	contig_index	=	{	contig	.	name	:	i	f/;"	f
_get_contig_based_lessthan	data/data_raw/train.py	/^utf-8	def	_get_contig_based_lessthan	(	contigs	)	:	\\n	    	contig_index	=	{	contig	.	name	:	i	f/;"	f
_get_data	data/bpe_corpus_raw/train.py	/^utf-8	def	_get_data	(	self	)	:	\\n	    	return	ndarray	.	view	(	self	,	self	.	_baseclass	)	\\n		$/;"	f
_get_data	data/data_raw/train.py	/^utf-8	def	_get_data	(	self	)	:	\\n	    	return	ndarray	.	view	(	self	,	self	.	_baseclass	)	\\n		$/;"	f
_get_data_files	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_data_files	(	self	)	:	\\n	    	self	.	analyze_manifest	(	)	\\n	return	list	(	map	/;"	f
_get_data_files	data/data_raw/valid.py	/^utf-8	def	_get_data_files	(	self	)	:	\\n	    	self	.	analyze_manifest	(	)	\\n	return	list	(	map	/;"	f
_get_descending_key	data/bpe_corpus_raw/train.py	/^utf-8	def	_get_descending_key	(	gettime	=	time	.	time	)	:	\\n	    	now_descending	=	int	(	(	_FUT/;"	f
_get_descending_key	data/data_raw/train.py	/^utf-8	def	_get_descending_key	(	gettime	=	time	.	time	)	:	\\n	    	now_descending	=	int	(	(	_FUT/;"	f
_get_dict	data/bpe_corpus_raw/test.py	/^utf-8	def	create_metric_ops	(	self	,	inputs	,	labels	,	predictions	)	:	\\n	\\n	    	def	_get_dic/;"	f	function:create_metric_ops	file:
_get_dict	data/data_raw/test.py	/^utf-8	def	create_metric_ops	(	self	,	inputs	,	labels	,	predictions	)	:	\\n	\\n	    	def	_get_dic/;"	f	function:create_metric_ops	file:
_get_entry_subtype	data/bpe_corpus_raw/train.py	/^utf-8	def	_get_entry_subtype	(	self	)	:	\\n	    	if	'resource_type'	in	self	.	record	:	\\n	     /;"	f
_get_entry_subtype	data/data_raw/train.py	/^utf-8	def	_get_entry_subtype	(	self	)	:	\\n	    	if	'resource_type'	in	self	.	record	:	\\n	     /;"	f
_get_etc_paths	data/bpe_corpus_raw/train.py	/^utf-8	def	_get_etc_paths	(	self	)	:	\\n	    	etc_paths	=	dict	(	)	\\n	for	etc_module	in	self	.	E/;"	f
_get_etc_paths	data/data_raw/train.py	/^utf-8	def	_get_etc_paths	(	self	)	:	\\n	    	etc_paths	=	dict	(	)	\\n	for	etc_module	in	self	.	E/;"	f
_get_fbeta_score	data/bpe_corpus_raw/train.py	/^utf-8	def	_get_fbeta_score	(	true_positives	,	selected	,	relevant	,	beta	=	1	)	:	\\n	    	precis/;"	f
_get_fbeta_score	data/data_raw/train.py	/^utf-8	def	_get_fbeta_score	(	true_positives	,	selected	,	relevant	,	beta	=	1	)	:	\\n	    	precis/;"	f
_get_flexible_source_candidates_for_submodule	data/bpe_corpus_raw/train.py	/^utf-8	def	_get_flexible_source_candidates_for_submodule	(	ds	,	sm_path	,	sm_url	=	None	)	:	\\n	 /;"	f
_get_flexible_source_candidates_for_submodule	data/data_raw/train.py	/^utf-8	def	_get_flexible_source_candidates_for_submodule	(	ds	,	sm_path	,	sm_url	=	None	)	:	\\n	 /;"	f
_get_fs	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_fs	(	fs	,	nyq	)	:	\\n	    	if	nyq	is	None	and	fs	is	None	:	\\n	        	fs	=	2	\\/;"	f
_get_fs	data/data_raw/valid.py	/^utf-8	def	_get_fs	(	fs	,	nyq	)	:	\\n	    	if	nyq	is	None	and	fs	is	None	:	\\n	        	fs	=	2	\\/;"	f
_get_geo_params	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_geo_params	(	self	,	cortex	,	alpha	=	1.0	)	:	\\n	    	from	matplotlib	.	colors	im/;"	f
_get_geo_params	data/data_raw/valid.py	/^utf-8	def	_get_geo_params	(	self	,	cortex	,	alpha	=	1.0	)	:	\\n	    	from	matplotlib	.	colors	im/;"	f
_get_gpos	data/bpe_corpus_raw/valid.py	/^utf-8	@	property_depends_on	(	'digest'	)	\\n	def	_get_gpos	(	self	)	:	\\n	    	bpos	=	mgrid	[	se/;"	f
_get_gpos	data/data_raw/valid.py	/^utf-8	@	property_depends_on	(	'digest'	)	\\n	def	_get_gpos	(	self	)	:	\\n	    	bpos	=	mgrid	[	se/;"	f
_get_handle_reader	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_handle_reader	(	graph	,	handle	,	dtype	)	:	\\n	    	graph_key	=	TensorHandle	.	_g/;"	f
_get_handle_reader	data/data_raw/valid.py	/^utf-8	def	_get_handle_reader	(	graph	,	handle	,	dtype	)	:	\\n	    	graph_key	=	TensorHandle	.	_g/;"	f
_get_header_palette	data/bpe_corpus_raw/train.py	/^utf-8	def	_get_header_palette	(	palette_bytes	)	:	\\n	    	color_table_size	=	_get_color_table_s/;"	f
_get_header_palette	data/data_raw/train.py	/^utf-8	def	_get_header_palette	(	palette_bytes	)	:	\\n	    	color_table_size	=	_get_color_table_s/;"	f
_get_host_metrics	data/bpe_corpus_raw/train.py	/^utf-8	def	_get_host_metrics	(	self	)	:	\\n	    	host_stats	=	{	}	\\n	host_proc_map	=	{	}	\\n	cmd/;"	f
_get_host_metrics	data/data_raw/train.py	/^utf-8	def	_get_host_metrics	(	self	)	:	\\n	    	host_stats	=	{	}	\\n	host_proc_map	=	{	}	\\n	cmd/;"	f
_get_host_metrics_opts	data/bpe_corpus_raw/test.py	/^utf-8	def	_get_host_metrics_opts	(	self	)	:	\\n	    	considerations	=	[	self	.	rank_method	]	+	l/;"	f
_get_host_metrics_opts	data/data_raw/test.py	/^utf-8	def	_get_host_metrics_opts	(	self	)	:	\\n	    	considerations	=	[	self	.	rank_method	]	+	l/;"	f
_get_identifier_startswith	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_identifier_startswith	(	self	,	id_text	)	:	\\n	    	if	id_text	.	startswith	(	'\//;"	f
_get_identifier_startswith	data/data_raw/valid.py	/^utf-8	def	_get_identifier_startswith	(	self	,	id_text	)	:	\\n	    	if	id_text	.	startswith	(	'\//;"	f
_get_implicit_credentials	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_get_implicit_credentials	(	cls	)	:	\\n	    	env_name	=	_get_environ/;"	f
_get_implicit_credentials	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_get_implicit_credentials	(	cls	)	:	\\n	    	env_name	=	_get_environ/;"	f
_get_ind	data/bpe_corpus_raw/train.py	/^utf-8	def	_get_ind	(	self	,	x	)	:	\\n	    	return	self	.	obj_to_ind	.	get	(	x	,	-	1	)	\\n		$/;"	f
_get_ind	data/data_raw/train.py	/^utf-8	def	_get_ind	(	self	,	x	)	:	\\n	    	return	self	.	obj_to_ind	.	get	(	x	,	-	1	)	\\n		$/;"	f
_get_index_subset_to_coord_dict	data/bpe_corpus_raw/train.py	/^utf-8	def	_to_ijv	(	ss	,	row_levels	=	(	0	,	)	,	column_levels	=	(	1	,	)	,	sort_labels	=	False	)	/;"	f	function:_to_ijv.get_indexers._get_label_to_i_dict	file:
_get_index_subset_to_coord_dict	data/data_raw/train.py	/^utf-8	def	_to_ijv	(	ss	,	row_levels	=	(	0	,	)	,	column_levels	=	(	1	,	)	,	sort_labels	=	False	)	/;"	f	function:_to_ijv.get_indexers._get_label_to_i_dict	file:
_get_items	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_items	(	self	,	with_defaults	,	keys	)	:	\\n	    	if	with_defaults	:	\\n	        	/;"	f
_get_items	data/data_raw/valid.py	/^utf-8	def	_get_items	(	self	,	with_defaults	,	keys	)	:	\\n	    	if	with_defaults	:	\\n	        	/;"	f
_get_join_indexers	data/bpe_corpus_raw/train.py	/^utf-8	def	_get_join_indexers	(	self	)	:	\\n	    	return	_get_join_indexers	(	self	.	left_join_ke/;"	f
_get_join_indexers	data/data_raw/train.py	/^utf-8	def	_get_join_indexers	(	self	)	:	\\n	    	return	_get_join_indexers	(	self	.	left_join_ke/;"	f
_get_key_value	data/bpe_corpus_raw/train.py	/^utf-8	def	_get_key_value	(	self	,	key	,	value	,	pair	)	:	\\n	    	if	pair	:	\\n	        	key	,	v/;"	f
_get_key_value	data/data_raw/train.py	/^utf-8	def	_get_key_value	(	self	,	key	,	value	,	pair	)	:	\\n	    	if	pair	:	\\n	        	key	,	v/;"	f
_get_kriging_matrix	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_kriging_matrix	(	self	,	n	,	n_withdrifts	)	:	\\n	    	xy	=	np	.	concatenate	(	(	s/;"	f
_get_kriging_matrix	data/data_raw/valid.py	/^utf-8	def	_get_kriging_matrix	(	self	,	n	,	n_withdrifts	)	:	\\n	    	xy	=	np	.	concatenate	(	(	s/;"	f
_get_label_to_i_dict	data/bpe_corpus_raw/train.py	/^utf-8	def	_to_ijv	(	ss	,	row_levels	=	(	0	,	)	,	column_levels	=	(	1	,	)	,	sort_labels	=	False	)	/;"	f	function:_to_ijv.get_indexers	file:
_get_label_to_i_dict	data/data_raw/train.py	/^utf-8	def	_to_ijv	(	ss	,	row_levels	=	(	0	,	)	,	column_levels	=	(	1	,	)	,	sort_labels	=	False	)	/;"	f	function:_to_ijv.get_indexers	file:
_get_machar	data/bpe_corpus_raw/train.py	/^utf-8	def	_get_machar	(	ftype	)	:	\\n	    	params	=	_MACHAR_PARAMS	.	get	(	ftype	)	\\n	if	params/;"	f
_get_machar	data/data_raw/train.py	/^utf-8	def	_get_machar	(	ftype	)	:	\\n	    	params	=	_MACHAR_PARAMS	.	get	(	ftype	)	\\n	if	params/;"	f
_get_map_or_list	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_map_or_list	(	spec_part	)	:	\\n	    	if	spec_part_is_map	(	spec_part	)	:	\\n	    /;"	f
_get_map_or_list	data/data_raw/valid.py	/^utf-8	def	_get_map_or_list	(	spec_part	)	:	\\n	    	if	spec_part_is_map	(	spec_part	)	:	\\n	    /;"	f
_get_maxsteps	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_maxsteps	(	self	)	:	\\n	    	return	self	.	options	[	'maxsteps'	]	\\n		$/;"	f
_get_maxsteps	data/data_raw/valid.py	/^utf-8	def	_get_maxsteps	(	self	)	:	\\n	    	return	self	.	options	[	'maxsteps'	]	\\n		$/;"	f
_get_mean_var_estimates	data/bpe_corpus_raw/train.py	/^utf-8	def	_get_mean_var_estimates	(	self	)	:	\\n	    	return	self	.	_mean_moving_avg	,	self	.	_v/;"	f
_get_mean_var_estimates	data/data_raw/train.py	/^utf-8	def	_get_mean_var_estimates	(	self	)	:	\\n	    	return	self	.	_mean_moving_avg	,	self	.	_v/;"	f
_get_member_states_str	data/bpe_corpus_raw/train.py	/^utf-8	def	_get_member_states_str	(	self	)	:	\\n	    	if	self	.	_member_states_str	is	None	:	\\n	/;"	f
_get_member_states_str	data/data_raw/train.py	/^utf-8	def	_get_member_states_str	(	self	)	:	\\n	    	if	self	.	_member_states_str	is	None	:	\\n	/;"	f
_get_method	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_method	(	name	,	func	)	:	\\n	\\n	    	def	method	(	self	,	*	args	,	**	kw	)	:	\\n	/;"	f
_get_method	data/data_raw/valid.py	/^utf-8	def	_get_method	(	name	,	func	)	:	\\n	\\n	    	def	method	(	self	,	*	args	,	**	kw	)	:	\\n	/;"	f
_get_ndarray_inputs	data/bpe_corpus_raw/train.py	/^utf-8	@	staticmethod	\\n	def	_get_ndarray_inputs	(	arg_key	,	args	,	arg_names	,	allow_missing	)	/;"	f
_get_ndarray_inputs	data/data_raw/train.py	/^utf-8	@	staticmethod	\\n	def	_get_ndarray_inputs	(	arg_key	,	args	,	arg_names	,	allow_missing	)	/;"	f
_get_paths	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_paths	(	self	)	:	\\n	\\n	    	def	get_file	(	path	)	:	\\n	        	if	os	.	path	./;"	f
_get_paths	data/data_raw/valid.py	/^utf-8	def	_get_paths	(	self	)	:	\\n	\\n	    	def	get_file	(	path	)	:	\\n	        	if	os	.	path	./;"	f
_get_private_token	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_private_token	(	self	)	:	\\n	    	return	decrypt_password	(	self	.	account	.	data/;"	f
_get_private_token	data/data_raw/valid.py	/^utf-8	def	_get_private_token	(	self	)	:	\\n	    	return	decrypt_password	(	self	.	account	.	data/;"	f
_get_rar_version	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_rar_version	(	xfile	)	:	\\n	    	with	XFile	(	xfile	)	as	fd	:	\\n	        	buf	=	/;"	f
_get_rar_version	data/data_raw/valid.py	/^utf-8	def	_get_rar_version	(	xfile	)	:	\\n	    	with	XFile	(	xfile	)	as	fd	:	\\n	        	buf	=	/;"	f
_get_request_args	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_request_args	(	**	kwargs	)	:	\\n	    	args	=	dict	(	request	.	args	)	\\n	logging	/;"	f
_get_request_args	data/data_raw/valid.py	/^utf-8	def	_get_request_args	(	**	kwargs	)	:	\\n	    	args	=	dict	(	request	.	args	)	\\n	logging	/;"	f
_get_resizer_offset	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_resizer_offset	(	self	)	:	\\n	    	invtrans	=	self	.	ax	.	transData	.	inverted	(	/;"	f
_get_resizer_offset	data/data_raw/valid.py	/^utf-8	def	_get_resizer_offset	(	self	)	:	\\n	    	invtrans	=	self	.	ax	.	transData	.	inverted	(	/;"	f
_get_samples	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_samples	(	dist	,	z	,	n	,	seed	)	:	\\n	    	with	ops	.	name_scope	(	'get_samples'	/;"	f
_get_samples	data/data_raw/valid.py	/^utf-8	def	_get_samples	(	dist	,	z	,	n	,	seed	)	:	\\n	    	with	ops	.	name_scope	(	'get_samples'	/;"	f
_get_sender	data/bpe_corpus_raw/train.py	/^utf-8	def	_get_sender	(	self	,	tag	,	host	,	port	,	bufmax	,	timeout	)	:	\\n	    	sender	=	None	\\/;"	f
_get_sender	data/data_raw/train.py	/^utf-8	def	_get_sender	(	self	,	tag	,	host	,	port	,	bufmax	,	timeout	)	:	\\n	    	sender	=	None	\\/;"	f
_get_state_dict	data/bpe_corpus_raw/train.py	/^utf-8	def	load_params	(	self	,	f	=	None	,	f_params	=	None	,	f_optimizer	=	None	,	f_history	=	\\n/;"	f	function:load_params	file:
_get_state_dict	data/data_raw/train.py	/^utf-8	def	load_params	(	self	,	f	=	None	,	f_params	=	None	,	f_optimizer	=	None	,	f_history	=	\\n/;"	f	function:load_params	file:
_get_state_event	data/bpe_corpus_raw/train.py	/^utf-8	def	_get_state_event	(	self	,	state	)	:	\\n	    	try	:	\\n	        	return	self	.	events	[/;"	f
_get_state_event	data/data_raw/train.py	/^utf-8	def	_get_state_event	(	self	,	state	)	:	\\n	    	try	:	\\n	        	return	self	.	events	[/;"	f
_get_strings	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_strings	(	self	)	:	\\n	    	return	self	.	string_array	\\n		$/;"	f
_get_strings	data/data_raw/valid.py	/^utf-8	def	_get_strings	(	self	)	:	\\n	    	return	self	.	string_array	\\n		$/;"	f
_get_subsection_mapped_address	data/bpe_corpus_raw/train.py	/^utf-8	@	Reentrant	\\n	def	_get_subsection_mapped_address	(	self	,	subsection_pte_address	)	:	\\n/;"	f
_get_subsection_mapped_address	data/data_raw/train.py	/^utf-8	@	Reentrant	\\n	def	_get_subsection_mapped_address	(	self	,	subsection_pte_address	)	:	\\n/;"	f
_get_summary_op	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_summary_op	(	self	)	:	\\n	    	summary_op	=	None	\\n	if	self	.	_summary_op	is	not/;"	f
_get_summary_op	data/data_raw/valid.py	/^utf-8	def	_get_summary_op	(	self	)	:	\\n	    	summary_op	=	None	\\n	if	self	.	_summary_op	is	not/;"	f
_get_type	data/bpe_corpus_raw/train.py	/^utf-8	def	_get_type	(	e	)	:	\\n	    	try	:	\\n	        	return	e	.	__class__	\\n		except	Attribu/;"	f
_get_type	data/data_raw/train.py	/^utf-8	def	_get_type	(	e	)	:	\\n	    	try	:	\\n	        	return	e	.	__class__	\\n		except	Attribu/;"	f
_get_uid	data/bpe_corpus_raw/train.py	/^utf-8	def	_get_uid	(	name	)	:	\\n	    	if	getpwnam	is	None	or	name	is	None	:	\\n	        	return/;"	f
_get_uid	data/data_raw/train.py	/^utf-8	def	_get_uid	(	name	)	:	\\n	    	if	getpwnam	is	None	or	name	is	None	:	\\n	        	return/;"	f
_get_unpatched	data/bpe_corpus_raw/test.py	/^utf-8	def	_get_unpatched	(	cls	)	:	\\n	    	while	cls	.	__module__	.	startswith	(	'setuptools'	)/;"	f
_get_unpatched	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_unpatched	(	cls	)	:	\\n	    	while	cls	.	__module__	.	startswith	(	'setuptools'	)/;"	f
_get_unpatched	data/data_raw/test.py	/^utf-8	def	_get_unpatched	(	cls	)	:	\\n	    	while	cls	.	__module__	.	startswith	(	'setuptools'	)/;"	f
_get_unpatched	data/data_raw/valid.py	/^utf-8	def	_get_unpatched	(	cls	)	:	\\n	    	while	cls	.	__module__	.	startswith	(	'setuptools'	)/;"	f
_get_version	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_version	(	)	:	\\n	    	assert	len	(	version_info	)	==	5	\\n	assert	version_info	[/;"	f
_get_version	data/data_raw/valid.py	/^utf-8	def	_get_version	(	)	:	\\n	    	assert	len	(	version_info	)	==	5	\\n	assert	version_info	[/;"	f
_getitem_column	data/bpe_corpus_raw/train.py	/^utf-8	def	_getitem_column	(	self	,	key	)	:	\\n	    	if	self	.	columns	.	is_unique	:	\\n	        /;"	f
_getitem_column	data/data_raw/train.py	/^utf-8	def	_getitem_column	(	self	,	key	)	:	\\n	    	if	self	.	columns	.	is_unique	:	\\n	        /;"	f
_getlink	data/bpe_corpus_raw/valid.py	/^utf-8	def	_getlink	(	self	)	:	\\n	    	return	self	.	_link	\\n		$/;"	f
_getlink	data/data_raw/valid.py	/^utf-8	def	_getlink	(	self	)	:	\\n	    	return	self	.	_link	\\n		$/;"	f
_gitiles_url	data/bpe_corpus_raw/valid.py	/^utf-8	def	_gitiles_url	(	configs_url	,	rev	,	path	)	:	\\n	    	try	:	\\n	        	loc	=	gitiles	/;"	f
_gitiles_url	data/data_raw/valid.py	/^utf-8	def	_gitiles_url	(	configs_url	,	rev	,	path	)	:	\\n	    	try	:	\\n	        	loc	=	gitiles	/;"	f
_global_connect	data/bpe_corpus_raw/valid.py	/^utf-8	def	_global_connect	(	self	)	:	\\n	    	try	:	\\n	        	self	.	auth	=	[	[	libvirt	.	VIR/;"	f
_global_connect	data/data_raw/valid.py	/^utf-8	def	_global_connect	(	self	)	:	\\n	    	try	:	\\n	        	self	.	auth	=	[	[	libvirt	.	VIR/;"	f
_graph	data/bpe_corpus_raw/valid.py	/^utf-8	def	_graph	(	self	)	:	\\n	    	expression	=	self	.	expression	\\n	\\n	def	walk	(	node	)	:	/;"	f
_graph	data/data_raw/valid.py	/^utf-8	def	_graph	(	self	)	:	\\n	    	expression	=	self	.	expression	\\n	\\n	def	walk	(	node	)	:	/;"	f
_griffin_lim_tensorflow	data/bpe_corpus_raw/valid.py	/^utf-8	def	_griffin_lim_tensorflow	(	S	)	:	\\n	    	with	tf	.	variable_scope	(	'griffinlim'	)	:	\\/;"	f
_griffin_lim_tensorflow	data/data_raw/valid.py	/^utf-8	def	_griffin_lim_tensorflow	(	S	)	:	\\n	    	with	tf	.	variable_scope	(	'griffinlim'	)	:	\\/;"	f
_group_chunks_by_entities	data/bpe_corpus_raw/valid.py	/^utf-8	def	_group_chunks_by_entities	(	self	,	chunks	,	entities	)	:	\\n	    	for	entity	in	entiti/;"	f
_group_chunks_by_entities	data/data_raw/valid.py	/^utf-8	def	_group_chunks_by_entities	(	self	,	chunks	,	entities	)	:	\\n	    	for	entity	in	entiti/;"	f
_groups2	data/bpe_corpus_raw/valid.py	/^utf-8	def	_groups2	(	self	,	groupsource	=	None	,	autostep	=	None	)	:	\\n	    	if	not	self	.	_res/;"	f
_groups2	data/data_raw/valid.py	/^utf-8	def	_groups2	(	self	,	groupsource	=	None	,	autostep	=	None	)	:	\\n	    	if	not	self	.	_res/;"	f
_handleBooleanExpr	data/bpe_corpus_raw/train.py	/^utf-8	@	staticmethod	\\n	def	_handleBooleanExpr	(	line_number	,	line	,	output	)	:	\\n	    	if	ou/;"	f
_handleBooleanExpr	data/data_raw/train.py	/^utf-8	@	staticmethod	\\n	def	_handleBooleanExpr	(	line_number	,	line	,	output	)	:	\\n	    	if	ou/;"	f
_handle_lock_toggled	data/bpe_corpus_raw/valid.py	/^utf-8	def	_handle_lock_toggled	(	self	,	cell	,	path	,	*	ignore	)	:	\\n	    	iter	=	self	.	_store/;"	f
_handle_lock_toggled	data/data_raw/valid.py	/^utf-8	def	_handle_lock_toggled	(	self	,	cell	,	path	,	*	ignore	)	:	\\n	    	iter	=	self	.	_store/;"	f
_handle_thread_exception	data/bpe_corpus_raw/train.py	/^utf-8	def	_handle_thread_exception	(	request	,	exc_info	)	:	\\n	    	traceback	.	print_exception/;"	f
_handle_thread_exception	data/data_raw/train.py	/^utf-8	def	_handle_thread_exception	(	request	,	exc_info	)	:	\\n	    	traceback	.	print_exception/;"	f
_handle_update	data/bpe_corpus_raw/test.py	/^utf-8	def	__init__	(	self	,	hass	,	name	,	ccb	:	ComfoConnectBridge	,	sensor_type	)	->	None	:	\\n/;"	f	function:__init__	file:
_handle_update	data/data_raw/test.py	/^utf-8	def	__init__	(	self	,	hass	,	name	,	ccb	:	ComfoConnectBridge	,	sensor_type	)	->	None	:	\\n/;"	f	function:__init__	file:
_hash_comparison	data/bpe_corpus_raw/test.py	/^utf-8	def	_hash_comparison	(	self	)	:	\\n	\\n	    	def	hash_then_or	(	hash_name	)	:	\\n	        /;"	f
_hash_comparison	data/data_raw/test.py	/^utf-8	def	_hash_comparison	(	self	)	:	\\n	\\n	    	def	hash_then_or	(	hash_name	)	:	\\n	        /;"	f
_hash_file	data/bpe_corpus_raw/train.py	/^utf-8	def	_hash_file	(	path	)	:	\\n	    	if	not	os	.	path	.	isfile	(	path	)	:	\\n	        	retur/;"	f
_hash_file	data/data_raw/train.py	/^utf-8	def	_hash_file	(	path	)	:	\\n	    	if	not	os	.	path	.	isfile	(	path	)	:	\\n	        	retur/;"	f
_impl	data/bpe_corpus_raw/valid.py	/^utf-8	def	init_params	(	self	,	initializer	=	Uniform	(	0.01	)	,	arg_params	=	None	,	\\n	aux_para/;"	f	function:init_params	file:
_impl	data/data_raw/valid.py	/^utf-8	def	init_params	(	self	,	initializer	=	Uniform	(	0.01	)	,	arg_params	=	None	,	\\n	aux_para/;"	f	function:init_params	file:
_importance_sampler_positive_f	data/bpe_corpus_raw/train.py	/^utf-8	def	expectation_importance_sampler	(	f	,	log_p	,	sampling_dist_q	,	z	=	None	,	n	=	\\n	None/;"	f	function:expectation_importance_sampler	file:
_importance_sampler_positive_f	data/data_raw/train.py	/^utf-8	def	expectation_importance_sampler	(	f	,	log_p	,	sampling_dist_q	,	z	=	None	,	n	=	\\n	None/;"	f	function:expectation_importance_sampler	file:
_include_module_urls	data/bpe_corpus_raw/valid.py	/^utf-8	def	_include_module_urls	(	module_import_path	,	module_name	)	:	\\n	    	from	plinth	impor/;"	f
_include_module_urls	data/data_raw/valid.py	/^utf-8	def	_include_module_urls	(	module_import_path	,	module_name	)	:	\\n	    	from	plinth	impor/;"	f
_includes_value	data/bpe_corpus_raw/train.py	/^utf-8	def	_attribute_checker	(	self	,	operator	,	attribute	,	value	=	''	)	:	\\n	    	if	operator/;"	f	function:_attribute_checker	file:
_includes_value	data/data_raw/train.py	/^utf-8	def	_attribute_checker	(	self	,	operator	,	attribute	,	value	=	''	)	:	\\n	    	if	operator/;"	f	function:_attribute_checker	file:
_indent_line	data/bpe_corpus_raw/train.py	/^utf-8	def	_indent_line	(	self	,	line	,	stripspace	=	''	)	:	\\n	    	return	re	.	sub	(	'^%s'	%	st/;"	f
_indent_line	data/data_raw/train.py	/^utf-8	def	_indent_line	(	self	,	line	,	stripspace	=	''	)	:	\\n	    	return	re	.	sub	(	'^%s'	%	st/;"	f
_initConfig	data/bpe_corpus_raw/train.py	/^utf-8	def	_initConfig	(	self	,	bot_id	,	extra_argv	=	None	,	override_hw_test_config	=	None	)	:	\\/;"	f
_initConfig	data/data_raw/train.py	/^utf-8	def	_initConfig	(	self	,	bot_id	,	extra_argv	=	None	,	override_hw_test_config	=	None	)	:	\\/;"	f
_init_az_api	data/bpe_corpus_raw/valid.py	/^utf-8	def	_init_az_api	(	self	)	:	\\n	    	with	self	.	__lock	:	\\n	        	if	self	.	_resource/;"	f
_init_az_api	data/data_raw/valid.py	/^utf-8	def	_init_az_api	(	self	)	:	\\n	    	with	self	.	__lock	:	\\n	        	if	self	.	_resource/;"	f
_init_os2	data/bpe_corpus_raw/valid.py	/^utf-8	def	_init_os2	(	)	:	\\n	    	g	=	{	}	\\n	g	[	'LIBDEST'	]	=	get_python_lib	(	plat_specific	/;"	f
_init_os2	data/data_raw/valid.py	/^utf-8	def	_init_os2	(	)	:	\\n	    	g	=	{	}	\\n	g	[	'LIBDEST'	]	=	get_python_lib	(	plat_specific	/;"	f
_init_saver	data/bpe_corpus_raw/valid.py	/^utf-8	def	_init_saver	(	self	,	saver	=	USE_DEFAULT	)	:	\\n	    	if	saver	is	Supervisor	.	USE_DEF/;"	f
_init_saver	data/data_raw/valid.py	/^utf-8	def	_init_saver	(	self	,	saver	=	USE_DEFAULT	)	:	\\n	    	if	saver	is	Supervisor	.	USE_DEF/;"	f
_initialize	data/bpe_corpus_raw/valid.py	/^utf-8	def	_initialize	(	self	)	:	\\n	    	self	.	toggle_meths	=	{	}	\\n	self	.	state_meths	=	{	}/;"	f
_initialize	data/data_raw/valid.py	/^utf-8	def	_initialize	(	self	)	:	\\n	    	self	.	toggle_meths	=	{	}	\\n	self	.	state_meths	=	{	}/;"	f
_inject	data/bpe_corpus_raw/train.py	/^utf-8	def	_inject	(	self	,	fileobj	)	:	\\n	    	fileobj	.	seek	(	0	)	\\n	page	=	OggPage	(	fileob/;"	f
_inject	data/data_raw/train.py	/^utf-8	def	_inject	(	self	,	fileobj	)	:	\\n	    	fileobj	.	seek	(	0	)	\\n	page	=	OggPage	(	fileob/;"	f
_inner	data/bpe_corpus_raw/test.py	/^utf-8	def	errorhandler	(	self	,	code	:	int	,	endcode	:	int	=	None	,	step	:	int	=	None	)	:	\\n	\\/;"	f	function:errorhandler	file:
_inner	data/data_raw/test.py	/^utf-8	def	errorhandler	(	self	,	code	:	int	,	endcode	:	int	=	None	,	step	:	int	=	None	)	:	\\n	\\/;"	f	function:errorhandler	file:
_input_fn_train	data/bpe_corpus_raw/train.py	/^utf-8	def	testCustomMetrics	(	self	)	:	\\n	\\n	    	def	_input_fn_train	(	)	:	\\n	        	targe/;"	f	function:testCustomMetrics	file:
_input_fn_train	data/data_raw/train.py	/^utf-8	def	testCustomMetrics	(	self	)	:	\\n	\\n	    	def	_input_fn_train	(	)	:	\\n	        	targe/;"	f	function:testCustomMetrics	file:
_int64_feature	data/bpe_corpus_raw/test.py	/^utf-8	def	_int64_feature	(	value	)	:	\\n	    	if	not	isinstance	(	value	,	list	)	:	\\n	        	/;"	f
_int64_feature	data/data_raw/test.py	/^utf-8	def	_int64_feature	(	value	)	:	\\n	    	if	not	isinstance	(	value	,	list	)	:	\\n	        	/;"	f
_ip_int_from_string	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_ip_int_from_string	(	cls	,	ip_str	)	:	\\n	    	if	not	ip_str	:	\\n	/;"	f
_ip_int_from_string	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_ip_int_from_string	(	cls	,	ip_str	)	:	\\n	    	if	not	ip_str	:	\\n	/;"	f
_iqr	data/bpe_corpus_raw/valid.py	/^utf-8	def	_iqr	(	self	,	action	)	:	\\n	    	df	=	self	.	df	\\n	columns	=	self	.	columns	\\n	if	n/;"	f
_iqr	data/data_raw/valid.py	/^utf-8	def	_iqr	(	self	,	action	)	:	\\n	    	df	=	self	.	df	\\n	columns	=	self	.	columns	\\n	if	n/;"	f
_iri_utf8_errors_handler	data/bpe_corpus_raw/train.py	/^utf-8	def	_iri_utf8_errors_handler	(	exc	)	:	\\n	    	bytes_as_ints	=	bytes_to_list	(	exc	.	obje/;"	f
_iri_utf8_errors_handler	data/data_raw/train.py	/^utf-8	def	_iri_utf8_errors_handler	(	exc	)	:	\\n	    	bytes_as_ints	=	bytes_to_list	(	exc	.	obje/;"	f
_is_deleted	data/bpe_corpus_raw/valid.py	/^utf-8	def	_is_deleted	(	self	,	conn	)	:	\\n	    	info	=	conn	.	execute	(	\\n	"""\\n            S/;"	f
_is_deleted	data/data_raw/valid.py	/^utf-8	def	_is_deleted	(	self	,	conn	)	:	\\n	    	info	=	conn	.	execute	(	\\n	"""\\n            S/;"	f
_is_import_binding	data/bpe_corpus_raw/valid.py	/^utf-8	def	_is_import_binding	(	node	,	name	,	package	=	None	)	:	\\n	    	if	node	.	type	==	syms	/;"	f
_is_import_binding	data/data_raw/valid.py	/^utf-8	def	_is_import_binding	(	node	,	name	,	package	=	None	)	:	\\n	    	if	node	.	type	==	syms	/;"	f
_is_or_starts_with_dash	data/bpe_corpus_raw/train.py	/^utf-8	def	_attribute_checker	(	self	,	operator	,	attribute	,	value	=	''	)	:	\\n	    	if	operator/;"	f	function:_attribute_checker._includes_value	file:
_is_or_starts_with_dash	data/data_raw/train.py	/^utf-8	def	_attribute_checker	(	self	,	operator	,	attribute	,	value	=	''	)	:	\\n	    	if	operator/;"	f	function:_attribute_checker._includes_value	file:
_is_quarter_field	data/bpe_corpus_raw/train.py	/^utf-8	def	_is_quarter_field	(	self	,	field_name	)	:	\\n	    	res	=	(	field_name	in	self	.	fin_st/;"	f
_is_quarter_field	data/data_raw/train.py	/^utf-8	def	_is_quarter_field	(	self	,	field_name	)	:	\\n	    	res	=	(	field_name	in	self	.	fin_st/;"	f
_is_read_error	data/bpe_corpus_raw/valid.py	/^utf-8	def	_is_read_error	(	self	,	err	)	:	\\n	    	return	isinstance	(	err	,	(	ReadTimeoutError	/;"	f
_is_read_error	data/data_raw/valid.py	/^utf-8	def	_is_read_error	(	self	,	err	)	:	\\n	    	return	isinstance	(	err	,	(	ReadTimeoutError	/;"	f
_is_sorted	data/bpe_corpus_raw/train.py	/^utf-8	def	_is_sorted	(	self	,	x	)	:	\\n	    	if	len	(	x	)	<	2	:	\\n	        	return	1	\\n		retur/;"	f
_is_sorted	data/data_raw/train.py	/^utf-8	def	_is_sorted	(	self	,	x	)	:	\\n	    	if	len	(	x	)	<	2	:	\\n	        	return	1	\\n		retur/;"	f
_is_valid_for	data/bpe_corpus_raw/train.py	/^utf-8	def	_is_valid_for	(	self	,	object	,	name	,	value	)	:	\\n	    	if	self	.	is_valid_for	(	val/;"	f
_is_valid_for	data/data_raw/train.py	/^utf-8	def	_is_valid_for	(	self	,	object	,	name	,	value	)	:	\\n	    	if	self	.	is_valid_for	(	val/;"	f
_islogical	data/bpe_corpus_raw/test.py	/^utf-8	def	_islogical	(	self	)	:	\\n	    	if	self	.	_sign	!=	0	or	self	.	_exp	!=	0	:	\\n	        /;"	f
_islogical	data/data_raw/test.py	/^utf-8	def	_islogical	(	self	)	:	\\n	    	if	self	.	_sign	!=	0	or	self	.	_exp	!=	0	:	\\n	        /;"	f
_item	data/bpe_corpus_raw/train.py	/^utf-8	def	_item	(	track_info	,	album_info	,	album_id	)	:	\\n	    	t	=	track_info	\\n	a	=	album_i/;"	f
_item	data/data_raw/train.py	/^utf-8	def	_item	(	track_info	,	album_info	,	album_id	)	:	\\n	    	t	=	track_info	\\n	a	=	album_i/;"	f
_iterable_like	data/bpe_corpus_raw/train.py	/^utf-8	def	_iterable_like	(	instance	,	args	)	:	\\n	    	if	isinstance	(	instance	,	dict	)	:	\\n	/;"	f
_iterable_like	data/data_raw/train.py	/^utf-8	def	_iterable_like	(	instance	,	args	)	:	\\n	    	if	isinstance	(	instance	,	dict	)	:	\\n	/;"	f
_kd_value	data/bpe_corpus_raw/valid.py	/^utf-8	def	_kd_value	(	k_val	,	s_val	)	:	\\n	    	return	_h_value	(	b':'	.	join	(	(	k_val	,	s_val/;"	f
_kd_value	data/data_raw/valid.py	/^utf-8	def	_kd_value	(	k_val	,	s_val	)	:	\\n	    	return	_h_value	(	b':'	.	join	(	(	k_val	,	s_val/;"	f
_keys_impl	data/bpe_corpus_raw/valid.py	/^utf-8	def	_keys_impl	(	self	)	:	\\n	    	rv	=	set	(	)	\\n	for	d	in	self	.	dicts	:	\\n	        	r/;"	f
_keys_impl	data/data_raw/valid.py	/^utf-8	def	_keys_impl	(	self	)	:	\\n	    	rv	=	set	(	)	\\n	for	d	in	self	.	dicts	:	\\n	        	r/;"	f
_keysym	data/bpe_corpus_raw/valid.py	/^utf-8	def	_keysym	(	self	,	key	)	:	\\n	    	return	self	.	_resolve_dead	(	key	\\n	)	if	key	.	is_/;"	f
_keysym	data/data_raw/valid.py	/^utf-8	def	_keysym	(	self	,	key	)	:	\\n	    	return	self	.	_resolve_dead	(	key	\\n	)	if	key	.	is_/;"	f
_last_descendant	data/bpe_corpus_raw/valid.py	/^utf-8	def	_last_descendant	(	self	)	:	\\n	    	last_child	=	self	\\n	while	hasattr	(	last_child	/;"	f
_last_descendant	data/data_raw/valid.py	/^utf-8	def	_last_descendant	(	self	)	:	\\n	    	last_child	=	self	\\n	while	hasattr	(	last_child	/;"	f
_lcm	data/bpe_corpus_raw/train.py	/^utf-8	def	_lcm	(	*	nums	)	:	\\n	    	if	len	(	nums	)	==	1	:	\\n	        	return	nums	[	0	]	\\n		/;"	f
_lcm	data/data_raw/train.py	/^utf-8	def	_lcm	(	*	nums	)	:	\\n	    	if	len	(	nums	)	==	1	:	\\n	        	return	nums	[	0	]	\\n		/;"	f
_len_int	data/bpe_corpus_raw/valid.py	/^utf-8	def	_len_int	(	obj	)	:	\\n	    	if	obj	:	\\n	        	n	,	i	=	1	,	abs	(	obj	)	\\n	if	i	>	_/;"	f
_len_int	data/data_raw/valid.py	/^utf-8	def	_len_int	(	obj	)	:	\\n	    	if	obj	:	\\n	        	n	,	i	=	1	,	abs	(	obj	)	\\n	if	i	>	_/;"	f
_lift	data/bpe_corpus_raw/valid.py	/^utf-8	def	_lift	(	self	)	:	\\n	    	if	self	.	render_window	.	off_screen_rendering	:	\\n	       /;"	f
_lift	data/data_raw/valid.py	/^utf-8	def	_lift	(	self	)	:	\\n	    	if	self	.	render_window	.	off_screen_rendering	:	\\n	       /;"	f
_lim_moment	data/bpe_corpus_raw/valid.py	/^utf-8	def	_lim_moment	(	self	,	u	,	order	=	1	)	:	\\n	\\n	    	def	fun	(	x	)	:	\\n	        	retur/;"	f
_lim_moment	data/data_raw/valid.py	/^utf-8	def	_lim_moment	(	self	,	u	,	order	=	1	)	:	\\n	\\n	    	def	fun	(	x	)	:	\\n	        	retur/;"	f
_links_lookup	data/bpe_corpus_raw/test.py	/^utf-8	def	_links_lookup	(	self	)	:	\\n	    	raise	NotImplementedError	(	'Subclass should impleme/;"	f
_links_lookup	data/data_raw/test.py	/^utf-8	def	_links_lookup	(	self	)	:	\\n	    	raise	NotImplementedError	(	'Subclass should impleme/;"	f
_list	data/bpe_corpus_raw/valid.py	/^utf-8	def	init	(	)	:	\\n	    	server_formatter	=	cli	.	make_formatter	(	'server'	)	\\n	\\n	@	cli/;"	f	function:init.server_grp	file:
_list	data/data_raw/valid.py	/^utf-8	def	init	(	)	:	\\n	    	server_formatter	=	cli	.	make_formatter	(	'server'	)	\\n	\\n	@	cli/;"	f	function:init.server_grp	file:
_listdir_local	data/bpe_corpus_raw/valid.py	/^utf-8	def	_listdir_local	(	path	,	kwargs	)	:	\\n	    	request	=	file_service_pb	.	ListDirRequest/;"	f
_listdir_local	data/data_raw/valid.py	/^utf-8	def	_listdir_local	(	path	,	kwargs	)	:	\\n	    	request	=	file_service_pb	.	ListDirRequest/;"	f
_listener	data/bpe_corpus_raw/valid.py	/^utf-8	def	mv84consensus	(	pid	,	N	,	t	,	vi	,	broadcast	,	receive	)	:	\\n	    	mv84v	=	defaultdic/;"	f	function:mv84consensus	file:
_listener	data/data_raw/valid.py	/^utf-8	def	mv84consensus	(	pid	,	N	,	t	,	vi	,	broadcast	,	receive	)	:	\\n	    	mv84v	=	defaultdic/;"	f	function:mv84consensus	file:
_load_batch_events	data/bpe_corpus_raw/valid.py	/^utf-8	def	_load_batch_events	(	self	,	curs	,	batch_id	)	:	\\n	    	if	self	.	pgq_lazy_fetch	:	\\/;"	f
_load_batch_events	data/data_raw/valid.py	/^utf-8	def	_load_batch_events	(	self	,	curs	,	batch_id	)	:	\\n	    	if	self	.	pgq_lazy_fetch	:	\\/;"	f
_load_java	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_load_java	(	cls	,	sc	,	path	)	:	\\n	    	java_class	=	cls	.	_java_l/;"	f
_load_java	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_load_java	(	cls	,	sc	,	path	)	:	\\n	    	java_class	=	cls	.	_java_l/;"	f
_load_plugin_class	data/bpe_corpus_raw/train.py	/^utf-8	def	_load_plugin_class	(	menu	,	name	)	:	\\n	    	group	=	'custodia.{}'	.	format	(	menu	)	/;"	f
_load_plugin_class	data/data_raw/train.py	/^utf-8	def	_load_plugin_class	(	menu	,	name	)	:	\\n	    	group	=	'custodia.{}'	.	format	(	menu	)	/;"	f
_load_post_and_files	data/bpe_corpus_raw/valid.py	/^utf-8	def	_load_post_and_files	(	self	)	:	\\n	    	if	self	.	method	!=	'POST'	:	\\n	        	sel/;"	f
_load_post_and_files	data/data_raw/valid.py	/^utf-8	def	_load_post_and_files	(	self	)	:	\\n	    	if	self	.	method	!=	'POST'	:	\\n	        	sel/;"	f
_load_records	data/bpe_corpus_raw/valid.py	/^utf-8	def	tfrecord_iterator	(	filenames	,	gzipped	=	False	,	example_spec	=	None	)	:	\\n	    	wit/;"	f	function:tfrecord_iterator	file:
_load_records	data/data_raw/valid.py	/^utf-8	def	tfrecord_iterator	(	filenames	,	gzipped	=	False	,	example_spec	=	None	)	:	\\n	    	wit/;"	f	function:tfrecord_iterator	file:
_load_static_data	data/bpe_corpus_raw/valid.py	/^utf-8	def	_load_static_data	(	filename	)	:	\\n	    	is_frozen	=	hasattr	(	sys	,	'frozen'	)	or	im/;"	f
_load_static_data	data/data_raw/valid.py	/^utf-8	def	_load_static_data	(	filename	)	:	\\n	    	is_frozen	=	hasattr	(	sys	,	'frozen'	)	or	im/;"	f
_log_prob_with_logsf_and_logcdf	data/bpe_corpus_raw/valid.py	/^utf-8	def	_log_prob_with_logsf_and_logcdf	(	self	,	y	)	:	\\n	    	logsf_y	=	self	.	log_survival_/;"	f
_log_prob_with_logsf_and_logcdf	data/data_raw/valid.py	/^utf-8	def	_log_prob_with_logsf_and_logcdf	(	self	,	y	)	:	\\n	    	logsf_y	=	self	.	log_survival_/;"	f
_log_result_decorator	data/bpe_corpus_raw/valid.py	/^utf-8	def	_log_result_decorator	(	fct	)	:	\\n	\\n	    	def	wrapper	(	*	args	,	**	kw	)	:	\\n	    /;"	f
_log_result_decorator	data/data_raw/valid.py	/^utf-8	def	_log_result_decorator	(	fct	)	:	\\n	\\n	    	def	wrapper	(	*	args	,	**	kw	)	:	\\n	    /;"	f
_log_rotated	data/bpe_corpus_raw/valid.py	/^utf-8	def	_log_rotated	(	self	)	:	\\n	    	if	self	.	_published_size	>	0	and	(	self	.	_size	<	se/;"	f
_log_rotated	data/data_raw/valid.py	/^utf-8	def	_log_rotated	(	self	)	:	\\n	    	if	self	.	_published_size	>	0	and	(	self	.	_size	<	se/;"	f
_logits_to_predictions	data/bpe_corpus_raw/train.py	/^utf-8	def	_logits_to_predictions	(	self	,	logits	)	:	\\n	    	key	=	prediction_key	.	PredictionK/;"	f
_logits_to_predictions	data/data_raw/train.py	/^utf-8	def	_logits_to_predictions	(	self	,	logits	)	:	\\n	    	key	=	prediction_key	.	PredictionK/;"	f
_lookup	data/bpe_corpus_raw/valid.py	/^utf-8	def	_lookup	(	self	,	key	=	None	)	:	\\n	    	if	self	.	_toc	is	None	:	\\n	        	self	.	/;"	f
_lookup	data/data_raw/valid.py	/^utf-8	def	_lookup	(	self	,	key	=	None	)	:	\\n	    	if	self	.	_toc	is	None	:	\\n	        	self	.	/;"	f
_lookup_by_attr_factory	data/bpe_corpus_raw/train.py	/^utf-8	def	_lookup_by_attr_factory	(	attr	,	unique	,	iterator	,	element_name	,	doc	)	:	\\n	\\n	  /;"	f
_lookup_by_attr_factory	data/data_raw/train.py	/^utf-8	def	_lookup_by_attr_factory	(	attr	,	unique	,	iterator	,	element_name	,	doc	)	:	\\n	\\n	  /;"	f
_m_to_self	data/bpe_corpus_raw/test.py	/^utf-8	def	_m_to_self	(	self	,	f	)	:	\\n	    	if	self	.	t	==	1	:	\\n	        	subsval	=	self	.	q	/;"	f
_m_to_self	data/data_raw/test.py	/^utf-8	def	_m_to_self	(	self	,	f	)	:	\\n	    	if	self	.	t	==	1	:	\\n	        	subsval	=	self	.	q	/;"	f
_make_Inequality	data/bpe_corpus_raw/valid.py	/^utf-8	def	_make_Inequality	(	self	,	polyhedron	,	data	)	:	\\n	    	try	:	\\n	        	obj	=	self/;"	f
_make_Inequality	data/data_raw/valid.py	/^utf-8	def	_make_Inequality	(	self	,	polyhedron	,	data	)	:	\\n	    	try	:	\\n	        	obj	=	self/;"	f
_make_compare	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_add_comparison_methods	(	cls	)	:	\\n	\\n	    	def	_make_compare	(	o/;"	f	function:_add_comparison_methods	file:
_make_compare	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_add_comparison_methods	(	cls	)	:	\\n	\\n	    	def	_make_compare	(	o/;"	f	function:_add_comparison_methods	file:
_make_key	data/bpe_corpus_raw/valid.py	/^utf-8	def	_make_key	(	args	,	kwds	,	typed	,	kwd_mark	=	(	object	(	)	,	)	,	fasttypes	=	{	int	,	st/;"	f
_make_key	data/data_raw/valid.py	/^utf-8	def	_make_key	(	args	,	kwds	,	typed	,	kwd_mark	=	(	object	(	)	,	)	,	fasttypes	=	{	int	,	st/;"	f
_make_parser	data/bpe_corpus_raw/valid.py	/^utf-8	def	_make_parser	(	self	)	:	\\n	    	return	DefusedExpatParser	(	)	\\n		$/;"	f
_make_parser	data/data_raw/valid.py	/^utf-8	def	_make_parser	(	self	)	:	\\n	    	return	DefusedExpatParser	(	)	\\n		$/;"	f
_make_post_request	data/bpe_corpus_raw/valid.py	/^utf-8	@	safe_timeout	\\n	def	_make_post_request	(	self	,	full_url	,	headers	,	data	,	is_json	=	T/;"	f
_make_post_request	data/data_raw/valid.py	/^utf-8	@	safe_timeout	\\n	def	_make_post_request	(	self	,	full_url	,	headers	,	data	,	is_json	=	T/;"	f
_make_weirdness_regex	data/bpe_corpus_raw/valid.py	/^utf-8	def	_make_weirdness_regex	(	)	:	\\n	    	groups	=	[	]	\\n	groups	.	append	(	'[^CM]M'	)	\\n/;"	f
_make_weirdness_regex	data/data_raw/valid.py	/^utf-8	def	_make_weirdness_regex	(	)	:	\\n	    	groups	=	[	]	\\n	groups	.	append	(	'[^CM]M'	)	\\n/;"	f
_map_section_options	data/bpe_corpus_raw/valid.py	/^utf-8	def	_map_section_options	(	self	,	section	,	option	,	rest	,	defaults	)	:	\\n	    	if	'\/'	/;"	f
_map_section_options	data/data_raw/valid.py	/^utf-8	def	_map_section_options	(	self	,	section	,	option	,	rest	,	defaults	)	:	\\n	    	if	'\/'	/;"	f
_mapper_for_dep	data/bpe_corpus_raw/valid.py	/^utf-8	@	util	.	memoized_property	\\n	def	_mapper_for_dep	(	self	)	:	\\n	    	return	util	.	Popul/;"	f
_mapper_for_dep	data/data_raw/valid.py	/^utf-8	@	util	.	memoized_property	\\n	def	_mapper_for_dep	(	self	)	:	\\n	    	return	util	.	Popul/;"	f
_mark_ready	data/bpe_corpus_raw/valid.py	/^utf-8	def	_mark_ready	(	self	)	:	\\n	    	self	.	_condition	.	acquire	(	)	\\n	self	.	_ready	=	Tr/;"	f
_mark_ready	data/data_raw/valid.py	/^utf-8	def	_mark_ready	(	self	)	:	\\n	    	self	.	_condition	.	acquire	(	)	\\n	self	.	_ready	=	Tr/;"	f
_markers	data/bpe_corpus_raw/test.py	/^utf-8	def	_markers	(	pem_marker	)	:	\\n	    	if	is_bytes	(	pem_marker	)	:	\\n	        	pem_marke/;"	f
_markers	data/data_raw/test.py	/^utf-8	def	_markers	(	pem_marker	)	:	\\n	    	if	is_bytes	(	pem_marker	)	:	\\n	        	pem_marke/;"	f
_marshaled_dispatch	data/bpe_corpus_raw/train.py	/^utf-8	def	_marshaled_dispatch	(	self	,	data	,	dispatch_method	=	None	,	path	=	None	)	:	\\n	    	/;"	f
_marshaled_dispatch	data/data_raw/train.py	/^utf-8	def	_marshaled_dispatch	(	self	,	data	,	dispatch_method	=	None	,	path	=	None	)	:	\\n	    	/;"	f
_mask_adjacency_matrix_and_points	data/bpe_corpus_raw/valid.py	/^utf-8	def	_mask_adjacency_matrix_and_points	(	mask	,	adjacency_matrix	,	points	)	:	\\n	    	indi/;"	f
_mask_adjacency_matrix_and_points	data/data_raw/valid.py	/^utf-8	def	_mask_adjacency_matrix_and_points	(	mask	,	adjacency_matrix	,	points	)	:	\\n	    	indi/;"	f
_matrix_	data/bpe_corpus_raw/valid.py	/^utf-8	def	_matrix_	(	self	)	:	\\n	    	return	self	.	to_matrix	(	)	\\n		$/;"	f
_matrix_	data/data_raw/valid.py	/^utf-8	def	_matrix_	(	self	)	:	\\n	    	return	self	.	to_matrix	(	)	\\n		$/;"	f
_maybe_select_class_id	data/bpe_corpus_raw/valid.py	/^utf-8	def	_maybe_select_class_id	(	labels	,	predictions_idx	,	selected_id	=	None	)	:	\\n	    	if/;"	f
_maybe_select_class_id	data/data_raw/valid.py	/^utf-8	def	_maybe_select_class_id	(	labels	,	predictions_idx	,	selected_id	=	None	)	:	\\n	    	if/;"	f
_mean_prediction	data/bpe_corpus_raw/train.py	/^utf-8	def	_mean_prediction	(	self	,	theta	,	Y	,	scores	,	h	,	t_params	)	:	\\n	    	Y_exp	=	Y	.	c/;"	f
_mean_prediction	data/data_raw/train.py	/^utf-8	def	_mean_prediction	(	self	,	theta	,	Y	,	scores	,	h	,	t_params	)	:	\\n	    	Y_exp	=	Y	.	c/;"	f
_mel_to_hertz	data/bpe_corpus_raw/valid.py	/^utf-8	def	_mel_to_hertz	(	mel_values	,	name	=	None	)	:	\\n	    	with	ops	.	name_scope	(	name	,	'/;"	f
_mel_to_hertz	data/data_raw/valid.py	/^utf-8	def	_mel_to_hertz	(	mel_values	,	name	=	None	)	:	\\n	    	with	ops	.	name_scope	(	name	,	'/;"	f
_member_func	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	register_binary_op	(	cls	,	series_method_name	)	:	\\n	\\n	    	def	r/;"	f	function:register_binary_op.register	file:
_member_func	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	register_binary_op	(	cls	,	series_method_name	)	:	\\n	\\n	    	def	r/;"	f	function:register_binary_op.register	file:
_merge	data/bpe_corpus_raw/valid.py	/^utf-8	def	_merge	(	old	,	new	)	:	\\n	    	if	new	in	old	:	\\n	        	return	old	\\n		if	not	ol/;"	f
_merge	data/data_raw/valid.py	/^utf-8	def	_merge	(	old	,	new	)	:	\\n	    	if	new	in	old	:	\\n	        	return	old	\\n		if	not	ol/;"	f
_message_from_exception	data/bpe_corpus_raw/train.py	/^utf-8	def	_message_from_exception	(	self	,	request_type	,	request	,	exc	,	tb	=	None	,	\\n	enc_al/;"	f
_message_from_exception	data/data_raw/train.py	/^utf-8	def	_message_from_exception	(	self	,	request_type	,	request	,	exc	,	tb	=	None	,	\\n	enc_al/;"	f
_minimize	data/bpe_corpus_raw/valid.py	/^utf-8	def	_minimize	(	self	,	losses	,	startup_program	=	None	,	parameter_list	=	None	,	\\n	no_gr/;"	f
_minimize	data/data_raw/valid.py	/^utf-8	def	_minimize	(	self	,	losses	,	startup_program	=	None	,	parameter_list	=	None	,	\\n	no_gr/;"	f
_mkdir_p	data/bpe_corpus_raw/valid.py	/^utf-8	def	_mkdir_p	(	abspath	)	:	\\n	    	try	:	\\n	        	os	.	makedirs	(	abspath	)	\\n		exce/;"	f
_mkdir_p	data/data_raw/valid.py	/^utf-8	def	_mkdir_p	(	abspath	)	:	\\n	    	try	:	\\n	        	os	.	makedirs	(	abspath	)	\\n		exce/;"	f
_modify_fd_events	data/bpe_corpus_raw/valid.py	/^utf-8	@	abc	.	abstractmethod	\\n	def	_modify_fd_events	(	self	,	fileno	,	events	,	events_to_clea/;"	f
_modify_fd_events	data/data_raw/valid.py	/^utf-8	@	abc	.	abstractmethod	\\n	def	_modify_fd_events	(	self	,	fileno	,	events	,	events_to_clea/;"	f
_modify_vm	data/bpe_corpus_raw/valid.py	/^utf-8	@	asyncio	.	coroutine	\\n	def	_modify_vm	(	self	,	params	)	:	\\n	    	args	=	shlex	.	split/;"	f
_modify_vm	data/data_raw/valid.py	/^utf-8	@	asyncio	.	coroutine	\\n	def	_modify_vm	(	self	,	params	)	:	\\n	    	args	=	shlex	.	split/;"	f
_move_item	data/bpe_corpus_raw/valid.py	/^utf-8	def	_move_item	(	source_usage_key	,	target_parent_usage_key	,	user	,	\\n	target_index	=	No/;"	f
_move_item	data/data_raw/valid.py	/^utf-8	def	_move_item	(	source_usage_key	,	target_parent_usage_key	,	user	,	\\n	target_index	=	No/;"	f
_name_to_index	data/bpe_corpus_raw/valid.py	/^utf-8	def	_name_to_index	(	self	,	cursor	,	table_name	)	:	\\n	    	return	{	d	[	0	]	:	i	for	i	,	/;"	f
_name_to_index	data/data_raw/valid.py	/^utf-8	def	_name_to_index	(	self	,	cursor	,	table_name	)	:	\\n	    	return	{	d	[	0	]	:	i	for	i	,	/;"	f
_nbits	data/bpe_corpus_raw/test.py	/^utf-8	def	_nbits	(	n	,	correction	=	{	'0'	:	4	,	'1'	:	3	,	'2'	:	2	,	'3'	:	2	,	'4'	:	1	,	'5'	:	1	/;"	f
_nbits	data/data_raw/test.py	/^utf-8	def	_nbits	(	n	,	correction	=	{	'0'	:	4	,	'1'	:	3	,	'2'	:	2	,	'3'	:	2	,	'4'	:	1	,	'5'	:	1	/;"	f
_nd_exc	data/bpe_corpus_raw/train.py	/^utf-8	def	_nd_exc	(	self	,	qualifiers	,	evidence_code	)	:	\\n	    	return	(	'NOT'	not	in	qualifi/;"	f
_nd_exc	data/data_raw/train.py	/^utf-8	def	_nd_exc	(	self	,	qualifiers	,	evidence_code	)	:	\\n	    	return	(	'NOT'	not	in	qualifi/;"	f
_negative_log_likelihood	data/bpe_corpus_raw/valid.py	/^utf-8	def	_negative_log_likelihood	(	x	:	Vector	,	y	:	float	,	beta	:	Vector	)	->	float	:	\\n	   /;"	f
_negative_log_likelihood	data/data_raw/valid.py	/^utf-8	def	_negative_log_likelihood	(	x	:	Vector	,	y	:	float	,	beta	:	Vector	)	->	float	:	\\n	   /;"	f
_network_loop_retry	data/bpe_corpus_raw/test.py	/^utf-8	def	_network_loop_retry	(	self	,	action_cb	,	onerr_cb	,	description	,	interval	)	:	\\n	   /;"	f
_network_loop_retry	data/data_raw/test.py	/^utf-8	def	_network_loop_retry	(	self	,	action_cb	,	onerr_cb	,	description	,	interval	)	:	\\n	   /;"	f
_new_conn	data/bpe_corpus_raw/valid.py	/^utf-8	def	_new_conn	(	self	)	:	\\n	    	self	.	num_connections	+=	1	\\n	log	.	info	(	'Starting n/;"	f
_new_conn	data/bpe_corpus_raw/valid.py	/^utf-8	def	_new_conn	(	self	)	:	\\n	    	self	.	num_connections	+=	1	\\n	return	HTTPConnection	(	/;"	f
_new_conn	data/data_raw/valid.py	/^utf-8	def	_new_conn	(	self	)	:	\\n	    	self	.	num_connections	+=	1	\\n	log	.	info	(	'Starting n/;"	f
_new_conn	data/data_raw/valid.py	/^utf-8	def	_new_conn	(	self	)	:	\\n	    	self	.	num_connections	+=	1	\\n	return	HTTPConnection	(	/;"	f
_new_node	data/bpe_corpus_raw/valid.py	/^utf-8	def	_new_node	(	self	,	key	,	value	)	:	\\n	    	self	.	_count	+=	1	\\n	return	Node	(	key	,/;"	f
_new_node	data/data_raw/valid.py	/^utf-8	def	_new_node	(	self	,	key	,	value	)	:	\\n	    	self	.	_count	+=	1	\\n	return	Node	(	key	,/;"	f
_new_stream	data/bpe_corpus_raw/valid.py	/^utf-8	def	_new_stream	(	self	,	stream_id	=	None	,	local_closed	=	False	)	:	\\n	    	with	self	.	/;"	f
_new_stream	data/data_raw/valid.py	/^utf-8	def	_new_stream	(	self	,	stream_id	=	None	,	local_closed	=	False	)	:	\\n	    	with	self	.	/;"	f
_next_opening_time	data/bpe_corpus_raw/train.py	/^utf-8	def	_next_opening_time	(	self	,	other	)	:	\\n	    	if	not	self	.	next_bday	.	onOffset	(	ot/;"	f
_next_opening_time	data/data_raw/train.py	/^utf-8	def	_next_opening_time	(	self	,	other	)	:	\\n	    	if	not	self	.	next_bday	.	onOffset	(	ot/;"	f
_node_def	data/bpe_corpus_raw/valid.py	/^utf-8	def	_node_def	(	from_node_def	,	export_scope	,	unbound_inputs	,	clear_devices	=	False	\\n	/;"	f
_node_def	data/data_raw/valid.py	/^utf-8	def	_node_def	(	from_node_def	,	export_scope	,	unbound_inputs	,	clear_devices	=	False	\\n	/;"	f
_normalize_row_value	data/bpe_corpus_raw/train.py	/^utf-8	@	staticmethod	\\n	def	_normalize_row_value	(	value	)	:	\\n	    	value	=	re	.	sub	(	'"$'	,/;"	f
_normalize_row_value	data/data_raw/train.py	/^utf-8	@	staticmethod	\\n	def	_normalize_row_value	(	value	)	:	\\n	    	value	=	re	.	sub	(	'"$'	,/;"	f
_normalized_cookie_tuples	data/bpe_corpus_raw/train.py	/^utf-8	def	_normalized_cookie_tuples	(	self	,	attrs_set	)	:	\\n	    	cookie_tuples	=	[	]	\\n	bool/;"	f
_normalized_cookie_tuples	data/data_raw/train.py	/^utf-8	def	_normalized_cookie_tuples	(	self	,	attrs_set	)	:	\\n	    	cookie_tuples	=	[	]	\\n	bool/;"	f
_not_in	data/bpe_corpus_raw/train.py	/^utf-8	def	_not_in	(	x	,	y	)	:	\\n	    	try	:	\\n	        	return	~	x	.	isin	(	y	)	\\n		except	At/;"	f
_not_in	data/data_raw/train.py	/^utf-8	def	_not_in	(	x	,	y	)	:	\\n	    	try	:	\\n	        	return	~	x	.	isin	(	y	)	\\n		except	At/;"	f
_notify_exit_thread	data/bpe_corpus_raw/valid.py	/^utf-8	def	_notify_exit_thread	(	self	,	event	)	:	\\n	    	self	.	__cleanup_thread	(	event	)	\\n	/;"	f
_notify_exit_thread	data/data_raw/valid.py	/^utf-8	def	_notify_exit_thread	(	self	,	event	)	:	\\n	    	self	.	__cleanup_thread	(	event	)	\\n	/;"	f
_number_of_automorphisms_reduced	data/bpe_corpus_raw/valid.py	/^utf-8	def	_number_of_automorphisms_reduced	(	self	)	:	\\n	    	if	self	.	_border	(	1	)	:	\\n	   /;"	f
_number_of_automorphisms_reduced	data/data_raw/valid.py	/^utf-8	def	_number_of_automorphisms_reduced	(	self	)	:	\\n	    	if	self	.	_border	(	1	)	:	\\n	   /;"	f
_onCurrentDocumentChanged	data/bpe_corpus_raw/valid.py	/^utf-8	def	_onCurrentDocumentChanged	(	self	,	old	,	new	)	:	\\n	    	am	=	core	.	actionManager	(	/;"	f
_onCurrentDocumentChanged	data/data_raw/valid.py	/^utf-8	def	_onCurrentDocumentChanged	(	self	,	old	,	new	)	:	\\n	    	am	=	core	.	actionManager	(	/;"	f
_on_cut_clipboard	data/bpe_corpus_raw/test.py	/^utf-8	def	_on_cut_clipboard	(	self	,	entry	)	:	\\n	    	self	.	stop_emission_by_name	(	'cut-clip/;"	f
_on_cut_clipboard	data/data_raw/test.py	/^utf-8	def	_on_cut_clipboard	(	self	,	entry	)	:	\\n	    	self	.	stop_emission_by_name	(	'cut-clip/;"	f
_one_time_wrapper	data/bpe_corpus_raw/test.py	/^utf-8	@	staticmethod	\\n	def	_one_time_wrapper	(	fun	,	contentType	)	:	\\n	    	fun	(	contentTyp/;"	f
_one_time_wrapper	data/data_raw/test.py	/^utf-8	@	staticmethod	\\n	def	_one_time_wrapper	(	fun	,	contentType	)	:	\\n	    	fun	(	contentTyp/;"	f
_op_maker	data/bpe_corpus_raw/valid.py	/^utf-8	def	_op_maker	(	op_class	,	op_symbol	)	:	\\n	\\n	    	def	f	(	self	,	node	,	*	args	,	**	kw/;"	f
_op_maker	data/data_raw/valid.py	/^utf-8	def	_op_maker	(	op_class	,	op_symbol	)	:	\\n	\\n	    	def	f	(	self	,	node	,	*	args	,	**	kw/;"	f
_open	data/bpe_corpus_raw/valid.py	/^utf-8	@	asyncio	.	coroutine	\\n	def	_open	(	self	,	chantype	,	*	args	)	:	\\n	    	if	self	.	_sen/;"	f
_open	data/data_raw/valid.py	/^utf-8	@	asyncio	.	coroutine	\\n	def	_open	(	self	,	chantype	,	*	args	)	:	\\n	    	if	self	.	_sen/;"	f
_ordered_count	data/bpe_corpus_raw/valid.py	/^utf-8	def	_ordered_count	(	iterable	)	:	\\n	    	c	=	OrderedDict	(	)	\\n	for	elem	in	iterable	:	/;"	f
_ordered_count	data/data_raw/valid.py	/^utf-8	def	_ordered_count	(	iterable	)	:	\\n	    	c	=	OrderedDict	(	)	\\n	for	elem	in	iterable	:	/;"	f
_pad_sym	data/bpe_corpus_raw/train.py	/^utf-8	def	_pad_sym	(	arr	,	pad_amt	,	method	,	axis	=	-	1	)	:	\\n	    	if	pad_amt	[	0	]	==	0	and	/;"	f
_pad_sym	data/data_raw/train.py	/^utf-8	def	_pad_sym	(	arr	,	pad_amt	,	method	,	axis	=	-	1	)	:	\\n	    	if	pad_amt	[	0	]	==	0	and	/;"	f
_parse_credentials	data/bpe_corpus_raw/test.py	/^utf-8	def	_parse_credentials	(	username	,	password	,	database	,	options	)	:	\\n	    	mechanism	=/;"	f
_parse_credentials	data/data_raw/test.py	/^utf-8	def	_parse_credentials	(	username	,	password	,	database	,	options	)	:	\\n	    	mechanism	=/;"	f
_parse_data_desc	data/bpe_corpus_raw/valid.py	/^utf-8	def	_parse_data_desc	(	data_names	,	label_names	,	data_shapes	,	label_shapes	)	:	\\n	    	/;"	f
_parse_data_desc	data/data_raw/valid.py	/^utf-8	def	_parse_data_desc	(	data_names	,	label_names	,	data_shapes	,	label_shapes	)	:	\\n	    	/;"	f
_parse_example	data/bpe_corpus_raw/valid.py	/^utf-8	def	tfrecord_iterator	(	filenames	,	gzipped	=	False	,	example_spec	=	None	)	:	\\n	    	wit/;"	f	function:tfrecord_iterator._load_records	file:
_parse_example	data/data_raw/valid.py	/^utf-8	def	tfrecord_iterator	(	filenames	,	gzipped	=	False	,	example_spec	=	None	)	:	\\n	    	wit/;"	f	function:tfrecord_iterator._load_records	file:
_parse_lock_unlock	data/bpe_corpus_raw/valid.py	/^utf-8	def	_parse_lock_unlock	(	self	,	ins	)	:	\\n	    	ins	.	skip_blank_read_if	(	(	b'#'	,	)	)	\\/;"	f
_parse_lock_unlock	data/data_raw/valid.py	/^utf-8	def	_parse_lock_unlock	(	self	,	ins	)	:	\\n	    	ins	.	skip_blank_read_if	(	(	b'#'	,	)	)	\\/;"	f
_parse_results	data/bpe_corpus_raw/valid.py	/^utf-8	def	_parse_results	(	self	,	raw_results	,	includes_qualifiers	)	:	\\n	    	results	=	[	]	\\/;"	f
_parse_results	data/data_raw/valid.py	/^utf-8	def	_parse_results	(	self	,	raw_results	,	includes_qualifiers	)	:	\\n	    	results	=	[	]	\\/;"	f
_patch_dict	data/bpe_corpus_raw/valid.py	/^utf-8	def	_patch_dict	(	self	)	:	\\n	    	values	=	self	.	values	\\n	in_dict	=	self	.	in_dict	\\/;"	f
_patch_dict	data/data_raw/valid.py	/^utf-8	def	_patch_dict	(	self	)	:	\\n	    	values	=	self	.	values	\\n	in_dict	=	self	.	in_dict	\\/;"	f
_patch_file	data/bpe_corpus_raw/valid.py	/^utf-8	def	_patch_file	(	path	,	content	)	:	\\n	    	existing_content	=	open	(	path	)	.	read	(	)	/;"	f
_patch_file	data/data_raw/valid.py	/^utf-8	def	_patch_file	(	path	,	content	)	:	\\n	    	existing_content	=	open	(	path	)	.	read	(	)	/;"	f
_path_encode	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_environ	(	self	)	:	\\n	    	input_stream	=	self	.	input_stream	\\n	content_length	/;"	f	function:get_environ	file:
_path_encode	data/data_raw/valid.py	/^utf-8	def	get_environ	(	self	)	:	\\n	    	input_stream	=	self	.	input_stream	\\n	content_length	/;"	f	function:get_environ	file:
_path_strategy	data/bpe_corpus_raw/valid.py	/^utf-8	def	_path_strategy	(	self	,	host	,	port	,	path_info	)	:	\\n	    	mime_type	=	app	=	app_url/;"	f
_path_strategy	data/data_raw/valid.py	/^utf-8	def	_path_strategy	(	self	,	host	,	port	,	path_info	)	:	\\n	    	mime_type	=	app	=	app_url/;"	f
_period_alias_dictionary	data/bpe_corpus_raw/train.py	/^utf-8	def	_period_alias_dictionary	(	)	:	\\n	    	alias_dict	=	{	}	\\n	M_aliases	=	[	'M'	,	'MTH'/;"	f
_period_alias_dictionary	data/data_raw/train.py	/^utf-8	def	_period_alias_dictionary	(	)	:	\\n	    	alias_dict	=	{	}	\\n	M_aliases	=	[	'M'	,	'MTH'/;"	f
_pg_monitor	data/bpe_corpus_raw/train.py	/^utf-8	def	_pg_monitor	(	self	,	recovery_credits	=	0	,	creation_credits	=	0	)	:	\\n	    	osds	=	d/;"	f
_pg_monitor	data/data_raw/train.py	/^utf-8	def	_pg_monitor	(	self	,	recovery_credits	=	0	,	creation_credits	=	0	)	:	\\n	    	osds	=	d/;"	f
_plot_raw_traces	data/bpe_corpus_raw/valid.py	/^utf-8	def	_plot_raw_traces	(	params	,	color	,	bad_color	,	event_lines	=	None	,	\\n	event_color	=/;"	f
_plot_raw_traces	data/data_raw/valid.py	/^utf-8	def	_plot_raw_traces	(	params	,	color	,	bad_color	,	event_lines	=	None	,	\\n	event_color	=/;"	f
_populators	data/bpe_corpus_raw/train.py	/^utf-8	def	_populators	(	mapper	,	context	,	path	,	row	,	adapter	,	new_populators	,	\\n	existing_/;"	f
_populators	data/data_raw/train.py	/^utf-8	def	_populators	(	mapper	,	context	,	path	,	row	,	adapter	,	new_populators	,	\\n	existing_/;"	f
_post_update	data/bpe_corpus_raw/valid.py	/^utf-8	def	_post_update	(	self	)	:	\\n	    	pass	\\n		$/;"	f
_post_update	data/data_raw/valid.py	/^utf-8	def	_post_update	(	self	)	:	\\n	    	pass	\\n		$/;"	f
_pre_message_hook	data/bpe_corpus_raw/train.py	/^utf-8	def	_pre_message_hook	(	self	,	f	)	:	\\n	    	f	.	write	(	b'\\\\x01\\\\x01\\\\x01\\\\x01'	/;"	f
_pre_message_hook	data/data_raw/train.py	/^utf-8	def	_pre_message_hook	(	self	,	f	)	:	\\n	    	f	.	write	(	b'\\\\x01\\\\x01\\\\x01\\\\x01'	/;"	f
_predict	data/bpe_corpus_raw/train.py	/^utf-8	@	abstractmethod	\\n	def	_predict	(	self	,	image_features	,	num_predictions_per_location	,/;"	f
_predict	data/data_raw/train.py	/^utf-8	@	abstractmethod	\\n	def	_predict	(	self	,	image_features	,	num_predictions_per_location	,/;"	f
_prefix_from_ip_int	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_prefix_from_ip_int	(	cls	,	ip_int	)	:	\\n	    	trailing_zeroes	=	_c/;"	f
_prefix_from_ip_int	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_prefix_from_ip_int	(	cls	,	ip_int	)	:	\\n	    	trailing_zeroes	=	_c/;"	f
_prepare_conn	data/bpe_corpus_raw/test.py	/^utf-8	def	_prepare_conn	(	self	,	conn	)	:	\\n	    	if	isinstance	(	conn	,	VerifiedHTTPSConnectio/;"	f
_prepare_conn	data/data_raw/test.py	/^utf-8	def	_prepare_conn	(	self	,	conn	)	:	\\n	    	if	isinstance	(	conn	,	VerifiedHTTPSConnectio/;"	f
_prepare_wsgi_test_environment	data/bpe_corpus_raw/train.py	/^utf-8	def	_prepare_wsgi_test_environment	(	request_method	,	request_data	)	:	\\n	    	request_en/;"	f
_prepare_wsgi_test_environment	data/data_raw/train.py	/^utf-8	def	_prepare_wsgi_test_environment	(	request_method	,	request_data	)	:	\\n	    	request_en/;"	f
_prepend_max	data/bpe_corpus_raw/train.py	/^utf-8	def	_prepend_max	(	arr	,	pad_amt	,	num	,	axis	=	-	1	)	:	\\n	    	if	pad_amt	==	0	:	\\n	   /;"	f
_prepend_max	data/data_raw/train.py	/^utf-8	def	_prepend_max	(	arr	,	pad_amt	,	num	,	axis	=	-	1	)	:	\\n	    	if	pad_amt	==	0	:	\\n	   /;"	f
_proc_builtin	data/bpe_corpus_raw/valid.py	/^utf-8	def	_proc_builtin	(	self	,	tarfile	)	:	\\n	    	self	.	offset_data	=	tarfile	.	fileobj	.	t/;"	f
_proc_builtin	data/data_raw/valid.py	/^utf-8	def	_proc_builtin	(	self	,	tarfile	)	:	\\n	    	self	.	offset_data	=	tarfile	.	fileobj	.	t/;"	f
_process	data/bpe_corpus_raw/test.py	/^utf-8	def	_process	(	self	,	template_name	,	create	=	False	,	params	=	None	,	template_data	=	Non/;"	f
_process	data/bpe_corpus_raw/train.py	/^utf-8	def	_process	(	self	)	->	None	:	\\n	    	while	True	:	\\n	        	record	=	run_coroutine_/;"	f
_process	data/data_raw/test.py	/^utf-8	def	_process	(	self	,	template_name	,	create	=	False	,	params	=	None	,	template_data	=	Non/;"	f
_process	data/data_raw/train.py	/^utf-8	def	_process	(	self	)	->	None	:	\\n	    	while	True	:	\\n	        	record	=	run_coroutine_/;"	f
_process_next_chunk	data/bpe_corpus_raw/valid.py	/^utf-8	def	_process_next_chunk	(	self	)	:	\\n	    	readable	,	exceptional	=	self	.	transport	.	se/;"	f
_process_next_chunk	data/data_raw/valid.py	/^utf-8	def	_process_next_chunk	(	self	)	:	\\n	    	readable	,	exceptional	=	self	.	transport	.	se/;"	f
_process_parameters	data/bpe_corpus_raw/valid.py	/^utf-8	def	_process_parameters	(	self	,	dim	)	:	\\n	    	if	dim	is	None	or	not	np	.	isscalar	(	di/;"	f
_process_parameters	data/data_raw/valid.py	/^utf-8	def	_process_parameters	(	self	,	dim	)	:	\\n	    	if	dim	is	None	or	not	np	.	isscalar	(	di/;"	f
_process_secret	data/bpe_corpus_raw/valid.py	/^utf-8	def	_process_secret	(	self	,	pkttype	,	pktid	,	packet	)	:	\\n	    	if	self	.	_conn	.	is_cl/;"	f
_process_secret	data/data_raw/valid.py	/^utf-8	def	_process_secret	(	self	,	pkttype	,	pktid	,	packet	)	:	\\n	    	if	self	.	_conn	.	is_cl/;"	f
_prompt_pwd	data/bpe_corpus_raw/train.py	/^utf-8	def	_prompt_pwd	(	ignore	)	:	\\n	    	return	os	.	getcwdu	(	)	\\n		$/;"	f
_prompt_pwd	data/data_raw/train.py	/^utf-8	def	_prompt_pwd	(	ignore	)	:	\\n	    	return	os	.	getcwdu	(	)	\\n		$/;"	f
_properties_button_clicked_cb	data/bpe_corpus_raw/train.py	/^utf-8	def	_properties_button_clicked_cb	(	self	,	button	)	:	\\n	    	page_num	=	self	.	get_curre/;"	f
_properties_button_clicked_cb	data/data_raw/train.py	/^utf-8	def	_properties_button_clicked_cb	(	self	,	button	)	:	\\n	    	page_num	=	self	.	get_curre/;"	f
_proxy_bypass_cached	data/bpe_corpus_raw/test.py	/^utf-8	@	TimedCacheManaged	\\n	def	_proxy_bypass_cached	(	netloc	)	:	\\n	    	return	proxy_bypass/;"	f
_proxy_bypass_cached	data/data_raw/test.py	/^utf-8	@	TimedCacheManaged	\\n	def	_proxy_bypass_cached	(	netloc	)	:	\\n	    	return	proxy_bypass/;"	f
_putchar	data/bpe_corpus_raw/train.py	/^utf-8	def	_putchar	(	self	,	addr	,	data	)	:	\\n	    	self	.	_data	.	seek	(	addr	-	self	.	start	)/;"	f
_putchar	data/data_raw/train.py	/^utf-8	def	_putchar	(	self	,	addr	,	data	)	:	\\n	    	self	.	_data	.	seek	(	addr	-	self	.	start	)/;"	f
_python_shell	data/bpe_corpus_raw/train.py	/^utf-8	def	_python_shell	(	self	)	:	\\n	    	from	parmed	.	tools	import	actions	\\n	python_interp/;"	f
_python_shell	data/data_raw/train.py	/^utf-8	def	_python_shell	(	self	)	:	\\n	    	from	parmed	.	tools	import	actions	\\n	python_interp/;"	f
_queue_management_worker	data/bpe_corpus_raw/train.py	/^utf-8	def	_queue_management_worker	(	executor_reference	,	processes	,	\\n	pending_work_items	,	w/;"	f
_queue_management_worker	data/data_raw/train.py	/^utf-8	def	_queue_management_worker	(	executor_reference	,	processes	,	\\n	pending_work_items	,	w/;"	f
_raise_timeout	data/bpe_corpus_raw/train.py	/^utf-8	def	_raise_timeout	(	self	,	err	,	url	,	timeout_value	)	:	\\n	    	if	isinstance	(	err	,	S/;"	f
_raise_timeout	data/data_raw/train.py	/^utf-8	def	_raise_timeout	(	self	,	err	,	url	,	timeout_value	)	:	\\n	    	if	isinstance	(	err	,	S/;"	f
_random_subset	data/bpe_corpus_raw/train.py	/^utf-8	def	_random_subset	(	seq	,	m	,	rng	)	:	\\n	    	targets	=	set	(	)	\\n	while	len	(	targets	/;"	f
_random_subset	data/data_raw/train.py	/^utf-8	def	_random_subset	(	seq	,	m	,	rng	)	:	\\n	    	targets	=	set	(	)	\\n	while	len	(	targets	/;"	f
_read	data/bpe_corpus_raw/train.py	/^utf-8	def	_read	(	self	,	n	,	initial	=	False	)	:	\\n	    	raise	NotImplementedError	(	'Must be o/;"	f
_read	data/data_raw/train.py	/^utf-8	def	_read	(	self	,	n	,	initial	=	False	)	:	\\n	    	raise	NotImplementedError	(	'Must be o/;"	f
_read_freq1	data/bpe_corpus_raw/test.py	/^utf-8	def	_read_freq1	(	self	,	data	,	n	)	:	\\n	    	ntotal	=	16	\\n	nentries	=	(	len	(	data	)	-/;"	f
_read_freq1	data/data_raw/test.py	/^utf-8	def	_read_freq1	(	self	,	data	,	n	)	:	\\n	    	ntotal	=	16	\\n	nentries	=	(	len	(	data	)	-/;"	f
_recalculate_topics	data/bpe_corpus_raw/valid.py	/^utf-8	def	_recalculate_topics	(	self	)	:	\\n	    	self	.	topics	=	set	(	[	x	.	resolved_name	for	/;"	f
_recalculate_topics	data/data_raw/valid.py	/^utf-8	def	_recalculate_topics	(	self	)	:	\\n	    	self	.	topics	=	set	(	[	x	.	resolved_name	for	/;"	f
_reciprocal_flops	data/bpe_corpus_raw/test.py	/^utf-8	@	ops	.	RegisterStatistics	(	'Reciprocal'	,	'flops'	)	\\n	def	_reciprocal_flops	(	graph	,	/;"	f
_reciprocal_flops	data/data_raw/test.py	/^utf-8	@	ops	.	RegisterStatistics	(	'Reciprocal'	,	'flops'	)	\\n	def	_reciprocal_flops	(	graph	,	/;"	f
_reconstruct_sequence_inputs	data/bpe_corpus_raw/valid.py	/^utf-8	def	_reconstruct_sequence_inputs	(	self	,	op_def	,	inputs	,	attrs	)	:	\\n	    	grouped_inp/;"	f
_reconstruct_sequence_inputs	data/data_raw/valid.py	/^utf-8	def	_reconstruct_sequence_inputs	(	self	,	op_def	,	inputs	,	attrs	)	:	\\n	    	grouped_inp/;"	f
_reduce	data/bpe_corpus_raw/valid.py	/^utf-8	def	_reduce	(	self	,	op	,	name	,	axis	=	0	,	skipna	=	True	,	numeric_only	=	None	,	\\n	filt/;"	f
_reduce	data/data_raw/valid.py	/^utf-8	def	_reduce	(	self	,	op	,	name	,	axis	=	0	,	skipna	=	True	,	numeric_only	=	None	,	\\n	filt/;"	f
_remap_inputs	data/bpe_corpus_raw/valid.py	/^utf-8	def	_remap_inputs	(	self	,	new_input_indices	)	:	\\n	    	new_input_indices	=	_finalize_in/;"	f
_remap_inputs	data/data_raw/valid.py	/^utf-8	def	_remap_inputs	(	self	,	new_input_indices	)	:	\\n	    	new_input_indices	=	_finalize_in/;"	f
_remap_outputs	data/bpe_corpus_raw/train.py	/^utf-8	def	_remap_outputs	(	self	,	new_output_indices	)	:	\\n	    	new_output_indices	=	_finalize/;"	f
_remap_outputs	data/data_raw/train.py	/^utf-8	def	_remap_outputs	(	self	,	new_output_indices	)	:	\\n	    	new_output_indices	=	_finalize/;"	f
_remove_callback	data/bpe_corpus_raw/valid.py	/^utf-8	def	_remove_callback	(	self	,	name	,	obj	,	ptuple	)	:	\\n	    	provider	,	target	=	ptuple	/;"	f
_remove_callback	data/data_raw/valid.py	/^utf-8	def	_remove_callback	(	self	,	name	,	obj	,	ptuple	)	:	\\n	    	provider	,	target	=	ptuple	/;"	f
_remove_files	data/bpe_corpus_raw/valid.py	/^utf-8	def	_remove_files	(	self	,	predicate	)	:	\\n	    	found	=	False	\\n	for	i	in	range	(	len	(/;"	f
_remove_files	data/data_raw/valid.py	/^utf-8	def	_remove_files	(	self	,	predicate	)	:	\\n	    	found	=	False	\\n	for	i	in	range	(	len	(/;"	f
_remove_writer	data/bpe_corpus_raw/train.py	/^utf-8	def	_remove_writer	(	self	,	fd	)	:	\\n	    	if	self	.	is_closed	(	)	:	\\n	        	return	/;"	f
_remove_writer	data/data_raw/train.py	/^utf-8	def	_remove_writer	(	self	,	fd	)	:	\\n	    	if	self	.	is_closed	(	)	:	\\n	        	return	/;"	f
_render_parts	data/bpe_corpus_raw/train.py	/^utf-8	def	_render_parts	(	self	,	header_parts	)	:	\\n	    	parts	=	[	]	\\n	iterable	=	header_par/;"	f
_render_parts	data/data_raw/train.py	/^utf-8	def	_render_parts	(	self	,	header_parts	)	:	\\n	    	parts	=	[	]	\\n	iterable	=	header_par/;"	f
_replace	data/bpe_corpus_raw/train.py	/^utf-8	def	_replace	(	self	,	fname	,	force	=	False	)	:	\\n	    	yed	=	Yedit	(	fname	)	\\n	results/;"	f
_replace	data/data_raw/train.py	/^utf-8	def	_replace	(	self	,	fname	,	force	=	False	)	:	\\n	    	yed	=	Yedit	(	fname	)	\\n	results/;"	f
_replace_cdata_list_attribute_values	data/bpe_corpus_raw/test.py	/^utf-8	def	_replace_cdata_list_attribute_values	(	self	,	tag_name	,	attrs	)	:	\\n	    	if	not	att/;"	f
_replace_cdata_list_attribute_values	data/data_raw/test.py	/^utf-8	def	_replace_cdata_list_attribute_values	(	self	,	tag_name	,	attrs	)	:	\\n	    	if	not	att/;"	f
_repr_	data/bpe_corpus_raw/train.py	/^utf-8	def	_repr_	(	self	)	:	\\n	    	base	=	'Affine '	\\n	rep	=	repr	(	self	.	_g	)	\\n	if	self	./;"	f
_repr_	data/data_raw/train.py	/^utf-8	def	_repr_	(	self	)	:	\\n	    	base	=	'Affine '	\\n	rep	=	repr	(	self	.	_g	)	\\n	if	self	./;"	f
_request_webpage	data/bpe_corpus_raw/valid.py	/^utf-8	def	_request_webpage	(	self	,	url_or_request	,	video_id	,	note	=	None	,	errnote	=	\\n	None/;"	f
_request_webpage	data/data_raw/valid.py	/^utf-8	def	_request_webpage	(	self	,	url_or_request	,	video_id	,	note	=	None	,	errnote	=	\\n	None/;"	f
_reset	data/bpe_corpus_raw/valid.py	/^utf-8	def	_reset	(	self	)	:	\\n	    	super	(	DetK	,	self	)	.	_reset	(	)	\\n	self	.	fs_	=	None	\\/;"	f
_reset	data/data_raw/valid.py	/^utf-8	def	_reset	(	self	)	:	\\n	    	super	(	DetK	,	self	)	.	_reset	(	)	\\n	self	.	fs_	=	None	\\/;"	f
_resetAll	data/bpe_corpus_raw/valid.py	/^utf-8	def	_resetAll	(	suppressPrompt	)	:	\\n	    	g_log	.	warning	(	'Invoked with suppressPrompt/;"	f
_resetAll	data/data_raw/valid.py	/^utf-8	def	_resetAll	(	suppressPrompt	)	:	\\n	    	g_log	.	warning	(	'Invoked with suppressPrompt/;"	f
_reversemap_vhosts	data/bpe_corpus_raw/train.py	/^utf-8	def	_reversemap_vhosts	(	names	,	vhosts	)	:	\\n	    	return_vhosts	=	list	(	)	\\n	for	sele/;"	f
_reversemap_vhosts	data/data_raw/train.py	/^utf-8	def	_reversemap_vhosts	(	names	,	vhosts	)	:	\\n	    	return_vhosts	=	list	(	)	\\n	for	sele/;"	f
_rfe_single_fit	data/bpe_corpus_raw/valid.py	/^utf-8	def	_rfe_single_fit	(	rfe	,	estimator	,	X	,	y	,	train	,	test	,	scorer	)	:	\\n	    	X_train/;"	f
_rfe_single_fit	data/data_raw/valid.py	/^utf-8	def	_rfe_single_fit	(	rfe	,	estimator	,	X	,	y	,	train	,	test	,	scorer	)	:	\\n	    	X_train/;"	f
_rhoTilde	data/bpe_corpus_raw/valid.py	/^utf-8	def	_rhoTilde	(	self	,	r	,	N	,	L	)	:	\\n	    	xi	=	self	.	_calculateXi	(	r	)	\\n	CC	=	_C	(/;"	f
_rhoTilde	data/data_raw/valid.py	/^utf-8	def	_rhoTilde	(	self	,	r	,	N	,	L	)	:	\\n	    	xi	=	self	.	_calculateXi	(	r	)	\\n	CC	=	_C	(/;"	f
_run	data/bpe_corpus_raw/train.py	/^utf-8	def	_run	(	self	,	scanObject	,	result	,	depth	,	args	)	:	\\n	    	moduleResult	=	[	]	\\n	f/;"	f
_run	data/bpe_corpus_raw/valid.py	/^utf-8	def	_run	(	self	,	cmds	,	input_data	)	:	\\n	    	curr_env	=	os	.	environ	.	copy	(	)	\\n	cu/;"	f
_run	data/data_raw/train.py	/^utf-8	def	_run	(	self	,	scanObject	,	result	,	depth	,	args	)	:	\\n	    	moduleResult	=	[	]	\\n	f/;"	f
_run	data/data_raw/valid.py	/^utf-8	def	_run	(	self	,	cmds	,	input_data	)	:	\\n	    	curr_env	=	os	.	environ	.	copy	(	)	\\n	cu/;"	f
_run_extra_scripts	data/bpe_corpus_raw/valid.py	/^utf-8	def	_run_extra_scripts	(	self	,	ep_obj	)	:	\\n	    	for	curScriptName	in	sickrage	.	app	.	/;"	f
_run_extra_scripts	data/data_raw/valid.py	/^utf-8	def	_run_extra_scripts	(	self	,	ep_obj	)	:	\\n	    	for	curScriptName	in	sickrage	.	app	.	/;"	f
_run_fit_impl	data/bpe_corpus_raw/train.py	/^utf-8	def	_run_fit_impl	(	self	,	data_ws	,	workspace_index	,	fit_options	,	simulation	=	False	\\/;"	f
_run_fit_impl	data/data_raw/train.py	/^utf-8	def	_run_fit_impl	(	self	,	data_ws	,	workspace_index	,	fit_options	,	simulation	=	False	\\/;"	f
_run_info_from_yaml	data/bpe_corpus_raw/train.py	/^utf-8	def	_run_info_from_yaml	(	fc_dir	,	run_info_yaml	)	:	\\n	    	with	open	(	run_info_yaml	)	/;"	f
_run_info_from_yaml	data/data_raw/train.py	/^utf-8	def	_run_info_from_yaml	(	fc_dir	,	run_info_yaml	)	:	\\n	    	with	open	(	run_info_yaml	)	/;"	f
_runner_class	data/bpe_corpus_raw/valid.py	/^utf-8	def	_runner_class	(	self	)	:	\\n	    	if	not	self	.	options	.	runner	or	self	.	options	.	r/;"	f
_runner_class	data/data_raw/valid.py	/^utf-8	def	_runner_class	(	self	)	:	\\n	    	if	not	self	.	options	.	runner	or	self	.	options	.	r/;"	f
_safeRemoveFile	data/bpe_corpus_raw/train.py	/^utf-8	def	_safeRemoveFile	(	self	,	filename	)	:	\\n	    	try	:	\\n	        	os	.	remove	(	filena/;"	f
_safeRemoveFile	data/data_raw/train.py	/^utf-8	def	_safeRemoveFile	(	self	,	filename	)	:	\\n	    	try	:	\\n	        	os	.	remove	(	filena/;"	f
_safe_shape_div	data/bpe_corpus_raw/valid.py	/^utf-8	def	_safe_shape_div	(	x	,	y	)	:	\\n	    	return	x	\/\/	math_ops	.	maximum	(	y	,	1	)	\\n		$/;"	f
_safe_shape_div	data/data_raw/valid.py	/^utf-8	def	_safe_shape_div	(	x	,	y	)	:	\\n	    	return	x	\/\/	math_ops	.	maximum	(	y	,	1	)	\\n		$/;"	f
_safe_write	data/bpe_corpus_raw/valid.py	/^utf-8	def	auto_wrap_for_ansi	(	stream	,	color	=	None	)	:	\\n	    	try	:	\\n	        	cached	=	_a/;"	f	function:auto_wrap_for_ansi	file:
_safe_write	data/data_raw/valid.py	/^utf-8	def	auto_wrap_for_ansi	(	stream	,	color	=	None	)	:	\\n	    	try	:	\\n	        	cached	=	_a/;"	f	function:auto_wrap_for_ansi	file:
_scan_soot_block	data/bpe_corpus_raw/train.py	/^utf-8	def	_scan_soot_block	(	self	,	cfg_job	,	current_func_addr	)	:	\\n	    	addr	,	function_add/;"	f
_scan_soot_block	data/data_raw/train.py	/^utf-8	def	_scan_soot_block	(	self	,	cfg_job	,	current_func_addr	)	:	\\n	    	addr	,	function_add/;"	f
_scan_vocabulary	data/bpe_corpus_raw/train.py	/^utf-8	def	_scan_vocabulary	(	self	,	sents	)	:	\\n	    	_ckpt	=	int	(	len	(	sents	)	\/	40	)	\\n	w/;"	f
_scan_vocabulary	data/data_raw/train.py	/^utf-8	def	_scan_vocabulary	(	self	,	sents	)	:	\\n	    	_ckpt	=	int	(	len	(	sents	)	\/	40	)	\\n	w/;"	f
_schedulable	data/bpe_corpus_raw/valid.py	/^utf-8	def	_schedulable	(	self	,	node	=	None	,	selector	=	None	,	schedulable	=	True	)	:	\\n	    	/;"	f
_schedulable	data/data_raw/valid.py	/^utf-8	def	_schedulable	(	self	,	node	=	None	,	selector	=	None	,	schedulable	=	True	)	:	\\n	    	/;"	f
_scheduled_stamp_resource_op_runner	data/bpe_corpus_raw/valid.py	/^utf-8	def	_scheduled_stamp_resource_op_runner	(	batch	,	stamp	)	:	\\n	    	if	not	batch	:	\\n	  /;"	f
_scheduled_stamp_resource_op_runner	data/data_raw/valid.py	/^utf-8	def	_scheduled_stamp_resource_op_runner	(	batch	,	stamp	)	:	\\n	    	if	not	batch	:	\\n	  /;"	f
_screen_new_output_pad	data/bpe_corpus_raw/valid.py	/^utf-8	def	_screen_new_output_pad	(	self	,	rows	,	cols	)	:	\\n	    	return	curses	.	newpad	(	rows/;"	f
_screen_new_output_pad	data/data_raw/valid.py	/^utf-8	def	_screen_new_output_pad	(	self	,	rows	,	cols	)	:	\\n	    	return	curses	.	newpad	(	rows/;"	f
_sdist	data/bpe_corpus_raw/train.py	/^utf-8	def	get_cmdclass	(	)	:	\\n	    	if	'versioneer'	in	sys	.	modules	:	\\n	        	del	sys	.	/;"	x	member:get_cmdclass.cmd_version.initialize_options.finalize_options.run.cmd_build_py.run.cmd_build_exe.run	file:
_sdist	data/data_raw/train.py	/^utf-8	def	get_cmdclass	(	)	:	\\n	    	if	'versioneer'	in	sys	.	modules	:	\\n	        	del	sys	.	/;"	x	member:get_cmdclass.cmd_version.initialize_options.finalize_options.run.cmd_build_py.run.cmd_build_exe.run	file:
_search_schedule	data/bpe_corpus_raw/valid.py	/^utf-8	def	_search_schedule	(	year	,	week	=	None	,	home	=	None	,	away	=	None	,	kind	=	'REG'	,	\\n/;"	f
_search_schedule	data/data_raw/valid.py	/^utf-8	def	_search_schedule	(	year	,	week	=	None	,	home	=	None	,	away	=	None	,	kind	=	'REG'	,	\\n/;"	f
_send_variable_event	data/bpe_corpus_raw/train.py	/^utf-8	def	_send_variable_event	(	self	,	name	:	str	,	value	,	prev_value	,	change	,	\\n	player_nu/;"	f
_send_variable_event	data/data_raw/train.py	/^utf-8	def	_send_variable_event	(	self	,	name	:	str	,	value	,	prev_value	,	change	,	\\n	player_nu/;"	f
_serve_scalars	data/bpe_corpus_raw/valid.py	/^utf-8	def	_serve_scalars	(	self	,	query_params	)	:	\\n	    	tag	=	query_params	.	get	(	'tag'	)	\\/;"	f
_serve_scalars	data/data_raw/valid.py	/^utf-8	def	_serve_scalars	(	self	,	query_params	)	:	\\n	    	tag	=	query_params	.	get	(	'tag'	)	\\/;"	f
_server_version	data/bpe_corpus_raw/valid.py	/^utf-8	def	_server_version	(	engine	)	:	\\n	    	conn	=	engine	.	connect	(	)	\\n	version	=	getatt/;"	f
_server_version	data/data_raw/valid.py	/^utf-8	def	_server_version	(	engine	)	:	\\n	    	conn	=	engine	.	connect	(	)	\\n	version	=	getatt/;"	f
_session	data/bpe_corpus_raw/valid.py	/^utf-8	def	_session	(	self	)	:	\\n	    	if	'django.contrib.sessions'	in	settings	.	INSTALLED_APPS/;"	f
_session	data/data_raw/valid.py	/^utf-8	def	_session	(	self	)	:	\\n	    	if	'django.contrib.sessions'	in	settings	.	INSTALLED_APPS/;"	f
_set	data/bpe_corpus_raw/valid.py	/^utf-8	def	_set	(	config	,	key	,	value	)	:	\\n	    	if	hasattr	(	config	,	'set'	)	:	\\n	        	/;"	f
_set	data/bpe_corpus_raw/valid.py	/^utf-8	def	_set	(	self	,	instance	,	value	,	**	kw	)	:	\\n	    	logger	.	debug	(	'ATFieldManager::/;"	f
_set	data/data_raw/valid.py	/^utf-8	def	_set	(	config	,	key	,	value	)	:	\\n	    	if	hasattr	(	config	,	'set'	)	:	\\n	        	/;"	f
_set	data/data_raw/valid.py	/^utf-8	def	_set	(	self	,	instance	,	value	,	**	kw	)	:	\\n	    	logger	.	debug	(	'ATFieldManager::/;"	f
_setCssText	data/bpe_corpus_raw/test.py	/^utf-8	def	_setCssText	(	self	,	cssText	)	:	\\n	    	self	.	_checkReadonly	(	)	\\n	tokenizer	=	se/;"	f
_setCssText	data/data_raw/test.py	/^utf-8	def	_setCssText	(	self	,	cssText	)	:	\\n	    	self	.	_checkReadonly	(	)	\\n	tokenizer	=	se/;"	f
_setValue	data/bpe_corpus_raw/valid.py	/^utf-8	def	_setValue	(	self	,	value	)	:	\\n	    	if	self	.	_CT_SIMPLE	!=	self	.	_ContentTypeTag	:/;"	f
_setValue	data/data_raw/valid.py	/^utf-8	def	_setValue	(	self	,	value	)	:	\\n	    	if	self	.	_CT_SIMPLE	!=	self	.	_ContentTypeTag	:/;"	f
_set_matrix	data/bpe_corpus_raw/valid.py	/^utf-8	def	hb_write	(	file	,	m	,	hb_info	=	None	)	:	\\n	    	if	hb_info	is	None	:	\\n	        	hb/;"	f	function:hb_write	file:
_set_matrix	data/data_raw/valid.py	/^utf-8	def	hb_write	(	file	,	m	,	hb_info	=	None	)	:	\\n	    	if	hb_info	is	None	:	\\n	        	hb/;"	f	function:hb_write	file:
_set_reply_headers	data/bpe_corpus_raw/valid.py	/^utf-8	def	_set_reply_headers	(	new_message	,	previous_message	)	:	\\n	    	if	previous_message	./;"	f
_set_reply_headers	data/data_raw/valid.py	/^utf-8	def	_set_reply_headers	(	new_message	,	previous_message	)	:	\\n	    	if	previous_message	./;"	f
_set_upload_limit	data/bpe_corpus_raw/valid.py	/^utf-8	def	_set_upload_limit	(	self	,	limit	)	:	\\n	    	if	isinstance	(	limit	,	integer_types	)	/;"	f
_set_upload_limit	data/data_raw/valid.py	/^utf-8	def	_set_upload_limit	(	self	,	limit	)	:	\\n	    	if	isinstance	(	limit	,	integer_types	)	/;"	f
_setting_changed	data/bpe_corpus_raw/valid.py	/^utf-8	@	receiver	(	signals	.	setting_changed	)	\\n	def	_setting_changed	(	sender	,	setting	,	*	a/;"	f
_setting_changed	data/data_raw/valid.py	/^utf-8	@	receiver	(	signals	.	setting_changed	)	\\n	def	_setting_changed	(	sender	,	setting	,	*	a/;"	f
_setup_app_update_auth_subparser	data/bpe_corpus_raw/valid.py	/^utf-8	def	_setup_app_update_auth_subparser	(	subparsers	)	:	\\n	    	app_update_parser	=	_genera/;"	f
_setup_app_update_auth_subparser	data/data_raw/valid.py	/^utf-8	def	_setup_app_update_auth_subparser	(	subparsers	)	:	\\n	    	app_update_parser	=	_genera/;"	f
_setup_from_config	data/bpe_corpus_raw/test.py	/^utf-8	def	_setup_from_config	(	self	,	config	)	:	\\n	    	self	.	_config	=	config	\\n	state_on	=/;"	f
_setup_from_config	data/data_raw/test.py	/^utf-8	def	_setup_from_config	(	self	,	config	)	:	\\n	    	self	.	_config	=	config	\\n	state_on	=/;"	f
_setup_rate_limit	data/bpe_corpus_raw/test.py	/^utf-8	def	_setup_rate_limit	(	self	)	:	\\n	$/;"	f
_setup_rate_limit	data/data_raw/test.py	/^utf-8	def	_setup_rate_limit	(	self	)	:	\\n	$/;"	f
_setup_signal_connections	data/bpe_corpus_raw/valid.py	/^utf-8	def	_setup_signal_connections	(	self	,	builder	)	:	\\n	    	signals	=	{	'on_add_button_cli/;"	f
_setup_signal_connections	data/data_raw/valid.py	/^utf-8	def	_setup_signal_connections	(	self	,	builder	)	:	\\n	    	signals	=	{	'on_add_button_cli/;"	f
_show	data/bpe_corpus_raw/train.py	/^utf-8	def	_show	(	self	,	resource_id	,	requestslib_kwargs	=	None	)	:	\\n	    	url	=	'{base_url}\//;"	f
_show	data/data_raw/train.py	/^utf-8	def	_show	(	self	,	resource_id	,	requestslib_kwargs	=	None	)	:	\\n	    	url	=	'{base_url}\//;"	f
_shutdown	data/bpe_corpus_raw/valid.py	/^utf-8	def	_shutdown	(	self	)	:	\\n	    	self	.	ppserver	.	destroy	(	)	\\n		$/;"	f
_shutdown	data/data_raw/valid.py	/^utf-8	def	_shutdown	(	self	)	:	\\n	    	self	.	ppserver	.	destroy	(	)	\\n		$/;"	f
_sigmaclip_noaxis	data/bpe_corpus_raw/valid.py	/^utf-8	def	_sigmaclip_noaxis	(	self	,	data	,	masked	=	True	,	return_bounds	=	False	,	copy	=	True	/;"	f
_sigmaclip_noaxis	data/data_raw/valid.py	/^utf-8	def	_sigmaclip_noaxis	(	self	,	data	,	masked	=	True	,	return_bounds	=	False	,	copy	=	True	/;"	f
_simple_document	data/bpe_corpus_raw/valid.py	/^utf-8	def	_simple_document	(	text	,	min_length	=	1	,	stopwords	=	None	)	:	\\n	    	if	not	stopwo/;"	f
_simple_document	data/data_raw/valid.py	/^utf-8	def	_simple_document	(	text	,	min_length	=	1	,	stopwords	=	None	)	:	\\n	    	if	not	stopwo/;"	f
_slice	data/bpe_corpus_raw/train.py	/^utf-8	def	_slice	(	self	,	start	,	stop	)	:	\\n	    	handle	=	NDArrayHandle	(	)	\\n	start	=	mx_ui/;"	f
_slice	data/data_raw/train.py	/^utf-8	def	_slice	(	self	,	start	,	stop	)	:	\\n	    	handle	=	NDArrayHandle	(	)	\\n	start	=	mx_ui/;"	f
_sort_key	data/bpe_corpus_raw/valid.py	/^utf-8	def	_sort_key	(	self	,	x	)	:	\\n	    	return	-	len	(	x	)	,	x	.	to_word_list	(	)	\\n		$/;"	f
_sort_key	data/data_raw/valid.py	/^utf-8	def	_sort_key	(	self	,	x	)	:	\\n	    	return	-	len	(	x	)	,	x	.	to_word_list	(	)	\\n		$/;"	f
_spawn	data/bpe_corpus_raw/valid.py	/^utf-8	def	_spawn	(	self	,	command	,	args	=	[	]	,	preexec_fn	=	None	,	dimensions	=	None	)	:	\\n	 /;"	f
_spawn	data/data_raw/valid.py	/^utf-8	def	_spawn	(	self	,	command	,	args	=	[	]	,	preexec_fn	=	None	,	dimensions	=	None	)	:	\\n	 /;"	f
_spec_from_modpath	data/bpe_corpus_raw/valid.py	/^utf-8	def	_spec_from_modpath	(	modpath	,	path	=	None	,	context	=	None	)	:	\\n	    	assert	modpat/;"	f
_spec_from_modpath	data/data_raw/valid.py	/^utf-8	def	_spec_from_modpath	(	modpath	,	path	=	None	,	context	=	None	)	:	\\n	    	assert	modpat/;"	f
_split_header	data/bpe_corpus_raw/train.py	/^utf-8	@	staticmethod	\\n	def	_split_header	(	header	)	:	\\n	    	params	=	{	}	\\n	parts	=	header/;"	f
_split_header	data/data_raw/train.py	/^utf-8	@	staticmethod	\\n	def	_split_header	(	header	)	:	\\n	    	params	=	{	}	\\n	parts	=	header/;"	f
_split_path_levels	data/bpe_corpus_raw/valid.py	/^utf-8	def	_split_path_levels	(	self	,	path	)	:	\\n	    	paths	=	[	]	\\n	if	path	:	\\n	        	t/;"	f
_split_path_levels	data/data_raw/valid.py	/^utf-8	def	_split_path_levels	(	self	,	path	)	:	\\n	    	paths	=	[	]	\\n	if	path	:	\\n	        	t/;"	f
_splitext	data/bpe_corpus_raw/train.py	/^utf-8	def	_splitext	(	p	,	sep	,	altsep	,	extsep	)	:	\\n	    	sepIndex	=	p	.	rfind	(	sep	)	\\n	if/;"	f
_splitext	data/data_raw/train.py	/^utf-8	def	_splitext	(	p	,	sep	,	altsep	,	extsep	)	:	\\n	    	sepIndex	=	p	.	rfind	(	sep	)	\\n	if/;"	f
_static_check_for_same_dimensions	data/bpe_corpus_raw/train.py	/^utf-8	def	_static_check_for_same_dimensions	(	operators	)	:	\\n	    	if	len	(	operators	)	<	2	:	/;"	f
_static_check_for_same_dimensions	data/data_raw/train.py	/^utf-8	def	_static_check_for_same_dimensions	(	operators	)	:	\\n	    	if	len	(	operators	)	<	2	:	/;"	f
_status_code__get	data/bpe_corpus_raw/valid.py	/^utf-8	def	_status_code__get	(	self	)	:	\\n	    	return	int	(	self	.	_status	.	split	(	)	[	0	]	)	/;"	f
_status_code__get	data/data_raw/valid.py	/^utf-8	def	_status_code__get	(	self	)	:	\\n	    	return	int	(	self	.	_status	.	split	(	)	[	0	]	)	/;"	f
_stop_transmit	data/bpe_corpus_raw/valid.py	/^utf-8	def	_stop_transmit	(	self	,	stream	)	:	\\n	    	_vv	and	IOLOG	.	debug	(	'%r._stop_transmit/;"	f
_stop_transmit	data/data_raw/valid.py	/^utf-8	def	_stop_transmit	(	self	,	stream	)	:	\\n	    	_vv	and	IOLOG	.	debug	(	'%r._stop_transmit/;"	f
_storeCommand	data/bpe_corpus_raw/valid.py	/^utf-8	def	_storeCommand	(	self	,	result	)	:	\\n	    	for	dt	in	result	:	\\n	        	resQuery	=	/;"	f
_storeCommand	data/data_raw/valid.py	/^utf-8	def	_storeCommand	(	self	,	result	)	:	\\n	    	for	dt	in	result	:	\\n	        	resQuery	=	/;"	f
_store_sparse_tensors_join	data/bpe_corpus_raw/valid.py	/^utf-8	def	_store_sparse_tensors_join	(	tensor_list_list	,	enqueue_many	,	keep_input	)	:	\\n	    /;"	f
_store_sparse_tensors_join	data/data_raw/valid.py	/^utf-8	def	_store_sparse_tensors_join	(	tensor_list_list	,	enqueue_many	,	keep_input	)	:	\\n	    /;"	f
_store_spikes	data/bpe_corpus_raw/valid.py	/^utf-8	def	_store_spikes	(	self	,	spikes	)	:	\\n	    	self	.	n	[	:	]	=	0	\\n	for	t	,	target	in	sp/;"	f
_store_spikes	data/data_raw/valid.py	/^utf-8	def	_store_spikes	(	self	,	spikes	)	:	\\n	    	self	.	n	[	:	]	=	0	\\n	for	t	,	target	in	sp/;"	f
_strcoll	data/bpe_corpus_raw/train.py	/^utf-8	def	_strcoll	(	a	,	b	)	:	\\n	    	return	(	a	>	b	)	-	(	a	<	b	)	\\n		$/;"	f
_strcoll	data/data_raw/train.py	/^utf-8	def	_strcoll	(	a	,	b	)	:	\\n	    	return	(	a	>	b	)	-	(	a	<	b	)	\\n		$/;"	f
_sub_ms_char	data/bpe_corpus_raw/valid.py	/^utf-8	def	_sub_ms_char	(	self	,	match	)	:	\\n	    	orig	=	match	.	group	(	1	)	\\n	if	self	.	smar/;"	f
_sub_ms_char	data/data_raw/valid.py	/^utf-8	def	_sub_ms_char	(	self	,	match	)	:	\\n	    	orig	=	match	.	group	(	1	)	\\n	if	self	.	smar/;"	f
_subdomain_check	data/bpe_corpus_raw/valid.py	/^utf-8	def	_subdomain_check	(	config	,	kargs	)	:	\\n	    	if	config	.	mapper	.	sub_domains	:	\\n	/;"	f
_subdomain_check	data/data_raw/valid.py	/^utf-8	def	_subdomain_check	(	config	,	kargs	)	:	\\n	    	if	config	.	mapper	.	sub_domains	:	\\n	/;"	f
_subscribe_extend	data/bpe_corpus_raw/train.py	/^utf-8	def	_subscribe_extend	(	tensor	,	side_effects	)	:	\\n	    	assert	len	(	tensor	.	op	.	inpu/;"	f
_subscribe_extend	data/data_raw/train.py	/^utf-8	def	_subscribe_extend	(	tensor	,	side_effects	)	:	\\n	    	assert	len	(	tensor	.	op	.	inpu/;"	f
_substitute_xml_entity	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_substitute_xml_entity	(	cls	,	matchobj	)	:	\\n	    	entity	=	cls	.	/;"	f
_substitute_xml_entity	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_substitute_xml_entity	(	cls	,	matchobj	)	:	\\n	    	entity	=	cls	.	/;"	f
_sweep_poly_phase	data/bpe_corpus_raw/valid.py	/^utf-8	def	_sweep_poly_phase	(	t	,	poly	)	:	\\n	    	intpoly	=	polyint	(	poly	)	\\n	phase	=	2	*	p/;"	f
_sweep_poly_phase	data/data_raw/valid.py	/^utf-8	def	_sweep_poly_phase	(	t	,	poly	)	:	\\n	    	intpoly	=	polyint	(	poly	)	\\n	phase	=	2	*	p/;"	f
_switch	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	_switch	(	command	)	:	\\n	    	_LOGGER	.	info	(	'Running command: %/;"	f
_switch	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	_switch	(	command	)	:	\\n	    	_LOGGER	.	info	(	'Running command: %/;"	f
_sympysage_piecewise	data/bpe_corpus_raw/valid.py	/^utf-8	def	_sympysage_piecewise	(	self	)	:	\\n	    	from	sage	.	functions	.	other	import	cases	\\/;"	f
_sympysage_piecewise	data/data_raw/valid.py	/^utf-8	def	_sympysage_piecewise	(	self	)	:	\\n	    	from	sage	.	functions	.	other	import	cases	\\/;"	f
_synchronize	data/bpe_corpus_raw/train.py	/^utf-8	def	_synchronize	(	self	)	:	\\n	    	configured	=	{	os	.	path	.	basename	(	filename	)	for	/;"	f
_synchronize	data/data_raw/train.py	/^utf-8	def	_synchronize	(	self	)	:	\\n	    	configured	=	{	os	.	path	.	basename	(	filename	)	for	/;"	f
_tabledef_parser	data/bpe_corpus_raw/valid.py	/^utf-8	@	util	.	memoized_property	\\n	def	_tabledef_parser	(	self	)	:	\\n	    	if	self	.	server_v/;"	f
_tabledef_parser	data/data_raw/valid.py	/^utf-8	@	util	.	memoized_property	\\n	def	_tabledef_parser	(	self	)	:	\\n	    	if	self	.	server_v/;"	f
_target_chroms_and_header	data/bpe_corpus_raw/train.py	/^utf-8	def	_target_chroms_and_header	(	bam_file	,	data	)	:	\\n	    	special_remaps	=	{	'chrM'	:	'/;"	f
_target_chroms_and_header	data/data_raw/train.py	/^utf-8	def	_target_chroms_and_header	(	bam_file	,	data	)	:	\\n	    	special_remaps	=	{	'chrM'	:	'/;"	f
_target_tags_valid	data/bpe_corpus_raw/valid.py	/^utf-8	def	_target_tags_valid	(	self	,	target_tags	,	error_cat	=	'TARGET_TAGS'	)	:	\\n	    	error/;"	f
_target_tags_valid	data/data_raw/valid.py	/^utf-8	def	_target_tags_valid	(	self	,	target_tags	,	error_cat	=	'TARGET_TAGS'	)	:	\\n	    	error/;"	f
_tensor_array_read_v3	data/bpe_corpus_raw/valid.py	/^utf-8	def	_tensor_array_read_v3	(	handle	,	index	,	flow_in	,	dtype	,	name	=	None	)	:	\\n	    	re/;"	f
_tensor_array_read_v3	data/data_raw/valid.py	/^utf-8	def	_tensor_array_read_v3	(	handle	,	index	,	flow_in	,	dtype	,	name	=	None	)	:	\\n	    	re/;"	f
_test_gcd_vs_xgcd	data/bpe_corpus_raw/train.py	/^utf-8	def	_test_gcd_vs_xgcd	(	self	,	**	options	)	:	\\n	    	tester	=	self	.	_tester	(	**	option/;"	f
_test_gcd_vs_xgcd	data/data_raw/train.py	/^utf-8	def	_test_gcd_vs_xgcd	(	self	,	**	options	)	:	\\n	    	tester	=	self	.	_tester	(	**	option/;"	f
_test_get_metric_history	data/bpe_corpus_raw/valid.py	/^utf-8	def	_test_get_metric_history	(	self	,	slugs	,	since	=	None	,	to	=	None	,	granularity	=	Non/;"	f
_test_get_metric_history	data/data_raw/valid.py	/^utf-8	def	_test_get_metric_history	(	self	,	slugs	,	since	=	None	,	to	=	None	,	granularity	=	Non/;"	f
_test_int_pickling	data/bpe_corpus_raw/valid.py	/^utf-8	@	cachier	(	next_time	=	True	)	\\n	def	_test_int_pickling	(	int_1	,	int_2	)	:	\\n	    	ret/;"	f
_test_int_pickling	data/data_raw/valid.py	/^utf-8	@	cachier	(	next_time	=	True	)	\\n	def	_test_int_pickling	(	int_1	,	int_2	)	:	\\n	    	ret/;"	f
_test_order_in_init	data/bpe_corpus_raw/train.py	/^utf-8	def	_test_order_in_init	(	self	)	:	\\n	    	with	self	.	assertRaises	(	OrderDuringInitiali/;"	f
_test_order_in_init	data/data_raw/train.py	/^utf-8	def	_test_order_in_init	(	self	)	:	\\n	    	with	self	.	assertRaises	(	OrderDuringInitiali/;"	f
_test_path	data/bpe_corpus_raw/train.py	/^utf-8	def	_test_path	(	self	,	path	,	*	strings	)	:	\\n	    	with	app	.	test_request_context	(	)	/;"	f
_test_path	data/data_raw/train.py	/^utf-8	def	_test_path	(	self	,	path	,	*	strings	)	:	\\n	    	with	app	.	test_request_context	(	)	/;"	f
_test_pickling	data/bpe_corpus_raw/train.py	/^utf-8	def	_test_pickling	(	self	,	**	options	)	:	\\n	    	tester	=	instance_tester	(	self	,	**	o/;"	f
_test_pickling	data/data_raw/train.py	/^utf-8	def	_test_pickling	(	self	,	**	options	)	:	\\n	    	tester	=	instance_tester	(	self	,	**	o/;"	f
_test_sync_object_handling	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_test_sync_object_handling	(	cls	,	started	,	stop	,	conn	,	w	)	:	\\n/;"	f
_test_sync_object_handling	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_test_sync_object_handling	(	cls	,	started	,	stop	,	conn	,	w	)	:	\\n/;"	f
_to_ijv	data/bpe_corpus_raw/train.py	/^utf-8	def	_to_ijv	(	ss	,	row_levels	=	(	0	,	)	,	column_levels	=	(	1	,	)	,	sort_labels	=	False	)	/;"	f
_to_ijv	data/data_raw/train.py	/^utf-8	def	_to_ijv	(	ss	,	row_levels	=	(	0	,	)	,	column_levels	=	(	1	,	)	,	sort_labels	=	False	)	/;"	f
_to_jsonc_name	data/bpe_corpus_raw/train.py	/^utf-8	def	_to_jsonc_name	(	member_name	)	:	\\n	    	characters	=	[	]	\\n	uppercase_next	=	False	/;"	f
_to_jsonc_name	data/data_raw/train.py	/^utf-8	def	_to_jsonc_name	(	member_name	)	:	\\n	    	characters	=	[	]	\\n	uppercase_next	=	False	/;"	f
_to_unicode	data/bpe_corpus_raw/test.py	/^utf-8	def	_to_unicode	(	self	,	data	,	encoding	,	errors	=	'strict'	)	:	\\n	    	if	len	(	data	)	/;"	f
_to_unicode	data/data_raw/test.py	/^utf-8	def	_to_unicode	(	self	,	data	,	encoding	,	errors	=	'strict'	)	:	\\n	    	if	len	(	data	)	/;"	f
_tokenize_assert	data/bpe_corpus_raw/train.py	/^utf-8	def	_tokenize_assert	(	source_lines	,	frame_locals	,	frame_globals	)	:	\\n	    	filelike_c/;"	f
_tokenize_assert	data/data_raw/train.py	/^utf-8	def	_tokenize_assert	(	source_lines	,	frame_locals	,	frame_globals	)	:	\\n	    	filelike_c/;"	f
_totuple	data/bpe_corpus_raw/train.py	/^utf-8	def	_totuple	(	x	)	:	\\n	    	if	isinstance	(	x	,	str	)	:	\\n	        	out	=	x	,	\\n		elif/;"	f
_totuple	data/data_raw/train.py	/^utf-8	def	_totuple	(	x	)	:	\\n	    	if	isinstance	(	x	,	str	)	:	\\n	        	out	=	x	,	\\n		elif/;"	f
_train	data/bpe_corpus_raw/train.py	/^utf-8	def	_train	(	self	,	X	:	np	.	ndarray	,	Y	:	np	.	ndarray	,	**	kwargs	)	:	\\n	    	if	not	is/;"	f
_train	data/bpe_corpus_raw/train.py	/^utf-8	def	_train	(	self	,	X	:	np	.	ndarray	,	y	:	np	.	ndarray	\\n	)	->	'RandomForestWithInstance/;"	f
_train	data/data_raw/train.py	/^utf-8	def	_train	(	self	,	X	:	np	.	ndarray	,	Y	:	np	.	ndarray	,	**	kwargs	)	:	\\n	    	if	not	is/;"	f
_train	data/data_raw/train.py	/^utf-8	def	_train	(	self	,	X	:	np	.	ndarray	,	y	:	np	.	ndarray	\\n	)	->	'RandomForestWithInstance/;"	f
_trigger_result_snapshot	data/bpe_corpus_raw/train.py	/^utf-8	def	_trigger_result_snapshot	(	self	,	result	)	:	\\n	    	timestamp	=	result	[	1	]	[	'fini/;"	f
_trigger_result_snapshot	data/data_raw/train.py	/^utf-8	def	_trigger_result_snapshot	(	self	,	result	)	:	\\n	    	timestamp	=	result	[	1	]	[	'fini/;"	f
_trigger_tool	data/bpe_corpus_raw/valid.py	/^utf-8	def	_trigger_tool	(	self	,	name	,	sender	=	None	,	canvasevent	=	None	,	data	=	None	)	:	\\n/;"	f
_trigger_tool	data/data_raw/valid.py	/^utf-8	def	_trigger_tool	(	self	,	name	,	sender	=	None	,	canvasevent	=	None	,	data	=	None	)	:	\\n/;"	f
_unlink_channel	data/bpe_corpus_raw/test.py	/^utf-8	def	_unlink_channel	(	self	,	chanid	)	:	\\n	    	self	.	_channels	.	delete	(	chanid	)	\\n	/;"	f
_unlink_channel	data/data_raw/test.py	/^utf-8	def	_unlink_channel	(	self	,	chanid	)	:	\\n	    	self	.	_channels	.	delete	(	chanid	)	\\n	/;"	f
_unpack	data/bpe_corpus_raw/train.py	/^utf-8	@	classmethod	\\n	def	_unpack	(	class_	,	packed	)	:	\\n	    	kwargs	=	{	'_new'	:	False	}	\\/;"	f
_unpack	data/data_raw/train.py	/^utf-8	@	classmethod	\\n	def	_unpack	(	class_	,	packed	)	:	\\n	    	kwargs	=	{	'_new'	:	False	}	\\/;"	f
_unpack_document	data/bpe_corpus_raw/valid.py	/^utf-8	def	_unpack_document	(	self	,	document	)	:	\\n	\\n	    	def	unpack_linkage	(	linkage	)	:	\\/;"	f
_unpack_document	data/data_raw/valid.py	/^utf-8	def	_unpack_document	(	self	,	document	)	:	\\n	\\n	    	def	unpack_linkage	(	linkage	)	:	\\/;"	f
_unpickle_panel_compat	data/bpe_corpus_raw/valid.py	/^utf-8	def	_unpickle_panel_compat	(	self	,	state	)	:	\\n	    	from	pandas	.	io	.	pickle	import	_u/;"	f
_unpickle_panel_compat	data/data_raw/valid.py	/^utf-8	def	_unpickle_panel_compat	(	self	,	state	)	:	\\n	    	from	pandas	.	io	.	pickle	import	_u/;"	f
_update_access_rules_locked	data/bpe_corpus_raw/valid.py	/^utf-8	def	update_access_rules	(	self	,	context	,	snapshot_instance_id	,	\\n	delete_all_rules	=	F/;"	f	function:update_access_rules	file:
_update_access_rules_locked	data/data_raw/valid.py	/^utf-8	def	update_access_rules	(	self	,	context	,	snapshot_instance_id	,	\\n	delete_all_rules	=	F/;"	f	function:update_access_rules	file:
_update_cache	data/bpe_corpus_raw/valid.py	/^utf-8	def	_update_cache	(	self	)	:	\\n	    	cov_params_have_changed	=	self	.	covar	.	params_have/;"	f
_update_cache	data/data_raw/valid.py	/^utf-8	def	_update_cache	(	self	)	:	\\n	    	cov_params_have_changed	=	self	.	covar	.	params_have/;"	f
_update_defaults	data/bpe_corpus_raw/valid.py	/^utf-8	def	_update_defaults	(	self	,	defaults	)	:	\\n	    	config	=	{	}	\\n	for	section	in	(	'glo/;"	f
_update_defaults	data/data_raw/valid.py	/^utf-8	def	_update_defaults	(	self	,	defaults	)	:	\\n	    	config	=	{	}	\\n	for	section	in	(	'glo/;"	f
_update_defaults_to_blank	data/bpe_corpus_raw/valid.py	/^utf-8	def	_update_defaults_to_blank	(	self	)	:	\\n	    	if	self	.	_default_colormap	is	None	:	\\/;"	f
_update_defaults_to_blank	data/data_raw/valid.py	/^utf-8	def	_update_defaults_to_blank	(	self	)	:	\\n	    	if	self	.	_default_colormap	is	None	:	\\/;"	f
_update_meter_stats	data/bpe_corpus_raw/test.py	/^utf-8	def	_update_meter_stats	(	self	,	stat	,	meter	)	:	\\n	    	vol	=	int	(	meter	[	'f:counter_/;"	f
_update_meter_stats	data/data_raw/test.py	/^utf-8	def	_update_meter_stats	(	self	,	stat	,	meter	)	:	\\n	    	vol	=	int	(	meter	[	'f:counter_/;"	f
_update_reference	data/bpe_corpus_raw/valid.py	/^utf-8	def	_update_reference	(	self	,	ws	,	cropped_ws	,	ref_ws	,	factor	)	:	\\n	    	x	=	mtd	[	ws/;"	f
_update_reference	data/data_raw/valid.py	/^utf-8	def	_update_reference	(	self	,	ws	,	cropped_ws	,	ref_ws	,	factor	)	:	\\n	    	x	=	mtd	[	ws/;"	f
_update_tree	data/bpe_corpus_raw/train.py	/^utf-8	def	_update_tree	(	self	)	:	\\n	    	while	True	:	\\n	        	if	self	.	need_complete_tre/;"	f
_update_tree	data/data_raw/train.py	/^utf-8	def	_update_tree	(	self	)	:	\\n	    	while	True	:	\\n	        	if	self	.	need_complete_tre/;"	f
_ustr	data/bpe_corpus_raw/train.py	/^utf-8	def	_ustr	(	obj	)	:	\\n	    	if	isinstance	(	obj	,	unicode	)	:	\\n	        	return	obj	\\n/;"	f
_ustr	data/data_raw/train.py	/^utf-8	def	_ustr	(	obj	)	:	\\n	    	if	isinstance	(	obj	,	unicode	)	:	\\n	        	return	obj	\\n/;"	f
_validate	data/bpe_corpus_raw/train.py	/^utf-8	def	_validate	(	self	,	value	)	:	\\n	    	_LOGGER	.	info	(	'validate: Got type %s'	,	type	/;"	f
_validate	data/bpe_corpus_raw/valid.py	/^utf-8	def	_validate	(	self	)	:	\\n	    	v_mod	=	utils	.	import_string	(	'.'	.	join	(	[	'pyswagge/;"	f
_validate	data/bpe_corpus_raw/valid.py	/^utf-8	def	_validate	(	self	,	lower_bound	,	upper_bound	)	:	\\n	    	if	self	.	filter_type	in	[	T/;"	f
_validate	data/bpe_corpus_raw/valid.py	/^utf-8	def	_validate	(	self	,	value	)	:	\\n	    	check	=	[	3	,	2	,	7	,	6	,	5	,	4	,	3	,	2	,	1	,	0	/;"	f
_validate	data/data_raw/train.py	/^utf-8	def	_validate	(	self	,	value	)	:	\\n	    	_LOGGER	.	info	(	'validate: Got type %s'	,	type	/;"	f
_validate	data/data_raw/valid.py	/^utf-8	def	_validate	(	self	)	:	\\n	    	v_mod	=	utils	.	import_string	(	'.'	.	join	(	[	'pyswagge/;"	f
_validate	data/data_raw/valid.py	/^utf-8	def	_validate	(	self	,	lower_bound	,	upper_bound	)	:	\\n	    	if	self	.	filter_type	in	[	T/;"	f
_validate	data/data_raw/valid.py	/^utf-8	def	_validate	(	self	,	value	)	:	\\n	    	check	=	[	3	,	2	,	7	,	6	,	5	,	4	,	3	,	2	,	1	,	0	/;"	f
_validate_callouts	data/bpe_corpus_raw/valid.py	/^utf-8	def	_validate_callouts	(	self	)	:	\\n	    	callout_nodes	=	self	.	ast	.	get_callouts	(	)	\\/;"	f
_validate_callouts	data/data_raw/valid.py	/^utf-8	def	_validate_callouts	(	self	)	:	\\n	    	callout_nodes	=	self	.	ast	.	get_callouts	(	)	\\/;"	f
_validate_index_level	data/bpe_corpus_raw/valid.py	/^utf-8	def	_validate_index_level	(	self	,	level	)	:	\\n	    	if	isinstance	(	level	,	int	)	:	\\n	/;"	f
_validate_index_level	data/data_raw/valid.py	/^utf-8	def	_validate_index_level	(	self	,	level	)	:	\\n	    	if	isinstance	(	level	,	int	)	:	\\n	/;"	f
_values	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	_values	(	self	)	:	\\n	    	return	self	.	values	\\n		$/;"	f
_values	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	_values	(	self	)	:	\\n	    	return	self	.	values	\\n		$/;"	f
_var_impl	data/bpe_corpus_raw/train.py	/^utf-8	def	_deps_var	(	deps_globals	)	:	\\n	\\n	    	def	_var_impl	(	var_name	)	:	\\n	        	""/;"	f	function:_deps_var	file:
_var_impl	data/data_raw/train.py	/^utf-8	def	_deps_var	(	deps_globals	)	:	\\n	\\n	    	def	_var_impl	(	var_name	)	:	\\n	        	""/;"	f	function:_deps_var	file:
_verified_iv_length	data/bpe_corpus_raw/valid.py	/^utf-8	def	_verified_iv_length	(	iv_length	,	algorithm_suite	)	:	\\n	    	if	iv_length	!=	algorit/;"	f
_verified_iv_length	data/data_raw/valid.py	/^utf-8	def	_verified_iv_length	(	iv_length	,	algorithm_suite	)	:	\\n	    	if	iv_length	!=	algorit/;"	f
_version	data/bpe_corpus_raw/valid.py	/^utf-8	def	_version	(	self	)	:	\\n	    	return	self	.	openshift_cmd	(	[	'version'	]	,	output	=	Tr/;"	f
_version	data/data_raw/valid.py	/^utf-8	def	_version	(	self	)	:	\\n	    	return	self	.	openshift_cmd	(	[	'version'	]	,	output	=	Tr/;"	f
_vgg_16	data/bpe_corpus_raw/train.py	/^utf-8	def	_vgg_16	(	inputs	,	dropout_keep_prob	=	0.5	,	num_classes	=	1000	,	is_training	=	\\n	Tr/;"	f
_vgg_16	data/data_raw/train.py	/^utf-8	def	_vgg_16	(	inputs	,	dropout_keep_prob	=	0.5	,	num_classes	=	1000	,	is_training	=	\\n	Tr/;"	f
_view_updated	data/bpe_corpus_raw/valid.py	/^utf-8	def	_view_updated	(	self	)	:	\\n	    	self	.	view	.	refresh	(	)	\\n		$/;"	f
_view_updated	data/data_raw/valid.py	/^utf-8	def	_view_updated	(	self	)	:	\\n	    	self	.	view	.	refresh	(	)	\\n		$/;"	f
_visit_methods_of_class	data/bpe_corpus_raw/valid.py	/^utf-8	def	_visit_methods_of_class	(	self	,	node	)	:	\\n	    	for	body_item	in	node	.	body	:	\\n	/;"	f
_visit_methods_of_class	data/data_raw/valid.py	/^utf-8	def	_visit_methods_of_class	(	self	,	node	)	:	\\n	    	for	body_item	in	node	.	body	:	\\n	/;"	f
_warn_unsafe_extraction_path	data/bpe_corpus_raw/train.py	/^utf-8	@	staticmethod	\\n	def	_warn_unsafe_extraction_path	(	path	)	:	\\n	    	if	os	.	name	==	'n/;"	f
_warn_unsafe_extraction_path	data/data_raw/train.py	/^utf-8	@	staticmethod	\\n	def	_warn_unsafe_extraction_path	(	path	)	:	\\n	    	if	os	.	name	==	'n/;"	f
_window_initializer	data/bpe_corpus_raw/train.py	/^utf-8	def	_window_initializer	(	self	,	times	,	state	)	:	\\n	    	pass	\\n		$/;"	f
_window_initializer	data/bpe_corpus_raw/valid.py	/^utf-8	def	_window_initializer	(	self	,	times	,	state	)	:	\\n	    	_	,	_	,	priors_from_time	=	sta/;"	f
_window_initializer	data/data_raw/train.py	/^utf-8	def	_window_initializer	(	self	,	times	,	state	)	:	\\n	    	pass	\\n		$/;"	f
_window_initializer	data/data_raw/valid.py	/^utf-8	def	_window_initializer	(	self	,	times	,	state	)	:	\\n	    	_	,	_	,	priors_from_time	=	sta/;"	f
_write	data/bpe_corpus_raw/train.py	/^utf-8	def	_write	(	self	,	filename	,	data	)	:	\\n	    	open	(	filename	,	'wb'	)	.	write	(	data	)/;"	f
_write	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	_write	(	filename	,	contents	)	:	\\n	    	with	open	(	filename	,	'w/;"	f
_write	data/data_raw/train.py	/^utf-8	def	_write	(	self	,	filename	,	data	)	:	\\n	    	open	(	filename	,	'wb'	)	.	write	(	data	)/;"	f
_write	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	_write	(	filename	,	contents	)	:	\\n	    	with	open	(	filename	,	'w/;"	f
_write_assets	data/bpe_corpus_raw/train.py	/^utf-8	def	_write_assets	(	assets_directory	,	assets_filename	)	:	\\n	    	if	not	file_io	.	file_/;"	f
_write_assets	data/data_raw/train.py	/^utf-8	def	_write_assets	(	assets_directory	,	assets_filename	)	:	\\n	    	if	not	file_io	.	file_/;"	f
_write_boundary	data/bpe_corpus_raw/test.py	/^utf-8	def	_write_boundary	(	self	)	:	\\n	    	return	self	.	_write	(	self	.	_encoded_boundary	)	/;"	f
_write_boundary	data/data_raw/test.py	/^utf-8	def	_write_boundary	(	self	)	:	\\n	    	return	self	.	_write	(	self	.	_encoded_boundary	)	/;"	f
_write_member_markdown_to_file	data/bpe_corpus_raw/valid.py	/^utf-8	def	_write_member_markdown_to_file	(	self	,	f	,	prefix	,	name	,	member	)	:	\\n	    	if	ins/;"	f
_write_member_markdown_to_file	data/data_raw/valid.py	/^utf-8	def	_write_member_markdown_to_file	(	self	,	f	,	prefix	,	name	,	member	)	:	\\n	    	if	ins/;"	f
_write_thermal	data/bpe_corpus_raw/train.py	/^utf-8	def	_write_thermal	(	self	,	bdf_file	,	size	=	8	,	is_double	=	False	)	:	\\n	    	if	self	./;"	f
_write_thermal	data/data_raw/train.py	/^utf-8	def	_write_thermal	(	self	,	bdf_file	,	size	=	8	,	is_double	=	False	)	:	\\n	    	if	self	./;"	f
_write_to_file	data/bpe_corpus_raw/valid.py	/^utf-8	def	_write_to_file	(	self	)	:	\\n	    	if	self	.	path	is	None	:	\\n	        	return	\\n		s/;"	f
_write_to_file	data/data_raw/valid.py	/^utf-8	def	_write_to_file	(	self	)	:	\\n	    	if	self	.	path	is	None	:	\\n	        	return	\\n		s/;"	f
_xfer_cmap_properties	data/bpe_corpus_raw/train.py	/^utf-8	def	_xfer_cmap_properties	(	self	)	:	\\n	    	if	len	(	self	.	cmaps	)	==	0	:	\\n	        	/;"	f
_xfer_cmap_properties	data/data_raw/train.py	/^utf-8	def	_xfer_cmap_properties	(	self	)	:	\\n	    	if	len	(	self	.	cmaps	)	==	0	:	\\n	        	/;"	f
_xml_to_obj	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_xml_to_obj	(	cls	,	serialized_str	)	:	\\n	    	element	=	ET	.	froms/;"	f
_xml_to_obj	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	_xml_to_obj	(	cls	,	serialized_str	)	:	\\n	    	element	=	ET	.	froms/;"	f
_yield_BotTaskDimensions_keys	data/bpe_corpus_raw/train.py	/^utf-8	def	_yield_BotTaskDimensions_keys	(	dimensions_hash	,	dimensions_flat	)	:	\\n	    	assert	/;"	f
_yield_BotTaskDimensions_keys	data/data_raw/train.py	/^utf-8	def	_yield_BotTaskDimensions_keys	(	dimensions_hash	,	dimensions_flat	)	:	\\n	    	assert	/;"	f
_zseries_div	data/bpe_corpus_raw/valid.py	/^utf-8	def	_zseries_div	(	z1	,	z2	)	:	\\n	    	z1	=	z1	.	copy	(	)	\\n	z2	=	z2	.	copy	(	)	\\n	lc1	/;"	f
_zseries_div	data/data_raw/valid.py	/^utf-8	def	_zseries_div	(	z1	,	z2	)	:	\\n	    	z1	=	z1	.	copy	(	)	\\n	z2	=	z2	.	copy	(	)	\\n	lc1	/;"	f
absolute_date_range	data/bpe_corpus_raw/train.py	/^utf-8	def	absolute_date_range	(	unit	,	date_from	,	date_to	,	date_from_format	=	None	,	\\n	date_/;"	f
absolute_date_range	data/data_raw/train.py	/^utf-8	def	absolute_date_range	(	unit	,	date_from	,	date_to	,	date_from_format	=	None	,	\\n	date_/;"	f
absolute_degree	data/bpe_corpus_raw/valid.py	/^utf-8	def	absolute_degree	(	self	)	:	\\n	    	return	self	.	polynomial	(	)	.	degree	(	)	\\n		$/;"	f
absolute_degree	data/data_raw/valid.py	/^utf-8	def	absolute_degree	(	self	)	:	\\n	    	return	self	.	polynomial	(	)	.	degree	(	)	\\n		$/;"	f
accept	data/bpe_corpus_raw/valid.py	/^utf-8	def	accept	(	media	=	None	,	debug	=	False	)	:	\\n	    	if	not	media	:	\\n	        	return	/;"	f
accept	data/bpe_corpus_raw/valid.py	/^utf-8	def	accept	(	self	,	fgraph	,	no_recycling	=	None	,	profile	=	None	)	:	\\n	    	if	no_recyc/;"	f
accept	data/data_raw/valid.py	/^utf-8	def	accept	(	media	=	None	,	debug	=	False	)	:	\\n	    	if	not	media	:	\\n	        	return	/;"	f
accept	data/data_raw/valid.py	/^utf-8	def	accept	(	self	,	fgraph	,	no_recycling	=	None	,	profile	=	None	)	:	\\n	    	if	no_recyc/;"	f
accumulator	data/bpe_corpus_raw/train.py	/^utf-8	def	accumulator	(	acc	,	new	,	agg	=	None	)	:	\\n	    	if	acc	is	None	:	\\n	        	acc	=	/;"	f
accumulator	data/data_raw/train.py	/^utf-8	def	accumulator	(	acc	,	new	,	agg	=	None	)	:	\\n	    	if	acc	is	None	:	\\n	        	acc	=	/;"	f
acquire_write	data/bpe_corpus_raw/train.py	/^utf-8	def	acquire_write	(	self	)	:	\\n	    	self	.	monitor	.	acquire	(	)	\\n	while	self	.	rwlock/;"	f
acquire_write	data/data_raw/train.py	/^utf-8	def	acquire_write	(	self	)	:	\\n	    	self	.	monitor	.	acquire	(	)	\\n	while	self	.	rwlock/;"	f
action_invoice_sent	data/bpe_corpus_raw/train.py	/^utf-8	def	action_invoice_sent	(	self	,	cr	,	uid	,	ids	,	context	=	None	)	:	\\n	    	action_dict	/;"	f
action_invoice_sent	data/data_raw/train.py	/^utf-8	def	action_invoice_sent	(	self	,	cr	,	uid	,	ids	,	context	=	None	)	:	\\n	    	action_dict	/;"	f
action_logging	data/bpe_corpus_raw/train.py	/^utf-8	def	action_logging	(	f	)	:	\\n	\\n	    	@	functools	.	wraps	(	f	)	\\n	def	wrapper	(	*	args/;"	f
action_logging	data/data_raw/train.py	/^utf-8	def	action_logging	(	f	)	:	\\n	\\n	    	@	functools	.	wraps	(	f	)	\\n	def	wrapper	(	*	args/;"	f
action_pool_user_add	data/bpe_corpus_raw/valid.py	/^utf-8	def	action_pool_user_add	(	batch_client	,	config	)	:	\\n	    	_check_batch_client	(	batch_/;"	f
action_pool_user_add	data/data_raw/valid.py	/^utf-8	def	action_pool_user_add	(	batch_client	,	config	)	:	\\n	    	_check_batch_client	(	batch_/;"	f
activate_workflow	data/bpe_corpus_raw/valid.py	/^utf-8	def	activate_workflow	(	workflow	)	:	\\n	    	setup_tab	=	workflow_tabs	.	SetupTab	(	)	\\n/;"	f
activate_workflow	data/data_raw/valid.py	/^utf-8	def	activate_workflow	(	workflow	)	:	\\n	    	setup_tab	=	workflow_tabs	.	SetupTab	(	)	\\n/;"	f
adafactor_decay_rate_adam	data/bpe_corpus_raw/valid.py	/^utf-8	def	adafactor_decay_rate_adam	(	beta2	)	:	\\n	    	t	=	_step_num	(	)	+	1.0	\\n	decay	=	bet/;"	f
adafactor_decay_rate_adam	data/data_raw/valid.py	/^utf-8	def	adafactor_decay_rate_adam	(	beta2	)	:	\\n	    	t	=	_step_num	(	)	+	1.0	\\n	decay	=	bet/;"	f
add	data/bpe_corpus_raw/test.py	/^utf-8	def	add	(	self	,	directory	)	:	\\n	    	self	.	dirs	.	append	(	directory	)	\\n		$/;"	f
add	data/bpe_corpus_raw/test.py	/^utf-8	def	add	(	x	,	y	)	:	\\n	    	return	x	+	y	\\n		$/;"	f
add	data/bpe_corpus_raw/train.py	/^utf-8	def	add	(	self	,	key	,	value	)	:	\\n	    	if	not	key	in	self	.	prefs	:	\\n	        	self	./;"	f
add	data/bpe_corpus_raw/train.py	/^utf-8	def	add	(	self	,	model	,	pk	,	obj	,	parent_model	,	nullable	=	False	)	:	\\n	    	if	pk	in	/;"	f
add	data/bpe_corpus_raw/train.py	/^utf-8	def	add	(	self	,	obj	,	args	=	(	)	,	kwargs	=	{	}	,	is_priority	=	False	)	:	\\n	    	q_obj	/;"	f
add	data/bpe_corpus_raw/train.py	/^utf-8	def	add	(	self	,	objs	,	source	=	None	,	nullable	=	False	,	reverse_dependency	=	False	)	:	/;"	f
add	data/bpe_corpus_raw/train.py	/^utf-8	def	add	(	self	,	rule	,	method	,	target	,	name	=	None	)	:	\\n	    	anons	=	0	\\n	keys	=	[	/;"	f
add	data/bpe_corpus_raw/valid.py	/^utf-8	def	add	(	self	,	ending	,	optional	=	False	)	:	\\n	    	self	.	endings	.	append	(	Position/;"	f
add	data/bpe_corpus_raw/valid.py	/^utf-8	def	add	(	self	,	pydbg	,	address	,	num_args	,	entry_hook	=	None	,	exit_hook	=	None	)	:	\\n/;"	f
add	data/bpe_corpus_raw/valid.py	/^utf-8	def	add	(	self	,	sdesc	,	max_length	=	60	)	:	\\n	    	sdesc	=	_RE_REF	.	sub	(	'\\\\\\\\1'	/;"	f
add	data/bpe_corpus_raw/valid.py	/^utf-8	def	add	(	v1	,	v2	)	:	\\n	    	return	tuple	(	a	+	b	for	a	,	b	in	zip	(	v1	,	v2	)	)	\\n		$/;"	f
add	data/bpe_corpus_raw/valid.py	/^utf-8	def	visit_MergedSequenceNode	(	self	,	node	)	:	\\n	    	self	.	visitchildren	(	node	)	\\n	/;"	f	function:visit_MergedSequenceNode	file:
add	data/data_raw/test.py	/^utf-8	def	add	(	self	,	directory	)	:	\\n	    	self	.	dirs	.	append	(	directory	)	\\n		$/;"	f
add	data/data_raw/test.py	/^utf-8	def	add	(	x	,	y	)	:	\\n	    	return	x	+	y	\\n		$/;"	f
add	data/data_raw/train.py	/^utf-8	def	add	(	self	,	key	,	value	)	:	\\n	    	if	not	key	in	self	.	prefs	:	\\n	        	self	./;"	f
add	data/data_raw/train.py	/^utf-8	def	add	(	self	,	model	,	pk	,	obj	,	parent_model	,	nullable	=	False	)	:	\\n	    	if	pk	in	/;"	f
add	data/data_raw/train.py	/^utf-8	def	add	(	self	,	obj	,	args	=	(	)	,	kwargs	=	{	}	,	is_priority	=	False	)	:	\\n	    	q_obj	/;"	f
add	data/data_raw/train.py	/^utf-8	def	add	(	self	,	objs	,	source	=	None	,	nullable	=	False	,	reverse_dependency	=	False	)	:	/;"	f
add	data/data_raw/train.py	/^utf-8	def	add	(	self	,	rule	,	method	,	target	,	name	=	None	)	:	\\n	    	anons	=	0	\\n	keys	=	[	/;"	f
add	data/data_raw/valid.py	/^utf-8	def	add	(	self	,	ending	,	optional	=	False	)	:	\\n	    	self	.	endings	.	append	(	Position/;"	f
add	data/data_raw/valid.py	/^utf-8	def	add	(	self	,	pydbg	,	address	,	num_args	,	entry_hook	=	None	,	exit_hook	=	None	)	:	\\n/;"	f
add	data/data_raw/valid.py	/^utf-8	def	add	(	self	,	sdesc	,	max_length	=	60	)	:	\\n	    	sdesc	=	_RE_REF	.	sub	(	'\\\\\\\\1'	/;"	f
add	data/data_raw/valid.py	/^utf-8	def	add	(	v1	,	v2	)	:	\\n	    	return	tuple	(	a	+	b	for	a	,	b	in	zip	(	v1	,	v2	)	)	\\n		$/;"	f
add	data/data_raw/valid.py	/^utf-8	def	visit_MergedSequenceNode	(	self	,	node	)	:	\\n	    	self	.	visitchildren	(	node	)	\\n	/;"	f	function:visit_MergedSequenceNode	file:
addAttributes	data/bpe_corpus_raw/train.py	/^utf-8	def	addAttributes	(	self	)	:	\\n	    	self	.	sideRotation_att	=	self	.	addAnimParam	(	'sid/;"	f
addAttributes	data/data_raw/train.py	/^utf-8	def	addAttributes	(	self	)	:	\\n	    	self	.	sideRotation_att	=	self	.	addAnimParam	(	'sid/;"	f
addError	data/bpe_corpus_raw/train.py	/^utf-8	def	addError	(	self	,	test	,	err	)	:	\\n	    	self	.	errors	.	append	(	(	test	,	self	.	_ex/;"	f
addError	data/bpe_corpus_raw/valid.py	/^utf-8	@	failfast	\\n	def	addError	(	self	,	test	,	err	)	:	\\n	    	self	.	errors	.	append	(	(	te/;"	f
addError	data/data_raw/train.py	/^utf-8	def	addError	(	self	,	test	,	err	)	:	\\n	    	self	.	errors	.	append	(	(	test	,	self	.	_ex/;"	f
addError	data/data_raw/valid.py	/^utf-8	@	failfast	\\n	def	addError	(	self	,	test	,	err	)	:	\\n	    	self	.	errors	.	append	(	(	te/;"	f
addInputAnswers	data/bpe_corpus_raw/train.py	/^utf-8	def	addInputAnswers	(	*	answers	)	:	\\n	    	_answers	.	extend	(	answers	)	\\n		$/;"	f
addInputAnswers	data/data_raw/train.py	/^utf-8	def	addInputAnswers	(	*	answers	)	:	\\n	    	_answers	.	extend	(	answers	)	\\n		$/;"	f
addLongAnnotation	data/bpe_corpus_raw/train.py	/^utf-8	def	addLongAnnotation	(	updateService	,	parent	,	longValue	,	ns	=	None	,	\\n	description	=/;"	f
addLongAnnotation	data/data_raw/train.py	/^utf-8	def	addLongAnnotation	(	updateService	,	parent	,	longValue	,	ns	=	None	,	\\n	description	=/;"	f
addOperators	data/bpe_corpus_raw/valid.py	/^utf-8	def	addOperators	(	self	)	:	\\n	    	self	.	ikHandleUpvRef	=	primitive	.	addIkHandle	(	sel/;"	f
addOperators	data/data_raw/valid.py	/^utf-8	def	addOperators	(	self	)	:	\\n	    	self	.	ikHandleUpvRef	=	primitive	.	addIkHandle	(	sel/;"	f
addPillarByLoops	data/bpe_corpus_raw/valid.py	/^utf-8	def	addPillarByLoops	(	faces	,	indexedLoops	)	:	\\n	    	if	len	(	indexedLoops	)	<	1	:	\\n/;"	f
addPillarByLoops	data/data_raw/valid.py	/^utf-8	def	addPillarByLoops	(	faces	,	indexedLoops	)	:	\\n	    	if	len	(	indexedLoops	)	<	1	:	\\n/;"	f
addSortMethod	data/bpe_corpus_raw/valid.py	/^utf-8	def	addSortMethod	(	handle	,	sortMethod	,	label2Mask	=	''	)	:	\\n	    	pass	\\n		$/;"	f
addSortMethod	data/data_raw/valid.py	/^utf-8	def	addSortMethod	(	handle	,	sortMethod	,	label2Mask	=	''	)	:	\\n	    	pass	\\n		$/;"	f
addThreadLayerIfNone	data/bpe_corpus_raw/train.py	/^utf-8	def	addThreadLayerIfNone	(	self	)	:	\\n	    	if	self	.	threadLayer	!=	None	:	\\n	        	/;"	f
addThreadLayerIfNone	data/data_raw/train.py	/^utf-8	def	addThreadLayerIfNone	(	self	)	:	\\n	    	if	self	.	threadLayer	!=	None	:	\\n	        	/;"	f
addToDialog	data/bpe_corpus_raw/train.py	/^utf-8	def	addToDialog	(	self	,	gridPosition	)	:	\\n	    	euclidean	.	addElementToListDictionaryI/;"	f
addToDialog	data/data_raw/train.py	/^utf-8	def	addToDialog	(	self	,	gridPosition	)	:	\\n	    	euclidean	.	addElementToListDictionaryI/;"	f
addWriter	data/bpe_corpus_raw/train.py	/^utf-8	def	addWriter	(	self	,	writer	)	:	\\n	    	if	writer	in	self	.	_writers	:	\\n	        	ret/;"	f
addWriter	data/data_raw/train.py	/^utf-8	def	addWriter	(	self	,	writer	)	:	\\n	    	if	writer	in	self	.	_writers	:	\\n	        	ret/;"	f
add_alias	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_alias	(	alias	,	canonical	)	:	\\n	    	ALIASES	[	alias	]	=	canonical	\\n		$/;"	f
add_alias	data/data_raw/valid.py	/^utf-8	def	add_alias	(	alias	,	canonical	)	:	\\n	    	ALIASES	[	alias	]	=	canonical	\\n		$/;"	f
add_args	models/seq2seq.py	/^    def add_args(parser):$/;"	m	class:Seq2SeqModel
add_band_info_to_metadata	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_band_info_to_metadata	(	bands	,	metadata	,	overwrite	=	False	)	:	\\n	    	if	bands/;"	f
add_band_info_to_metadata	data/data_raw/valid.py	/^utf-8	def	add_band_info_to_metadata	(	bands	,	metadata	,	overwrite	=	False	)	:	\\n	    	if	bands/;"	f
add_cbush	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_cbush	(	self	,	eid	,	pid	,	nids	,	x	,	g0	,	cid	=	None	,	s	=	0.5	,	ocid	=	-	1	,	si	/;"	f
add_cbush	data/data_raw/valid.py	/^utf-8	def	add_cbush	(	self	,	eid	,	pid	,	nids	,	x	,	g0	,	cid	=	None	,	s	=	0.5	,	ocid	=	-	1	,	si	/;"	f
add_compound	data/bpe_corpus_raw/train.py	/^utf-8	def	add_compound	(	self	,	compound_stat	,	config	=	None	)	:	\\n	    	if	not	compound_stat	/;"	f
add_compound	data/data_raw/train.py	/^utf-8	def	add_compound	(	self	,	compound_stat	,	config	=	None	)	:	\\n	    	if	not	compound_stat	/;"	f
add_cookie_header	data/bpe_corpus_raw/train.py	/^utf-8	def	add_cookie_header	(	self	,	request	)	:	\\n	    	_debug	(	'add_cookie_header'	)	\\n	sel/;"	f
add_cookie_header	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_cookie_header	(	self	,	request	)	:	\\n	    	_debug	(	'add_cookie_header'	)	\\n	sel/;"	f
add_cookie_header	data/data_raw/train.py	/^utf-8	def	add_cookie_header	(	self	,	request	)	:	\\n	    	_debug	(	'add_cookie_header'	)	\\n	sel/;"	f
add_cookie_header	data/data_raw/valid.py	/^utf-8	def	add_cookie_header	(	self	,	request	)	:	\\n	    	_debug	(	'add_cookie_header'	)	\\n	sel/;"	f
add_counter	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_counter	(	name	,	tensor	)	:	\\n	    	count	=	tf	.	cast	(	tensor	,	tf	.	int64	)	\\n/;"	f
add_counter	data/data_raw/valid.py	/^utf-8	def	add_counter	(	name	,	tensor	)	:	\\n	    	count	=	tf	.	cast	(	tensor	,	tf	.	int64	)	\\n/;"	f
add_custom_versions	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	add_custom_versions	(	versions	)	:	\\n	    	versions_dict	=	{	}	\\n/;"	f
add_custom_versions	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	add_custom_versions	(	versions	)	:	\\n	    	versions_dict	=	{	}	\\n/;"	f
add_defaults	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_defaults	(	self	)	:	\\n	    	self	.	_add_defaults_standards	(	)	\\n	self	.	_add_de/;"	f
add_defaults	data/data_raw/valid.py	/^utf-8	def	add_defaults	(	self	)	:	\\n	    	self	.	_add_defaults_standards	(	)	\\n	self	.	_add_de/;"	f
add_e2e_one_time_keys	data/bpe_corpus_raw/valid.py	/^utf-8	@	defer	.	inlineCallbacks	\\n	def	add_e2e_one_time_keys	(	self	,	user_id	,	device_id	,	tim/;"	f
add_e2e_one_time_keys	data/data_raw/valid.py	/^utf-8	@	defer	.	inlineCallbacks	\\n	def	add_e2e_one_time_keys	(	self	,	user_id	,	device_id	,	tim/;"	f
add_edge	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_edge	(	self	,	name1	,	name2	,	directed	=	None	,	xoffset	=	0	,	yoffset	=	0	,	**	kwa/;"	f
add_edge	data/data_raw/valid.py	/^utf-8	def	add_edge	(	self	,	name1	,	name2	,	directed	=	None	,	xoffset	=	0	,	yoffset	=	0	,	**	kwa/;"	f
add_engine	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_engine	(	self	,	engine_class	:	Any	)	:	\\n	    	engine	=	engine_class	(	self	,	sel/;"	f
add_engine	data/data_raw/valid.py	/^utf-8	def	add_engine	(	self	,	engine_class	:	Any	)	:	\\n	    	engine	=	engine_class	(	self	,	sel/;"	f
add_entry	data/bpe_corpus_raw/test.py	/^utf-8	@	staticmethod	\\n	def	add_entry	(	data	,	key	,	item	=	None	,	sep	=	'.'	)	:	\\n	    	if	ke/;"	f
add_entry	data/data_raw/test.py	/^utf-8	@	staticmethod	\\n	def	add_entry	(	data	,	key	,	item	=	None	,	sep	=	'.'	)	:	\\n	    	if	ke/;"	f
add_errback	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_errback	(	self	,	func	)	:	\\n	    	self	.	chain	.	append	(	(	ERRBACK	,	func	)	)	\\/;"	f
add_errback	data/data_raw/valid.py	/^utf-8	def	add_errback	(	self	,	func	)	:	\\n	    	self	.	chain	.	append	(	(	ERRBACK	,	func	)	)	\\/;"	f
add_error	data/bpe_corpus_raw/train.py	/^utf-8	def	add_error	(	self	,	template	,	**	kwargs	)	:	\\n	    	self	.	row_converter	.	add_error	/;"	f
add_error	data/data_raw/train.py	/^utf-8	def	add_error	(	self	,	template	,	**	kwargs	)	:	\\n	    	self	.	row_converter	.	add_error	/;"	f
add_extra_chain_cert	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_extra_chain_cert	(	self	,	certobj	)	:	\\n	    	if	not	isinstance	(	certobj	,	X509	/;"	f
add_extra_chain_cert	data/data_raw/valid.py	/^utf-8	def	add_extra_chain_cert	(	self	,	certobj	)	:	\\n	    	if	not	isinstance	(	certobj	,	X509	/;"	f
add_f2str	data/bpe_corpus_raw/train.py	/^utf-8	def	add_f2str	(	self	,	dcts	,	srcfld	,	dstfld	,	dstfmt	)	:	\\n	    	assert	len	(	dcts	)	==/;"	f
add_f2str	data/data_raw/train.py	/^utf-8	def	add_f2str	(	self	,	dcts	,	srcfld	,	dstfld	,	dstfmt	)	:	\\n	    	assert	len	(	dcts	)	==/;"	f
add_file_at_path	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_file_at_path	(	self	,	a_path	,	committer	)	:	\\n	    	if	self	.	path_is_in_git_rep/;"	f
add_file_at_path	data/data_raw/valid.py	/^utf-8	def	add_file_at_path	(	self	,	a_path	,	committer	)	:	\\n	    	if	self	.	path_is_in_git_rep/;"	f
add_file_to_fetch_queue	data/bpe_corpus_raw/train.py	/^utf-8	def	add_file_to_fetch_queue	(	url_obj	)	:	\\n	    	url_string	=	_get_cached_url_string	(	u/;"	f
add_file_to_fetch_queue	data/data_raw/train.py	/^utf-8	def	add_file_to_fetch_queue	(	url_obj	)	:	\\n	    	url_string	=	_get_cached_url_string	(	u/;"	f
add_find_links	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_find_links	(	self	,	urls	)	:	\\n	    	for	url	in	urls	:	\\n	        	if	self	.	to_/;"	f
add_find_links	data/data_raw/valid.py	/^utf-8	def	add_find_links	(	self	,	urls	)	:	\\n	    	for	url	in	urls	:	\\n	        	if	self	.	to_/;"	f
add_flag	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_flag	(	self	,	flag	)	:	\\n	    	self	.	set_flags	(	''	.	join	(	set	(	self	.	get_fl/;"	f
add_flag	data/data_raw/valid.py	/^utf-8	def	add_flag	(	self	,	flag	)	:	\\n	    	self	.	set_flags	(	''	.	join	(	set	(	self	.	get_fl/;"	f
add_georss_point	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_georss_point	(	self	,	handler	,	coords	,	w3c_geo	=	False	)	:	\\n	    	if	w3c_geo	:/;"	f
add_georss_point	data/data_raw/valid.py	/^utf-8	def	add_georss_point	(	self	,	handler	,	coords	,	w3c_geo	=	False	)	:	\\n	    	if	w3c_geo	:/;"	f
add_graph	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_graph	(	self	,	graph	,	global_step	=	None	,	graph_def	=	None	)	:	\\n	    	if	graph/;"	f
add_graph	data/data_raw/valid.py	/^utf-8	def	add_graph	(	self	,	graph	,	global_step	=	None	,	graph_def	=	None	)	:	\\n	    	if	graph/;"	f
add_group_names	data/bpe_corpus_raw/train.py	/^utf-8	def	add_group_names	(	self	,	inc_group_names	)	:	\\n	    	if	self	.	group_names	:	\\n	    /;"	f
add_group_names	data/data_raw/train.py	/^utf-8	def	add_group_names	(	self	,	inc_group_names	)	:	\\n	    	if	self	.	group_names	:	\\n	    /;"	f
add_headers	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_headers	(	self	,	request	,	**	kwargs	)	:	\\n	    	pass	\\n		$/;"	f
add_headers	data/data_raw/valid.py	/^utf-8	def	add_headers	(	self	,	request	,	**	kwargs	)	:	\\n	    	pass	\\n		$/;"	f
add_index	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_index	(	self	,	new_index	,	index_table	)	:	\\n	    	pass	\\n		$/;"	f
add_index	data/data_raw/valid.py	/^utf-8	def	add_index	(	self	,	new_index	,	index_table	)	:	\\n	    	pass	\\n		$/;"	f
add_initial_menus	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_initial_menus	(	self	,	menus	)	:	\\n	    	for	menu	in	menus	:	\\n	        	self	.	/;"	f
add_initial_menus	data/data_raw/valid.py	/^utf-8	def	add_initial_menus	(	self	,	menus	)	:	\\n	    	for	menu	in	menus	:	\\n	        	self	.	/;"	f
add_installed_library	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_installed_library	(	self	,	name	,	sources	,	install_dir	,	build_info	=	None	)	:	\\/;"	f
add_installed_library	data/data_raw/valid.py	/^utf-8	def	add_installed_library	(	self	,	name	,	sources	,	install_dir	,	build_info	=	None	)	:	\\/;"	f
add_interaction	data/bpe_corpus_raw/train.py	/^utf-8	def	add_interaction	(	self	,	source	,	sink	,	interaction	)	:	\\n	    	self	.	__graph	.	add/;"	f
add_interaction	data/data_raw/train.py	/^utf-8	def	add_interaction	(	self	,	source	,	sink	,	interaction	)	:	\\n	    	self	.	__graph	.	add/;"	f
add_lifecycle_set_storage_class_rule	data/bpe_corpus_raw/train.py	/^utf-8	def	add_lifecycle_set_storage_class_rule	(	self	,	storage_class	,	**	kw	)	:	\\n	    	rules/;"	f
add_lifecycle_set_storage_class_rule	data/data_raw/train.py	/^utf-8	def	add_lifecycle_set_storage_class_rule	(	self	,	storage_class	,	**	kw	)	:	\\n	    	rules/;"	f
add_linking_library	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_linking_library	(	self	,	library	)	:	\\n	    	library	.	_ensure_finalized	(	)	\\n	/;"	f
add_linking_library	data/data_raw/valid.py	/^utf-8	def	add_linking_library	(	self	,	library	)	:	\\n	    	library	.	_ensure_finalized	(	)	\\n	/;"	f
add_local_option	data/bpe_corpus_raw/train.py	/^utf-8	def	add_local_option	(	self	,	*	args	,	**	kw	)	:	\\n	    	try	:	\\n	        	group	=	self	/;"	f
add_local_option	data/data_raw/train.py	/^utf-8	def	add_local_option	(	self	,	*	args	,	**	kw	)	:	\\n	    	try	:	\\n	        	group	=	self	/;"	f
add_message	data/bpe_corpus_raw/train.py	/^utf-8	def	add_message	(	self	,	msg_id	,	location	,	msg	)	:	\\n	    	module	,	obj	,	line	=	locati/;"	f
add_message	data/data_raw/train.py	/^utf-8	def	add_message	(	self	,	msg_id	,	location	,	msg	)	:	\\n	    	module	,	obj	,	line	=	locati/;"	f
add_metaclass	data/bpe_corpus_raw/train.py	/^utf-8	def	add_metaclass	(	metaclass	)	:	\\n	\\n	    	def	wrapper	(	cls	)	:	\\n	        	orig_var/;"	f
add_metaclass	data/data_raw/train.py	/^utf-8	def	add_metaclass	(	metaclass	)	:	\\n	\\n	    	def	wrapper	(	cls	)	:	\\n	        	orig_var/;"	f
add_metric	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_metric	(	self	,	metric	)	:	\\n	    	if	not	isinstance	(	metric	,	MetricBase	)	:	\\/;"	f
add_metric	data/data_raw/valid.py	/^utf-8	def	add_metric	(	self	,	metric	)	:	\\n	    	if	not	isinstance	(	metric	,	MetricBase	)	:	\\/;"	f
add_multi_representer	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_multi_representer	(	data_type	,	multi_representer	,	Dumper	=	Dumper	)	:	\\n	    	D/;"	f
add_multi_representer	data/data_raw/valid.py	/^utf-8	def	add_multi_representer	(	data_type	,	multi_representer	,	Dumper	=	Dumper	)	:	\\n	    	D/;"	f
add_node	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_node	(	self	,	node	)	:	\\n	    	self	.	nodes	.	append	(	node	)	\\n		$/;"	f
add_node	data/data_raw/valid.py	/^utf-8	def	add_node	(	self	,	node	)	:	\\n	    	self	.	nodes	.	append	(	node	)	\\n		$/;"	f
add_on_cancel_callback	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_on_cancel_callback	(	self	)	:	\\n	    	_logger	.	debug	(	'Adding consumer cancella/;"	f
add_on_cancel_callback	data/data_raw/valid.py	/^utf-8	def	add_on_cancel_callback	(	self	)	:	\\n	    	_logger	.	debug	(	'Adding consumer cancella/;"	f
add_op2_data	data/bpe_corpus_raw/train.py	/^utf-8	@	classmethod	\\n	def	add_op2_data	(	cls	,	data	,	comment	=	''	)	:	\\n	    	eid	=	data	[	0/;"	f
add_op2_data	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	add_op2_data	(	cls	,	data	,	comment	=	''	)	:	\\n	    	eid	=	data	[	0/;"	f
add_op2_data	data/data_raw/train.py	/^utf-8	@	classmethod	\\n	def	add_op2_data	(	cls	,	data	,	comment	=	''	)	:	\\n	    	eid	=	data	[	0/;"	f
add_op2_data	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	add_op2_data	(	cls	,	data	,	comment	=	''	)	:	\\n	    	eid	=	data	[	0/;"	f
add_op_list	data/bpe_corpus_raw/train.py	/^utf-8	def	add_op_list	(	self	,	op_list	)	:	\\n	    	if	not	isinstance	(	op_list	,	op_def_pb2	.	O/;"	f
add_op_list	data/data_raw/train.py	/^utf-8	def	add_op_list	(	self	,	op_list	)	:	\\n	    	if	not	isinstance	(	op_list	,	op_def_pb2	.	O/;"	f
add_perms	data/bpe_corpus_raw/valid.py	/^utf-8	def	instance_info	(	request	,	instance	)	:	\\n	    	user	=	request	.	user	\\n	role	=	Role	/;"	f	function:instance_info	file:
add_perms	data/data_raw/valid.py	/^utf-8	def	instance_info	(	request	,	instance	)	:	\\n	    	user	=	request	.	user	\\n	role	=	Role	/;"	f	function:instance_info	file:
add_pkcs1v15_signature_padding	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_pkcs1v15_signature_padding	(	key_length	,	data	)	:	\\n	    	if	_backend	!=	'winleg/;"	f
add_pkcs1v15_signature_padding	data/data_raw/valid.py	/^utf-8	def	add_pkcs1v15_signature_padding	(	key_length	,	data	)	:	\\n	    	if	_backend	!=	'winleg/;"	f
add_policy_alias	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_policy_alias	(	self	,	policy_index	,	*	aliases	)	:	\\n	    	policy	=	self	.	get_by/;"	f
add_policy_alias	data/data_raw/valid.py	/^utf-8	def	add_policy_alias	(	self	,	policy_index	,	*	aliases	)	:	\\n	    	policy	=	self	.	get_by/;"	f
add_preprocess	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_preprocess	(	self	,	source	,	dest	,	deps	,	marker	=	'#'	,	defines	=	{	}	)	:	\\n	  /;"	f
add_preprocess	data/data_raw/valid.py	/^utf-8	def	add_preprocess	(	self	,	source	,	dest	,	deps	,	marker	=	'#'	,	defines	=	{	}	)	:	\\n	  /;"	f
add_range	data/bpe_corpus_raw/train.py	/^utf-8	def	add_range	(	self	,	iprange	)	:	\\n	    	self	.	add_addressrange	(	AddressRange	.	from_/;"	f
add_range	data/data_raw/train.py	/^utf-8	def	add_range	(	self	,	iprange	)	:	\\n	    	self	.	add_addressrange	(	AddressRange	.	from_/;"	f
add_relationship	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_relationship	(	self	,	from_object	,	to_object	,	relation_type	,	name	=	None	)	:	\\/;"	f
add_relationship	data/data_raw/valid.py	/^utf-8	def	add_relationship	(	self	,	from_object	,	to_object	,	relation_type	,	name	=	None	)	:	\\/;"	f
add_report_event_to	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_report_event_to	(	home	,	name	)	:	\\n	    	func	=	getattr	(	home	,	name	)	\\n	\\n	/;"	f
add_report_event_to	data/data_raw/valid.py	/^utf-8	def	add_report_event_to	(	home	,	name	)	:	\\n	    	func	=	getattr	(	home	,	name	)	\\n	\\n	/;"	f
add_shortcut	data/bpe_corpus_raw/test.py	/^utf-8	def	add_shortcut	(	)	:	\\n	    	frontpage	.	add_shortcut	(	'cockpit'	,	name	,	short_descri/;"	f
add_shortcut	data/data_raw/test.py	/^utf-8	def	add_shortcut	(	)	:	\\n	    	frontpage	.	add_shortcut	(	'cockpit'	,	name	,	short_descri/;"	f
add_suffix	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_suffix	(	self	,	suffix	)	:	\\n	    	new_data	=	self	.	_data	.	add_suffix	(	suffix	/;"	f
add_suffix	data/data_raw/valid.py	/^utf-8	def	add_suffix	(	self	,	suffix	)	:	\\n	    	new_data	=	self	.	_data	.	add_suffix	(	suffix	/;"	f
add_task	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_task	(	name	,	timespec	,	user	,	command	,	environment	=	None	)	:	\\n	    	if	envir/;"	f
add_task	data/data_raw/valid.py	/^utf-8	def	add_task	(	name	,	timespec	,	user	,	command	,	environment	=	None	)	:	\\n	    	if	envir/;"	f
add_text	data/bpe_corpus_raw/test.py	/^utf-8	def	add_text	(	self	,	location	,	name	,	**	kwargs	)	:	\\n	    	self	[	location	]	=	self	.	/;"	f
add_text	data/data_raw/test.py	/^utf-8	def	add_text	(	self	,	location	,	name	,	**	kwargs	)	:	\\n	    	self	[	location	]	=	self	.	/;"	f
add_to_graph	data/bpe_corpus_raw/test.py	/^utf-8	def	add_to_graph	(	self	,	g	)	:	\\n	    	self	.	_create_definition_if_needed	(	)	\\n	prev	/;"	f
add_to_graph	data/data_raw/test.py	/^utf-8	def	add_to_graph	(	self	,	g	)	:	\\n	    	self	.	_create_definition_if_needed	(	)	\\n	prev	/;"	f
add_trend	data/bpe_corpus_raw/train.py	/^utf-8	def	add_trend	(	x	=	None	,	trend	=	'c'	,	prepend	=	False	,	nobs	=	None	,	has_constant	=	's/;"	f
add_trend	data/data_raw/train.py	/^utf-8	def	add_trend	(	x	=	None	,	trend	=	'c'	,	prepend	=	False	,	nobs	=	None	,	has_constant	=	's/;"	f
add_writer	data/bpe_corpus_raw/train.py	/^utf-8	def	add_writer	(	self	,	fd	,	callback	,	*	args	)	:	\\n	    	self	.	_ensure_fd_no_transport/;"	f
add_writer	data/data_raw/train.py	/^utf-8	def	add_writer	(	self	,	fd	,	callback	,	*	args	)	:	\\n	    	self	.	_ensure_fd_no_transport/;"	f
add_wsx_subscription	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_wsx_subscription	(	session	,	cluster_id	,	is_internal	,	sub_key	,	\\n	ext_client_i/;"	f
add_wsx_subscription	data/data_raw/valid.py	/^utf-8	def	add_wsx_subscription	(	session	,	cluster_id	,	is_internal	,	sub_key	,	\\n	ext_client_i/;"	f
addtoken	data/bpe_corpus_raw/train.py	/^utf-8	def	addtoken	(	self	,	type	,	value	,	context	)	:	\\n	    	ilabel	=	self	.	classify	(	type	/;"	f
addtoken	data/data_raw/train.py	/^utf-8	def	addtoken	(	self	,	type	,	value	,	context	)	:	\\n	    	ilabel	=	self	.	classify	(	type	/;"	f
adjust_hue	data/bpe_corpus_raw/train.py	/^utf-8	def	adjust_hue	(	images	,	delta	,	name	=	None	)	:	\\n	    	_ctx	=	_context	.	context	(	)	\\/;"	f
adjust_hue	data/data_raw/train.py	/^utf-8	def	adjust_hue	(	images	,	delta	,	name	=	None	)	:	\\n	    	_ctx	=	_context	.	context	(	)	\\/;"	f
adjust_saturation	data/bpe_corpus_raw/train.py	/^utf-8	def	adjust_saturation	(	images	,	scale	,	name	=	None	)	:	\\n	    	_ctx	=	_context	.	contex/;"	f
adjust_saturation	data/data_raw/train.py	/^utf-8	def	adjust_saturation	(	images	,	scale	,	name	=	None	)	:	\\n	    	_ctx	=	_context	.	contex/;"	f
admin_email	data/bpe_corpus_raw/train.py	/^utf-8	@	register	.	simple_tag	\\n	def	admin_email	(	)	:	\\n	    	admins	=	getattr	(	settings	,	'/;"	f
admin_email	data/data_raw/train.py	/^utf-8	@	register	.	simple_tag	\\n	def	admin_email	(	)	:	\\n	    	admins	=	getattr	(	settings	,	'/;"	f
admin_or_permissions	data/bpe_corpus_raw/train.py	/^utf-8	def	admin_or_permissions	(	**	perms	:	bool	)	:	\\n	    	return	Requires	.	get_decorator	(	/;"	f
admin_or_permissions	data/data_raw/train.py	/^utf-8	def	admin_or_permissions	(	**	perms	:	bool	)	:	\\n	    	return	Requires	.	get_decorator	(	/;"	f
administration_user_list	data/bpe_corpus_raw/valid.py	/^utf-8	@	contextfunction	\\n	def	administration_user_list	(	context	,	users	,	skip_group	=	False	/;"	f
administration_user_list	data/data_raw/valid.py	/^utf-8	@	contextfunction	\\n	def	administration_user_list	(	context	,	users	,	skip_group	=	False	/;"	f
advance_buffer	data/bpe_corpus_raw/valid.py	/^utf-8	def	advance_buffer	(	self	,	count	)	:	\\n	    	self	.	_index	+=	count	\\n	self	.	_bytes_in/;"	f
advance_buffer	data/data_raw/valid.py	/^utf-8	def	advance_buffer	(	self	,	count	)	:	\\n	    	self	.	_index	+=	count	\\n	self	.	_bytes_in/;"	f
affine_forward	data/bpe_corpus_raw/train.py	/^utf-8	def	affine_forward	(	x	,	w	,	b	)	:	\\n	    	N	=	x	.	shape	[	0	]	\\n	out	=	x	.	reshape	(	N	/;"	f
affine_forward	data/data_raw/train.py	/^utf-8	def	affine_forward	(	x	,	w	,	b	)	:	\\n	    	N	=	x	.	shape	[	0	]	\\n	out	=	x	.	reshape	(	N	/;"	f
afterFirstEvent	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_interactionBetweenDifferentEvents	(	self	)	:	\\n	    	events	=	[	]	\\n	firstEvent/;"	f	function:test_interactionBetweenDifferentEvents.beforeFirstEvent	file:
afterFirstEvent	data/data_raw/valid.py	/^utf-8	def	test_interactionBetweenDifferentEvents	(	self	)	:	\\n	    	events	=	[	]	\\n	firstEvent/;"	f	function:test_interactionBetweenDifferentEvents.beforeFirstEvent	file:
afterSecondEvent	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_interactionBetweenDifferentEvents	(	self	)	:	\\n	    	events	=	[	]	\\n	firstEvent/;"	f	function:test_interactionBetweenDifferentEvents.beforeFirstEvent.afterFirstEvent.beforeSecondEvent	file:
afterSecondEvent	data/data_raw/valid.py	/^utf-8	def	test_interactionBetweenDifferentEvents	(	self	)	:	\\n	    	events	=	[	]	\\n	firstEvent/;"	f	function:test_interactionBetweenDifferentEvents.beforeFirstEvent.afterFirstEvent.beforeSecondEvent	file:
after_handle	data/bpe_corpus_raw/train.py	/^utf-8	def	after_handle	(	self	,	_zato_no_op_marker	=	zato_no_op_marker	)	:	\\n	$/;"	f
after_handle	data/data_raw/train.py	/^utf-8	def	after_handle	(	self	,	_zato_no_op_marker	=	zato_no_op_marker	)	:	\\n	$/;"	f
after_idle	data/bpe_corpus_raw/train.py	/^utf-8	def	after_idle	(	self	,	func	,	*	args	)	:	\\n	    	return	self	.	after	(	'idle'	,	func	,	*/;"	f
after_idle	data/data_raw/train.py	/^utf-8	def	after_idle	(	self	,	func	,	*	args	)	:	\\n	    	return	self	.	after	(	'idle'	,	func	,	*/;"	f
agendas	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	agendas	(	self	)	:	\\n	    	from	open_municipio	.	acts	.	models	import	/;"	f
agendas	data/data_raw/train.py	/^utf-8	@	property	\\n	def	agendas	(	self	)	:	\\n	    	from	open_municipio	.	acts	.	models	import	/;"	f
aggregate_drcov_batch	data/bpe_corpus_raw/valid.py	/^utf-8	def	aggregate_drcov_batch	(	self	,	drcov_list	)	:	\\n	    	errors	=	[	]	\\n	coverage	=	Dat/;"	f
aggregate_drcov_batch	data/data_raw/valid.py	/^utf-8	def	aggregate_drcov_batch	(	self	,	drcov_list	)	:	\\n	    	errors	=	[	]	\\n	coverage	=	Dat/;"	f
alarms	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	alarms	(	self	)	:	\\n	    	return	[	(	a	.	get	(	'TRIGGER'	)	.	dt	,	a	.	/;"	f
alarms	data/data_raw/train.py	/^utf-8	@	property	\\n	def	alarms	(	self	)	:	\\n	    	return	[	(	a	.	get	(	'TRIGGER'	)	.	dt	,	a	.	/;"	f
alias_inplace_sub	data/bpe_corpus_raw/valid.py	/^utf-8	def	alias_inplace_sub	(	x	,	i	,	v	)	:	\\n	    	return	_inplace_helper	(	x	,	i	,	v	,	gen_ar/;"	f
alias_inplace_sub	data/data_raw/valid.py	/^utf-8	def	alias_inplace_sub	(	x	,	i	,	v	)	:	\\n	    	return	_inplace_helper	(	x	,	i	,	v	,	gen_ar/;"	f
all_fits	data/bpe_corpus_raw/valid.py	/^utf-8	@	Memoized	\\n	def	all_fits	(	self	,	fitness	)	:	\\n	    	return	[	fitness	(	indv	)	for	in/;"	f
all_fits	data/data_raw/valid.py	/^utf-8	@	Memoized	\\n	def	all_fits	(	self	,	fitness	)	:	\\n	    	return	[	fitness	(	indv	)	for	in/;"	f
all_schemas	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	all_schemas	(	self	)	:	\\n	    	return	self	.	_schemas	\\n		$/;"	f
all_schemas	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	all_schemas	(	self	)	:	\\n	    	return	self	.	_schemas	\\n		$/;"	f
all_strings	data/bpe_corpus_raw/train.py	/^utf-8	def	all_strings	(	lst	)	:	\\n	    	for	item	in	lst	:	\\n	        	if	not	is_string	(	item	/;"	f
all_strings	data/data_raw/train.py	/^utf-8	def	all_strings	(	lst	)	:	\\n	    	for	item	in	lst	:	\\n	        	if	not	is_string	(	item	/;"	f
all_sync_params	data/bpe_corpus_raw/valid.py	/^utf-8	def	all_sync_params	(	tower_params	,	devices	,	usenccl	=	True	)	:	\\n	    	if	len	(	device/;"	f
all_sync_params	data/data_raw/valid.py	/^utf-8	def	all_sync_params	(	tower_params	,	devices	,	usenccl	=	True	)	:	\\n	    	if	len	(	device/;"	f
all_vs_all_comparisons	data/bpe_corpus_raw/train.py	/^utf-8	@	follows	(	split_unknown_gene_set	,	split_per_species_gene_sets	)	\\n	@	files	(	generate_/;"	f
all_vs_all_comparisons	data/data_raw/train.py	/^utf-8	@	follows	(	split_unknown_gene_set	,	split_per_species_gene_sets	)	\\n	@	files	(	generate_/;"	f
all_without	data/bpe_corpus_raw/valid.py	/^utf-8	def	all_without	(	self	,	x	)	:	\\n	    	_args	=	[	]	\\n	for	arg	in	self	.	all	:	\\n	      /;"	f
all_without	data/data_raw/valid.py	/^utf-8	def	all_without	(	self	,	x	)	:	\\n	    	_args	=	[	]	\\n	for	arg	in	self	.	all	:	\\n	      /;"	f
allele_indices	data/bpe_corpus_raw/valid.py	/^utf-8	def	allele_indices	(	alleles	,	genotype_index	)	:	\\n	    	indices	=	[	genotype_index	[	al/;"	f
allele_indices	data/data_raw/valid.py	/^utf-8	def	allele_indices	(	alleles	,	genotype_index	)	:	\\n	    	indices	=	[	genotype_index	[	al/;"	f
allocateVMnetInterface	data/bpe_corpus_raw/valid.py	/^utf-8	def	allocateVMnetInterface	(	self	,	port_id	)	:	\\n	    	log	.	debug	(	'{} is requesting a/;"	f
allocateVMnetInterface	data/data_raw/valid.py	/^utf-8	def	allocateVMnetInterface	(	self	,	port_id	)	:	\\n	    	log	.	debug	(	'{} is requesting a/;"	f
allocate_lock	data/bpe_corpus_raw/valid.py	/^utf-8	def	allocate_lock	(	)	:	\\n	    	return	LockType	(	)	\\n		$/;"	f
allocate_lock	data/data_raw/valid.py	/^utf-8	def	allocate_lock	(	)	:	\\n	    	return	LockType	(	)	\\n		$/;"	f
allowQuery	data/bpe_corpus_raw/train.py	/^utf-8	def	test_allowQueryFalse	(	self	)	:	\\n	\\n	\\n	    	class	SendReplyException	(	Exception	/;"	m	class:test_allowQueryFalse.SendReplyException.RaisingDNSServerFactory
allowQuery	data/data_raw/train.py	/^utf-8	def	test_allowQueryFalse	(	self	)	:	\\n	\\n	\\n	    	class	SendReplyException	(	Exception	/;"	m	class:test_allowQueryFalse.SendReplyException.RaisingDNSServerFactory
allow_sync_over_wifi	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	allow_sync_over_wifi	(	self	)	:	\\n	    	return	self	.	_allow_sync_over/;"	f
allow_sync_over_wifi	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	allow_sync_over_wifi	(	self	)	:	\\n	    	return	self	.	_allow_sync_over/;"	f
allowedMethods	data/bpe_corpus_raw/valid.py	/^utf-8	def	allowedMethods	(	self	)	:	\\n	    	if	not	hasattr	(	self	,	'_allowed_methods'	)	:	\\n	/;"	f
allowedMethods	data/data_raw/valid.py	/^utf-8	def	allowedMethods	(	self	)	:	\\n	    	if	not	hasattr	(	self	,	'_allowed_methods'	)	:	\\n	/;"	f
allowed_domains	data/bpe_corpus_raw/train.py	/^utf-8	def	allowed_domains	(	self	)	:	\\n	    	return	self	.	_allowed_domains	\\n		$/;"	f
allowed_domains	data/data_raw/train.py	/^utf-8	def	allowed_domains	(	self	)	:	\\n	    	return	self	.	_allowed_domains	\\n		$/;"	f
allower	data/bpe_corpus_raw/valid.py	/^utf-8	def	requires	(	*	requirements	,	**	opts	)	:	\\n	    	identity	=	opts	.	get	(	'identity'	)	/;"	f	function:requires.decorator	file:
allower	data/data_raw/valid.py	/^utf-8	def	requires	(	*	requirements	,	**	opts	)	:	\\n	    	identity	=	opts	.	get	(	'identity'	)	/;"	f	function:requires.decorator	file:
ambient_domain	data/bpe_corpus_raw/valid.py	/^utf-8	def	ambient_domain	(	self	)	:	\\n	    	return	self	.	_ambient_domain	\\n		$/;"	f
ambient_domain	data/data_raw/valid.py	/^utf-8	def	ambient_domain	(	self	)	:	\\n	    	return	self	.	_ambient_domain	\\n		$/;"	f
amplitude_to_decibel	data/bpe_corpus_raw/valid.py	/^utf-8	def	amplitude_to_decibel	(	x	,	amin	=	1e-10	,	dynamic_range	=	80.0	)	:	\\n	    	log_spec	=/;"	f
amplitude_to_decibel	data/data_raw/valid.py	/^utf-8	def	amplitude_to_decibel	(	x	,	amin	=	1e-10	,	dynamic_range	=	80.0	)	:	\\n	    	log_spec	=/;"	f
analog_callback	data/bpe_corpus_raw/valid.py	/^utf-8	def	analog_callback	(	self	,	data	)	:	\\n	    	reply	=	json	.	dumps	(	{	'method'	:	'analog/;"	f
analog_callback	data/data_raw/valid.py	/^utf-8	def	analog_callback	(	self	,	data	)	:	\\n	    	reply	=	json	.	dumps	(	{	'method'	:	'analog/;"	f
analyse	data/bpe_corpus_raw/train.py	/^utf-8	def	analyse	(	n	,	children	)	:	\\n	    	if	isinstance	(	n	,	CompValue	)	:	\\n	        	if	/;"	f
analyse	data/data_raw/train.py	/^utf-8	def	analyse	(	n	,	children	)	:	\\n	    	if	isinstance	(	n	,	CompValue	)	:	\\n	        	if	/;"	f
analyze	data/bpe_corpus_raw/valid.py	/^utf-8	def	analyze	(	vw	)	:	\\n	    	for	fva	in	vw	.	getFunctions	(	)	:	\\n	        	for	va	,	siz/;"	f
analyze	data/data_raw/valid.py	/^utf-8	def	analyze	(	vw	)	:	\\n	    	for	fva	in	vw	.	getFunctions	(	)	:	\\n	        	for	va	,	siz/;"	f
analyze_color	data/bpe_corpus_raw/valid.py	/^utf-8	def	analyze_color	(	rgb_img	,	mask	,	hist_plot_type	=	None	)	:	\\n	    	params	.	device	+=/;"	f
analyze_color	data/data_raw/valid.py	/^utf-8	def	analyze_color	(	rgb_img	,	mask	,	hist_plot_type	=	None	)	:	\\n	    	params	.	device	+=/;"	f
angles	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	angles	(	self	)	:	\\n	    	ret	=	{	}	\\n	ang	=	self	.	interior_angle	\\/;"	f
angles	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	angles	(	self	)	:	\\n	    	ret	=	{	}	\\n	ang	=	self	.	interior_angle	\\/;"	f
annotate	data/bpe_corpus_raw/valid.py	/^utf-8	def	annotate	(	head	,	list	)	:	\\n	    	for	i	in	range	(	len	(	list	)	)	:	\\n	        	if	/;"	f
annotate	data/data_raw/valid.py	/^utf-8	def	annotate	(	head	,	list	)	:	\\n	    	for	i	in	range	(	len	(	list	)	)	:	\\n	        	if	/;"	f
annotate_ncbi_taxa	data/bpe_corpus_raw/train.py	/^utf-8	def	annotate_ncbi_taxa	(	self	,	taxid_attr	=	'species'	,	tax2name	=	None	,	tax2track	\\n	=/;"	f
annotate_ncbi_taxa	data/data_raw/train.py	/^utf-8	def	annotate_ncbi_taxa	(	self	,	taxid_attr	=	'species'	,	tax2name	=	None	,	tax2track	\\n	=/;"	f
anotherTask	data/bpe_corpus_raw/valid.py	/^utf-8	def	testCallbackReCoiterate	(	self	)	:	\\n	    	calls	=	[	]	\\n	\\n	\\n	class	FakeCall	:	\\/;"	f	function:testCallbackReCoiterate.FakeCall.__init__.__repr__.sched	file:
anotherTask	data/data_raw/valid.py	/^utf-8	def	testCallbackReCoiterate	(	self	)	:	\\n	    	calls	=	[	]	\\n	\\n	\\n	class	FakeCall	:	\\/;"	f	function:testCallbackReCoiterate.FakeCall.__init__.__repr__.sched	file:
apart_undetermined_coeffs	data/bpe_corpus_raw/train.py	/^utf-8	def	apart_undetermined_coeffs	(	P	,	Q	)	:	\\n	    	X	=	numbered_symbols	(	cls	=	Dummy	)	\\/;"	f
apart_undetermined_coeffs	data/data_raw/train.py	/^utf-8	def	apart_undetermined_coeffs	(	P	,	Q	)	:	\\n	    	X	=	numbered_symbols	(	cls	=	Dummy	)	\\/;"	f
apnumber	data/bpe_corpus_raw/train.py	/^utf-8	def	apnumber	(	value	)	:	\\n	    	try	:	\\n	        	value	=	int	(	value	)	\\n		except	Val/;"	f
apnumber	data/data_raw/train.py	/^utf-8	def	apnumber	(	value	)	:	\\n	    	try	:	\\n	        	value	=	int	(	value	)	\\n		except	Val/;"	f
append	data/bpe_corpus_raw/valid.py	/^utf-8	def	append	(	self	,	key	,	val	)	:	\\n	    	return	self	.	_set	(	b'append'	,	key	,	val	,	0	/;"	f
append	data/bpe_corpus_raw/valid.py	/^utf-8	def	append	(	self	,	newMedium	)	:	\\n	    	self	.	appendMedium	(	newMedium	)	\\n		$/;"	f
append	data/bpe_corpus_raw/valid.py	/^utf-8	def	append	(	self	,	path	,	value	)	:	\\n	    	try	:	\\n	        	entry	=	Yedit	.	get_entry/;"	f
append	data/bpe_corpus_raw/valid.py	/^utf-8	def	append	(	self	,	tag	)	:	\\n	    	list	.	append	(	self	,	tag	)	\\n	self	.	uids	.	add	(	/;"	f
append	data/data_raw/valid.py	/^utf-8	def	append	(	self	,	key	,	val	)	:	\\n	    	return	self	.	_set	(	b'append'	,	key	,	val	,	0	/;"	f
append	data/data_raw/valid.py	/^utf-8	def	append	(	self	,	newMedium	)	:	\\n	    	self	.	appendMedium	(	newMedium	)	\\n		$/;"	f
append	data/data_raw/valid.py	/^utf-8	def	append	(	self	,	path	,	value	)	:	\\n	    	try	:	\\n	        	entry	=	Yedit	.	get_entry/;"	f
append	data/data_raw/valid.py	/^utf-8	def	append	(	self	,	tag	)	:	\\n	    	list	.	append	(	self	,	tag	)	\\n	self	.	uids	.	add	(	/;"	f
append_backward	data/bpe_corpus_raw/train.py	/^utf-8	def	append_backward	(	loss	,	parameter_list	=	None	,	no_grad_set	=	None	,	callbacks	=	None/;"	f
append_backward	data/data_raw/train.py	/^utf-8	def	append_backward	(	loss	,	parameter_list	=	None	,	no_grad_set	=	None	,	callbacks	=	None/;"	f
append_blob_from_stream	data/bpe_corpus_raw/test.py	/^utf-8	def	append_blob_from_stream	(	self	,	container_name	,	blob_name	,	stream	,	count	=	\\n	Non/;"	f
append_blob_from_stream	data/data_raw/test.py	/^utf-8	def	append_blob_from_stream	(	self	,	container_name	,	blob_name	,	stream	,	count	=	\\n	Non/;"	f
append_without_event	data/bpe_corpus_raw/valid.py	/^utf-8	def	append_without_event	(	self	,	item	)	:	\\n	    	self	.	_data	(	)	.	_sa_appender	(	item/;"	f
append_without_event	data/data_raw/valid.py	/^utf-8	def	append_without_event	(	self	,	item	)	:	\\n	    	self	.	_data	(	)	.	_sa_appender	(	item/;"	f
appendslash	data/bpe_corpus_raw/train.py	/^utf-8	def	appendslash	(	url	)	:	\\n	    	if	not	url	.	endswith	(	'\/'	)	:	\\n	        	url	=	'%s/;"	f
appendslash	data/data_raw/train.py	/^utf-8	def	appendslash	(	url	)	:	\\n	    	if	not	url	.	endswith	(	'\/'	)	:	\\n	        	url	=	'%s/;"	f
apply	data/bpe_corpus_raw/train.py	/^utf-8	def	apply	(	self	,	**	kwds	)	:	\\n	$/;"	f
apply	data/bpe_corpus_raw/train.py	/^utf-8	def	apply	(	self	,	image	,	t	,	evaluation	)	:	\\n	    	pixels	=	pixels_as_ubyte	(	pixels_a/;"	f
apply	data/data_raw/train.py	/^utf-8	def	apply	(	self	,	**	kwds	)	:	\\n	$/;"	f
apply	data/data_raw/train.py	/^utf-8	def	apply	(	self	,	image	,	t	,	evaluation	)	:	\\n	    	pixels	=	pixels_as_ubyte	(	pixels_a/;"	f
apply_async	data/bpe_corpus_raw/train.py	/^utf-8	def	apply_async	(	self	,	func	,	callback	=	None	)	:	\\n	    	future	=	self	.	_view	.	apply/;"	f
apply_async	data/bpe_corpus_raw/valid.py	/^utf-8	def	apply_async	(	self	,	func	,	args	=	None	,	kwds	=	None	,	callback	=	None	)	:	\\n	    	i/;"	f
apply_async	data/data_raw/train.py	/^utf-8	def	apply_async	(	self	,	func	,	callback	=	None	)	:	\\n	    	future	=	self	.	_view	.	apply/;"	f
apply_async	data/data_raw/valid.py	/^utf-8	def	apply_async	(	self	,	func	,	args	=	None	,	kwds	=	None	,	callback	=	None	)	:	\\n	    	i/;"	f
apply_json_patch	data/bpe_corpus_raw/valid.py	/^utf-8	def	apply_json_patch	(	obj	,	ops	)	:	\\n	    	data	=	{	**	obj	}	\\n	permissions	=	{	'read'/;"	f
apply_json_patch	data/data_raw/valid.py	/^utf-8	def	apply_json_patch	(	obj	,	ops	)	:	\\n	    	data	=	{	**	obj	}	\\n	permissions	=	{	'read'/;"	f
apply_node_labels	data/bpe_corpus_raw/valid.py	/^utf-8	@	when	(	'config.changed.labels'	,	'kubernetes-worker.config.created'	)	\\n	def	apply_node/;"	f
apply_node_labels	data/data_raw/valid.py	/^utf-8	@	when	(	'config.changed.labels'	,	'kubernetes-worker.config.created'	)	\\n	def	apply_node/;"	f
approve	data/bpe_corpus_raw/valid.py	/^utf-8	def	approve	(	self	,	user	)	:	\\n	    	self	.	_change_status	(	self	.	STATUS_APPROVED	,	us/;"	f
approve	data/data_raw/valid.py	/^utf-8	def	approve	(	self	,	user	)	:	\\n	    	self	.	_change_status	(	self	.	STATUS_APPROVED	,	us/;"	f
approximating_model	data/bpe_corpus_raw/valid.py	/^utf-8	def	approximating_model	(	self	,	beta	,	T	,	Z	,	R	,	Q	,	h_approx	,	data	)	:	\\n	    	H	=	n/;"	f
approximating_model	data/data_raw/valid.py	/^utf-8	def	approximating_model	(	self	,	beta	,	T	,	Z	,	R	,	Q	,	h_approx	,	data	)	:	\\n	    	H	=	n/;"	f
apps	data/bpe_corpus_raw/train.py	/^utf-8	@	login_required	\\n	def	apps	(	request	)	:	\\n	    	apps	=	App	.	objects	.	filter	(	owner/;"	f
apps	data/data_raw/train.py	/^utf-8	@	login_required	\\n	def	apps	(	request	)	:	\\n	    	apps	=	App	.	objects	.	filter	(	owner/;"	f
args_for_server	data/bpe_corpus_raw/valid.py	/^utf-8	def	args_for_server	(	arguments	)	:	\\n	    	kmap	=	dict	(	ip	=	'ip'	,	port	=	'port'	,	wor/;"	f
args_for_server	data/data_raw/valid.py	/^utf-8	def	args_for_server	(	arguments	)	:	\\n	    	kmap	=	dict	(	ip	=	'ip'	,	port	=	'port'	,	wor/;"	f
argspec_args_legacy	data/bpe_corpus_raw/valid.py	/^utf-8	def	argspec_args_legacy	(	argspec	,	constructor	,	*	args	,	**	kwargs	)	:	\\n	    	if	argsp/;"	f
argspec_args_legacy	data/data_raw/valid.py	/^utf-8	def	argspec_args_legacy	(	argspec	,	constructor	,	*	args	,	**	kwargs	)	:	\\n	    	if	argsp/;"	f
argtopk_preprocess	data/bpe_corpus_raw/valid.py	/^utf-8	def	argtopk_preprocess	(	a	,	idx	)	:	\\n	    	return	a	,	idx	\\n		$/;"	f
argtopk_preprocess	data/data_raw/valid.py	/^utf-8	def	argtopk_preprocess	(	a	,	idx	)	:	\\n	    	return	a	,	idx	\\n		$/;"	f
armfw_asm_parse_data_definition	data/bpe_corpus_raw/valid.py	/^utf-8	def	armfw_asm_parse_data_definition	(	asm_arch	,	asm_line	)	:	\\n	    	single_len	,	dt_var/;"	f
armfw_asm_parse_data_definition	data/data_raw/valid.py	/^utf-8	def	armfw_asm_parse_data_definition	(	asm_arch	,	asm_line	)	:	\\n	    	single_len	,	dt_var/;"	f
arp_ip	data/bpe_corpus_raw/valid.py	/^utf-8	def	arp_ip	(	opcode	,	src_mac	,	src_ip	,	dst_mac	,	dst_ip	)	:	\\n	    	return	arp	(	ARP_HW/;"	f
arp_ip	data/data_raw/valid.py	/^utf-8	def	arp_ip	(	opcode	,	src_mac	,	src_ip	,	dst_mac	,	dst_ip	)	:	\\n	    	return	arp	(	ARP_HW/;"	f
array_to_lod_tensor	data/bpe_corpus_raw/train.py	/^utf-8	def	array_to_lod_tensor	(	x	,	table	)	:	\\n	    	helper	=	LayerHelper	(	'array_to_lod_tens/;"	f
array_to_lod_tensor	data/data_raw/train.py	/^utf-8	def	array_to_lod_tensor	(	x	,	table	)	:	\\n	    	helper	=	LayerHelper	(	'array_to_lod_tens/;"	f
as_content_primitive	data/bpe_corpus_raw/train.py	/^utf-8	def	as_content_primitive	(	self	,	radical	=	False	)	:	\\n	    	return	S	.	One	,	self	\\n		$/;"	f
as_content_primitive	data/data_raw/train.py	/^utf-8	def	as_content_primitive	(	self	,	radical	=	False	)	:	\\n	    	return	S	.	One	,	self	\\n		$/;"	f
as_dict	data/bpe_corpus_raw/valid.py	/^utf-8	def	as_dict	(	self	,	attrs	=	None	,	ad_value	=	None	)	:	\\n	    	excluded_names	=	set	(	[	/;"	f
as_dict	data/data_raw/valid.py	/^utf-8	def	as_dict	(	self	,	attrs	=	None	,	ad_value	=	None	)	:	\\n	    	excluded_names	=	set	(	[	/;"	f
as_payload_class	data/bpe_corpus_raw/test.py	/^utf-8	@	classmethod	\\n	def	as_payload_class	(	mycls	,	cls	)	:	\\n	    	mycls	.	register_child	(/;"	f
as_payload_class	data/data_raw/test.py	/^utf-8	@	classmethod	\\n	def	as_payload_class	(	mycls	,	cls	)	:	\\n	    	mycls	.	register_child	(/;"	f
as_series	data/bpe_corpus_raw/valid.py	/^utf-8	@	pytest	.	fixture	(	params	=	[	True	,	False	]	)	\\n	def	as_series	(	request	)	:	\\n	    	/;"	f
as_series	data/data_raw/valid.py	/^utf-8	@	pytest	.	fixture	(	params	=	[	True	,	False	]	)	\\n	def	as_series	(	request	)	:	\\n	    	/;"	f
as_sql	data/bpe_corpus_raw/train.py	/^utf-8	def	as_sql	(	self	,	with_limits	=	True	,	with_col_aliases	=	False	)	:	\\n	    	if	with_lim/;"	f
as_sql	data/data_raw/train.py	/^utf-8	def	as_sql	(	self	,	with_limits	=	True	,	with_col_aliases	=	False	)	:	\\n	    	if	with_lim/;"	f
asciiBase85Decode	data/bpe_corpus_raw/valid.py	/^utf-8	def	asciiBase85Decode	(	input	)	:	\\n	    	stripped	=	''	.	join	(	asNative	(	input	)	.	spl/;"	f
asciiBase85Decode	data/data_raw/valid.py	/^utf-8	def	asciiBase85Decode	(	input	)	:	\\n	    	stripped	=	''	.	join	(	asNative	(	input	)	.	spl/;"	f
ask_geno	data/bpe_corpus_raw/valid.py	/^utf-8	def	ask_geno	(	self	,	number	=	None	,	xmean	=	None	,	sigma_fac	=	1	)	:	\\n	    	if	number	/;"	f
ask_geno	data/data_raw/valid.py	/^utf-8	def	ask_geno	(	self	,	number	=	None	,	xmean	=	None	,	sigma_fac	=	1	)	:	\\n	    	if	number	/;"	f
aslr	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	aslr	(	self	)	:	\\n	    	if	self	.	_aslr	is	None	:	\\n	        	if	self/;"	f
aslr	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	aslr	(	self	)	:	\\n	    	if	self	.	_aslr	is	None	:	\\n	        	if	self/;"	f
assemble	data/bpe_corpus_raw/valid.py	/^utf-8	def	assemble	(	block	)	:	\\n	    	return	[	(	'\\\\n'	.	join	(	sub_block	)	+	'\\\\n'	)	for	/;"	f
assemble	data/data_raw/valid.py	/^utf-8	def	assemble	(	block	)	:	\\n	    	return	[	(	'\\\\n'	.	join	(	sub_block	)	+	'\\\\n'	)	for	/;"	f
assertContains	data/bpe_corpus_raw/train.py	/^utf-8	def	assertContains	(	self	,	response	,	text	,	count	=	None	,	status_code	=	200	,	\\n	msg_p/;"	f
assertContains	data/data_raw/train.py	/^utf-8	def	assertContains	(	self	,	response	,	text	,	count	=	None	,	status_code	=	200	,	\\n	msg_p/;"	f
assertEqualIgnoreLeadingWhitespace	data/bpe_corpus_raw/train.py	/^utf-8	def	assertEqualIgnoreLeadingWhitespace	(	self	,	expected_lines	,	lines	)	:	\\n	    	self	./;"	f
assertEqualIgnoreLeadingWhitespace	data/data_raw/train.py	/^utf-8	def	assertEqualIgnoreLeadingWhitespace	(	self	,	expected_lines	,	lines	)	:	\\n	    	self	./;"	f
assertNotIn	data/bpe_corpus_raw/valid.py	/^utf-8	def	assertNotIn	(	first	,	second	,	msg	=	''	)	:	\\n	    	a	,	b	=	first	,	second	\\n	assert/;"	f
assertNotIn	data/data_raw/valid.py	/^utf-8	def	assertNotIn	(	first	,	second	,	msg	=	''	)	:	\\n	    	a	,	b	=	first	,	second	\\n	assert/;"	f
assertNotRegexpMatches	data/bpe_corpus_raw/valid.py	/^utf-8	def	assertNotRegexpMatches	(	self	,	text	,	unexpected_regexp	,	msg	=	None	)	:	\\n	    	if	/;"	f
assertNotRegexpMatches	data/data_raw/valid.py	/^utf-8	def	assertNotRegexpMatches	(	self	,	text	,	unexpected_regexp	,	msg	=	None	)	:	\\n	    	if	/;"	f
assertParentOf	data/bpe_corpus_raw/valid.py	/^utf-8	def	assertParentOf	(	self	,	parent_usage_key	,	child_usage_key	,	draft	=	None	)	:	\\n	    /;"	f
assertParentOf	data/data_raw/valid.py	/^utf-8	def	assertParentOf	(	self	,	parent_usage_key	,	child_usage_key	,	draft	=	None	)	:	\\n	    /;"	f
assertSelectsIDs	data/bpe_corpus_raw/valid.py	/^utf-8	def	assertSelectsIDs	(	self	,	tags	,	should_match	)	:	\\n	    	self	.	assertEqual	(	[	tag	/;"	f
assertSelectsIDs	data/data_raw/valid.py	/^utf-8	def	assertSelectsIDs	(	self	,	tags	,	should_match	)	:	\\n	    	self	.	assertEqual	(	[	tag	/;"	f
assertShapeEqual	data/bpe_corpus_raw/valid.py	/^utf-8	def	assertShapeEqual	(	self	,	np_array	,	tf_tensor	,	msg	=	None	)	:	\\n	    	if	not	isinst/;"	f
assertShapeEqual	data/data_raw/valid.py	/^utf-8	def	assertShapeEqual	(	self	,	np_array	,	tf_tensor	,	msg	=	None	)	:	\\n	    	if	not	isinst/;"	f
assertTemplateUsed	data/bpe_corpus_raw/valid.py	/^utf-8	def	assertTemplateUsed	(	self	,	response	,	template_name	)	:	\\n	    	template_names	=	[	t/;"	f
assertTemplateUsed	data/data_raw/valid.py	/^utf-8	def	assertTemplateUsed	(	self	,	response	,	template_name	)	:	\\n	    	template_names	=	[	t/;"	f
assertWMIObject	data/bpe_corpus_raw/valid.py	/^utf-8	def	assertWMIObject	(	self	,	wmi_obj	,	properties	)	:	\\n	    	for	prop_and_value	in	prope/;"	f
assertWMIObject	data/data_raw/valid.py	/^utf-8	def	assertWMIObject	(	self	,	wmi_obj	,	properties	)	:	\\n	    	for	prop_and_value	in	prope/;"	f
assert_almost_equal	data/bpe_corpus_raw/test.py	/^utf-8	def	assert_almost_equal	(	actual	,	desired	,	decimal	=	7	,	err_msg	=	''	,	verbose	=	True	)/;"	f
assert_almost_equal	data/data_raw/test.py	/^utf-8	def	assert_almost_equal	(	actual	,	desired	,	decimal	=	7	,	err_msg	=	''	,	verbose	=	True	)/;"	f
assert_any_call	data/bpe_corpus_raw/valid.py	/^utf-8	def	assert_any_call	(	self	,	*	args	,	**	kwargs	)	:	\\n	    	kall	=	call	(	*	args	,	**	kwa/;"	f
assert_any_call	data/data_raw/valid.py	/^utf-8	def	assert_any_call	(	self	,	*	args	,	**	kwargs	)	:	\\n	    	kall	=	call	(	*	args	,	**	kwa/;"	f
assert_blockchain_height	data/bpe_corpus_raw/valid.py	/^utf-8	def	assert_blockchain_height	(	self	,	node	,	height	)	:	\\n	    	last_height	=	node	.	getb/;"	f
assert_blockchain_height	data/data_raw/valid.py	/^utf-8	def	assert_blockchain_height	(	self	,	node	,	height	)	:	\\n	    	last_height	=	node	.	getb/;"	f
assert_conf_error	data/bpe_corpus_raw/test.py	/^utf-8	def	assert_conf_error	(	config	,	expected_error	=	ReportError	)	:	\\n	    	did	.	base	.	Co/;"	f
assert_conf_error	data/data_raw/test.py	/^utf-8	def	assert_conf_error	(	config	,	expected_error	=	ReportError	)	:	\\n	    	did	.	base	.	Co/;"	f
assert_contains_lines	data/bpe_corpus_raw/valid.py	/^utf-8	def	assert_contains_lines	(	self	,	lines2	)	:	\\n	    	__tracebackhide__	=	True	\\n	val	=	/;"	f
assert_contains_lines	data/data_raw/valid.py	/^utf-8	def	assert_contains_lines	(	self	,	lines2	)	:	\\n	    	__tracebackhide__	=	True	\\n	val	=	/;"	f
assert_expression	data/bpe_corpus_raw/valid.py	/^utf-8	def	assert_expression	(	self	,	expr	,	msg	=	None	,	stack	=	None	)	:	\\n	    	if	not	expr	:/;"	f
assert_expression	data/data_raw/valid.py	/^utf-8	def	assert_expression	(	self	,	expr	,	msg	=	None	,	stack	=	None	)	:	\\n	    	if	not	expr	:/;"	f
assert_fingerprint	data/bpe_corpus_raw/train.py	/^utf-8	def	assert_fingerprint	(	cert	,	fingerprint	)	:	\\n	    	hashfunc_map	=	{	(	16	)	:	md5	,	(/;"	f
assert_fingerprint	data/data_raw/train.py	/^utf-8	def	assert_fingerprint	(	cert	,	fingerprint	)	:	\\n	    	hashfunc_map	=	{	(	16	)	:	md5	,	(/;"	f
assert_link	data/bpe_corpus_raw/valid.py	/^utf-8	def	assert_link	(	test	,	expected_link	,	actual_link	)	:	\\n	    	test	.	assertEqual	(	exp/;"	f
assert_link	data/data_raw/valid.py	/^utf-8	def	assert_link	(	test	,	expected_link	,	actual_link	)	:	\\n	    	test	.	assertEqual	(	exp/;"	f
assert_match	data/bpe_corpus_raw/valid.py	/^utf-8	def	assert_match	(	self	,	path	,	param_path	,	param_count	)	:	\\n	    	config_manager	=	ap/;"	f
assert_match	data/data_raw/valid.py	/^utf-8	def	assert_match	(	self	,	path	,	param_path	,	param_count	)	:	\\n	    	config_manager	=	ap/;"	f
assert_rank_in	data/bpe_corpus_raw/train.py	/^utf-8	def	assert_rank_in	(	x	,	ranks	,	data	=	None	,	summarize	=	None	,	message	=	None	,	name	=	/;"	f
assert_rank_in	data/data_raw/train.py	/^utf-8	def	assert_rank_in	(	x	,	ranks	,	data	=	None	,	summarize	=	None	,	message	=	None	,	name	=	/;"	f
assert_user_in_session	data/bpe_corpus_raw/valid.py	/^utf-8	def	assert_user_in_session	(	self	)	:	\\n	    	self	.	assertEquals	(	SafeSessionMiddleware/;"	f
assert_user_in_session	data/data_raw/valid.py	/^utf-8	def	assert_user_in_session	(	self	)	:	\\n	    	self	.	assertEquals	(	SafeSessionMiddleware/;"	f
assert_warnings	data/bpe_corpus_raw/valid.py	/^utf-8	def	assert_warnings	(	fn	,	warnings	)	:	\\n	    	from	.	assertions	import	eq_	,	emits_warn/;"	f
assert_warnings	data/data_raw/valid.py	/^utf-8	def	assert_warnings	(	fn	,	warnings	)	:	\\n	    	from	.	assertions	import	eq_	,	emits_warn/;"	f
assertions	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_deep_equals_fallsback_to_generic_comparator_failing_type	(	)	:	\\n	    	from	date/;"	f	function:test_deep_equals_fallsback_to_generic_comparator_failing_type	file:
assertions	data/data_raw/valid.py	/^utf-8	def	test_deep_equals_fallsback_to_generic_comparator_failing_type	(	)	:	\\n	    	from	date/;"	f	function:test_deep_equals_fallsback_to_generic_comparator_failing_type	file:
assign_worker_roles	data/bpe_corpus_raw/valid.py	/^utf-8	def	main	(	)	:	\\n	    	argparser	=	ParlaiParser	(	False	,	False	)	\\n	argparser	.	add_par/;"	f	function:main.run_onboard.check_worker_eligibility	file:
assign_worker_roles	data/data_raw/valid.py	/^utf-8	def	main	(	)	:	\\n	    	argparser	=	ParlaiParser	(	False	,	False	)	\\n	argparser	.	add_par/;"	f	function:main.run_onboard.check_worker_eligibility	file:
assume	data/bpe_corpus_raw/train.py	/^utf-8	def	assume	(	condition	)	:	\\n	    	if	not	condition	:	\\n	        	raise	UnsatisfiedAssum/;"	f
assume	data/data_raw/train.py	/^utf-8	def	assume	(	condition	)	:	\\n	    	if	not	condition	:	\\n	        	raise	UnsatisfiedAssum/;"	f
assumptions	data/bpe_corpus_raw/valid.py	/^utf-8	def	assumptions	(	*	args	)	:	\\n	    	if	len	(	args	)	==	0	:	\\n	        	return	list	(	_a/;"	f
assumptions	data/data_raw/valid.py	/^utf-8	def	assumptions	(	*	args	)	:	\\n	    	if	len	(	args	)	==	0	:	\\n	        	return	list	(	_a/;"	f
ast_parse_enum	data/bpe_corpus_raw/valid.py	/^utf-8	def	ast_parse_enum	(	self	,	ast	)	:	\\n	    	return	self	.	ast_to_typeid	(	ast	)	\\n		$/;"	f
ast_parse_enum	data/data_raw/valid.py	/^utf-8	def	ast_parse_enum	(	self	,	ast	)	:	\\n	    	return	self	.	ast_to_typeid	(	ast	)	\\n		$/;"	f
astuple	data/bpe_corpus_raw/train.py	/^utf-8	def	astuple	(	inst	,	recurse	=	True	,	filter	=	None	,	tuple_factory	=	tuple	,	\\n	retain_c/;"	f
astuple	data/data_raw/train.py	/^utf-8	def	astuple	(	inst	,	recurse	=	True	,	filter	=	None	,	tuple_factory	=	tuple	,	\\n	retain_c/;"	f
async_result	data/bpe_corpus_raw/valid.py	/^utf-8	def	async_result	(	self	)	:	\\n	$/;"	f
async_result	data/data_raw/valid.py	/^utf-8	def	async_result	(	self	)	:	\\n	$/;"	f
atFirstStep	data/bpe_corpus_raw/valid.py	/^utf-8	def	atFirstStep	(	self	)	:	\\n	    	return	self	.	list	[	0	]	\\n		$/;"	f
atFirstStep	data/data_raw/valid.py	/^utf-8	def	atFirstStep	(	self	)	:	\\n	    	return	self	.	list	[	0	]	\\n		$/;"	f
atkin_lehner_eigenvalue	data/bpe_corpus_raw/valid.py	/^utf-8	def	atkin_lehner_eigenvalue	(	self	,	d	=	None	,	embedding	=	None	)	:	\\n	    	if	d	is	None/;"	f
atkin_lehner_eigenvalue	data/data_raw/valid.py	/^utf-8	def	atkin_lehner_eigenvalue	(	self	,	d	=	None	,	embedding	=	None	)	:	\\n	    	if	d	is	None/;"	f
attach	data/bpe_corpus_raw/test.py	/^utf-8	def	attach	(	self	,	payload	)	:	\\n	    	if	self	.	_payload	is	None	:	\\n	        	self	.	/;"	f
attach	data/bpe_corpus_raw/train.py	/^utf-8	def	attach	(	self	,	payload	)	:	\\n	    	if	self	.	_payload	is	None	:	\\n	        	self	.	/;"	f
attach	data/data_raw/test.py	/^utf-8	def	attach	(	self	,	payload	)	:	\\n	    	if	self	.	_payload	is	None	:	\\n	        	self	.	/;"	f
attach	data/data_raw/train.py	/^utf-8	def	attach	(	self	,	payload	)	:	\\n	    	if	self	.	_payload	is	None	:	\\n	        	self	.	/;"	f
attach_guidance_action	data/bpe_corpus_raw/train.py	/^utf-8	def	attach_guidance_action	(	self	,	request	,	queryset	)	:	\\n	    	return	self	.	_assign_/;"	f
attach_guidance_action	data/data_raw/train.py	/^utf-8	def	attach_guidance_action	(	self	,	request	,	queryset	)	:	\\n	    	return	self	.	_assign_/;"	f
attach_signals	data/bpe_corpus_raw/valid.py	/^utf-8	def	attach_signals	(	self	,	filters	=	None	)	:	\\n	    	return	DBusSignalWrapper	(	self	,	/;"	f
attach_signals	data/data_raw/valid.py	/^utf-8	def	attach_signals	(	self	,	filters	=	None	)	:	\\n	    	return	DBusSignalWrapper	(	self	,	/;"	f
attach_total_points	data/bpe_corpus_raw/train.py	/^utf-8	def	attach_total_points	(	queryset	,	as_field	=	'total_points_attr'	)	:	\\n	    	model	=	q/;"	f
attach_total_points	data/data_raw/train.py	/^utf-8	def	attach_total_points	(	queryset	,	as_field	=	'total_points_attr'	)	:	\\n	    	model	=	q/;"	f
attach_tracer	data/bpe_corpus_raw/valid.py	/^utf-8	def	attach_tracer	(	self	,	uuid	,	socket	,	local_pid	,	pause_signal	)	:	\\n	    	log	.	inf/;"	f
attach_tracer	data/data_raw/valid.py	/^utf-8	def	attach_tracer	(	self	,	uuid	,	socket	,	local_pid	,	pause_signal	)	:	\\n	    	log	.	inf/;"	f
attendees	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	attendees	(	self	)	:	\\n	    	return	[	attendee	for	attendee	in	self	.	/;"	f
attendees	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	attendees	(	self	)	:	\\n	    	return	[	attendee	for	attendee	in	self	.	/;"	f
audio_format	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	audio_format	(	self	)	:	\\n	    	return	self	.	__audio_format	\\n		$/;"	f
audio_format	data/data_raw/train.py	/^utf-8	@	property	\\n	def	audio_format	(	self	)	:	\\n	    	return	self	.	__audio_format	\\n		$/;"	f
audit_aws_es	data/bpe_corpus_raw/test.py	/^utf-8	def	audit_aws_es	(	)	:	\\n	    	print	(	'Started AWS Elastic-Search Audit '	)	\\n	with	ope/;"	f
audit_aws_es	data/data_raw/test.py	/^utf-8	def	audit_aws_es	(	)	:	\\n	    	print	(	'Started AWS Elastic-Search Audit '	)	\\n	with	ope/;"	f
augment_1s_column	data/bpe_corpus_raw/train.py	/^utf-8	def	augment_1s_column	(	X	)	:	\\n	    	return	np	.	hstack	(	(	np	.	ones	(	(	X	.	shape	[	0	/;"	f
augment_1s_column	data/data_raw/train.py	/^utf-8	def	augment_1s_column	(	X	)	:	\\n	    	return	np	.	hstack	(	(	np	.	ones	(	(	X	.	shape	[	0	/;"	f
augment_usage_errors	data/bpe_corpus_raw/valid.py	/^utf-8	@	contextmanager	\\n	def	augment_usage_errors	(	ctx	,	param	=	None	)	:	\\n	    	try	:	\\n	/;"	f
augment_usage_errors	data/data_raw/valid.py	/^utf-8	@	contextmanager	\\n	def	augment_usage_errors	(	ctx	,	param	=	None	)	:	\\n	    	try	:	\\n	/;"	f
auth	data/bpe_corpus_raw/valid.py	/^utf-8	def	auth	(	request	)	:	\\n	\\n	    	def	get_user	(	)	:	\\n	        	if	hasattr	(	request	,/;"	f
auth	data/data_raw/valid.py	/^utf-8	def	auth	(	request	)	:	\\n	\\n	    	def	get_user	(	)	:	\\n	        	if	hasattr	(	request	,/;"	f
auth_str_equal	data/bpe_corpus_raw/train.py	/^utf-8	def	auth_str_equal	(	provided	,	known	)	:	\\n	    	result	=	0	\\n	p_len	=	len	(	provided	)/;"	f
auth_str_equal	data/data_raw/train.py	/^utf-8	def	auth_str_equal	(	provided	,	known	)	:	\\n	    	result	=	0	\\n	p_len	=	len	(	provided	)/;"	f
authenticateToSharedNotebook	data/bpe_corpus_raw/valid.py	/^utf-8	def	authenticateToSharedNotebook	(	self	,	shareKeyOrGlobalId	,	authenticationToken	\\n	)	:/;"	f
authenticateToSharedNotebook	data/data_raw/valid.py	/^utf-8	def	authenticateToSharedNotebook	(	self	,	shareKeyOrGlobalId	,	authenticationToken	\\n	)	:/;"	f
authorize_dbsecurity_group	data/bpe_corpus_raw/valid.py	/^utf-8	def	authorize_dbsecurity_group	(	self	,	group_name	,	cidr_ip	=	None	,	\\n	ec2_security_gro/;"	f
authorize_dbsecurity_group	data/data_raw/valid.py	/^utf-8	def	authorize_dbsecurity_group	(	self	,	group_name	,	cidr_ip	=	None	,	\\n	ec2_security_gro/;"	f
authorize_quota_class_context	data/bpe_corpus_raw/valid.py	/^utf-8	def	authorize_quota_class_context	(	context	,	class_name	)	:	\\n	    	if	is_user_context	(/;"	f
authorize_quota_class_context	data/data_raw/valid.py	/^utf-8	def	authorize_quota_class_context	(	context	,	class_name	)	:	\\n	    	if	is_user_context	(/;"	f
autoColor	data/bpe_corpus_raw/train.py	/^utf-8	def	autoColor	(	self	,	painter	,	dataindex	=	0	)	:	\\n	    	return	painter	.	docColorAuto	/;"	f
autoColor	data/data_raw/train.py	/^utf-8	def	autoColor	(	self	,	painter	,	dataindex	=	0	)	:	\\n	    	return	painter	.	docColorAuto	/;"	f
auto_set_font_size	data/bpe_corpus_raw/valid.py	/^utf-8	def	auto_set_font_size	(	self	,	value	=	True	)	:	\\n	    	self	.	_autoFontsize	=	value	\\n/;"	f
auto_set_font_size	data/data_raw/valid.py	/^utf-8	def	auto_set_font_size	(	self	,	value	=	True	)	:	\\n	    	self	.	_autoFontsize	=	value	\\n/;"	f
auto_wrap_for_ansi	data/bpe_corpus_raw/valid.py	/^utf-8	def	auto_wrap_for_ansi	(	stream	,	color	=	None	)	:	\\n	    	try	:	\\n	        	cached	=	_a/;"	f
auto_wrap_for_ansi	data/data_raw/valid.py	/^utf-8	def	auto_wrap_for_ansi	(	stream	,	color	=	None	)	:	\\n	    	try	:	\\n	        	cached	=	_a/;"	f
autoscale_view	data/bpe_corpus_raw/valid.py	/^utf-8	def	autoscale_view	(	self	,	tight	=	None	,	scalex	=	True	,	scaley	=	True	,	scalez	=	True	)/;"	f
autoscale_view	data/data_raw/valid.py	/^utf-8	def	autoscale_view	(	self	,	tight	=	None	,	scalex	=	True	,	scaley	=	True	,	scalez	=	True	)/;"	f
average_f1	data/bpe_corpus_raw/valid.py	/^utf-8	def	average_f1	(	self	,	mode	=	LABELED	)	:	\\n	    	return	float	(	self	.	evaluators	[	mod/;"	f
average_f1	data/data_raw/valid.py	/^utf-8	def	average_f1	(	self	,	mode	=	LABELED	)	:	\\n	    	return	float	(	self	.	evaluators	[	mod/;"	f
axmlprinter2	data/bpe_corpus_raw/valid.py	/^utf-8	def	axmlprinter2	(	manifest_file_name	,	out_file_name	)	:	\\n	    	axmlprinter2_path	=	'%s/;"	f
axmlprinter2	data/data_raw/valid.py	/^utf-8	def	axmlprinter2	(	manifest_file_name	,	out_file_name	)	:	\\n	    	axmlprinter2_path	=	'%s/;"	f
b	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	b	(	self	)	:	\\n	    	return	self	[	'b'	]	\\n		$/;"	f
b	data/bpe_corpus_raw/valid.py	/^utf-8	def	f7	(	)	:	\\n	\\n	    	def	b	(	)	:	\\n	        	"""McCabe rating: 2"""	\\n	\\n	def	c	(	/;"	f	function:f7	file:
b	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	b	(	self	)	:	\\n	    	return	self	[	'b'	]	\\n		$/;"	f
b	data/data_raw/valid.py	/^utf-8	def	f7	(	)	:	\\n	\\n	    	def	b	(	)	:	\\n	        	"""McCabe rating: 2"""	\\n	\\n	def	c	(	/;"	f	function:f7	file:
b16decode	data/bpe_corpus_raw/test.py	/^utf-8	def	b16decode	(	s	,	casefold	=	False	)	:	\\n	    	s	=	_bytes_from_decode_data	(	s	)	\\n	if/;"	f
b16decode	data/data_raw/test.py	/^utf-8	def	b16decode	(	s	,	casefold	=	False	)	:	\\n	    	s	=	_bytes_from_decode_data	(	s	)	\\n	if/;"	f
backward	data/bpe_corpus_raw/train.py	/^utf-8	def	backward	(	self	,	input	,	target	)	:	\\n	    	jinput	,	input_is_table	=	Layer	.	check_/;"	f
backward	data/data_raw/train.py	/^utf-8	def	backward	(	self	,	input	,	target	)	:	\\n	    	jinput	,	input_is_table	=	Layer	.	check_/;"	f
backwards	data/bpe_corpus_raw/train.py	/^utf-8	def	backwards	(	self	,	orm	)	:	\\n	$/;"	f
backwards	data/bpe_corpus_raw/valid.py	/^utf-8	def	backwards	(	self	,	orm	)	:	\\n	$/;"	f
backwards	data/data_raw/train.py	/^utf-8	def	backwards	(	self	,	orm	)	:	\\n	$/;"	f
backwards	data/data_raw/valid.py	/^utf-8	def	backwards	(	self	,	orm	)	:	\\n	$/;"	f
bad_request	data/bpe_corpus_raw/valid.py	/^utf-8	def	bad_request	(	req	,	resp	,	**	kwargs	)	:	\\n	    	resp	.	status	=	HTTP_400	\\n		$/;"	f
bad_request	data/data_raw/valid.py	/^utf-8	def	bad_request	(	req	,	resp	,	**	kwargs	)	:	\\n	    	resp	.	status	=	HTTP_400	\\n		$/;"	f
bad_view	data/bpe_corpus_raw/valid.py	/^utf-8	def	bad_view	(	request	)	:	\\n	    	return	HttpResponseNotFound	(	\\n	'Not found!. This pa/;"	f
bad_view	data/data_raw/valid.py	/^utf-8	def	bad_view	(	request	)	:	\\n	    	return	HttpResponseNotFound	(	\\n	'Not found!. This pa/;"	f
bake	data/bpe_corpus_raw/valid.py	/^utf-8	def	bake	(	self	)	:	\\n	    	options	=	self	.	options	\\n	default_exclude_list	=	options	./;"	f
bake	data/data_raw/valid.py	/^utf-8	def	bake	(	self	)	:	\\n	    	options	=	self	.	options	\\n	default_exclude_list	=	options	./;"	f
balance	data/bpe_corpus_raw/valid.py	/^utf-8	def	balance	(	MultiCol	)	:	\\n	    	list_of_output	=	[	]	\\n	bracket_count	=	1	\\n	for	cha/;"	f
balance	data/data_raw/valid.py	/^utf-8	def	balance	(	MultiCol	)	:	\\n	    	list_of_output	=	[	]	\\n	bracket_count	=	1	\\n	for	cha/;"	f
barchart	data/bpe_corpus_raw/train.py	/^utf-8	def	barchart	(	height	,	interval	=	0.5	,	width	=	0.4	,	ax	=	None	,	errors	=	None	,	\\n	col/;"	f
barchart	data/data_raw/train.py	/^utf-8	def	barchart	(	height	,	interval	=	0.5	,	width	=	0.4	,	ax	=	None	,	errors	=	None	,	\\n	col/;"	f
barycentric_coors	data/bpe_corpus_raw/valid.py	/^utf-8	def	barycentric_coors	(	coors	,	s_coors	)	:	\\n	    	n_v	,	dim	=	s_coors	.	shape	\\n	n_c	,/;"	f
barycentric_coors	data/data_raw/valid.py	/^utf-8	def	barycentric_coors	(	coors	,	s_coors	)	:	\\n	    	n_v	,	dim	=	s_coors	.	shape	\\n	n_c	,/;"	f
base2str	data/bpe_corpus_raw/train.py	/^utf-8	def	base2str	(	self	,	int_number	)	:	\\n	    	return	self	.	format_base	%	(	float	(	int_nu/;"	f
base2str	data/data_raw/train.py	/^utf-8	def	base2str	(	self	,	int_number	)	:	\\n	    	return	self	.	format_base	%	(	float	(	int_nu/;"	f
base64_url_decode_php_style	data/bpe_corpus_raw/valid.py	/^utf-8	def	base64_url_decode_php_style	(	inp	)	:	\\n	    	import	base64	\\n	padding_factor	=	(	4	/;"	f
base64_url_decode_php_style	data/data_raw/valid.py	/^utf-8	def	base64_url_decode_php_style	(	inp	)	:	\\n	    	import	base64	\\n	padding_factor	=	(	4	/;"	f
base_dir	data_utils/downloaded_repos.py	/^base_dir = os.path.expanduser("~\/ext\/repos")$/;"	v
base_extend	data/bpe_corpus_raw/valid.py	/^utf-8	def	base_extend	(	self	,	R	)	:	\\n	    	if	R	.	has_coerce_map_from	(	self	.	base_ring	(	)	/;"	f
base_extend	data/data_raw/valid.py	/^utf-8	def	base_extend	(	self	,	R	)	:	\\n	    	if	R	.	has_coerce_map_from	(	self	.	base_ring	(	)	/;"	f
base_repr	data/bpe_corpus_raw/test.py	/^utf-8	def	base_repr	(	number	,	base	=	2	,	padding	=	0	)	:	\\n	    	digits	=	'0123456789ABCDEFGHI/;"	f
base_repr	data/data_raw/test.py	/^utf-8	def	base_repr	(	number	,	base	=	2	,	padding	=	0	)	:	\\n	    	digits	=	'0123456789ABCDEFGHI/;"	f
base_url	data/bpe_corpus_raw/valid.py	/^utf-8	@	cached_property	\\n	def	base_url	(	self	)	:	\\n	    	return	get_current_url	(	self	.	env/;"	f
base_url	data/data_raw/valid.py	/^utf-8	@	cached_property	\\n	def	base_url	(	self	)	:	\\n	    	return	get_current_url	(	self	.	env/;"	f
basiclemma	data/bpe_corpus_raw/valid.py	/^utf-8	def	basiclemma	(	self	,	M	)	:	\\n	    	a	=	self	(	self	.	basiclemmavec	(	M	)	)	\\n	assert	/;"	f
basiclemma	data/data_raw/valid.py	/^utf-8	def	basiclemma	(	self	,	M	)	:	\\n	    	a	=	self	(	self	.	basiclemmavec	(	M	)	)	\\n	assert	/;"	f
batch_ndim_dense	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	batch_ndim_dense	(	self	)	:	\\n	    	if	self	.	sparse	:	\\n	        	re/;"	f
batch_ndim_dense	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	batch_ndim_dense	(	self	)	:	\\n	    	if	self	.	sparse	:	\\n	        	re/;"	f
beforeFirstEvent	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_interactionBetweenDifferentEvents	(	self	)	:	\\n	    	events	=	[	]	\\n	firstEvent/;"	f	function:test_interactionBetweenDifferentEvents	file:
beforeFirstEvent	data/data_raw/valid.py	/^utf-8	def	test_interactionBetweenDifferentEvents	(	self	)	:	\\n	    	events	=	[	]	\\n	firstEvent/;"	f	function:test_interactionBetweenDifferentEvents	file:
beforeSecondEvent	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_interactionBetweenDifferentEvents	(	self	)	:	\\n	    	events	=	[	]	\\n	firstEvent/;"	f	function:test_interactionBetweenDifferentEvents.beforeFirstEvent.afterFirstEvent	file:
beforeSecondEvent	data/data_raw/valid.py	/^utf-8	def	test_interactionBetweenDifferentEvents	(	self	)	:	\\n	    	events	=	[	]	\\n	firstEvent/;"	f	function:test_interactionBetweenDifferentEvents.beforeFirstEvent.afterFirstEvent	file:
before_mapper_configured	data/bpe_corpus_raw/train.py	/^utf-8	def	before_mapper_configured	(	self	,	mapper	,	class_	)	:	\\n	$/;"	f
before_mapper_configured	data/data_raw/train.py	/^utf-8	def	before_mapper_configured	(	self	,	mapper	,	class_	)	:	\\n	$/;"	f
before_run	data/bpe_corpus_raw/train.py	/^utf-8	def	before_run	(	self	,	run_context	)	:	\\n	    	return	None	\\n		$/;"	f
before_run	data/data_raw/train.py	/^utf-8	def	before_run	(	self	,	run_context	)	:	\\n	    	return	None	\\n		$/;"	f
best_mask_pattern	data/bpe_corpus_raw/train.py	/^utf-8	def	best_mask_pattern	(	self	)	:	\\n	    	min_lost_point	=	0	\\n	pattern	=	0	\\n	for	i	in	/;"	f
best_mask_pattern	data/data_raw/train.py	/^utf-8	def	best_mask_pattern	(	self	)	:	\\n	    	min_lost_point	=	0	\\n	pattern	=	0	\\n	for	i	in	/;"	f
bestrelpath	data/bpe_corpus_raw/train.py	/^utf-8	def	bestrelpath	(	self	,	dest	)	:	\\n	    	try	:	\\n	        	if	self	==	dest	:	\\n	      /;"	f
bestrelpath	data/data_raw/train.py	/^utf-8	def	bestrelpath	(	self	,	dest	)	:	\\n	    	try	:	\\n	        	if	self	==	dest	:	\\n	      /;"	f
between	data/bpe_corpus_raw/valid.py	/^utf-8	def	between	(	self	,	minimum	:	int	=	1	,	maximum	:	int	=	1000	)	->	int	:	\\n	    	return	s/;"	f
between	data/data_raw/valid.py	/^utf-8	def	between	(	self	,	minimum	:	int	=	1	,	maximum	:	int	=	1000	)	->	int	:	\\n	    	return	s/;"	f
bfmi	data/bpe_corpus_raw/valid.py	/^utf-8	def	bfmi	(	energy	)	:	\\n	    	energy_mat	=	np	.	atleast_2d	(	energy	)	\\n	num	=	np	.	squa/;"	f
bfmi	data/data_raw/valid.py	/^utf-8	def	bfmi	(	energy	)	:	\\n	    	energy_mat	=	np	.	atleast_2d	(	energy	)	\\n	num	=	np	.	squa/;"	f
bfs	data/bpe_corpus_raw/valid.py	/^utf-8	def	bfs	(	self	)	:	\\n	    	parents	=	{	}	\\n	to_visit	=	queue	.	Queue	(	)	\\n	to_visit	.	/;"	f
bfs	data/data_raw/valid.py	/^utf-8	def	bfs	(	self	)	:	\\n	    	parents	=	{	}	\\n	to_visit	=	queue	.	Queue	(	)	\\n	to_visit	.	/;"	f
binarize	models/preprocess.py	/^def binarize(args, filename, vocab, output_prefix, lang, offset, end, append_eos=True):$/;"	f
binary_repr	data/bpe_corpus_raw/valid.py	/^utf-8	@	set_module	(	'numpy'	)	\\n	def	binary_repr	(	num	,	width	=	None	)	:	\\n	\\n	    	def	war/;"	f
binary_repr	data/data_raw/valid.py	/^utf-8	@	set_module	(	'numpy'	)	\\n	def	binary_repr	(	num	,	width	=	None	)	:	\\n	\\n	    	def	war/;"	f
bind_partial	data/bpe_corpus_raw/test.py	/^utf-8	def	bind_partial	(	__bind_self	,	*	args	,	**	kwargs	)	:	\\n	    	return	__bind_self	.	_bin/;"	f
bind_partial	data/data_raw/test.py	/^utf-8	def	bind_partial	(	__bind_self	,	*	args	,	**	kwargs	)	:	\\n	    	return	__bind_self	.	_bin/;"	f
bind_to_listboxes	data/bpe_corpus_raw/valid.py	/^utf-8	def	bind_to_listboxes	(	self	,	sequence	=	None	,	func	=	None	,	add	=	None	)	:	\\n	    	ret/;"	f
bind_to_listboxes	data/data_raw/valid.py	/^utf-8	def	bind_to_listboxes	(	self	,	sequence	=	None	,	func	=	None	,	add	=	None	)	:	\\n	    	ret/;"	f
binomial	data/bpe_corpus_raw/test.py	/^utf-8	def	binomial	(	x	,	m	,	**	kwds	)	:	\\n	    	try	:	\\n	        	m	=	ZZ	(	m	)	\\n		except	Ty/;"	f
binomial	data/data_raw/test.py	/^utf-8	def	binomial	(	x	,	m	,	**	kwds	)	:	\\n	    	try	:	\\n	        	m	=	ZZ	(	m	)	\\n		except	Ty/;"	f
bisect_right	data/bpe_corpus_raw/valid.py	/^utf-8	def	bisect_right	(	a	,	x	,	lo	=	0	,	hi	=	None	)	:	\\n	    	if	lo	<	0	:	\\n	        	raise	/;"	f
bisect_right	data/data_raw/valid.py	/^utf-8	def	bisect_right	(	a	,	x	,	lo	=	0	,	hi	=	None	)	:	\\n	    	if	lo	<	0	:	\\n	        	raise	/;"	f
bitname	data/bpe_corpus_raw/valid.py	/^utf-8	def	bitname	(	obj	)	:	\\n	    	name	=	obj	.	__name__	\\n	base	=	''	\\n	char	=	''	\\n	try	:/;"	f
bitname	data/data_raw/valid.py	/^utf-8	def	bitname	(	obj	)	:	\\n	    	name	=	obj	.	__name__	\\n	base	=	''	\\n	char	=	''	\\n	try	:/;"	f
bitwise_xor	data/bpe_corpus_raw/train.py	/^utf-8	def	bitwise_xor	(	x	,	y	,	name	=	None	)	:	\\n	    	_ctx	=	_context	.	context	(	)	\\n	if	_c/;"	f
bitwise_xor	data/data_raw/train.py	/^utf-8	def	bitwise_xor	(	x	,	y	,	name	=	None	)	:	\\n	    	_ctx	=	_context	.	context	(	)	\\n	if	_c/;"	f
blind	data/bpe_corpus_raw/valid.py	/^utf-8	def	blind	(	self	,	message	,	r	)	:	\\n	    	return	message	*	pow	(	r	,	self	.	e	,	self	.	n/;"	f
blind	data/data_raw/valid.py	/^utf-8	def	blind	(	self	,	message	,	r	)	:	\\n	    	return	message	*	pow	(	r	,	self	.	e	,	self	.	n/;"	f
block_format	data/bpe_corpus_raw/valid.py	/^utf-8	def	block_format	(	self	,	problem	,	constraints	,	exp_cone_order	=	None	)	:	\\n	    	if	no/;"	f
block_format	data/data_raw/valid.py	/^utf-8	def	block_format	(	self	,	problem	,	constraints	,	exp_cone_order	=	None	)	:	\\n	    	if	no/;"	f
blocked_diag_product	data/bpe_corpus_raw/valid.py	/^utf-8	def	blocked_diag_product	(	x	,	s	)	:	\\n	    	k	=	len	(	x	)	\\n	out	=	[	]	\\n	for	i	in	ran/;"	f
blocked_diag_product	data/data_raw/valid.py	/^utf-8	def	blocked_diag_product	(	x	,	s	)	:	\\n	    	k	=	len	(	x	)	\\n	out	=	[	]	\\n	for	i	in	ran/;"	f
body_quopri_len	data/bpe_corpus_raw/train.py	/^utf-8	def	body_quopri_len	(	str	)	:	\\n	    	count	=	0	\\n	for	c	in	str	:	\\n	        	if	bqre	./;"	f
body_quopri_len	data/data_raw/train.py	/^utf-8	def	body_quopri_len	(	str	)	:	\\n	    	count	=	0	\\n	for	c	in	str	:	\\n	        	if	bqre	./;"	f
boolEqual	data/bpe_corpus_raw/train.py	/^utf-8	def	boolEqual	(	a	,	b	)	:	\\n	    	return	a	and	b	or	not	(	a	or	b	)	\\n		$/;"	f
boolEqual	data/data_raw/train.py	/^utf-8	def	boolEqual	(	a	,	b	)	:	\\n	    	return	a	and	b	or	not	(	a	or	b	)	\\n		$/;"	f
bootstrap_p2p	data/bpe_corpus_raw/valid.py	/^utf-8	def	bootstrap_p2p	(	self	)	:	\\n	    	self	.	nodes	[	0	]	.	add_p2p_connection	(	P2PDataSto/;"	f
bootstrap_p2p	data/data_raw/valid.py	/^utf-8	def	bootstrap_p2p	(	self	)	:	\\n	    	self	.	nodes	[	0	]	.	add_p2p_connection	(	P2PDataSto/;"	f
boundary	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	boundary	(	self	)	:	\\n	    	return	self	.	_geomgen	(	capi	.	get_bounda/;"	f
boundary	data/data_raw/train.py	/^utf-8	@	property	\\n	def	boundary	(	self	)	:	\\n	    	return	self	.	_geomgen	(	capi	.	get_bounda/;"	f
br_get_header_wrap	data/bpe_corpus_raw/test.py	/^utf-8	def	init_brpy	(	br_loc	=	'\/usr\/local\/lib'	)	:	\\n	    	lib_path	=	os	.	environ	.	get	(	/;"	f	function:init_brpy.br_initialize_wrap.call_func	file:
br_get_header_wrap	data/data_raw/test.py	/^utf-8	def	init_brpy	(	br_loc	=	'\/usr\/local\/lib'	)	:	\\n	    	lib_path	=	os	.	environ	.	get	(	/;"	f	function:init_brpy.br_initialize_wrap.call_func	file:
br_initialize_wrap	data/bpe_corpus_raw/test.py	/^utf-8	def	init_brpy	(	br_loc	=	'\/usr\/local\/lib'	)	:	\\n	    	lib_path	=	os	.	environ	.	get	(	/;"	f	function:init_brpy	file:
br_initialize_wrap	data/data_raw/test.py	/^utf-8	def	init_brpy	(	br_loc	=	'\/usr\/local\/lib'	)	:	\\n	    	lib_path	=	os	.	environ	.	get	(	/;"	f	function:init_brpy	file:
bracket_split	data/bpe_corpus_raw/train.py	/^utf-8	def	bracket_split	(	source	,	brackets	=	(	'()'	,	'{}'	,	'[]'	)	,	strip	=	False	)	:	\\n	   /;"	f
bracket_split	data/data_raw/train.py	/^utf-8	def	bracket_split	(	source	,	brackets	=	(	'()'	,	'{}'	,	'[]'	)	,	strip	=	False	)	:	\\n	   /;"	f
breaker	data/bpe_corpus_raw/valid.py	/^utf-8	def	setBreak	(	self	,	breakFlag	=	True	)	:	\\n	    	if	breakFlag	:	\\n	        	_parseMeth/;"	f	function:setBreak	file:
breaker	data/data_raw/valid.py	/^utf-8	def	setBreak	(	self	,	breakFlag	=	True	)	:	\\n	    	if	breakFlag	:	\\n	        	_parseMeth/;"	f	function:setBreak	file:
broadcast_comment	data/bpe_corpus_raw/valid.py	/^utf-8	def	broadcast_comment	(	self	,	broadcast_id	,	comment_text	)	:	\\n	    	broadcast_id	=	str/;"	f
broadcast_comment	data/data_raw/valid.py	/^utf-8	def	broadcast_comment	(	self	,	broadcast_id	,	comment_text	)	:	\\n	    	broadcast_id	=	str/;"	f
broadcast_like	data/bpe_corpus_raw/valid.py	/^utf-8	def	broadcast_like	(	value	,	template	,	fgraph	,	dtype	=	None	)	:	\\n	    	value	=	T	.	as_/;"	f
broadcast_like	data/data_raw/valid.py	/^utf-8	def	broadcast_like	(	value	,	template	,	fgraph	,	dtype	=	None	)	:	\\n	    	value	=	T	.	as_/;"	f
broadcast_shape	data/bpe_corpus_raw/train.py	/^utf-8	def	broadcast_shape	(	shape_x	,	shape_y	)	:	\\n	    	if	shape_x	.	ndims	is	None	or	shape_y/;"	f
broadcast_shape	data/data_raw/train.py	/^utf-8	def	broadcast_shape	(	shape_x	,	shape_y	)	:	\\n	    	if	shape_x	.	ndims	is	None	or	shape_y/;"	f
brpop	data/bpe_corpus_raw/train.py	/^utf-8	def	brpop	(	self	,	keys	,	timeout	=	0	)	:	\\n	    	if	timeout	is	None	:	\\n	        	timeo/;"	f
brpop	data/data_raw/train.py	/^utf-8	def	brpop	(	self	,	keys	,	timeout	=	0	)	:	\\n	    	if	timeout	is	None	:	\\n	        	timeo/;"	f
bsdf_all_csv	data/bpe_corpus_raw/valid.py	/^utf-8	def	bsdf_all_csv	(	request	,	v	)	:	\\n	    	if	v	not	in	BSDF_VERSIONS	:	\\n	        	raise/;"	f
bsdf_all_csv	data/data_raw/valid.py	/^utf-8	def	bsdf_all_csv	(	request	,	v	)	:	\\n	    	if	v	not	in	BSDF_VERSIONS	:	\\n	        	raise/;"	f
bspline_basis	data/bpe_corpus_raw/valid.py	/^utf-8	@	lru_cache	(	maxsize	=	128	)	\\n	def	bspline_basis	(	d	,	knots	,	n	,	x	)	:	\\n	    	knots/;"	f
bspline_basis	data/data_raw/valid.py	/^utf-8	@	lru_cache	(	maxsize	=	128	)	\\n	def	bspline_basis	(	d	,	knots	,	n	,	x	)	:	\\n	    	knots/;"	f
build	data/bpe_corpus_raw/test.py	/^utf-8	def	build	(	self	,	limit_states	,	discretization	,	steps_per_interval	)	:	\\n	    	new	=	c/;"	f
build	data/data_raw/test.py	/^utf-8	def	build	(	self	,	limit_states	,	discretization	,	steps_per_interval	)	:	\\n	    	new	=	c/;"	f
build_all_taup_models	data/bpe_corpus_raw/train.py	/^utf-8	def	build_all_taup_models	(	)	:	\\n	    	for	model	in	get_builtin_model_files	(	)	:	\\n	  /;"	f
build_all_taup_models	data/data_raw/train.py	/^utf-8	def	build_all_taup_models	(	)	:	\\n	    	for	model	in	get_builtin_model_files	(	)	:	\\n	  /;"	f
build_calling_regions	data/bpe_corpus_raw/valid.py	/^utf-8	def	build_calling_regions	(	contigs	,	regions_to_include	,	regions_to_exclude	)	:	\\n	    /;"	f
build_calling_regions	data/data_raw/valid.py	/^utf-8	def	build_calling_regions	(	contigs	,	regions_to_include	,	regions_to_exclude	)	:	\\n	    /;"	f
build_dict	data/bpe_corpus_raw/valid.py	/^utf-8	def	build_dict	(	column_num	=	2	,	min_word_freq	=	0	,	train_dir	=	''	,	test_dir	=	''	)	:	\\/;"	f
build_dict	data/data_raw/valid.py	/^utf-8	def	build_dict	(	column_num	=	2	,	min_word_freq	=	0	,	train_dir	=	''	,	test_dir	=	''	)	:	\\/;"	f
build_dictionary	models/preprocess.py	/^    def build_dictionary(filenames, src=False, tgt=False):$/;"	f	function:main	file:
build_evaluation	data/bpe_corpus_raw/valid.py	/^utf-8	def	build_evaluation	(	resource_id	,	compliance_type	,	event	,	resource_type	=	\\n	DEFAULT/;"	f
build_evaluation	data/data_raw/valid.py	/^utf-8	def	build_evaluation	(	resource_id	,	compliance_type	,	event	,	resource_type	=	\\n	DEFAULT/;"	f
build_evaluation_from_config_item	data/bpe_corpus_raw/test.py	/^utf-8	def	build_evaluation_from_config_item	(	configuration_item	,	compliance_type	,	\\n	annotat/;"	f
build_evaluation_from_config_item	data/data_raw/test.py	/^utf-8	def	build_evaluation_from_config_item	(	configuration_item	,	compliance_type	,	\\n	annotat/;"	f
build_experiment	data/bpe_corpus_raw/valid.py	/^utf-8	def	build_experiment	(	self	,	batch_size	,	classes_per_set	,	samples_per_class	,	\\n	fce	,/;"	f
build_experiment	data/data_raw/valid.py	/^utf-8	def	build_experiment	(	self	,	batch_size	,	classes_per_set	,	samples_per_class	,	\\n	fce	,/;"	f
build_gui	data/bpe_corpus_raw/valid.py	/^utf-8	def	build_gui	(	self	,	container	)	:	\\n	    	top	=	Widgets	.	VBox	(	)	\\n	top	.	set_borde/;"	f
build_gui	data/data_raw/valid.py	/^utf-8	def	build_gui	(	self	,	container	)	:	\\n	    	top	=	Widgets	.	VBox	(	)	\\n	top	.	set_borde/;"	f
build_inference_graph	data/bpe_corpus_raw/valid.py	/^utf-8	def	build_inference_graph	(	hypes	,	modules	,	image	)	:	\\n	    	with	tf	.	name_scope	(	'V/;"	f
build_inference_graph	data/data_raw/valid.py	/^utf-8	def	build_inference_graph	(	hypes	,	modules	,	image	)	:	\\n	    	with	tf	.	name_scope	(	'V/;"	f
build_loss_maps	data/bpe_corpus_raw/valid.py	/^utf-8	def	build_loss_maps	(	self	,	losses	,	clp	,	stats	=	(	)	)	:	\\n	    	array	=	numpy	.	zeros/;"	f
build_loss_maps	data/data_raw/valid.py	/^utf-8	def	build_loss_maps	(	self	,	losses	,	clp	,	stats	=	(	)	)	:	\\n	    	array	=	numpy	.	zeros/;"	f
build_map_centroidal_result	data/bpe_corpus_raw/valid.py	/^utf-8	def	build_map_centroidal_result	(	model	)	:	\\n	    	if	hasattr	(	model	,	'map_centroidal_/;"	f
build_map_centroidal_result	data/data_raw/valid.py	/^utf-8	def	build_map_centroidal_result	(	model	)	:	\\n	    	if	hasattr	(	model	,	'map_centroidal_/;"	f
build_model	data/bpe_corpus_raw/train.py	/^utf-8	def	build_model	(	self	)	:	\\n	    	shapes	=	OrderedDict	(	)	\\n	denormalized	=	{	'type'	:/;"	f
build_model	data/bpe_corpus_raw/valid.py	/^utf-8	@	zs	.	meta_bayesian_net	(	scope	=	'model'	,	reuse_variables	=	True	)	\\n	def	build_model	/;"	f
build_model	data/data_raw/train.py	/^utf-8	def	build_model	(	self	)	:	\\n	    	shapes	=	OrderedDict	(	)	\\n	denormalized	=	{	'type'	:/;"	f
build_model	data/data_raw/valid.py	/^utf-8	@	zs	.	meta_bayesian_net	(	scope	=	'model'	,	reuse_variables	=	True	)	\\n	def	build_model	/;"	f
build_model	models/seq2seq.py	/^    def build_model(cls, args, task):$/;"	m	class:Seq2SeqModel
build_object_filter	data/bpe_corpus_raw/train.py	/^utf-8	def	build_object_filter	(	property_collector	,	managed_object	)	:	\\n	    	filter_spec	=	_/;"	f
build_object_filter	data/data_raw/train.py	/^utf-8	def	build_object_filter	(	property_collector	,	managed_object	)	:	\\n	    	filter_spec	=	_/;"	f
build_op	data/bpe_corpus_raw/train.py	/^utf-8	def	with_space_to_batch	(	input	,	dilation_rate	,	padding	,	op	,	filter_shape	=	\\n	None	,/;"	f	function:with_space_to_batch	file:
build_op	data/data_raw/train.py	/^utf-8	def	with_space_to_batch	(	input	,	dilation_rate	,	padding	,	op	,	filter_shape	=	\\n	None	,/;"	f	function:with_space_to_batch	file:
build_package_data	data/bpe_corpus_raw/train.py	/^utf-8	def	build_package_data	(	self	)	:	\\n	    	for	package	,	src_dir	,	build_dir	,	filenames	i/;"	f
build_package_data	data/data_raw/train.py	/^utf-8	def	build_package_data	(	self	)	:	\\n	    	for	package	,	src_dir	,	build_dir	,	filenames	i/;"	f
build_url	data/bpe_corpus_raw/valid.py	/^utf-8	def	build_url	(	request	,	name	,	api_version	,	**	kwargs	)	:	\\n	    	kwargs	[	'api_versio/;"	f
build_url	data/data_raw/valid.py	/^utf-8	def	build_url	(	request	,	name	,	api_version	,	**	kwargs	)	:	\\n	    	kwargs	[	'api_versio/;"	f
build_vocab	data/bpe_corpus_raw/valid.py	/^utf-8	def	build_vocab	(	sentences	)	:	\\n	    	word_counts	=	Counter	(	itertools	.	chain	(	*	sen/;"	f
build_vocab	data/data_raw/valid.py	/^utf-8	def	build_vocab	(	sentences	)	:	\\n	    	word_counts	=	Counter	(	itertools	.	chain	(	*	sen/;"	f
bulk_insert_mappings	data/bpe_corpus_raw/train.py	/^utf-8	def	bulk_insert_mappings	(	self	,	mapper	,	mappings	,	return_defaults	=	False	,	\\n	render/;"	f
bulk_insert_mappings	data/data_raw/train.py	/^utf-8	def	bulk_insert_mappings	(	self	,	mapper	,	mappings	,	return_defaults	=	False	,	\\n	render/;"	f
button1	data/bpe_corpus_raw/test.py	/^utf-8	def	button1	(	self	,	event	)	:	\\n	    	self	.	mouseTool	.	button1	(	event	)	\\n		$/;"	f
button1	data/data_raw/test.py	/^utf-8	def	button1	(	self	,	event	)	:	\\n	    	self	.	mouseTool	.	button1	(	event	)	\\n		$/;"	f
buy_market	data/bpe_corpus_raw/valid.py	/^utf-8	def	buy_market	(	self	,	quantity	,	**	kwargs	)	:	\\n	    	kwargs	[	'limit_price'	]	=	0	\\n/;"	f
buy_market	data/data_raw/valid.py	/^utf-8	def	buy_market	(	self	,	quantity	,	**	kwargs	)	:	\\n	    	kwargs	[	'limit_price'	]	=	0	\\n/;"	f
bwamem_idxstats	data/bpe_corpus_raw/train.py	/^utf-8	def	bwamem_idxstats	(	inBam	,	refFasta	,	outBam	=	None	,	outStats	=	None	,	\\n	min_score_t/;"	f
bwamem_idxstats	data/data_raw/train.py	/^utf-8	def	bwamem_idxstats	(	inBam	,	refFasta	,	outBam	=	None	,	outStats	=	None	,	\\n	min_score_t/;"	f
c	data/bpe_corpus_raw/valid.py	/^utf-8	def	f7	(	)	:	\\n	\\n	    	def	b	(	)	:	\\n	        	"""McCabe rating: 2"""	\\n	\\n	def	c	(	/;"	f	function:f7.b	file:
c	data/data_raw/valid.py	/^utf-8	def	f7	(	)	:	\\n	\\n	    	def	b	(	)	:	\\n	        	"""McCabe rating: 2"""	\\n	\\n	def	c	(	/;"	f	function:f7.b	file:
c_nodes	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	c_nodes	(	self	)	:	\\n	    	self	.	_compute_c_nodes	(	)	\\n	return	self/;"	f
c_nodes	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	c_nodes	(	self	)	:	\\n	    	self	.	_compute_c_nodes	(	)	\\n	return	self/;"	f
ca	data/bpe_corpus_raw/train.py	/^utf-8	@	experimental	(	as_of	=	'0.4.0'	)	\\n	def	ca	(	X	,	scaling	=	1	)	:	\\n	    	if	scaling	no/;"	f
ca	data/data_raw/train.py	/^utf-8	@	experimental	(	as_of	=	'0.4.0'	)	\\n	def	ca	(	X	,	scaling	=	1	)	:	\\n	    	if	scaling	no/;"	f
cache	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	cache	(	self	)	:	\\n	    	if	self	.	_cache	is	None	:	\\n	        	self	/;"	f
cache	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	cache	(	self	)	:	\\n	    	if	self	.	_cache	is	None	:	\\n	        	self	/;"	f
cache_activate	data/bpe_corpus_raw/test.py	/^utf-8	def	memoize_when_activated	(	fun	)	:	\\n	\\n	    	@	functools	.	wraps	(	fun	)	\\n	def	wrap/;"	f	function:memoize_when_activated.wrapper	file:
cache_activate	data/data_raw/test.py	/^utf-8	def	memoize_when_activated	(	fun	)	:	\\n	\\n	    	@	functools	.	wraps	(	fun	)	\\n	def	wrap/;"	f	function:memoize_when_activated.wrapper	file:
cache_deactivate	data/bpe_corpus_raw/test.py	/^utf-8	def	memoize_when_activated	(	fun	)	:	\\n	\\n	    	@	functools	.	wraps	(	fun	)	\\n	def	wrap/;"	f	function:memoize_when_activated.wrapper.cache_activate	file:
cache_deactivate	data/data_raw/test.py	/^utf-8	def	memoize_when_activated	(	fun	)	:	\\n	\\n	    	@	functools	.	wraps	(	fun	)	\\n	def	wrap/;"	f	function:memoize_when_activated.wrapper.cache_activate	file:
cache_from_settings	data/bpe_corpus_raw/valid.py	/^utf-8	def	cache_from_settings	(	accessor	,	settings	,	name	=	None	)	:	\\n	    	settings	=	bg_set/;"	f
cache_from_settings	data/data_raw/valid.py	/^utf-8	def	cache_from_settings	(	accessor	,	settings	,	name	=	None	)	:	\\n	    	settings	=	bg_set/;"	f
cached_find_executable	data/bpe_corpus_raw/valid.py	/^utf-8	def	find_executables	(	self	)	:	\\n	    	assert	self	.	_is_customised	\\n	exe_cache	=	self/;"	f	function:find_executables	file:
cached_find_executable	data/data_raw/valid.py	/^utf-8	def	find_executables	(	self	)	:	\\n	    	assert	self	.	_is_customised	\\n	exe_cache	=	self/;"	f	function:find_executables	file:
calc_check_digit	data/bpe_corpus_raw/valid.py	/^utf-8	def	calc_check_digit	(	number	)	:	\\n	    	check	=	(	11	-	sum	(	(	8	-	i	)	*	int	(	n	)	for	/;"	f
calc_check_digit	data/data_raw/valid.py	/^utf-8	def	calc_check_digit	(	number	)	:	\\n	    	check	=	(	11	-	sum	(	(	8	-	i	)	*	int	(	n	)	for	/;"	f
calc_suffix	data/bpe_corpus_raw/valid.py	/^utf-8	def	calc_suffix	(	_str	,	n	)	:	\\n	    	if	len	(	_str	)	<=	n	:	\\n	        	return	_str	\\/;"	f
calc_suffix	data/data_raw/valid.py	/^utf-8	def	calc_suffix	(	_str	,	n	)	:	\\n	    	if	len	(	_str	)	<=	n	:	\\n	        	return	_str	\\/;"	f
calculate	data/bpe_corpus_raw/train.py	/^utf-8	def	calculate	(	self	,	wordVector	)	:	\\n	    	resultDic	=	{	}	\\n	for	web	,	value	in	word/;"	f
calculate	data/bpe_corpus_raw/valid.py	/^utf-8	def	calculate	(	self	,	op2_model	,	subcase_id	)	:	\\n	    	try	:	\\n	        	get	=	self	./;"	f
calculate	data/data_raw/train.py	/^utf-8	def	calculate	(	self	,	wordVector	)	:	\\n	    	resultDic	=	{	}	\\n	for	web	,	value	in	word/;"	f
calculate	data/data_raw/valid.py	/^utf-8	def	calculate	(	self	,	op2_model	,	subcase_id	)	:	\\n	    	try	:	\\n	        	get	=	self	./;"	f
calculate_dimension	data/bpe_corpus_raw/train.py	/^utf-8	def	calculate_dimension	(	self	)	:	\\n	    	return	'A1:%s%d'	%	(	get_column_letter	(	self	/;"	f
calculate_dimension	data/data_raw/train.py	/^utf-8	def	calculate_dimension	(	self	)	:	\\n	    	return	'A1:%s%d'	%	(	get_column_letter	(	self	/;"	f
calculate_orbit	data/bpe_corpus_raw/valid.py	/^utf-8	def	calculate_orbit	(	self	,	primary	=	None	,	G	=	None	)	:	\\n	    	if	not	self	.	_sim	:	\\/;"	f
calculate_orbit	data/data_raw/valid.py	/^utf-8	def	calculate_orbit	(	self	,	primary	=	None	,	G	=	None	)	:	\\n	    	if	not	self	.	_sim	:	\\/;"	f
calculate_row_status	data/bpe_corpus_raw/valid.py	/^utf-8	def	calculate_row_status	(	self	,	statuses	)	:	\\n	    	values	=	statuses	.	values	(	)	\\n/;"	f
calculate_row_status	data/data_raw/valid.py	/^utf-8	def	calculate_row_status	(	self	,	statuses	)	:	\\n	    	values	=	statuses	.	values	(	)	\\n/;"	f
calibrated_linear_regressor	data/bpe_corpus_raw/test.py	/^utf-8	def	calibrated_linear_regressor	(	feature_columns	=	None	,	model_dir	=	None	,	\\n	quantile/;"	f
calibrated_linear_regressor	data/data_raw/test.py	/^utf-8	def	calibrated_linear_regressor	(	feature_columns	=	None	,	model_dir	=	None	,	\\n	quantile/;"	f
call	data/bpe_corpus_raw/valid.py	/^utf-8	def	call	(	self	,	method	,	**	kwargs	)	:	\\n	    	payload	=	SOAPpy	.	buildSOAP	(	method	=	/;"	f
call	data/data_raw/valid.py	/^utf-8	def	call	(	self	,	method	,	**	kwargs	)	:	\\n	    	payload	=	SOAPpy	.	buildSOAP	(	method	=	/;"	f
callGetConstPtr	data/bpe_corpus_raw/valid.py	/^utf-8	def	callGetConstPtr	(	self	)	:	\\n	    	return	ExprCall	(	ExprVar	(	self	.	getConstPtrName/;"	f
callGetConstPtr	data/data_raw/valid.py	/^utf-8	def	callGetConstPtr	(	self	)	:	\\n	    	return	ExprCall	(	ExprVar	(	self	.	getConstPtrName/;"	f
call_ck	data/bpe_corpus_raw/train.py	/^utf-8	def	call_ck	(	i	)	:	\\n	    	import	subprocess	\\n	import	re	\\n	action	=	i	.	get	(	'actio/;"	f
call_ck	data/data_raw/train.py	/^utf-8	def	call_ck	(	i	)	:	\\n	    	import	subprocess	\\n	import	re	\\n	action	=	i	.	get	(	'actio/;"	f
call_command	data/bpe_corpus_raw/valid.py	/^utf-8	def	call_command	(	self	,	user	,	channel	,	message	)	:	\\n	    	called_command	=	False	\\n/;"	f
call_command	data/data_raw/valid.py	/^utf-8	def	call_command	(	self	,	user	,	channel	,	message	)	:	\\n	    	called_command	=	False	\\n/;"	f
call_func	data/bpe_corpus_raw/test.py	/^utf-8	def	init_brpy	(	br_loc	=	'\/usr\/local\/lib'	)	:	\\n	    	lib_path	=	os	.	environ	.	get	(	/;"	f	function:init_brpy.br_initialize_wrap	file:
call_func	data/bpe_corpus_raw/test.py	/^utf-8	def	init_brpy	(	br_loc	=	'\/usr\/local\/lib'	)	:	\\n	    	lib_path	=	os	.	environ	.	get	(	/;"	f	function:init_brpy.br_initialize_wrap.call_func.br_get_header_wrap	file:
call_func	data/data_raw/test.py	/^utf-8	def	init_brpy	(	br_loc	=	'\/usr\/local\/lib'	)	:	\\n	    	lib_path	=	os	.	environ	.	get	(	/;"	f	function:init_brpy.br_initialize_wrap	file:
call_func	data/data_raw/test.py	/^utf-8	def	init_brpy	(	br_loc	=	'\/usr\/local\/lib'	)	:	\\n	    	lib_path	=	os	.	environ	.	get	(	/;"	f	function:init_brpy.br_initialize_wrap.call_func.br_get_header_wrap	file:
call_get	data/bpe_corpus_raw/valid.py	/^utf-8	def	call_get	(	self	,	service	,	params	=	None	)	:	\\n	    	url	=	self	.	build_url	(	servic/;"	f
call_get	data/data_raw/valid.py	/^utf-8	def	call_get	(	self	,	service	,	params	=	None	)	:	\\n	    	url	=	self	.	build_url	(	servic/;"	f
call_later	data/bpe_corpus_raw/train.py	/^utf-8	def	call_later	(	self	,	delay	,	callback	,	*	args	,	**	kwargs	)	:	\\n	    	return	self	.	c/;"	f
call_later	data/data_raw/train.py	/^utf-8	def	call_later	(	self	,	delay	,	callback	,	*	args	,	**	kwargs	)	:	\\n	    	return	self	.	c/;"	f
call_list	data/bpe_corpus_raw/valid.py	/^utf-8	def	call_list	(	self	)	:	\\n	    	vals	=	[	]	\\n	thing	=	self	\\n	while	thing	is	not	None	/;"	f
call_list	data/data_raw/valid.py	/^utf-8	def	call_list	(	self	)	:	\\n	    	vals	=	[	]	\\n	thing	=	self	\\n	while	thing	is	not	None	/;"	f
call_method	data/bpe_corpus_raw/train.py	/^utf-8	def	call_method	(	self	,	name	,	args	=	None	,	kwargs	=	None	,	dyn_args	=	None	,	\\n	dyn_kw/;"	f
call_method	data/data_raw/train.py	/^utf-8	def	call_method	(	self	,	name	,	args	=	None	,	kwargs	=	None	,	dyn_args	=	None	,	\\n	dyn_kw/;"	f
callback	data/bpe_corpus_raw/train.py	/^utf-8	def	parse_block_scalar_indent	(	token_class	)	:	\\n	\\n	    	def	callback	(	lexer	,	match	/;"	f	function:parse_block_scalar_indent	file:
callback	data/bpe_corpus_raw/train.py	/^utf-8	def	register	(	self	,	obj	,	resource	)	:	\\n	\\n	    	def	callback	(	ref	)	:	\\n	        	/;"	f	function:register	file:
callback	data/bpe_corpus_raw/valid.py	/^utf-8	def	make_callback_controls	(	self	,	v	,	control_name	,	control	)	:	\\n	    	assert	isinsta/;"	f	function:make_callback_controls	file:
callback	data/data_raw/train.py	/^utf-8	def	parse_block_scalar_indent	(	token_class	)	:	\\n	\\n	    	def	callback	(	lexer	,	match	/;"	f	function:parse_block_scalar_indent	file:
callback	data/data_raw/train.py	/^utf-8	def	register	(	self	,	obj	,	resource	)	:	\\n	\\n	    	def	callback	(	ref	)	:	\\n	        	/;"	f	function:register	file:
callback	data/data_raw/valid.py	/^utf-8	def	make_callback_controls	(	self	,	v	,	control_name	,	control	)	:	\\n	    	assert	isinsta/;"	f	function:make_callback_controls	file:
callbacks	data/bpe_corpus_raw/valid.py	/^utf-8	@	lazy_property	\\n	def	callbacks	(	self	)	:	\\n	    	return	CallbackHandler	(	self	)	\\n	/;"	f
callbacks	data/data_raw/valid.py	/^utf-8	@	lazy_property	\\n	def	callbacks	(	self	)	:	\\n	    	return	CallbackHandler	(	self	)	\\n	/;"	f
can_use_autofor	data/bpe_corpus_raw/valid.py	/^utf-8	def	can_use_autofor	(	self	,	node	)	:	\\n	    	auto_for	=	isinstance	(	node	.	target	,	ast/;"	f
can_use_autofor	data/data_raw/valid.py	/^utf-8	def	can_use_autofor	(	self	,	node	)	:	\\n	    	auto_for	=	isinstance	(	node	.	target	,	ast/;"	f
cancel	data/bpe_corpus_raw/train.py	/^utf-8	def	cancel	(	self	)	:	\\n	    	self	.	finished	.	set	(	)	\\n		$/;"	f
cancel	data/data_raw/train.py	/^utf-8	def	cancel	(	self	)	:	\\n	    	self	.	finished	.	set	(	)	\\n		$/;"	f
canonical_holder	data/bpe_corpus_raw/train.py	/^utf-8	def	canonical_holder	(	s	)	:	\\n	    	key	=	keep_only_chars	(	s	)	.	lower	(	)	\\n	cano	=	C/;"	f
canonical_holder	data/data_raw/train.py	/^utf-8	def	canonical_holder	(	s	)	:	\\n	    	key	=	keep_only_chars	(	s	)	.	lower	(	)	\\n	cano	=	C/;"	f
canonical_ipv6	data/bpe_corpus_raw/train.py	/^utf-8	def	host_addrinfo	(	host	=	None	,	socket_family	=	None	,	ipv4_multicast	=	False	)	:	\\n	\\/;"	f	member:host_addrinfo.AddrInfo.__init__	file:
canonical_ipv6	data/data_raw/train.py	/^utf-8	def	host_addrinfo	(	host	=	None	,	socket_family	=	None	,	ipv4_multicast	=	False	)	:	\\n	\\/;"	f	member:host_addrinfo.AddrInfo.__init__	file:
capability_functions	data/bpe_corpus_raw/train.py	/^utf-8	def	capability_functions	(	self	,	fn	)	:	\\n	    	if	_debug	:	\\n	        	Collector	.	_de/;"	f
capability_functions	data/data_raw/train.py	/^utf-8	def	capability_functions	(	self	,	fn	)	:	\\n	    	if	_debug	:	\\n	        	Collector	.	_de/;"	f
capitalize	data/bpe_corpus_raw/test.py	/^utf-8	def	capitalize	(	self	)	:	\\n	    	return	asarray	(	capitalize	(	self	)	)	\\n		$/;"	f
capitalize	data/data_raw/test.py	/^utf-8	def	capitalize	(	self	)	:	\\n	    	return	asarray	(	capitalize	(	self	)	)	\\n		$/;"	f
capture_warnings	data/bpe_corpus_raw/valid.py	/^utf-8	def	assert_warnings	(	fn	,	warnings	)	:	\\n	    	from	.	assertions	import	eq_	,	emits_warn/;"	f	function:assert_warnings	file:
capture_warnings	data/data_raw/valid.py	/^utf-8	def	assert_warnings	(	fn	,	warnings	)	:	\\n	    	from	.	assertions	import	eq_	,	emits_warn/;"	f	function:assert_warnings	file:
captured_stderr	data/bpe_corpus_raw/valid.py	/^utf-8	def	captured_stderr	(	)	:	\\n	    	return	captured_output	(	'stderr'	)	\\n		$/;"	f
captured_stderr	data/data_raw/valid.py	/^utf-8	def	captured_stderr	(	)	:	\\n	    	return	captured_output	(	'stderr'	)	\\n		$/;"	f
cart2dir	data/bpe_corpus_raw/train.py	/^utf-8	@	staticmethod	\\n	def	cart2dir	(	bases	,	data	)	:	\\n	    	b	=	np	.	matrix	(	data	)	.	T	\\/;"	f
cart2dir	data/data_raw/train.py	/^utf-8	@	staticmethod	\\n	def	cart2dir	(	bases	,	data	)	:	\\n	    	b	=	np	.	matrix	(	data	)	.	T	\\/;"	f
cas_application	data/bpe_corpus_raw/valid.py	/^utf-8	def	AuthCASHandler	(	application	,	authority	)	:	\\n	    	assert	authority	.	endswith	(	'\//;"	f	function:AuthCASHandler	file:
cas_application	data/data_raw/valid.py	/^utf-8	def	AuthCASHandler	(	application	,	authority	)	:	\\n	    	assert	authority	.	endswith	(	'\//;"	f	function:AuthCASHandler	file:
cases	data/bpe_corpus_raw/valid.py	/^utf-8	@	base	.	resource	(	cases	.	Cases	)	\\n	def	cases	(	self	)	:	\\n	    	return	cases	.	Cases/;"	f
cases	data/data_raw/valid.py	/^utf-8	@	base	.	resource	(	cases	.	Cases	)	\\n	def	cases	(	self	)	:	\\n	    	return	cases	.	Cases/;"	f
category	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	category	(	self	)	:	\\n	    	return	self	.	__category	\\n		$/;"	f
category	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	category	(	self	)	:	\\n	    	return	self	.	__category	\\n		$/;"	f
categoryorder	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	categoryorder	(	self	)	:	\\n	    	return	self	[	'categoryorder'	]	\\n		$/;"	f
categoryorder	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	categoryorder	(	self	)	:	\\n	    	return	self	[	'categoryorder'	]	\\n		$/;"	f
cbConnect	data/bpe_corpus_raw/train.py	/^utf-8	def	test_failedSTOR	(	self	)	:	\\n	    	tr	=	proto_helpers	.	StringTransport	(	)	\\n	\\n	d/;"	f	function:test_failedSTOR.cbStore	file:
cbConnect	data/data_raw/train.py	/^utf-8	def	test_failedSTOR	(	self	)	:	\\n	    	tr	=	proto_helpers	.	StringTransport	(	)	\\n	\\n	d/;"	f	function:test_failedSTOR.cbStore	file:
cbStore	data/bpe_corpus_raw/train.py	/^utf-8	def	test_failedSTOR	(	self	)	:	\\n	    	tr	=	proto_helpers	.	StringTransport	(	)	\\n	\\n	d/;"	f	function:test_failedSTOR	file:
cbStore	data/data_raw/train.py	/^utf-8	def	test_failedSTOR	(	self	)	:	\\n	    	tr	=	proto_helpers	.	StringTransport	(	)	\\n	\\n	d/;"	f	function:test_failedSTOR	file:
cc_diff	data/bpe_corpus_raw/valid.py	/^utf-8	def	cc_diff	(	x	,	a	,	b	,	period	=	None	,	_cache	=	_cache	)	:	\\n	    	tmp	=	asarray	(	x	)/;"	f
cc_diff	data/data_raw/valid.py	/^utf-8	def	cc_diff	(	x	,	a	,	b	,	period	=	None	,	_cache	=	_cache	)	:	\\n	    	tmp	=	asarray	(	x	)/;"	f
cc_to_con	data/bpe_corpus_raw/test.py	/^utf-8	def	cc_to_con	(	code	)	:	\\n	    	return	ccn_to_con	(	cc_to_ccn	(	code	)	)	\\n		$/;"	f
cc_to_con	data/data_raw/test.py	/^utf-8	def	cc_to_con	(	code	)	:	\\n	    	return	ccn_to_con	(	cc_to_ccn	(	code	)	)	\\n		$/;"	f
cdf	data/bpe_corpus_raw/valid.py	/^utf-8	def	cdf	(	self	,	x	,	**	kwds	)	:	\\n	    	lower	=	-	np	.	inf	*	np	.	ones_like	(	x	)	\\n	up/;"	f
cdf	data/data_raw/valid.py	/^utf-8	def	cdf	(	self	,	x	,	**	kwds	)	:	\\n	    	lower	=	-	np	.	inf	*	np	.	ones_like	(	x	)	\\n	up/;"	f
cell_allocation	data/bpe_corpus_raw/valid.py	/^utf-8	@	abc	.	abstractmethod	\\n	def	cell_allocation	(	self	)	:	\\n	$/;"	f
cell_allocation	data/data_raw/valid.py	/^utf-8	@	abc	.	abstractmethod	\\n	def	cell_allocation	(	self	)	:	\\n	$/;"	f
centroid	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	centroid	(	self	)	:	\\n	    	return	self	.	_topology	(	capi	.	geos_cent/;"	f
centroid	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	centroid	(	self	)	:	\\n	    	return	self	.	vertices	.	mean	(	axis	=	0	)/;"	f
centroid	data/bpe_corpus_raw/valid.py	/^utf-8	def	centroid	(	P	)	:	\\n	    	cx	=	0	\\n	cy	=	0	\\n	for	x	,	y	in	P	:	\\n	        	cx	+=	x	/;"	f
centroid	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	centroid	(	self	)	:	\\n	    	return	self	.	_topology	(	capi	.	geos_cent/;"	f
centroid	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	centroid	(	self	)	:	\\n	    	return	self	.	vertices	.	mean	(	axis	=	0	)/;"	f
centroid	data/data_raw/valid.py	/^utf-8	def	centroid	(	P	)	:	\\n	    	cx	=	0	\\n	cy	=	0	\\n	for	x	,	y	in	P	:	\\n	        	cx	+=	x	/;"	f
certbot_no_force_renew	data/bpe_corpus_raw/test.py	/^utf-8	def	certbot_no_force_renew	(	self	,	args	)	:	\\n	    	command	=	[	'--authenticator'	,	'sta/;"	f
certbot_no_force_renew	data/data_raw/test.py	/^utf-8	def	certbot_no_force_renew	(	self	,	args	)	:	\\n	    	command	=	[	'--authenticator'	,	'sta/;"	f
chain_before	data/bpe_corpus_raw/train.py	/^utf-8	def	chain_before	(	self	,	position	,	seps	,	start	=	0	,	predicate	=	None	,	index	=	None	)	/;"	f
chain_before	data/data_raw/train.py	/^utf-8	def	chain_before	(	self	,	position	,	seps	,	start	=	0	,	predicate	=	None	,	index	=	None	)	/;"	f
chaincode_invocation	data/bpe_corpus_raw/valid.py	/^utf-8	def	chaincode_invocation	(	chain	)	:	\\n	    	return	Invocation	(	chain	)	\\n		$/;"	f
chaincode_invocation	data/data_raw/valid.py	/^utf-8	def	chaincode_invocation	(	chain	)	:	\\n	    	return	Invocation	(	chain	)	\\n		$/;"	f
change_motor_size	data/bpe_corpus_raw/train.py	/^utf-8	def	change_motor_size	(	self	,	gl_update	=	True	)	:	\\n	    	self	.	command	.	struct	.	len/;"	f
change_motor_size	data/data_raw/train.py	/^utf-8	def	change_motor_size	(	self	,	gl_update	=	True	)	:	\\n	    	self	.	command	.	struct	.	len/;"	f
change_ring	data/bpe_corpus_raw/train.py	/^utf-8	def	change_ring	(	self	,	R	)	:	\\n	    	if	self	.	base_ring	(	)	is	R	:	\\n	        	return/;"	f
change_ring	data/data_raw/train.py	/^utf-8	def	change_ring	(	self	,	R	)	:	\\n	    	if	self	.	base_ring	(	)	is	R	:	\\n	        	return/;"	f
change_version_notify	data/bpe_corpus_raw/test.py	/^utf-8	def	change_version_notify	(	self	,	version_notify	)	:	\\n	    	self	.	version_notify	=	che/;"	f
change_version_notify	data/data_raw/test.py	/^utf-8	def	change_version_notify	(	self	,	version_notify	)	:	\\n	    	self	.	version_notify	=	che/;"	f
changed	data/bpe_corpus_raw/train.py	/^utf-8	def	changed	(	self	)	:	\\n	    	for	parent	,	key	in	self	.	_parents	.	items	(	)	:	\\n	    /;"	f
changed	data/data_raw/train.py	/^utf-8	def	changed	(	self	)	:	\\n	    	for	parent	,	key	in	self	.	_parents	.	items	(	)	:	\\n	    /;"	f
changes_command	data/bpe_corpus_raw/train.py	/^utf-8	def	changes_command	(	args	)	:	\\n	    	changes	=	list_changes	(	args	.	project_id	,	args	/;"	f
changes_command	data/data_raw/train.py	/^utf-8	def	changes_command	(	args	)	:	\\n	    	changes	=	list_changes	(	args	.	project_id	,	args	/;"	f
channel	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	channel	(	self	)	:	\\n	    	return	self	.	_channel	\\n		$/;"	f
channel	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	channel	(	self	)	:	\\n	    	return	self	.	_channel	\\n		$/;"	f
char	data/bpe_corpus_raw/test.py	/^utf-8	def	_setCssText	(	self	,	cssText	)	:	\\n	    	self	.	_checkReadonly	(	)	\\n	tokenizer	=	se/;"	f	function:_setCssText.ident.unexpected	file:
char	data/data_raw/test.py	/^utf-8	def	_setCssText	(	self	,	cssText	)	:	\\n	    	self	.	_checkReadonly	(	)	\\n	tokenizer	=	se/;"	f	function:_setCssText.ident.unexpected	file:
chebvander	data/bpe_corpus_raw/train.py	/^utf-8	def	chebvander	(	x	,	deg	)	:	\\n	    	ideg	=	int	(	deg	)	\\n	if	ideg	!=	deg	:	\\n	        /;"	f
chebvander	data/data_raw/train.py	/^utf-8	def	chebvander	(	x	,	deg	)	:	\\n	    	ideg	=	int	(	deg	)	\\n	if	ideg	!=	deg	:	\\n	        /;"	f
check	data/bpe_corpus_raw/train.py	/^utf-8	def	check	(	self	)	:	\\n	    	return	'PS_CROSS_THREAD_FLAGS_HIDEFROMDBG'	in	self	.	flags	\\/;"	f
check	data/bpe_corpus_raw/train.py	/^utf-8	def	check	(	self	,	constraints	)	->	bool	:	\\n	    	return	self	.	can_be_true	(	constraint/;"	f
check	data/bpe_corpus_raw/train.py	/^utf-8	def	check	(	self	,	pattern	)	:	\\n	    	if	self	.	eos	:	\\n	        	raise	EndOfText	(	)	\\/;"	f
check	data/bpe_corpus_raw/train.py	/^utf-8	def	test_check_all_glyphs_have_codepoints	(	)	:	\\n	    	from	fontbakery	.	profiles	.	cmap/;"	x	function:test_check_all_glyphs_have_codepoints	file:
check	data/bpe_corpus_raw/valid.py	/^utf-8	def	check	(	self	,	mol	,	display	=	True	)	:	\\n	    	raise	NotImplementedError	(	)	\\n		$/;"	f
check	data/data_raw/train.py	/^utf-8	def	check	(	self	)	:	\\n	    	return	'PS_CROSS_THREAD_FLAGS_HIDEFROMDBG'	in	self	.	flags	\\/;"	f
check	data/data_raw/train.py	/^utf-8	def	check	(	self	,	constraints	)	->	bool	:	\\n	    	return	self	.	can_be_true	(	constraint/;"	f
check	data/data_raw/train.py	/^utf-8	def	check	(	self	,	pattern	)	:	\\n	    	if	self	.	eos	:	\\n	        	raise	EndOfText	(	)	\\/;"	f
check	data/data_raw/train.py	/^utf-8	def	test_check_all_glyphs_have_codepoints	(	)	:	\\n	    	from	fontbakery	.	profiles	.	cmap/;"	x	function:test_check_all_glyphs_have_codepoints	file:
check	data/data_raw/valid.py	/^utf-8	def	check	(	self	,	mol	,	display	=	True	)	:	\\n	    	raise	NotImplementedError	(	)	\\n		$/;"	f
checkConfig	data/bpe_corpus_raw/train.py	/^utf-8	def	checkConfig	(	self	,	level	=	1	,	demoMode	=	False	,	logFile	=	''	)	:	\\n	    	if	self	/;"	f
checkConfig	data/data_raw/train.py	/^utf-8	def	checkConfig	(	self	,	level	=	1	,	demoMode	=	False	,	logFile	=	''	)	:	\\n	    	if	self	/;"	f
checkFailure	data/bpe_corpus_raw/train.py	/^utf-8	def	test_brokenContent	(	self	)	:	\\n	    	deferred	=	self	.	agent	.	request	(	b'GET'	,	b'/;"	f	function:test_brokenContent.checkResponse	file:
checkFailure	data/data_raw/train.py	/^utf-8	def	test_brokenContent	(	self	)	:	\\n	    	deferred	=	self	.	agent	.	request	(	b'GET'	,	b'/;"	f	function:test_brokenContent.checkResponse	file:
checkPeerIndent	data/bpe_corpus_raw/train.py	/^utf-8	def	indentedBlock	(	blockStatementExpr	,	indentStack	,	indent	=	True	)	:	\\n	\\n	    	def	/;"	f	function:indentedBlock	file:
checkPeerIndent	data/data_raw/train.py	/^utf-8	def	indentedBlock	(	blockStatementExpr	,	indentStack	,	indent	=	True	)	:	\\n	\\n	    	def	/;"	f	function:indentedBlock	file:
checkResponse	data/bpe_corpus_raw/train.py	/^utf-8	def	test_brokenContent	(	self	)	:	\\n	    	deferred	=	self	.	agent	.	request	(	b'GET'	,	b'/;"	f	function:test_brokenContent	file:
checkResponse	data/data_raw/train.py	/^utf-8	def	test_brokenContent	(	self	)	:	\\n	    	deferred	=	self	.	agent	.	request	(	b'GET'	,	b'/;"	f	function:test_brokenContent	file:
checkSubIndent	data/bpe_corpus_raw/train.py	/^utf-8	def	indentedBlock	(	blockStatementExpr	,	indentStack	,	indent	=	True	)	:	\\n	\\n	    	def	/;"	f	function:indentedBlock.checkPeerIndent	file:
checkSubIndent	data/data_raw/train.py	/^utf-8	def	indentedBlock	(	blockStatementExpr	,	indentStack	,	indent	=	True	)	:	\\n	\\n	    	def	/;"	f	function:indentedBlock.checkPeerIndent	file:
checkUTF8	data/bpe_corpus_raw/valid.py	/^utf-8	def	checkUTF8	(	utf	)	:	\\n	    	ret	=	libxml2mod	.	xmlCheckUTF8	(	utf	)	\\n	return	ret	\\/;"	f
checkUTF8	data/data_raw/valid.py	/^utf-8	def	checkUTF8	(	utf	)	:	\\n	    	ret	=	libxml2mod	.	xmlCheckUTF8	(	utf	)	\\n	return	ret	\\/;"	f
checkUnindent	data/bpe_corpus_raw/train.py	/^utf-8	def	indentedBlock	(	blockStatementExpr	,	indentStack	,	indent	=	True	)	:	\\n	\\n	    	def	/;"	f	function:indentedBlock.checkPeerIndent.checkSubIndent	file:
checkUnindent	data/data_raw/train.py	/^utf-8	def	indentedBlock	(	blockStatementExpr	,	indentStack	,	indent	=	True	)	:	\\n	\\n	    	def	/;"	f	function:indentedBlock.checkPeerIndent.checkSubIndent	file:
check_PE_HIGH_ENTROPY_VA	data/bpe_corpus_raw/valid.py	/^utf-8	def	check_PE_HIGH_ENTROPY_VA	(	executable	)	:	\\n	    	arch	,	bits	=	get_PE_dll_characteri/;"	f
check_PE_HIGH_ENTROPY_VA	data/data_raw/valid.py	/^utf-8	def	check_PE_HIGH_ENTROPY_VA	(	executable	)	:	\\n	    	arch	,	bits	=	get_PE_dll_characteri/;"	f
check_api_key	data/bpe_corpus_raw/test.py	/^utf-8	def	check_api_key	(	request	)	:	\\n	    	keystr	=	request	.	META	.	get	(	'HTTP_X_KEGBOT_AP/;"	f
check_api_key	data/data_raw/test.py	/^utf-8	def	check_api_key	(	request	)	:	\\n	    	keystr	=	request	.	META	.	get	(	'HTTP_X_KEGBOT_AP/;"	f
check_archive_format	data/bpe_corpus_raw/valid.py	/^utf-8	def	check_archive_format	(	format	,	compression	)	:	\\n	    	if	format	not	in	ArchiveForma/;"	f
check_archive_format	data/data_raw/valid.py	/^utf-8	def	check_archive_format	(	format	,	compression	)	:	\\n	    	if	format	not	in	ArchiveForma/;"	f
check_ast	data/bpe_corpus_raw/valid.py	/^utf-8	def	check_ast	(	self	)	:	\\n	    	try	:	\\n	        	tree	=	compile	(	''	.	join	(	self	.	l/;"	f
check_ast	data/data_raw/valid.py	/^utf-8	def	check_ast	(	self	)	:	\\n	    	try	:	\\n	        	tree	=	compile	(	''	.	join	(	self	.	l/;"	f
check_challenge_response	data/bpe_corpus_raw/valid.py	/^utf-8	@	check_token_locked	\\n	def	check_challenge_response	(	self	,	user	=	None	,	passw	=	None	/;"	f
check_challenge_response	data/data_raw/valid.py	/^utf-8	@	check_token_locked	\\n	def	check_challenge_response	(	self	,	user	=	None	,	passw	=	None	/;"	f
check_code	data/bpe_corpus_raw/train.py	/^utf-8	def	check_code	(	self	)	:	\\n	    	if	not	self	.	get_argument	(	'code'	,	False	)	:	\\n	   /;"	f
check_code	data/data_raw/train.py	/^utf-8	def	check_code	(	self	)	:	\\n	    	if	not	self	.	get_argument	(	'code'	,	False	)	:	\\n	   /;"	f
check_cred_fs_permissions	data/bpe_corpus_raw/train.py	/^utf-8	def	check_cred_fs_permissions	(	path	)	:	\\n	    	if	not	os	.	path	.	exists	(	path	)	:	\\n/;"	f
check_cred_fs_permissions	data/data_raw/train.py	/^utf-8	def	check_cred_fs_permissions	(	path	)	:	\\n	    	if	not	os	.	path	.	exists	(	path	)	:	\\n/;"	f
check_credentials	data/bpe_corpus_raw/valid.py	/^utf-8	def	check_credentials	(	self	)	:	\\n	    	if	self	.	username	is	None	or	self	.	password	is/;"	f
check_credentials	data/data_raw/valid.py	/^utf-8	def	check_credentials	(	self	)	:	\\n	    	if	self	.	username	is	None	or	self	.	password	is/;"	f
check_declared	data/bpe_corpus_raw/train.py	/^utf-8	def	check_declared	(	self	,	node	)	:	\\n	    	for	ident	in	node	.	undeclared_identifiers	(/;"	f
check_declared	data/data_raw/train.py	/^utf-8	def	check_declared	(	self	,	node	)	:	\\n	    	for	ident	in	node	.	undeclared_identifiers	(/;"	f
check_delete_server_complete	data/bpe_corpus_raw/train.py	/^utf-8	def	check_delete_server_complete	(	self	,	server_id	)	:	\\n	    	try	:	\\n	        	server/;"	f
check_delete_server_complete	data/data_raw/train.py	/^utf-8	def	check_delete_server_complete	(	self	,	server_id	)	:	\\n	    	try	:	\\n	        	server/;"	f
check_div	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_llvm_div	(	)	:	\\n	\\n	    	def	check_div	(	start	,	end	,	divisor	,	dtype	)	:	\\n/;"	f	function:test_llvm_div	file:
check_div	data/data_raw/valid.py	/^utf-8	def	test_llvm_div	(	)	:	\\n	\\n	    	def	check_div	(	start	,	end	,	divisor	,	dtype	)	:	\\n/;"	f	function:test_llvm_div	file:
check_find_nomatch	data/bpe_corpus_raw/train.py	/^utf-8	def	check_find_nomatch	(	self	,	result	)	:	\\n	    	assert_deepequal	(	dict	(	count	=	0	,	/;"	f
check_find_nomatch	data/data_raw/train.py	/^utf-8	def	check_find_nomatch	(	self	,	result	)	:	\\n	    	assert_deepequal	(	dict	(	count	=	0	,	/;"	f
check_for_strongly_connected_components	data/bpe_corpus_raw/test.py	/^utf-8	def	check_for_strongly_connected_components	(	scc	,	minsize	=	2	)	:	\\n	    	for	s	in	scc	/;"	f
check_for_strongly_connected_components	data/data_raw/test.py	/^utf-8	def	check_for_strongly_connected_components	(	scc	,	minsize	=	2	)	:	\\n	    	for	s	in	scc	/;"	f
check_for_updates	data/bpe_corpus_raw/valid.py	/^utf-8	def	check_for_updates	(	)	:	\\n	    	try	:	\\n	        	version_file	=	requests	.	get	(	RE/;"	f
check_for_updates	data/data_raw/valid.py	/^utf-8	def	check_for_updates	(	)	:	\\n	    	try	:	\\n	        	version_file	=	requests	.	get	(	RE/;"	f
check_header	data/bpe_corpus_raw/valid.py	/^utf-8	def	check_header	(	hdr	)	:	\\n	    	for	field	in	(	'ncols'	,	'nrows'	,	'cellsize'	)	:	\\n	/;"	f
check_header	data/data_raw/valid.py	/^utf-8	def	check_header	(	hdr	)	:	\\n	    	for	field	in	(	'ncols'	,	'nrows'	,	'cellsize'	)	:	\\n	/;"	f
check_is_ready_for_command	data/bpe_corpus_raw/valid.py	/^utf-8	def	check_is_ready_for_command	(	self	,	timeout	)	:	\\n	    	r	,	w	,	e	=	select	.	select	(/;"	f
check_is_ready_for_command	data/data_raw/valid.py	/^utf-8	def	check_is_ready_for_command	(	self	,	timeout	)	:	\\n	    	r	,	w	,	e	=	select	.	select	(/;"	f
check_json_for_terminated_entities	data/bpe_corpus_raw/train.py	/^utf-8	def	check_json_for_terminated_entities	(	parties	)	:	\\n	    	for	party	in	parties	:	\\n	 /;"	f
check_json_for_terminated_entities	data/data_raw/train.py	/^utf-8	def	check_json_for_terminated_entities	(	parties	)	:	\\n	    	for	party	in	parties	:	\\n	 /;"	f
check_llvm	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_llvm_div	(	)	:	\\n	\\n	    	def	check_div	(	start	,	end	,	divisor	,	dtype	)	:	\\n/;"	f	function:test_llvm_div.check_div.check_mod	file:
check_llvm	data/data_raw/valid.py	/^utf-8	def	test_llvm_div	(	)	:	\\n	\\n	    	def	check_div	(	start	,	end	,	divisor	,	dtype	)	:	\\n/;"	f	function:test_llvm_div.check_div.check_mod	file:
check_log_disk_usage	data/bpe_corpus_raw/train.py	/^utf-8	def	check_log_disk_usage	(	)	:	\\n	    	try	:	\\n	        	d	=	rospkg	.	get_log_dir	(	)	\\/;"	f
check_log_disk_usage	data/data_raw/train.py	/^utf-8	def	check_log_disk_usage	(	)	:	\\n	    	try	:	\\n	        	d	=	rospkg	.	get_log_dir	(	)	\\/;"	f
check_mandatory_options	data/bpe_corpus_raw/train.py	/^utf-8	def	check_mandatory_options	(	options	,	mandatory_options	,	helpstr	)	:	\\n	    	missing_o/;"	f
check_mandatory_options	data/data_raw/train.py	/^utf-8	def	check_mandatory_options	(	options	,	mandatory_options	,	helpstr	)	:	\\n	    	missing_o/;"	f
check_mod	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_llvm_div	(	)	:	\\n	\\n	    	def	check_div	(	start	,	end	,	divisor	,	dtype	)	:	\\n/;"	f	function:test_llvm_div.check_div	file:
check_mod	data/data_raw/valid.py	/^utf-8	def	test_llvm_div	(	)	:	\\n	\\n	    	def	check_div	(	start	,	end	,	divisor	,	dtype	)	:	\\n/;"	f	function:test_llvm_div.check_div	file:
check_news	data/bpe_corpus_raw/valid.py	/^utf-8	def	check_news	(	)	:	\\n	    	pulled_news	=	pull_news	(	)	\\n	stored_news	=	utils	.	NEWS	\\/;"	f
check_news	data/data_raw/valid.py	/^utf-8	def	check_news	(	)	:	\\n	    	pulled_news	=	pull_news	(	)	\\n	stored_news	=	utils	.	NEWS	\\/;"	f
check_open_write_close_non_w_mode	data/bpe_corpus_raw/valid.py	/^utf-8	def	check_open_write_close_non_w_mode	(	self	)	:	\\n	    	before	,	opened	,	written	,	clos/;"	f
check_open_write_close_non_w_mode	data/data_raw/valid.py	/^utf-8	def	check_open_write_close_non_w_mode	(	self	)	:	\\n	    	before	,	opened	,	written	,	clos/;"	f
check_preprocess_status	data/bpe_corpus_raw/valid.py	/^utf-8	@	is_enabled	(	'corporate_memberships'	)	\\n	@	csrf_exempt	\\n	@	login_required	\\n	def	ch/;"	f
check_preprocess_status	data/data_raw/valid.py	/^utf-8	@	is_enabled	(	'corporate_memberships'	)	\\n	@	csrf_exempt	\\n	@	login_required	\\n	def	ch/;"	f
check_principal_realm_in_trust_namespace	data/bpe_corpus_raw/train.py	/^utf-8	def	check_principal_realm_in_trust_namespace	(	api_instance	,	*	keys	)	:	\\n	    	trust_ob/;"	f
check_principal_realm_in_trust_namespace	data/data_raw/train.py	/^utf-8	def	check_principal_realm_in_trust_namespace	(	api_instance	,	*	keys	)	:	\\n	    	trust_ob/;"	f
check_recovery	data/bpe_corpus_raw/valid.py	/^utf-8	def	check_recovery	(	self	,	p12_str	,	key	=	None	,	cert	=	None	,	ca	=	None	,	passwd	=	''	,/;"	f
check_recovery	data/data_raw/valid.py	/^utf-8	def	check_recovery	(	self	,	p12_str	,	key	=	None	,	cert	=	None	,	ca	=	None	,	passwd	=	''	,/;"	f
check_security_policy	data/bpe_corpus_raw/valid.py	/^utf-8	def	check_security_policy	(	self	,	callback	,	element_type	,	actor_id	=	None	,	\\n	require/;"	f
check_security_policy	data/data_raw/valid.py	/^utf-8	def	check_security_policy	(	self	,	callback	,	element_type	,	actor_id	=	None	,	\\n	require/;"	f
check_solver	data/bpe_corpus_raw/train.py	/^utf-8	def	check_solver	(	prob	,	solver_name	)	:	\\n	    	try	:	\\n	        	if	solver_name	==	RO/;"	f
check_solver	data/data_raw/train.py	/^utf-8	def	check_solver	(	prob	,	solver_name	)	:	\\n	    	try	:	\\n	        	if	solver_name	==	RO/;"	f
check_style	data/bpe_corpus_raw/test.py	/^utf-8	def	check_style	(	value	)	:	\\n	    	if	sys	.	version_info	[	:	2	]	>=	(	3	,	2	)	:	\\n	    /;"	f
check_style	data/data_raw/test.py	/^utf-8	def	check_style	(	value	)	:	\\n	    	if	sys	.	version_info	[	:	2	]	>=	(	3	,	2	)	:	\\n	    /;"	f
check_version	data/bpe_corpus_raw/train.py	/^utf-8	def	check_version	(	v	,	check	)	:	\\n	    	try	:	\\n	        	return	LooseVersion	(	v	)	>=/;"	f
check_version	data/bpe_corpus_raw/valid.py	/^utf-8	def	check_version	(	self	,	dest	,	rev_options	)	:	\\n	    	return	False	\\n		$/;"	f
check_version	data/data_raw/train.py	/^utf-8	def	check_version	(	v	,	check	)	:	\\n	    	try	:	\\n	        	return	LooseVersion	(	v	)	>=/;"	f
check_version	data/data_raw/valid.py	/^utf-8	def	check_version	(	self	,	dest	,	rev_options	)	:	\\n	    	return	False	\\n		$/;"	f
check_webkit_style_configuration	data/bpe_corpus_raw/test.py	/^utf-8	def	check_webkit_style_configuration	(	options	)	:	\\n	    	filter_configuration	=	FilterC/;"	f
check_webkit_style_configuration	data/data_raw/test.py	/^utf-8	def	check_webkit_style_configuration	(	options	)	:	\\n	    	filter_configuration	=	FilterC/;"	f
check_whitespace_enabled	data/bpe_corpus_raw/valid.py	/^utf-8	def	check_whitespace_enabled	(	)	:	\\n	$/;"	f
check_whitespace_enabled	data/data_raw/valid.py	/^utf-8	def	check_whitespace_enabled	(	)	:	\\n	$/;"	f
check_worker_eligibility	data/bpe_corpus_raw/valid.py	/^utf-8	def	main	(	)	:	\\n	    	argparser	=	ParlaiParser	(	False	,	False	)	\\n	argparser	.	add_par/;"	f	function:main.run_onboard	file:
check_worker_eligibility	data/data_raw/valid.py	/^utf-8	def	main	(	)	:	\\n	    	argparser	=	ParlaiParser	(	False	,	False	)	\\n	argparser	.	add_par/;"	f	function:main.run_onboard	file:
checkout_forced_new_branch	data/bpe_corpus_raw/train.py	/^utf-8	def	checkout_forced_new_branch	(	self	,	new_name	,	based_on	)	:	\\n	    	phlgit_checkout	./;"	f
checkout_forced_new_branch	data/data_raw/train.py	/^utf-8	def	checkout_forced_new_branch	(	self	,	new_name	,	based_on	)	:	\\n	    	phlgit_checkout	./;"	f
checkpoint	data/bpe_corpus_raw/valid.py	/^utf-8	def	checkpoint	(	self	,	directory	)	:	\\n	    	self	.	_jssc	.	checkpoint	(	directory	)	\\n/;"	f
checkpoint	data/data_raw/valid.py	/^utf-8	def	checkpoint	(	self	,	directory	)	:	\\n	    	self	.	_jssc	.	checkpoint	(	directory	)	\\n/;"	f
checkpoint_exists	data/bpe_corpus_raw/valid.py	/^utf-8	def	checkpoint_exists	(	checkpoint_prefix	)	:	\\n	    	pathname	=	_prefix_to_checkpoint_pa/;"	f
checkpoint_exists	data/data_raw/valid.py	/^utf-8	def	checkpoint_exists	(	checkpoint_prefix	)	:	\\n	    	pathname	=	_prefix_to_checkpoint_pa/;"	f
checksum	data/bpe_corpus_raw/valid.py	/^utf-8	def	checksum	(	number	)	:	\\n	    	weights	=	3	,	7	,	1	,	3	,	7	,	1	,	3	,	7	,	1	\\n	return	/;"	f
checksum	data/data_raw/valid.py	/^utf-8	def	checksum	(	number	)	:	\\n	    	weights	=	3	,	7	,	1	,	3	,	7	,	1	,	3	,	7	,	1	\\n	return	/;"	f
child	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_sequence_length	(	all_terms	)	:	\\n	\\n	    	@	as_subprocess	\\n	def	child	(	kind/;"	f	function:test_sequence_length	file:
child	data/data_raw/valid.py	/^utf-8	def	test_sequence_length	(	all_terms	)	:	\\n	\\n	    	@	as_subprocess	\\n	def	child	(	kind/;"	f	function:test_sequence_length	file:
children	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	children	(	self	)	:	\\n	    	level	=	self	.	level	or	0	\\n	level_down	=/;"	f
children	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	children	(	self	)	:	\\n	    	level	=	self	.	level	or	0	\\n	level_down	=/;"	f
choose_boundary	data/bpe_corpus_raw/train.py	/^utf-8	def	choose_boundary	(	)	:	\\n	    	return	uuid4	(	)	.	hex	\\n		$/;"	f
choose_boundary	data/data_raw/train.py	/^utf-8	def	choose_boundary	(	)	:	\\n	    	return	uuid4	(	)	.	hex	\\n		$/;"	f
choose_colour	data/bpe_corpus_raw/train.py	/^utf-8	def	choose_colour	(	self	,	title	=	'Select Colour'	,	**	kwargs	)	:	\\n	    	return_data	=	/;"	f
choose_colour	data/data_raw/train.py	/^utf-8	def	choose_colour	(	self	,	title	=	'Select Colour'	,	**	kwargs	)	:	\\n	    	return_data	=	/;"	f
chop	data/bpe_corpus_raw/train.py	/^utf-8	def	chop	(	seq	,	size	)	:	\\n	    	return	[	seq	[	i	:	i	+	size	]	for	i	in	xrange	(	0	,	len/;"	f
chop	data/data_raw/train.py	/^utf-8	def	chop	(	seq	,	size	)	:	\\n	    	return	[	seq	[	i	:	i	+	size	]	for	i	in	xrange	(	0	,	len/;"	f
circularCallback	data/bpe_corpus_raw/train.py	/^utf-8	def	test_circularChainException	(	self	)	:	\\n	    	self	.	addCleanup	(	setattr	,	warnings/;"	f	function:test_circularChainException	file:
circularCallback	data/data_raw/train.py	/^utf-8	def	test_circularChainException	(	self	)	:	\\n	    	self	.	addCleanup	(	setattr	,	warnings/;"	f	function:test_circularChainException	file:
claim_updating	data/bpe_corpus_raw/train.py	/^utf-8	def	claim_updating	(	self	,	metadata	)	:	\\n	    	ttl	=	metadata	[	'ttl'	]	\\n	if	not	MIN_/;"	f
claim_updating	data/data_raw/train.py	/^utf-8	def	claim_updating	(	self	,	metadata	)	:	\\n	    	ttl	=	metadata	[	'ttl'	]	\\n	if	not	MIN_/;"	f
class_idx_seq_to_1_of_k	data/bpe_corpus_raw/valid.py	/^utf-8	def	class_idx_seq_to_1_of_k	(	seq	,	num_classes	)	:	\\n	    	num_frames	=	len	(	seq	)	\\n	/;"	f
class_idx_seq_to_1_of_k	data/data_raw/valid.py	/^utf-8	def	class_idx_seq_to_1_of_k	(	seq	,	num_classes	)	:	\\n	    	num_frames	=	len	(	seq	)	\\n	/;"	f
classify_class_attrs	data/bpe_corpus_raw/train.py	/^utf-8	def	classify_class_attrs	(	cls	)	:	\\n	    	mro	=	getmro	(	cls	)	\\n	names	=	dir	(	cls	)	\\/;"	f
classify_class_attrs	data/data_raw/train.py	/^utf-8	def	classify_class_attrs	(	cls	)	:	\\n	    	mro	=	getmro	(	cls	)	\\n	names	=	dir	(	cls	)	\\/;"	f
clean	data/bpe_corpus_raw/train.py	/^utf-8	def	clean	(	self	,	value	)	:	\\n	    	value	=	super	(	ROPhoneNumberField	,	self	)	.	clean	/;"	f
clean	data/bpe_corpus_raw/valid.py	/^utf-8	def	clean	(	self	)	:	\\n	    	__	,	__	,	exit_status	=	self	.	_git_cmd	(	self	.	_git_path	,/;"	f
clean	data/bpe_corpus_raw/valid.py	/^utf-8	def	clean	(	self	)	:	\\n	    	pass	\\n		$/;"	f
clean	data/bpe_corpus_raw/valid.py	/^utf-8	def	clean	(	self	,	value	)	:	\\n	    	if	not	value	:	\\n	        	if	self	.	null	and	not	s/;"	f
clean	data/data_raw/train.py	/^utf-8	def	clean	(	self	,	value	)	:	\\n	    	value	=	super	(	ROPhoneNumberField	,	self	)	.	clean	/;"	f
clean	data/data_raw/valid.py	/^utf-8	def	clean	(	self	)	:	\\n	    	__	,	__	,	exit_status	=	self	.	_git_cmd	(	self	.	_git_path	,/;"	f
clean	data/data_raw/valid.py	/^utf-8	def	clean	(	self	)	:	\\n	    	pass	\\n		$/;"	f
clean	data/data_raw/valid.py	/^utf-8	def	clean	(	self	,	value	)	:	\\n	    	if	not	value	:	\\n	        	if	self	.	null	and	not	s/;"	f
clean_honeypot	data/bpe_corpus_raw/valid.py	/^utf-8	def	clean_honeypot	(	self	)	:	\\n	    	value	=	self	.	cleaned_data	[	'honeypot'	]	\\n	if	v/;"	f
clean_honeypot	data/data_raw/valid.py	/^utf-8	def	clean_honeypot	(	self	)	:	\\n	    	value	=	self	.	cleaned_data	[	'honeypot'	]	\\n	if	v/;"	f
clean_unicode_numerals	data/bpe_corpus_raw/train.py	/^utf-8	def	clean_unicode_numerals	(	self	,	text	)	:	\\n	    	start	=	2460	\\n	end	=	2473	\\n	for	/;"	f
clean_unicode_numerals	data/data_raw/train.py	/^utf-8	def	clean_unicode_numerals	(	self	,	text	)	:	\\n	    	start	=	2460	\\n	end	=	2473	\\n	for	/;"	f
cleanup	data/bpe_corpus_raw/test.py	/^utf-8	@	staticmethod	\\n	def	cleanup	(	files	)	:	\\n	    	for	sfile	in	files	:	\\n	        	if	o/;"	f
cleanup	data/bpe_corpus_raw/test.py	/^utf-8	def	cleanup	(	self	)	:	\\n	    	return	\\n		$/;"	f
cleanup	data/bpe_corpus_raw/train.py	/^utf-8	@	staticmethod	\\n	def	cleanup	(	files	)	:	\\n	    	for	sfile	in	files	:	\\n	        	if	o/;"	f
cleanup	data/bpe_corpus_raw/valid.py	/^utf-8	def	cleanup	(	self	)	:	\\n	    	BackgroundProcess	.	objects	.	filter	(	pk	=	self	.	process/;"	f
cleanup	data/data_raw/test.py	/^utf-8	@	staticmethod	\\n	def	cleanup	(	files	)	:	\\n	    	for	sfile	in	files	:	\\n	        	if	o/;"	f
cleanup	data/data_raw/test.py	/^utf-8	def	cleanup	(	self	)	:	\\n	    	return	\\n		$/;"	f
cleanup	data/data_raw/train.py	/^utf-8	@	staticmethod	\\n	def	cleanup	(	files	)	:	\\n	    	for	sfile	in	files	:	\\n	        	if	o/;"	f
cleanup	data/data_raw/valid.py	/^utf-8	def	cleanup	(	self	)	:	\\n	    	BackgroundProcess	.	objects	.	filter	(	pk	=	self	.	process/;"	f
cleanup_attacks_with_zero_images	data/bpe_corpus_raw/valid.py	/^utf-8	def	cleanup_attacks_with_zero_images	(	self	)	:	\\n	    	print_header	(	'Cleaning up attac/;"	f
cleanup_attacks_with_zero_images	data/data_raw/valid.py	/^utf-8	def	cleanup_attacks_with_zero_images	(	self	)	:	\\n	    	print_header	(	'Cleaning up attac/;"	f
clear	data/bpe_corpus_raw/test.py	/^utf-8	def	clear	(	self	)	:	\\n	    	self	.	_list	[	:	]	=	[	]	\\n		$/;"	f
clear	data/bpe_corpus_raw/test.py	/^utf-8	def	clear	(	self	)	:	\\n	    	self	.	events	[	get_ident	(	)	]	[	0	]	.	clear	(	)	\\n		$/;"	f
clear	data/bpe_corpus_raw/test.py	/^utf-8	def	clear	(	self	)	:	\\n	    	self	.	pools	.	clear	(	)	\\n		$/;"	f
clear	data/bpe_corpus_raw/train.py	/^utf-8	def	clear	(	self	,	*	args	)	:	\\n	    	QtGui	.	QListWidget	.	clear	(	*	(	(	self	,	)	+	args/;"	f
clear	data/bpe_corpus_raw/valid.py	/^utf-8	@	abc	.	abstractmethod	\\n	def	clear	(	self	,	context	,	pool_manager_status	)	:	\\n	$/;"	f
clear	data/bpe_corpus_raw/valid.py	/^utf-8	def	clear	(	self	)	:	\\n	    	self	.	_heap	=	[	]	\\n	self	.	_total_positives	=	0	\\n		$/;"	f
clear	data/data_raw/test.py	/^utf-8	def	clear	(	self	)	:	\\n	    	self	.	_list	[	:	]	=	[	]	\\n		$/;"	f
clear	data/data_raw/test.py	/^utf-8	def	clear	(	self	)	:	\\n	    	self	.	events	[	get_ident	(	)	]	[	0	]	.	clear	(	)	\\n		$/;"	f
clear	data/data_raw/test.py	/^utf-8	def	clear	(	self	)	:	\\n	    	self	.	pools	.	clear	(	)	\\n		$/;"	f
clear	data/data_raw/train.py	/^utf-8	def	clear	(	self	,	*	args	)	:	\\n	    	QtGui	.	QListWidget	.	clear	(	*	(	(	self	,	)	+	args/;"	f
clear	data/data_raw/valid.py	/^utf-8	@	abc	.	abstractmethod	\\n	def	clear	(	self	,	context	,	pool_manager_status	)	:	\\n	$/;"	f
clear	data/data_raw/valid.py	/^utf-8	def	clear	(	self	)	:	\\n	    	self	.	_heap	=	[	]	\\n	self	.	_total_positives	=	0	\\n		$/;"	f
clear_cache	data/bpe_corpus_raw/valid.py	/^utf-8	def	clear_cache	(	self	)	:	\\n	    	global	SITE_CACHE	\\n	SITE_CACHE	=	{	}	\\n		$/;"	f
clear_cache	data/data_raw/valid.py	/^utf-8	def	clear_cache	(	self	)	:	\\n	    	global	SITE_CACHE	\\n	SITE_CACHE	=	{	}	\\n		$/;"	f
clear_data	data/bpe_corpus_raw/valid.py	/^utf-8	def	clear_data	(	self	,	filter_func	=	lambda	f	:	True	)	:	\\n	    	self	.	_delete_director/;"	f
clear_data	data/data_raw/valid.py	/^utf-8	def	clear_data	(	self	,	filter_func	=	lambda	f	:	True	)	:	\\n	    	self	.	_delete_director/;"	f
clear_key_pressed	data/bpe_corpus_raw/test.py	/^utf-8	def	_create_ui	(	self	)	:	\\n	    	self	.	preview	=	None	\\n	self	.	about_dialog	=	None	\\/;"	f	function:_create_ui	file:
clear_key_pressed	data/data_raw/test.py	/^utf-8	def	_create_ui	(	self	)	:	\\n	    	self	.	preview	=	None	\\n	self	.	about_dialog	=	None	\\/;"	f	function:_create_ui	file:
clear_saved_assignments	data/bpe_corpus_raw/valid.py	/^utf-8	def	clear_saved_assignments	(	self	,	delete	=	False	)	:	\\n	    	old_registrations	=	Stude/;"	f
clear_saved_assignments	data/data_raw/valid.py	/^utf-8	def	clear_saved_assignments	(	self	,	delete	=	False	)	:	\\n	    	old_registrations	=	Stude/;"	f
cli_main	models/preprocess.py	/^def cli_main():$/;"	f
clip_value	data/bpe_corpus_raw/train.py	/^utf-8	def	clip_value	(	self	,	v	,	abs_bound	=	None	)	:	\\n	    	if	abs_bound	:	\\n	        	retu/;"	f
clip_value	data/data_raw/train.py	/^utf-8	def	clip_value	(	self	,	v	,	abs_bound	=	None	)	:	\\n	    	if	abs_bound	:	\\n	        	retu/;"	f
clipboardListItemChanged	data/bpe_corpus_raw/train.py	/^utf-8	def	clipboardListItemChanged	(	self	,	currentItem	=	None	,	previousItem	=	None	)	:	\\n	   /;"	f
clipboardListItemChanged	data/data_raw/train.py	/^utf-8	def	clipboardListItemChanged	(	self	,	currentItem	=	None	,	previousItem	=	None	)	:	\\n	   /;"	f
clockhand	data/bpe_corpus_raw/valid.py	/^utf-8	def	clockhand	(	angle	,	length	)	:	\\n	    	radian_angle	=	math	.	pi	*	angle	\/	180.0	\\n	/;"	f
clockhand	data/data_raw/valid.py	/^utf-8	def	clockhand	(	angle	,	length	)	:	\\n	    	radian_angle	=	math	.	pi	*	angle	\/	180.0	\\n	/;"	f
clone	data/bpe_corpus_raw/valid.py	/^utf-8	def	clone	(	self	)	:	\\n	    	return	Leaf	(	self	.	type	,	self	.	value	,	(	self	.	prefix	,/;"	f
clone	data/bpe_corpus_raw/valid.py	/^utf-8	def	clone	(	self	)	:	\\n	    	return	Node	(	self	.	type	,	[	ch	.	clone	(	)	for	ch	in	self	/;"	f
clone	data/bpe_corpus_raw/valid.py	/^utf-8	def	clone	(	self	,	document	)	:	\\n	    	wrapped	=	document	.	wrap	(	)	\\n	if	'_id'	in	wra/;"	f
clone	data/data_raw/valid.py	/^utf-8	def	clone	(	self	)	:	\\n	    	return	Leaf	(	self	.	type	,	self	.	value	,	(	self	.	prefix	,/;"	f
clone	data/data_raw/valid.py	/^utf-8	def	clone	(	self	)	:	\\n	    	return	Node	(	self	.	type	,	[	ch	.	clone	(	)	for	ch	in	self	/;"	f
clone	data/data_raw/valid.py	/^utf-8	def	clone	(	self	,	document	)	:	\\n	    	wrapped	=	document	.	wrap	(	)	\\n	if	'_id'	in	wra/;"	f
close	data/bpe_corpus_raw/test.py	/^utf-8	def	close	(	)	:	\\n	    	sess	=	getattr	(	cherrypy	.	serving	,	'session'	,	None	)	\\n	if	g/;"	f
close	data/bpe_corpus_raw/test.py	/^utf-8	def	close	(	self	)	:	\\n	    	self	.	_fd_to_key	.	clear	(	)	\\n	self	.	_map	=	None	\\n		$/;"	f
close	data/bpe_corpus_raw/train.py	/^utf-8	@	synchronized	(	_lock	)	\\n	def	close	(	self	)	:	\\n	    	self	.	buf	=	[	]	\\n	self	.	clo/;"	f
close	data/bpe_corpus_raw/train.py	/^utf-8	def	close	(	self	)	:	\\n	    	if	hasattr	(	self	,	'proc'	)	and	self	.	proc	.	returncode	is/;"	f
close	data/bpe_corpus_raw/train.py	/^utf-8	def	close	(	self	)	:	\\n	    	if	self	.	_created_with_new_api	:	\\n	        	if	self	.	_se/;"	f
close	data/bpe_corpus_raw/train.py	/^utf-8	def	close	(	self	)	:	\\n	    	self	.	conn	.	close	(	)	\\n		$/;"	f
close	data/bpe_corpus_raw/train.py	/^utf-8	def	close	(	self	,	*	args	,	**	kwds	)	:	\\n	    	from	.	time_series	import	TimeSeries	\\n	/;"	f
close	data/bpe_corpus_raw/valid.py	/^utf-8	def	close	(	self	)	:	\\n	    	curses	.	nocbreak	(	)	\\n	self	.	stdscr	.	keypad	(	0	)	\\n	c/;"	f
close	data/bpe_corpus_raw/valid.py	/^utf-8	def	close	(	self	)	:	\\n	    	if	not	self	.	_closed	:	\\n	        	self	.	_async_client	.	/;"	f
close	data/bpe_corpus_raw/valid.py	/^utf-8	def	close	(	self	)	:	\\n	    	if	self	.	file	is	not	None	:	\\n	        	self	.	file	.	clos/;"	f
close	data/bpe_corpus_raw/valid.py	/^utf-8	def	close	(	self	)	:	\\n	    	self	.	goahead	(	1	)	\\n		$/;"	f
close	data/data_raw/test.py	/^utf-8	def	close	(	)	:	\\n	    	sess	=	getattr	(	cherrypy	.	serving	,	'session'	,	None	)	\\n	if	g/;"	f
close	data/data_raw/test.py	/^utf-8	def	close	(	self	)	:	\\n	    	self	.	_fd_to_key	.	clear	(	)	\\n	self	.	_map	=	None	\\n		$/;"	f
close	data/data_raw/train.py	/^utf-8	@	synchronized	(	_lock	)	\\n	def	close	(	self	)	:	\\n	    	self	.	buf	=	[	]	\\n	self	.	clo/;"	f
close	data/data_raw/train.py	/^utf-8	def	close	(	self	)	:	\\n	    	if	hasattr	(	self	,	'proc'	)	and	self	.	proc	.	returncode	is/;"	f
close	data/data_raw/train.py	/^utf-8	def	close	(	self	)	:	\\n	    	if	self	.	_created_with_new_api	:	\\n	        	if	self	.	_se/;"	f
close	data/data_raw/train.py	/^utf-8	def	close	(	self	)	:	\\n	    	self	.	conn	.	close	(	)	\\n		$/;"	f
close	data/data_raw/train.py	/^utf-8	def	close	(	self	,	*	args	,	**	kwds	)	:	\\n	    	from	.	time_series	import	TimeSeries	\\n	/;"	f
close	data/data_raw/valid.py	/^utf-8	def	close	(	self	)	:	\\n	    	curses	.	nocbreak	(	)	\\n	self	.	stdscr	.	keypad	(	0	)	\\n	c/;"	f
close	data/data_raw/valid.py	/^utf-8	def	close	(	self	)	:	\\n	    	if	not	self	.	_closed	:	\\n	        	self	.	_async_client	.	/;"	f
close	data/data_raw/valid.py	/^utf-8	def	close	(	self	)	:	\\n	    	if	self	.	file	is	not	None	:	\\n	        	self	.	file	.	clos/;"	f
close	data/data_raw/valid.py	/^utf-8	def	close	(	self	)	:	\\n	    	self	.	goahead	(	1	)	\\n		$/;"	f
close_expression	data/bpe_corpus_raw/valid.py	/^utf-8	def	close_expression	(	elided	,	position	)	:	\\n	    	line	=	elided	[	position	.	row	]	\\n/;"	f
close_expression	data/data_raw/valid.py	/^utf-8	def	close_expression	(	elided	,	position	)	:	\\n	    	line	=	elided	[	position	.	row	]	\\n/;"	f
close_first	data/bpe_corpus_raw/test.py	/^utf-8	@	decorator	\\n	def	close_first	(	fn	,	*	args	,	**	kw	)	:	\\n	    	testing_reaper	.	close_/;"	f
close_first	data/data_raw/test.py	/^utf-8	@	decorator	\\n	def	close_first	(	fn	,	*	args	,	**	kw	)	:	\\n	    	testing_reaper	.	close_/;"	f
closed	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	closed	(	self	)	:	\\n	    	return	self	.	_closed	\\n		$/;"	f
closed	data/bpe_corpus_raw/valid.py	/^utf-8	def	loop_until_closed	(	self	)	:	\\n	    	if	isinstance	(	self	.	_state	,	NOT_YET_CONNECTE/;"	f	function:loop_until_closed	file:
closed	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	closed	(	self	)	:	\\n	    	return	self	.	_closed	\\n		$/;"	f
closed	data/data_raw/valid.py	/^utf-8	def	loop_until_closed	(	self	)	:	\\n	    	if	isinstance	(	self	.	_state	,	NOT_YET_CONNECTE/;"	f	function:loop_until_closed	file:
closing	data/bpe_corpus_raw/valid.py	/^utf-8	@	contextmanager	\\n	def	closing	(	self	,	**	close_kwargs	)	:	\\n	    	self	.	_check_close/;"	f
closing	data/data_raw/valid.py	/^utf-8	@	contextmanager	\\n	def	closing	(	self	,	**	close_kwargs	)	:	\\n	    	self	.	_check_close/;"	f
cmd_antenna	data/bpe_corpus_raw/valid.py	/^utf-8	def	cmd_antenna	(	self	,	args	)	:	\\n	    	if	len	(	args	)	!=	2	:	\\n	        	if	self	.	g/;"	f
cmd_antenna	data/data_raw/valid.py	/^utf-8	def	cmd_antenna	(	self	,	args	)	:	\\n	    	if	len	(	args	)	!=	2	:	\\n	        	if	self	.	g/;"	f
cmd_build_exe	data/bpe_corpus_raw/train.py	/^utf-8	def	get_cmdclass	(	)	:	\\n	    	if	'versioneer'	in	sys	.	modules	:	\\n	        	del	sys	.	/;"	c	member:get_cmdclass.cmd_version.initialize_options.finalize_options.run.cmd_build_py.run	file:
cmd_build_exe	data/data_raw/train.py	/^utf-8	def	get_cmdclass	(	)	:	\\n	    	if	'versioneer'	in	sys	.	modules	:	\\n	        	del	sys	.	/;"	c	member:get_cmdclass.cmd_version.initialize_options.finalize_options.run.cmd_build_py.run	file:
cmd_build_py	data/bpe_corpus_raw/train.py	/^utf-8	def	get_cmdclass	(	)	:	\\n	    	if	'versioneer'	in	sys	.	modules	:	\\n	        	del	sys	.	/;"	c	function:get_cmdclass.cmd_version.initialize_options.finalize_options.run	file:
cmd_build_py	data/data_raw/train.py	/^utf-8	def	get_cmdclass	(	)	:	\\n	    	if	'versioneer'	in	sys	.	modules	:	\\n	        	del	sys	.	/;"	c	function:get_cmdclass.cmd_version.initialize_options.finalize_options.run	file:
cmd_sdist	data/bpe_corpus_raw/train.py	/^utf-8	def	get_cmdclass	(	)	:	\\n	    	if	'versioneer'	in	sys	.	modules	:	\\n	        	del	sys	.	/;"	c	member:get_cmdclass.cmd_version.initialize_options.finalize_options.run.cmd_build_py.run.cmd_build_exe.run	file:
cmd_sdist	data/data_raw/train.py	/^utf-8	def	get_cmdclass	(	)	:	\\n	    	if	'versioneer'	in	sys	.	modules	:	\\n	        	del	sys	.	/;"	c	member:get_cmdclass.cmd_version.initialize_options.finalize_options.run.cmd_build_py.run.cmd_build_exe.run	file:
cmd_shell	data/bpe_corpus_raw/test.py	/^utf-8	def	cmd_shell	(	self	,	args	)	:	\\n	    	print	(	run_command	(	args	,	shell	=	False	,	time/;"	f
cmd_shell	data/data_raw/test.py	/^utf-8	def	cmd_shell	(	self	,	args	)	:	\\n	    	print	(	run_command	(	args	,	shell	=	False	,	time/;"	f
cmd_template	data/bpe_corpus_raw/train.py	/^utf-8	def	cmd_template	(	self	)	:	\\n	    	cmd	=	[	'label'	,	self	.	kind	]	\\n	if	self	.	selecto/;"	f
cmd_template	data/data_raw/train.py	/^utf-8	def	cmd_template	(	self	)	:	\\n	    	cmd	=	[	'label'	,	self	.	kind	]	\\n	if	self	.	selecto/;"	f
cmd_unload	data/bpe_corpus_raw/valid.py	/^utf-8	def	cmd_unload	(	self	,	source_hash	)	:	\\n	    	self	.	asys	.	unloadActorSource	(	source_/;"	f
cmd_unload	data/data_raw/valid.py	/^utf-8	def	cmd_unload	(	self	,	source_hash	)	:	\\n	    	self	.	asys	.	unloadActorSource	(	source_/;"	f
cmd_version	data/bpe_corpus_raw/train.py	/^utf-8	def	get_cmdclass	(	)	:	\\n	    	if	'versioneer'	in	sys	.	modules	:	\\n	        	del	sys	.	/;"	c	function:get_cmdclass	file:
cmd_version	data/data_raw/train.py	/^utf-8	def	get_cmdclass	(	)	:	\\n	    	if	'versioneer'	in	sys	.	modules	:	\\n	        	del	sys	.	/;"	c	function:get_cmdclass	file:
cmp_ast	data/bpe_corpus_raw/valid.py	/^utf-8	def	cmp_ast	(	node1	,	node2	)	:	\\n	    	if	type	(	node1	)	!=	type	(	node2	)	:	\\n	       /;"	f
cmp_ast	data/data_raw/valid.py	/^utf-8	def	cmp_ast	(	node1	,	node2	)	:	\\n	    	if	type	(	node1	)	!=	type	(	node2	)	:	\\n	       /;"	f
cmyk2rgb	data/bpe_corpus_raw/valid.py	/^utf-8	def	cmyk2rgb	(	cmyk	,	density	=	1	)	:	\\n	    	c	,	m	,	y	,	k	=	cmyk	\\n	r	=	1.0	-	min	(	1./;"	f
cmyk2rgb	data/data_raw/valid.py	/^utf-8	def	cmyk2rgb	(	cmyk	,	density	=	1	)	:	\\n	    	c	,	m	,	y	,	k	=	cmyk	\\n	r	=	1.0	-	min	(	1./;"	f
code_almost_equal	data/bpe_corpus_raw/valid.py	/^utf-8	def	code_almost_equal	(	a	,	b	)	:	\\n	    	split_a	=	split_and_strip_non_empty_lines	(	a	)/;"	f
code_almost_equal	data/data_raw/valid.py	/^utf-8	def	code_almost_equal	(	a	,	b	)	:	\\n	    	split_a	=	split_and_strip_non_empty_lines	(	a	)/;"	f
code_under_test	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_nested_sequence	(	)	:	\\n	\\n	\\n	    	@	attr	.	s	\\n	class	WrappedIntent	(	objec/;"	f	member:test_nested_sequence.WrappedIntent.internal	file:
code_under_test	data/data_raw/valid.py	/^utf-8	def	test_nested_sequence	(	)	:	\\n	\\n	\\n	    	@	attr	.	s	\\n	class	WrappedIntent	(	objec/;"	f	member:test_nested_sequence.WrappedIntent.internal	file:
col	data/bpe_corpus_raw/train.py	/^utf-8	def	col	(	loc	,	strg	)	:	\\n	    	s	=	strg	\\n	return	1	if	loc	<	len	(	s	)	and	s	[	loc	]	=/;"	f
col	data/data_raw/train.py	/^utf-8	def	col	(	loc	,	strg	)	:	\\n	    	s	=	strg	\\n	return	1	if	loc	<	len	(	s	)	and	s	[	loc	]	=/;"	f
collation	data/bpe_corpus_raw/valid.py	/^utf-8	def	collation	(	self	,	collation	)	:	\\n	    	clone	=	self	.	_clone	(	)	\\n	clone	.	_colla/;"	f
collation	data/data_raw/valid.py	/^utf-8	def	collation	(	self	,	collation	)	:	\\n	    	clone	=	self	.	_clone	(	)	\\n	clone	.	_colla/;"	f
collect_bottoms	data/bpe_corpus_raw/test.py	/^utf-8	def	coord_map_from_to	(	top_from	,	top_to	)	:	\\n	\\n	    	def	collect_bottoms	(	top	)	:	\\/;"	f	function:coord_map_from_to	file:
collect_bottoms	data/data_raw/test.py	/^utf-8	def	coord_map_from_to	(	top_from	,	top_to	)	:	\\n	\\n	    	def	collect_bottoms	(	top	)	:	\\/;"	f	function:coord_map_from_to	file:
color	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	color	(	self	)	:	\\n	    	return	self	.	_color	\\n		$/;"	f
color	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	color	(	self	)	:	\\n	    	return	self	[	'color'	]	\\n		$/;"	f
color	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	color	(	self	)	:	\\n	    	return	self	.	_color	\\n		$/;"	f
color	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	color	(	self	)	:	\\n	    	return	self	[	'color'	]	\\n		$/;"	f
colorize	data/bpe_corpus_raw/valid.py	/^utf-8	def	colorize	(	self	,	css	,	degree	)	:	\\n	    	parts	=	[	c	.	strip	(	'; '	)	for	c	in	css	/;"	f
colorize	data/data_raw/valid.py	/^utf-8	def	colorize	(	self	,	css	,	degree	)	:	\\n	    	parts	=	[	c	.	strip	(	'; '	)	for	c	in	css	/;"	f
combinations	data/bpe_corpus_raw/train.py	/^utf-8	def	combinations	(	pattern	,	words	,	prefix	=	''	)	:	\\n	    	if	not	any	(	w	.	startswith	/;"	f
combinations	data/data_raw/train.py	/^utf-8	def	combinations	(	pattern	,	words	,	prefix	=	''	)	:	\\n	    	if	not	any	(	w	.	startswith	/;"	f
combineSolids	data/bpe_corpus_raw/valid.py	/^utf-8	def	combineSolids	(	self	,	otherCQToCombine	=	None	)	:	\\n	    	toCombine	=	self	.	solids	/;"	f
combineSolids	data/data_raw/valid.py	/^utf-8	def	combineSolids	(	self	,	otherCQToCombine	=	None	)	:	\\n	    	toCombine	=	self	.	solids	/;"	f
combine_types	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	combine_types	(	types	)	:	\\n	    	have_complex	=	False	\\n	combine/;"	f
combine_types	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	combine_types	(	types	)	:	\\n	    	have_complex	=	False	\\n	combine/;"	f
command	data/bpe_corpus_raw/train.py	/^utf-8	def	command	(	cmd	,	*	parameters	)	:	\\n	    	filtered	=	filter	(	lambda	x	:	x	is	not	None/;"	f
command	data/data_raw/train.py	/^utf-8	def	command	(	cmd	,	*	parameters	)	:	\\n	    	filtered	=	filter	(	lambda	x	:	x	is	not	None/;"	f
command_mkdir	data/bpe_corpus_raw/train.py	/^utf-8	def	command_mkdir	(	args	)	:	\\n	    	errors	=	0	\\n	for	directory	in	args	.	dirs	:	\\n	  /;"	f
command_mkdir	data/data_raw/train.py	/^utf-8	def	command_mkdir	(	args	)	:	\\n	    	errors	=	0	\\n	for	directory	in	args	.	dirs	:	\\n	  /;"	f
command_prompts	data/bpe_corpus_raw/valid.py	/^utf-8	def	command_prompts	(	self	)	:	\\n	    	dir	=	self	.	config	[	'base-dir'	]	\\n	if	self	.	t/;"	f
command_prompts	data/data_raw/valid.py	/^utf-8	def	command_prompts	(	self	)	:	\\n	    	dir	=	self	.	config	[	'base-dir'	]	\\n	if	self	.	t/;"	f
command_to_field	data/bpe_corpus_raw/train.py	/^utf-8	def	command_to_field	(	enum	)	:	\\n	    	enum	=	strip_prefix	(	enum	,	'gcvHAL_'	)	.	split	/;"	f
command_to_field	data/data_raw/train.py	/^utf-8	def	command_to_field	(	enum	)	:	\\n	    	enum	=	strip_prefix	(	enum	,	'gcvHAL_'	)	.	split	/;"	f
command_upload	data/bpe_corpus_raw/valid.py	/^utf-8	@	slack_buffer_required	\\n	@	utf8_decode	\\n	def	command_upload	(	data	,	current_buffer	,/;"	f
command_upload	data/data_raw/valid.py	/^utf-8	@	slack_buffer_required	\\n	@	utf8_decode	\\n	def	command_upload	(	data	,	current_buffer	,/;"	f
commit	data/bpe_corpus_raw/valid.py	/^utf-8	def	commit	(	self	)	:	\\n	    	if	self	.	save_dir	is	not	None	:	\\n	        	rmtree	(	self/;"	f
commit	data/bpe_corpus_raw/valid.py	/^utf-8	def	commit	(	self	,	conn	,	commit	)	:	\\n	    	return	commit	(	)	\\n		$/;"	f
commit	data/data_raw/valid.py	/^utf-8	def	commit	(	self	)	:	\\n	    	if	self	.	save_dir	is	not	None	:	\\n	        	rmtree	(	self/;"	f
commit	data/data_raw/valid.py	/^utf-8	def	commit	(	self	,	conn	,	commit	)	:	\\n	    	return	commit	(	)	\\n		$/;"	f
compact_text	data/bpe_corpus_raw/train.py	/^utf-8	def	compact_text	(	text	,	elidelength	=	None	)	:	\\n	    	lines	=	[	]	\\n	for	line	in	text/;"	f
compact_text	data/data_raw/train.py	/^utf-8	def	compact_text	(	text	,	elidelength	=	None	)	:	\\n	    	lines	=	[	]	\\n	for	line	in	text/;"	f
compare_against_time	data/bpe_corpus_raw/valid.py	/^utf-8	def	compare_against_time	(	self	,	testing	,	directive	,	tuple_position	,	error_msg	)	:	\\n/;"	f
compare_against_time	data/data_raw/valid.py	/^utf-8	def	compare_against_time	(	self	,	testing	,	directive	,	tuple_position	,	error_msg	)	:	\\n/;"	f
compare_rendered	data/bpe_corpus_raw/valid.py	/^utf-8	def	compare_rendered	(	obj1	,	obj2	)	:	\\n	    	return	normalize	(	obj1	)	==	normalize	(	o/;"	f
compare_rendered	data/data_raw/valid.py	/^utf-8	def	compare_rendered	(	obj1	,	obj2	)	:	\\n	    	return	normalize	(	obj1	)	==	normalize	(	o/;"	f
compare_stats	data/bpe_corpus_raw/valid.py	/^utf-8	def	compare_stats	(	distarray_stats	,	numpy_stats	,	verbose	=	False	)	:	\\n	    	stat_keys/;"	f
compare_stats	data/data_raw/valid.py	/^utf-8	def	compare_stats	(	distarray_stats	,	numpy_stats	,	verbose	=	False	)	:	\\n	    	stat_keys/;"	f
compare_variables	data/bpe_corpus_raw/valid.py	/^utf-8	def	compare_variables	(	reference	,	current	,	error	,	zerotol	=	1e-14	)	:	\\n	    	assert	/;"	f
compare_variables	data/data_raw/valid.py	/^utf-8	def	compare_variables	(	reference	,	current	,	error	,	zerotol	=	1e-14	)	:	\\n	    	assert	/;"	f
compatible	data/bpe_corpus_raw/train.py	/^utf-8	def	compatible	(	backend	,	format	)	:	\\n	    	if	not	exists	(	backend	)	:	\\n	        	ra/;"	f
compatible	data/data_raw/train.py	/^utf-8	def	compatible	(	backend	,	format	)	:	\\n	    	if	not	exists	(	backend	)	:	\\n	        	ra/;"	f
compile	data/bpe_corpus_raw/valid.py	/^utf-8	def	compile	(	self	,	model	,	loss	=	None	,	optimizer	=	None	,	blocking	=	True	,	\\n	assemb/;"	f
compile	data/data_raw/valid.py	/^utf-8	def	compile	(	self	,	model	,	loss	=	None	,	optimizer	=	None	,	blocking	=	True	,	\\n	assemb/;"	f
compile_node	data/bpe_corpus_raw/valid.py	/^utf-8	def	compile_node	(	self	,	node	)	:	\\n	    	if	node	.	type	==	self	.	syms	.	Matcher	:	\\n	/;"	f
compile_node	data/data_raw/valid.py	/^utf-8	def	compile_node	(	self	,	node	)	:	\\n	    	if	node	.	type	==	self	.	syms	.	Matcher	:	\\n	/;"	f
compile_varbinary	data/bpe_corpus_raw/valid.py	/^utf-8	@	compiles	(	VARBINARY	,	'mssql'	)	\\n	def	compile_varbinary	(	element	,	compiler	,	**	kw	/;"	f
compile_varbinary	data/data_raw/valid.py	/^utf-8	@	compiles	(	VARBINARY	,	'mssql'	)	\\n	def	compile_varbinary	(	element	,	compiler	,	**	kw	/;"	f
completed_settings	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	completed_settings	(	self	)	:	\\n	    	return	deserialize_count_specs	(/;"	f
completed_settings	data/data_raw/train.py	/^utf-8	@	property	\\n	def	completed_settings	(	self	)	:	\\n	    	return	deserialize_count_specs	(/;"	f
compose	data/bpe_corpus_raw/valid.py	/^utf-8	def	compose	(	base_map	,	next_map	)	:	\\n	    	ax1	,	a1	,	b1	=	base_map	\\n	ax2	,	a2	,	b2	/;"	f
compose	data/data_raw/valid.py	/^utf-8	def	compose	(	base_map	,	next_map	)	:	\\n	    	ax1	,	a1	,	b1	=	base_map	\\n	ax2	,	a2	,	b2	/;"	f
compress_json	data/bpe_corpus_raw/valid.py	/^utf-8	def	compress_json	(	data	)	:	\\n	    	json_string	=	json	.	dumps	(	data	)	.	encode	(	'utf-/;"	f
compress_json	data/data_raw/valid.py	/^utf-8	def	compress_json	(	data	)	:	\\n	    	json_string	=	json	.	dumps	(	data	)	.	encode	(	'utf-/;"	f
compressible_mixed_flat_plate	data/bpe_corpus_raw/test.py	/^utf-8	def	compressible_mixed_flat_plate	(	Re	,	Ma	,	Tc	,	xt	)	:	\\n	    	if	xt	<	0.0	or	xt	>	1.0/;"	f
compressible_mixed_flat_plate	data/data_raw/test.py	/^utf-8	def	compressible_mixed_flat_plate	(	Re	,	Ma	,	Tc	,	xt	)	:	\\n	    	if	xt	<	0.0	or	xt	>	1.0/;"	f
compute	data/bpe_corpus_raw/valid.py	/^utf-8	def	map_fn	(	fn	,	elems	,	dtype	=	None	,	parallel_iterations	=	10	,	back_prop	=	True	,	\\n/;"	f	function:map_fn	file:
compute	data/data_raw/valid.py	/^utf-8	def	map_fn	(	fn	,	elems	,	dtype	=	None	,	parallel_iterations	=	10	,	back_prop	=	True	,	\\n/;"	f	function:map_fn	file:
compute_greedy	data/bpe_corpus_raw/train.py	/^utf-8	def	compute_greedy	(	self	,	v	,	sigma	=	None	)	:	\\n	    	if	sigma	is	None	:	\\n	        	/;"	f
compute_greedy	data/data_raw/train.py	/^utf-8	def	compute_greedy	(	self	,	v	,	sigma	=	None	)	:	\\n	    	if	sigma	is	None	:	\\n	        	/;"	f
compute_hydrogen_bonds	data/bpe_corpus_raw/test.py	/^utf-8	def	compute_hydrogen_bonds	(	protein_xyz	,	protein	,	ligand_xyz	,	ligand	,	\\n	pairwise_di/;"	f
compute_hydrogen_bonds	data/data_raw/test.py	/^utf-8	def	compute_hydrogen_bonds	(	protein_xyz	,	protein	,	ligand_xyz	,	ligand	,	\\n	pairwise_di/;"	f
compute_recall	data/bpe_corpus_raw/test.py	/^utf-8	@	deprecated_args	(	IGNORE_MASK_DATE	,	IGNORE_MASK_INSTRUCTIONS	,	'ignore_mask'	)	\\n	def	/;"	f	function:streaming_recall	file:
compute_recall	data/data_raw/test.py	/^utf-8	@	deprecated_args	(	IGNORE_MASK_DATE	,	IGNORE_MASK_INSTRUCTIONS	,	'ignore_mask'	)	\\n	def	/;"	f	function:streaming_recall	file:
concat	data/bpe_corpus_raw/valid.py	/^utf-8	def	concat	(	*	operators	:	AsyncObservable	)	->	AsyncObservable	:	\\n	    	return	Concat	(/;"	f
concat	data/data_raw/valid.py	/^utf-8	def	concat	(	*	operators	:	AsyncObservable	)	->	AsyncObservable	:	\\n	    	return	Concat	(/;"	f
concat_offset	data/bpe_corpus_raw/valid.py	/^utf-8	def	concat_offset	(	concat_dim	,	shape	,	name	=	None	)	:	\\n	    	_ctx	=	_context	.	_conte/;"	f
concat_offset	data/data_raw/valid.py	/^utf-8	def	concat_offset	(	concat_dim	,	shape	,	name	=	None	)	:	\\n	    	_ctx	=	_context	.	_conte/;"	f
concat_ws	data/bpe_corpus_raw/train.py	/^utf-8	@	since	(	1.5	)	\\n	@	ignore_unicode_prefix	\\n	def	concat_ws	(	sep	,	*	cols	)	:	\\n	    	/;"	f
concat_ws	data/data_raw/train.py	/^utf-8	@	since	(	1.5	)	\\n	@	ignore_unicode_prefix	\\n	def	concat_ws	(	sep	,	*	cols	)	:	\\n	    	/;"	f
concretized_specs	data/bpe_corpus_raw/valid.py	/^utf-8	def	concretized_specs	(	self	)	:	\\n	    	for	s	,	h	in	zip	(	self	.	concretized_user_specs/;"	f
concretized_specs	data/data_raw/valid.py	/^utf-8	def	concretized_specs	(	self	)	:	\\n	    	for	s	,	h	in	zip	(	self	.	concretized_user_specs/;"	f
conditional_variance	data/bpe_corpus_raw/train.py	/^utf-8	def	conditional_variance	(	self	,	gp	)	:	\\n	    	return	self	.	gp_link	.	transf	(	gp	)	\\/;"	f
conditional_variance	data/data_raw/train.py	/^utf-8	def	conditional_variance	(	self	,	gp	)	:	\\n	    	return	self	.	gp_link	.	transf	(	gp	)	\\/;"	f
config_ip_domain	data/bpe_corpus_raw/valid.py	/^utf-8	def	config_ip_domain	(	ip_domain	)	:	\\n	    	vrf	=	ip_domain	.	vrfs	.	Vrf	(	)	\\n	vrf	.	v/;"	f
config_ip_domain	data/data_raw/valid.py	/^utf-8	def	config_ip_domain	(	ip_domain	)	:	\\n	    	vrf	=	ip_domain	.	vrfs	.	Vrf	(	)	\\n	vrf	.	v/;"	f
configure	data/bpe_corpus_raw/valid.py	/^utf-8	def	configure	(	self	,	**	kwargs	)	:	\\n	    	args	=	[	'subscription-manager'	,	'config'	]/;"	f
configure	data/bpe_corpus_raw/valid.py	/^utf-8	def	configure	(	self	,	cnf	=	None	,	**	kw	)	:	\\n	    	return	self	.	_configure	(	'configu/;"	f
configure	data/bpe_corpus_raw/valid.py	/^utf-8	def	init	(	)	:	\\n	    	server_formatter	=	cli	.	make_formatter	(	'server'	)	\\n	\\n	@	cli/;"	f	function:init.server_grp._list	file:
configure	data/data_raw/valid.py	/^utf-8	def	configure	(	self	,	**	kwargs	)	:	\\n	    	args	=	[	'subscription-manager'	,	'config'	]/;"	f
configure	data/data_raw/valid.py	/^utf-8	def	configure	(	self	,	cnf	=	None	,	**	kw	)	:	\\n	    	return	self	.	_configure	(	'configu/;"	f
configure	data/data_raw/valid.py	/^utf-8	def	init	(	)	:	\\n	    	server_formatter	=	cli	.	make_formatter	(	'server'	)	\\n	\\n	@	cli/;"	f	function:init.server_grp._list	file:
configure_job	data/bpe_corpus_raw/valid.py	/^utf-8	def	configure_job	(	)	:	\\n	    	training_input	=	{	'pythonModule'	:	'tensor2tensor.bin.t2/;"	f
configure_job	data/data_raw/valid.py	/^utf-8	def	configure_job	(	)	:	\\n	    	training_input	=	{	'pythonModule'	:	'tensor2tensor.bin.t2/;"	f
configure_queues	data/bpe_corpus_raw/valid.py	/^utf-8	def	configure_queues	(	self	)	:	\\n	    	queues	=	self	.	cfg	[	'scheduling'	]	[	'queues'	]/;"	f
configure_queues	data/data_raw/valid.py	/^utf-8	def	configure_queues	(	self	)	:	\\n	    	queues	=	self	.	cfg	[	'scheduling'	]	[	'queues'	]/;"	f
configure_root	data/bpe_corpus_raw/train.py	/^utf-8	def	configure_root	(	self	,	config	,	incremental	=	False	)	:	\\n	    	root	=	logging	.	get/;"	f
configure_root	data/data_raw/train.py	/^utf-8	def	configure_root	(	self	,	config	,	incremental	=	False	)	:	\\n	    	root	=	logging	.	get/;"	f
configure_saml_provider	data/bpe_corpus_raw/valid.py	/^utf-8	def	configure_saml_provider	(	self	,	**	kwargs	)	:	\\n	    	self	.	assertTrue	(	SAMLConfig/;"	f
configure_saml_provider	data/data_raw/valid.py	/^utf-8	def	configure_saml_provider	(	self	,	**	kwargs	)	:	\\n	    	self	.	assertTrue	(	SAMLConfig/;"	f
configure_wsgi	data/bpe_corpus_raw/valid.py	/^utf-8	def	configure_wsgi	(	configfile	)	:	\\n	    	import	Zope2	.	Startup	\\n	starter	=	Zope2	.	/;"	f
configure_wsgi	data/data_raw/valid.py	/^utf-8	def	configure_wsgi	(	configfile	)	:	\\n	    	import	Zope2	.	Startup	\\n	starter	=	Zope2	.	/;"	f
connect	data/bpe_corpus_raw/valid.py	/^utf-8	@	net	.	command	(	)	\\n	@	click	.	argument	(	'id'	)	\\n	def	connect	(	id	)	:	\\n	    	try	/;"	f
connect	data/data_raw/valid.py	/^utf-8	@	net	.	command	(	)	\\n	@	click	.	argument	(	'id'	)	\\n	def	connect	(	id	)	:	\\n	    	try	/;"	f
connect_cloudtrail	data/bpe_corpus_raw/train.py	/^utf-8	def	connect_cloudtrail	(	aws_access_key_id	=	None	,	aws_secret_access_key	=	None	,	\\n	**	/;"	f
connect_cloudtrail	data/data_raw/train.py	/^utf-8	def	connect_cloudtrail	(	aws_access_key_id	=	None	,	aws_secret_access_key	=	None	,	\\n	**	/;"	f
connect_directconnect	data/bpe_corpus_raw/valid.py	/^utf-8	def	connect_directconnect	(	aws_access_key_id	=	None	,	aws_secret_access_key	=	\\n	None	,	/;"	f
connect_directconnect	data/data_raw/valid.py	/^utf-8	def	connect_directconnect	(	aws_access_key_id	=	None	,	aws_secret_access_key	=	\\n	None	,	/;"	f
connect_mturk	data/bpe_corpus_raw/test.py	/^utf-8	def	connect_mturk	(	aws_access_key_id	=	None	,	aws_secret_access_key	=	None	,	**	kwargs	\\/;"	f
connect_mturk	data/data_raw/test.py	/^utf-8	def	connect_mturk	(	aws_access_key_id	=	None	,	aws_secret_access_key	=	None	,	**	kwargs	\\/;"	f
connected_tables	data/bpe_corpus_raw/valid.py	/^utf-8	def	connected_tables	(	self	,	table	)	:	\\n	    	return	[	r	[	0	]	for	r	in	self	.	execute	/;"	f
connected_tables	data/data_raw/valid.py	/^utf-8	def	connected_tables	(	self	,	table	)	:	\\n	    	return	[	r	[	0	]	for	r	in	self	.	execute	/;"	f
connectionLost	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_shutdownDisconnectsCleanly	(	self	)	:	\\n	    	lostOK	=	[	False	]	\\n	\\n	\\n	cla/;"	m	class:test_shutdownDisconnectsCleanly.ProblematicFileDescriptor
connectionLost	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_shutdownDisconnectsCleanly	(	self	)	:	\\n	    	lostOK	=	[	False	]	\\n	\\n	\\n	cla/;"	m	class:test_shutdownDisconnectsCleanly.ProblematicFileDescriptor.connectionLost.OKFileDescriptor
connectionLost	data/data_raw/valid.py	/^utf-8	def	test_shutdownDisconnectsCleanly	(	self	)	:	\\n	    	lostOK	=	[	False	]	\\n	\\n	\\n	cla/;"	m	class:test_shutdownDisconnectsCleanly.ProblematicFileDescriptor
connectionLost	data/data_raw/valid.py	/^utf-8	def	test_shutdownDisconnectsCleanly	(	self	)	:	\\n	    	lostOK	=	[	False	]	\\n	\\n	\\n	cla/;"	m	class:test_shutdownDisconnectsCleanly.ProblematicFileDescriptor.connectionLost.OKFileDescriptor
connectionMade	data/bpe_corpus_raw/valid.py	/^utf-8	def	connectionMade	(	self	)	:	\\n	    	self	.	write	=	self	.	transport	.	write	\\n	self	.	/;"	f
connectionMade	data/data_raw/valid.py	/^utf-8	def	connectionMade	(	self	)	:	\\n	    	self	.	write	=	self	.	transport	.	write	\\n	self	.	/;"	f
connection_from_url	data/bpe_corpus_raw/train.py	/^utf-8	def	connection_from_url	(	url	,	**	kw	)	:	\\n	    	scheme	,	host	,	port	=	get_host	(	url	)/;"	f
connection_from_url	data/data_raw/train.py	/^utf-8	def	connection_from_url	(	url	,	**	kw	)	:	\\n	    	scheme	,	host	,	port	=	get_host	(	url	)/;"	f
connection_lost	data/bpe_corpus_raw/valid.py	/^utf-8	def	connection_lost	(	self	,	exc	)	:	\\n	    	if	self	.	_session_established	:	\\n	       /;"	f
connection_lost	data/data_raw/valid.py	/^utf-8	def	connection_lost	(	self	,	exc	)	:	\\n	    	if	self	.	_session_established	:	\\n	       /;"	f
connection_requested	data/bpe_corpus_raw/train.py	/^utf-8	def	connection_requested	(	self	,	dest_host	,	dest_port	,	orig_host	,	orig_port	)	:	\\n	  /;"	f
connection_requested	data/data_raw/train.py	/^utf-8	def	connection_requested	(	self	,	dest_host	,	dest_port	,	orig_host	,	orig_port	)	:	\\n	  /;"	f
construct	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	construct	(	cls	,	ref	)	:	\\n	    	builder	=	ReflectionRequestFactor/;"	f
construct	data/bpe_corpus_raw/valid.py	/^utf-8	def	construct	(	self	,	title	,	parameters	)	:	\\n	    	sizer	=	wx	.	BoxSizer	(	wx	.	VERTIC/;"	f
construct	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	construct	(	cls	,	ref	)	:	\\n	    	builder	=	ReflectionRequestFactor/;"	f
construct	data/data_raw/valid.py	/^utf-8	def	construct	(	self	,	title	,	parameters	)	:	\\n	    	sizer	=	wx	.	BoxSizer	(	wx	.	VERTIC/;"	f
construct_rnn	data/bpe_corpus_raw/train.py	/^utf-8	def	construct_rnn	(	initial_state	,	sequence_input	,	cell	,	num_label_columns	,	\\n	dtype	/;"	f
construct_rnn	data/data_raw/train.py	/^utf-8	def	construct_rnn	(	initial_state	,	sequence_input	,	cell	,	num_label_columns	,	\\n	dtype	/;"	f
constructor_copy	data/bpe_corpus_raw/valid.py	/^utf-8	def	constructor_copy	(	obj	,	cls	,	**	kw	)	:	\\n	    	names	=	get_cls_kwargs	(	cls	)	\\n	k/;"	f
constructor_copy	data/data_raw/valid.py	/^utf-8	def	constructor_copy	(	obj	,	cls	,	**	kw	)	:	\\n	    	names	=	get_cls_kwargs	(	cls	)	\\n	k/;"	f
consumer	models/preprocess.py	/^    def consumer(tensor):$/;"	f	function:binarize	file:
contacts_delete	data/bpe_corpus_raw/test.py	/^utf-8	@	Contact	.	method	(	request_fields	=	(	'id'	,	)	,	response_fields	=	(	'id'	,	)	,	\\n	user/;"	f
contacts_delete	data/data_raw/test.py	/^utf-8	@	Contact	.	method	(	request_fields	=	(	'id'	,	)	,	response_fields	=	(	'id'	,	)	,	\\n	user/;"	f
content	data/bpe_corpus_raw/test.py	/^utf-8	def	write_object_diff	(	f	,	store	,	old_file	,	new_file	,	diff_binary	=	False	)	:	\\n	    /;"	f	function:write_object_diff.shortid	file:
content	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	content	(	self	)	:	\\n	    	if	not	self	.	_content	:	\\n	        	if	se/;"	f
content	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	content	(	self	)	:	\\n	    	if	self	.	_content	is	False	:	\\n	        	/;"	f
content	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	content	(	self	)	:	\\n	    	if	self	.	_content	is	False	:	\\n	        	/;"	f
content	data/data_raw/test.py	/^utf-8	def	write_object_diff	(	f	,	store	,	old_file	,	new_file	,	diff_binary	=	False	)	:	\\n	    /;"	f	function:write_object_diff.shortid	file:
content	data/data_raw/train.py	/^utf-8	@	property	\\n	def	content	(	self	)	:	\\n	    	if	not	self	.	_content	:	\\n	        	if	se/;"	f
content	data/data_raw/train.py	/^utf-8	@	property	\\n	def	content	(	self	)	:	\\n	    	if	self	.	_content	is	False	:	\\n	        	/;"	f
content	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	content	(	self	)	:	\\n	    	if	self	.	_content	is	False	:	\\n	        	/;"	f
content_delta	data/bpe_corpus_raw/valid.py	/^utf-8	def	content_delta	(	self	,	other	)	:	\\n	    	if	other	is	self	:	\\n	        	return	[	sel/;"	f
content_delta	data/data_raw/valid.py	/^utf-8	def	content_delta	(	self	,	other	)	:	\\n	    	if	other	is	self	:	\\n	        	return	[	sel/;"	f
context_processor	data/bpe_corpus_raw/train.py	/^utf-8	@	setupmethod	\\n	def	context_processor	(	self	,	f	)	:	\\n	    	self	.	template_context_pr/;"	f
context_processor	data/data_raw/train.py	/^utf-8	@	setupmethod	\\n	def	context_processor	(	self	,	f	)	:	\\n	    	self	.	template_context_pr/;"	f
controlDown	data/bpe_corpus_raw/test.py	/^utf-8	def	controlDown	(	*	args	)	:	\\n	$/;"	f
controlDown	data/data_raw/test.py	/^utf-8	def	controlDown	(	*	args	)	:	\\n	$/;"	f
conv1d_mc1	data/bpe_corpus_raw/train.py	/^utf-8	def	conv1d_mc1	(	input	,	filters	,	image_shape	=	None	,	filter_shape	=	None	,	\\n	border_m/;"	f
conv1d_mc1	data/data_raw/train.py	/^utf-8	def	conv1d_mc1	(	input	,	filters	,	image_shape	=	None	,	filter_shape	=	None	,	\\n	border_m/;"	f
conv_params	data/bpe_corpus_raw/train.py	/^utf-8	def	conv_params	(	fn	)	:	\\n	    	params	=	fn	.	params	.	get	(	'convolution_param'	,	fn	.	/;"	f
conv_params	data/data_raw/train.py	/^utf-8	def	conv_params	(	fn	)	:	\\n	    	params	=	fn	.	params	.	get	(	'convolution_param'	,	fn	.	/;"	f
convertToDate	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	convertToDate	(	fmt	=	'%Y-%m-%d'	)	:	\\n	\\n	    	def	cvt_fn	(	s	,	/;"	f
convertToDate	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	convertToDate	(	fmt	=	'%Y-%m-%d'	)	:	\\n	\\n	    	def	cvt_fn	(	s	,	/;"	f
convert_context_to_json	data/bpe_corpus_raw/valid.py	/^utf-8	def	convert_context_to_json	(	self	,	context	)	:	\\n	    	return	json	.	dumps	(	context	)	/;"	f
convert_context_to_json	data/data_raw/valid.py	/^utf-8	def	convert_context_to_json	(	self	,	context	)	:	\\n	    	return	json	.	dumps	(	context	)	/;"	f
convert_interleaved_input	data/bpe_corpus_raw/valid.py	/^utf-8	def	convert_interleaved_input	(	operands	)	:	\\n	    	tmp_operands	=	list	(	operands	)	\\n/;"	f
convert_interleaved_input	data/data_raw/valid.py	/^utf-8	def	convert_interleaved_input	(	operands	)	:	\\n	    	tmp_operands	=	list	(	operands	)	\\n/;"	f
convert_n_to_tensor	data/bpe_corpus_raw/train.py	/^utf-8	def	convert_n_to_tensor	(	values	,	dtype	=	None	,	name	=	None	,	preferred_dtype	=	None	)	:/;"	f
convert_n_to_tensor	data/data_raw/train.py	/^utf-8	def	convert_n_to_tensor	(	values	,	dtype	=	None	,	name	=	None	,	preferred_dtype	=	None	)	:/;"	f
convert_seq	data/bpe_corpus_raw/valid.py	/^utf-8	def	convert_seq	(	seq	)	:	\\n	    	start	,	stop	,	step	=	1	,	None	,	1	\\n	name	=	seq	.	get/;"	f
convert_seq	data/data_raw/valid.py	/^utf-8	def	convert_seq	(	seq	)	:	\\n	    	start	,	stop	,	step	=	1	,	None	,	1	\\n	name	=	seq	.	get/;"	f
convert_to_comparable	data/bpe_corpus_raw/train.py	/^utf-8	def	convert_to_comparable	(	data	)	:	\\n	    	if	type	(	data	)	==	list	:	\\n	        	retu/;"	f
convert_to_comparable	data/data_raw/train.py	/^utf-8	def	convert_to_comparable	(	data	)	:	\\n	    	if	type	(	data	)	==	list	:	\\n	        	retu/;"	f
convert_to_seconds_interval	data/bpe_corpus_raw/test.py	/^utf-8	@	staticmethod	\\n	def	convert_to_seconds_interval	(	interval	)	:	\\n	    	sub_intervals	=/;"	f
convert_to_seconds_interval	data/data_raw/test.py	/^utf-8	@	staticmethod	\\n	def	convert_to_seconds_interval	(	interval	)	:	\\n	    	sub_intervals	=/;"	f
convertfile	data/bpe_corpus_raw/train.py	/^utf-8	def	convertfile	(	filename	,	orig	=	1	)	:	\\n	    	fid	=	open	(	filename	)	\\n	filestr	=	f/;"	f
convertfile	data/data_raw/train.py	/^utf-8	def	convertfile	(	filename	,	orig	=	1	)	:	\\n	    	fid	=	open	(	filename	)	\\n	filestr	=	f/;"	f
cookie_encode	data/bpe_corpus_raw/valid.py	/^utf-8	def	cookie_encode	(	data	,	key	)	:	\\n	    	msg	=	base64	.	b64encode	(	pickle	.	dumps	(	da/;"	f
cookie_encode	data/data_raw/valid.py	/^utf-8	def	cookie_encode	(	data	,	key	)	:	\\n	    	msg	=	base64	.	b64encode	(	pickle	.	dumps	(	da/;"	f
coord2offset	data/bpe_corpus_raw/valid.py	/^utf-8	def	coord2offset	(	coord	)	:	\\n	    	ALPHA	=	'ABCDEFGHIJKLMNOPQRSTUVWXYZ'	\\n	m	=	re	.	ma/;"	f
coord2offset	data/data_raw/valid.py	/^utf-8	def	coord2offset	(	coord	)	:	\\n	    	ALPHA	=	'ABCDEFGHIJKLMNOPQRSTUVWXYZ'	\\n	m	=	re	.	ma/;"	f
coord_map_from_to	data/bpe_corpus_raw/test.py	/^utf-8	def	coord_map_from_to	(	top_from	,	top_to	)	:	\\n	\\n	    	def	collect_bottoms	(	top	)	:	\\/;"	f
coord_map_from_to	data/data_raw/test.py	/^utf-8	def	coord_map_from_to	(	top_from	,	top_to	)	:	\\n	\\n	    	def	collect_bottoms	(	top	)	:	\\/;"	f
copy	data/bpe_corpus_raw/train.py	/^utf-8	def	copy	(	self	,	schema	=	None	)	:	\\n	    	fk	=	ForeignKey	(	self	.	_get_colspec	(	schem/;"	f
copy	data/bpe_corpus_raw/train.py	/^utf-8	def	copy	(	x	)	:	\\n	    	cls	=	type	(	x	)	\\n	copier	=	_copy_dispatch	.	get	(	cls	)	\\n	i/;"	f
copy	data/bpe_corpus_raw/valid.py	/^utf-8	def	copy	(	self	)	:	\\n	    	copied_model	=	GPModel	(	kernel	=	self	.	model	.	kern	.	copy	/;"	f
copy	data/bpe_corpus_raw/valid.py	/^utf-8	def	copy	(	self	)	:	\\n	    	new_cj	=	RequestsCookieJar	(	)	\\n	new_cj	.	update	(	self	)	\\/;"	f
copy	data/bpe_corpus_raw/valid.py	/^utf-8	def	copy	(	self	)	:	\\n	    	ret	=	ParseResults	(	self	.	__toklist	)	\\n	ret	.	__tokdict	=/;"	f
copy	data/bpe_corpus_raw/valid.py	/^utf-8	def	copy	(	self	)	:	\\n	    	return	_core	.	SwigPyIterator_copy	(	self	)	\\n		$/;"	f
copy	data/bpe_corpus_raw/valid.py	/^utf-8	def	copy	(	self	)	:	\\n	    	return	self	.	__class__	(	self	)	\\n		$/;"	f
copy	data/bpe_corpus_raw/valid.py	/^utf-8	def	copy	(	self	)	:	\\n	    	return	self	.	__deepcopy__	(	{	}	)	\\n		$/;"	f
copy	data/bpe_corpus_raw/valid.py	/^utf-8	def	copy	(	self	)	:	\\n	    	return	type	(	self	)	(	self	.	pars	,	self	.	socket	)	\\n		$/;"	f
copy	data/data_raw/train.py	/^utf-8	def	copy	(	self	,	schema	=	None	)	:	\\n	    	fk	=	ForeignKey	(	self	.	_get_colspec	(	schem/;"	f
copy	data/data_raw/train.py	/^utf-8	def	copy	(	x	)	:	\\n	    	cls	=	type	(	x	)	\\n	copier	=	_copy_dispatch	.	get	(	cls	)	\\n	i/;"	f
copy	data/data_raw/valid.py	/^utf-8	def	copy	(	self	)	:	\\n	    	copied_model	=	GPModel	(	kernel	=	self	.	model	.	kern	.	copy	/;"	f
copy	data/data_raw/valid.py	/^utf-8	def	copy	(	self	)	:	\\n	    	new_cj	=	RequestsCookieJar	(	)	\\n	new_cj	.	update	(	self	)	\\/;"	f
copy	data/data_raw/valid.py	/^utf-8	def	copy	(	self	)	:	\\n	    	ret	=	ParseResults	(	self	.	__toklist	)	\\n	ret	.	__tokdict	=/;"	f
copy	data/data_raw/valid.py	/^utf-8	def	copy	(	self	)	:	\\n	    	return	_core	.	SwigPyIterator_copy	(	self	)	\\n		$/;"	f
copy	data/data_raw/valid.py	/^utf-8	def	copy	(	self	)	:	\\n	    	return	self	.	__class__	(	self	)	\\n		$/;"	f
copy	data/data_raw/valid.py	/^utf-8	def	copy	(	self	)	:	\\n	    	return	self	.	__deepcopy__	(	{	}	)	\\n		$/;"	f
copy	data/data_raw/valid.py	/^utf-8	def	copy	(	self	)	:	\\n	    	return	type	(	self	)	(	self	.	pars	,	self	.	socket	)	\\n		$/;"	f
copyDtd	data/bpe_corpus_raw/test.py	/^utf-8	def	copyDtd	(	self	)	:	\\n	    	ret	=	libxml2mod	.	xmlCopyDtd	(	self	.	_o	)	\\n	if	ret	is	/;"	f
copyDtd	data/data_raw/test.py	/^utf-8	def	copyDtd	(	self	)	:	\\n	    	ret	=	libxml2mod	.	xmlCopyDtd	(	self	.	_o	)	\\n	if	ret	is	/;"	f
copyToLayer	data/bpe_corpus_raw/valid.py	/^utf-8	@	on_main_thread	\\n	def	copyToLayer	(	self	,	layer	)	:	\\n	    	layer	.	timeOffset	=	0	\\/;"	f
copyToLayer	data/data_raw/valid.py	/^utf-8	@	on_main_thread	\\n	def	copyToLayer	(	self	,	layer	)	:	\\n	    	layer	.	timeOffset	=	0	\\/;"	f
copyTokenToRepeater	data/bpe_corpus_raw/train.py	/^utf-8	def	matchPreviousLiteral	(	expr	)	:	\\n	    	rep	=	Forward	(	)	\\n	\\n	def	copyTokenToRepe/;"	f	function:matchPreviousLiteral	file:
copyTokenToRepeater	data/data_raw/train.py	/^utf-8	def	matchPreviousLiteral	(	expr	)	:	\\n	    	rep	=	Forward	(	)	\\n	\\n	def	copyTokenToRepe/;"	f	function:matchPreviousLiteral	file:
copy_file_if_newer	data/bpe_corpus_raw/valid.py	/^utf-8	def	copy_file_if_newer	(	src_fs	,	src_path	,	dst_fs	,	dst_path	)	:	\\n	    	with	manage_fs/;"	f
copy_file_if_newer	data/data_raw/valid.py	/^utf-8	def	copy_file_if_newer	(	src_fs	,	src_path	,	dst_fs	,	dst_path	)	:	\\n	    	with	manage_fs/;"	f
copy_scripts	data/bpe_corpus_raw/valid.py	/^utf-8	def	copy_scripts	(	self	)	:	\\n	    	self	.	mkpath	(	self	.	build_dir	)	\\n	outfiles	=	[	]/;"	f
copy_scripts	data/data_raw/valid.py	/^utf-8	def	copy_scripts	(	self	)	:	\\n	    	self	.	mkpath	(	self	.	build_dir	)	\\n	outfiles	=	[	]/;"	f
copyfile	data/bpe_corpus_raw/test.py	/^utf-8	def	copyfile	(	self	,	source	,	outputfile	)	:	\\n	    	shutil	.	copyfileobj	(	source	,	out/;"	f
copyfile	data/data_raw/test.py	/^utf-8	def	copyfile	(	self	,	source	,	outputfile	)	:	\\n	    	shutil	.	copyfileobj	(	source	,	out/;"	f
copystat	data/bpe_corpus_raw/train.py	/^utf-8	def	copystat	(	src	,	dst	)	:	\\n	    	st	=	os	.	stat	(	src	)	\\n	mode	=	stat	.	S_IMODE	(	s/;"	f
copystat	data/data_raw/train.py	/^utf-8	def	copystat	(	src	,	dst	)	:	\\n	    	st	=	os	.	stat	(	src	)	\\n	mode	=	stat	.	S_IMODE	(	s/;"	f
copyto_emitter	data/bpe_corpus_raw/valid.py	/^utf-8	def	copyto_emitter	(	target	,	source	,	env	)	:	\\n	    	n_target	=	[	]	\\n	for	t	in	target/;"	f
copyto_emitter	data/data_raw/valid.py	/^utf-8	def	copyto_emitter	(	target	,	source	,	env	)	:	\\n	    	n_target	=	[	]	\\n	for	t	in	target/;"	f
coro	data/bpe_corpus_raw/test.py	/^utf-8	def	coroutine	(	func	)	:	\\n	    	if	_inspect_iscoroutinefunction	(	func	)	:	\\n	        	/;"	f	function:coroutine	file:
coro	data/data_raw/test.py	/^utf-8	def	coroutine	(	func	)	:	\\n	    	if	_inspect_iscoroutinefunction	(	func	)	:	\\n	        	/;"	f	function:coroutine	file:
coroutine	data/bpe_corpus_raw/test.py	/^utf-8	def	coroutine	(	func	)	:	\\n	    	if	_inspect_iscoroutinefunction	(	func	)	:	\\n	        	/;"	f
coroutine	data/data_raw/test.py	/^utf-8	def	coroutine	(	func	)	:	\\n	    	if	_inspect_iscoroutinefunction	(	func	)	:	\\n	        	/;"	f
corr_nearest_factor	data/bpe_corpus_raw/train.py	/^utf-8	def	corr_nearest_factor	(	corr	,	rank	,	ctol	=	1e-06	,	lam_min	=	1e-30	,	lam_max	=	\\n	1e+/;"	f
corr_nearest_factor	data/data_raw/train.py	/^utf-8	def	corr_nearest_factor	(	corr	,	rank	,	ctol	=	1e-06	,	lam_min	=	1e-30	,	lam_max	=	\\n	1e+/;"	f
correct_last_timing	data/bpe_corpus_raw/valid.py	/^utf-8	def	correct_last_timing	(	self	,	end_time	,	force	=	False	)	:	\\n	    	if	not	self	.	_stil/;"	f
correct_last_timing	data/data_raw/valid.py	/^utf-8	def	correct_last_timing	(	self	,	end_time	,	force	=	False	)	:	\\n	    	if	not	self	.	_stil/;"	f
correlation	data/bpe_corpus_raw/valid.py	/^utf-8	def	correlation	(	args	)	:	\\n	    	p	=	OptionParser	(	correlation	.	__doc__	)	\\n	opts	,	/;"	f
correlation	data/data_raw/valid.py	/^utf-8	def	correlation	(	args	)	:	\\n	    	p	=	OptionParser	(	correlation	.	__doc__	)	\\n	opts	,	/;"	f
correlation_id	data/bpe_corpus_raw/test.py	/^utf-8	@	correlation_id	.	setter	\\n	def	correlation_id	(	self	,	value	)	:	\\n	    	self	.	_updat/;"	f
correlation_id	data/data_raw/test.py	/^utf-8	@	correlation_id	.	setter	\\n	def	correlation_id	(	self	,	value	)	:	\\n	    	self	.	_updat/;"	f
count	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	count	(	self	)	:	\\n	    	return	self	.	_count	\\n		$/;"	f
count	data/bpe_corpus_raw/valid.py	/^utf-8	def	count	(	self	,	*	args	)	:	\\n	    	raise	NotImplementedError	(	)	\\n		$/;"	f
count	data/bpe_corpus_raw/valid.py	/^utf-8	def	count	(	self	,	sub	,	start	=	0	,	end	=	None	)	:	\\n	    	return	count	(	self	,	sub	,	s/;"	f
count	data/bpe_corpus_raw/valid.py	/^utf-8	def	count	(	start	=	0	,	step	=	1	)	:	\\n	    	while	True	:	\\n	        	yield	start	\\n	st/;"	f
count	data/data_raw/train.py	/^utf-8	@	property	\\n	def	count	(	self	)	:	\\n	    	return	self	.	_count	\\n		$/;"	f
count	data/data_raw/valid.py	/^utf-8	def	count	(	self	,	*	args	)	:	\\n	    	raise	NotImplementedError	(	)	\\n		$/;"	f
count	data/data_raw/valid.py	/^utf-8	def	count	(	self	,	sub	,	start	=	0	,	end	=	None	)	:	\\n	    	return	count	(	self	,	sub	,	s/;"	f
count	data/data_raw/valid.py	/^utf-8	def	count	(	start	=	0	,	step	=	1	)	:	\\n	    	while	True	:	\\n	        	yield	start	\\n	st/;"	f
count_daily_messages	data/bpe_corpus_raw/train.py	/^utf-8	@	defer	.	inlineCallbacks	\\n	def	count_daily_messages	(	self	)	:	\\n	\\n	    	def	_count_/;"	f
count_daily_messages	data/data_raw/train.py	/^utf-8	@	defer	.	inlineCallbacks	\\n	def	count_daily_messages	(	self	)	:	\\n	\\n	    	def	_count_/;"	f
count_nonzero	data/bpe_corpus_raw/valid.py	/^utf-8	def	count_nonzero	(	data	,	mapper	=	None	,	blen	=	None	,	storage	=	None	,	create	=	\\n	'ar/;"	f
count_nonzero	data/data_raw/valid.py	/^utf-8	def	count_nonzero	(	data	,	mapper	=	None	,	blen	=	None	,	storage	=	None	,	create	=	\\n	'ar/;"	f
counter	data/bpe_corpus_raw/valid.py	/^utf-8	def	counter	(	self	,	key	)	:	\\n	    	if	key	not	in	self	.	_counters	:	\\n	        	self	./;"	f
counter	data/data_raw/valid.py	/^utf-8	def	counter	(	self	,	key	)	:	\\n	    	if	key	not	in	self	.	_counters	:	\\n	        	self	./;"	f
counts	data_utils/count_filesize_by_ext.py	/^    counts, sizes = get_file_lists(argv[1], pbar)$/;"	v
counts_df	data_utils/get_repolist.py	/^    counts_df = counts_dicts.swifter.progress_bar(True).apply(pd.Series).add_prefix(column + "_"/;"	v
counts_dicts	data_utils/get_repolist.py	/^    counts_dicts = repo_list[["langs", column]].swifter.progress_bar(True).apply(lambda x: dict(/;"	v
cov	data/bpe_corpus_raw/valid.py	/^utf-8	def	cov	(	m	,	y	=	None	,	rowvar	=	True	,	bias	=	False	,	ddof	=	None	,	fweights	=	None	,	\\/;"	f
cov	data/data_raw/valid.py	/^utf-8	def	cov	(	m	,	y	=	None	,	rowvar	=	True	,	bias	=	False	,	ddof	=	None	,	fweights	=	None	,	\\/;"	f
cpu_times	data/bpe_corpus_raw/train.py	/^utf-8	def	cpu_times	(	)	:	\\n	    	procfs_path	=	get_procfs_path	(	)	\\n	set_scputimes_ntuple	(	/;"	f
cpu_times	data/bpe_corpus_raw/valid.py	/^utf-8	def	cpu_times	(	self	)	:	\\n	    	return	self	.	_proc	.	cpu_times	(	)	\\n		$/;"	f
cpu_times	data/data_raw/train.py	/^utf-8	def	cpu_times	(	)	:	\\n	    	procfs_path	=	get_procfs_path	(	)	\\n	set_scputimes_ntuple	(	/;"	f
cpu_times	data/data_raw/valid.py	/^utf-8	def	cpu_times	(	self	)	:	\\n	    	return	self	.	_proc	.	cpu_times	(	)	\\n		$/;"	f
create	data/bpe_corpus_raw/train.py	/^utf-8	def	create	(	self	)	:	\\n	    	results	=	[	]	\\n	self	.	needs_update	(	)	\\n	import	time	\\/;"	f
create	data/bpe_corpus_raw/train.py	/^utf-8	def	create	(	self	)	:	\\n	    	return	self	.	_create_from_content	(	self	.	config	.	name	,/;"	f
create	data/bpe_corpus_raw/train.py	/^utf-8	def	create	(	self	)	:	\\n	    	self	.	_require	(	'name'	,	'instance'	)	\\n	self	.	_pretty_/;"	f
create	data/bpe_corpus_raw/train.py	/^utf-8	def	create	(	self	,	filename	)	:	\\n	    	from	HardcodeTray	.	app	import	App	\\n	if	not	Ap/;"	f
create	data/data_raw/train.py	/^utf-8	def	create	(	self	)	:	\\n	    	results	=	[	]	\\n	self	.	needs_update	(	)	\\n	import	time	\\/;"	f
create	data/data_raw/train.py	/^utf-8	def	create	(	self	)	:	\\n	    	return	self	.	_create_from_content	(	self	.	config	.	name	,/;"	f
create	data/data_raw/train.py	/^utf-8	def	create	(	self	)	:	\\n	    	self	.	_require	(	'name'	,	'instance'	)	\\n	self	.	_pretty_/;"	f
create	data/data_raw/train.py	/^utf-8	def	create	(	self	,	filename	)	:	\\n	    	from	HardcodeTray	.	app	import	App	\\n	if	not	Ap/;"	f
createButtonLayout	data/bpe_corpus_raw/valid.py	/^utf-8	def	createButtonLayout	(	self	)	:	\\n	    	self	.	buttonLayout	=	QtGui	.	QHBoxLayout	(	)	\\/;"	f
createButtonLayout	data/data_raw/valid.py	/^utf-8	def	createButtonLayout	(	self	)	:	\\n	    	self	.	buttonLayout	=	QtGui	.	QHBoxLayout	(	)	\\/;"	f
createCtrlPtProj	data/bpe_corpus_raw/valid.py	/^utf-8	def	createCtrlPtProj	(	curve	,	numCtrlPts	=	3	,	meshIntersect	=	None	,	prefix	=	None	)	:	\\/;"	f
createCtrlPtProj	data/data_raw/valid.py	/^utf-8	def	createCtrlPtProj	(	curve	,	numCtrlPts	=	3	,	meshIntersect	=	None	,	prefix	=	None	)	:	\\/;"	f
createEditor	data/bpe_corpus_raw/test.py	/^utf-8	def	createEditor	(	self	,	parent	,	option	,	index	)	:	\\n	    	model	=	index	.	model	(	)	\\/;"	f
createEditor	data/data_raw/test.py	/^utf-8	def	createEditor	(	self	,	parent	,	option	,	index	)	:	\\n	    	model	=	index	.	model	(	)	\\/;"	f
createNodesToDeleteSet	data/bpe_corpus_raw/valid.py	/^utf-8	def	createNodesToDeleteSet	(	nodes	=	[	]	)	:	\\n	    	nodesToDeleteSet	=	'nodesToDelete'	\\/;"	f
createNodesToDeleteSet	data/data_raw/valid.py	/^utf-8	def	createNodesToDeleteSet	(	nodes	=	[	]	)	:	\\n	    	nodesToDeleteSet	=	'nodesToDelete'	\\/;"	f
createProgBuilder	data/bpe_corpus_raw/valid.py	/^utf-8	def	createProgBuilder	(	env	)	:	\\n	    	try	:	\\n	        	program	=	env	[	'BUILDERS'	]	[/;"	f
createProgBuilder	data/data_raw/valid.py	/^utf-8	def	createProgBuilder	(	env	)	:	\\n	    	try	:	\\n	        	program	=	env	[	'BUILDERS'	]	[/;"	f
createSocket	data/bpe_corpus_raw/train.py	/^utf-8	def	createSocket	(	self	)	:	\\n	    	now	=	time	.	time	(	)	\\n	if	self	.	retryTime	is	None/;"	f
createSocket	data/data_raw/train.py	/^utf-8	def	createSocket	(	self	)	:	\\n	    	now	=	time	.	time	(	)	\\n	if	self	.	retryTime	is	None/;"	f
createTree	data/bpe_corpus_raw/train.py	/^utf-8	def	createTree	(	num_nodes	)	:	\\n	    	root	=	Node	(	num_nodes	\/\/	2	)	\\n	for	i	in	rang/;"	f
createTree	data/data_raw/train.py	/^utf-8	def	createTree	(	num_nodes	)	:	\\n	    	root	=	Node	(	num_nodes	\/\/	2	)	\\n	for	i	in	rang/;"	f
create_activatable_affil	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	create_activatable_affil	(	user	,	affil	,	year	)	:	\\n	    	if	hasa/;"	f
create_activatable_affil	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	create_activatable_affil	(	user	,	affil	,	year	)	:	\\n	    	if	hasa/;"	f
create_app	data/bpe_corpus_raw/valid.py	/^utf-8	def	create_app	(	self	)	:	\\n	    	contract	=	jc	.	Contract	(	)	\\n	return	st	.	OperationC/;"	f
create_app	data/data_raw/valid.py	/^utf-8	def	create_app	(	self	)	:	\\n	    	contract	=	jc	.	Contract	(	)	\\n	return	st	.	OperationC/;"	f
create_apps	data/bpe_corpus_raw/valid.py	/^utf-8	def	create_apps	(	chain_id	,	contracts_path	,	blockchain_services	,	\\n	endpoint_discovery/;"	f
create_apps	data/data_raw/valid.py	/^utf-8	def	create_apps	(	chain_id	,	contracts_path	,	blockchain_services	,	\\n	endpoint_discovery/;"	f
create_aside	data/bpe_corpus_raw/valid.py	/^utf-8	def	create_aside	(	self	,	block_type	,	keys	)	:	\\n	    	aside_cls	=	XBlockAside	.	load_cl/;"	f
create_aside	data/data_raw/valid.py	/^utf-8	def	create_aside	(	self	,	block_type	,	keys	)	:	\\n	    	aside_cls	=	XBlockAside	.	load_cl/;"	f
create_attachment	data/bpe_corpus_raw/valid.py	/^utf-8	def	create_attachment	(	self	,	cr	,	uid	,	ids	,	attachment	,	rendered_report	,	\\n	output_/;"	f
create_attachment	data/data_raw/valid.py	/^utf-8	def	create_attachment	(	self	,	cr	,	uid	,	ids	,	attachment	,	rendered_report	,	\\n	output_/;"	f
create_blender_object_map	data/bpe_corpus_raw/valid.py	/^utf-8	def	create_blender_object_map	(	filename	,	scene_objects	)	:	\\n	    	blender_object_map	=/;"	f
create_blender_object_map	data/data_raw/valid.py	/^utf-8	def	create_blender_object_map	(	filename	,	scene_objects	)	:	\\n	    	blender_object_map	=/;"	f
create_bounds_shapefile	data/bpe_corpus_raw/valid.py	/^utf-8	def	create_bounds_shapefile	(	self	,	pointcloud_path	,	buffer_distance	=	0	,	\\n	decimatio/;"	f
create_bounds_shapefile	data/data_raw/valid.py	/^utf-8	def	create_bounds_shapefile	(	self	,	pointcloud_path	,	buffer_distance	=	0	,	\\n	decimatio/;"	f
create_checklist	data/bpe_corpus_raw/valid.py	/^utf-8	def	create_checklist	(	self	,	checklist_json	,	**	kwargs	)	:	\\n	    	return	self	.	client/;"	f
create_checklist	data/data_raw/valid.py	/^utf-8	def	create_checklist	(	self	,	checklist_json	,	**	kwargs	)	:	\\n	    	return	self	.	client/;"	f
create_cmac_ctx	data/bpe_corpus_raw/valid.py	/^utf-8	@	abc	.	abstractmethod	\\n	def	create_cmac_ctx	(	self	,	algorithm	)	:	\\n	$/;"	f
create_cmac_ctx	data/data_raw/valid.py	/^utf-8	@	abc	.	abstractmethod	\\n	def	create_cmac_ctx	(	self	,	algorithm	)	:	\\n	$/;"	f
create_console	data/bpe_corpus_raw/train.py	/^utf-8	def	create_console	(	)	:	\\n	    	winproxy	.	AllocConsole	(	)	\\n	stdout_handle	=	winproxy/;"	f
create_console	data/data_raw/train.py	/^utf-8	def	create_console	(	)	:	\\n	    	winproxy	.	AllocConsole	(	)	\\n	stdout_handle	=	winproxy/;"	f
create_dict	data/bpe_corpus_raw/valid.py	/^utf-8	def	create_dict	(	self	)	:	\\n	    	self	.	data	[	'apiVersion'	]	=	'v1'	\\n	self	.	data	[	/;"	f
create_dict	data/data_raw/valid.py	/^utf-8	def	create_dict	(	self	)	:	\\n	    	self	.	data	[	'apiVersion'	]	=	'v1'	\\n	self	.	data	[	/;"	f
create_environ	data/bpe_corpus_raw/train.py	/^utf-8	def	create_environ	(	path	=	'\/'	,	query_string	=	''	,	protocol	=	'HTTP\/1.1'	,	scheme	=	\\/;"	f
create_environ	data/data_raw/train.py	/^utf-8	def	create_environ	(	path	=	'\/'	,	query_string	=	''	,	protocol	=	'HTTP\/1.1'	,	scheme	=	\\/;"	f
create_feed_dict	data/bpe_corpus_raw/valid.py	/^utf-8	def	create_feed_dict	(	self	,	inputs_batch	,	labels_batch	=	None	,	initial_state	=	\\n	Non/;"	f
create_feed_dict	data/data_raw/valid.py	/^utf-8	def	create_feed_dict	(	self	,	inputs_batch	,	labels_batch	=	None	,	initial_state	=	\\n	Non/;"	f
create_from_user_input	data/bpe_corpus_raw/valid.py	/^utf-8	def	create_from_user_input	(	raw_properties	,	jamfile_module	,	location	)	:	\\n	    	asser/;"	f
create_from_user_input	data/data_raw/valid.py	/^utf-8	def	create_from_user_input	(	raw_properties	,	jamfile_module	,	location	)	:	\\n	    	asser/;"	f
create_inconsistent_transaction	data/bpe_corpus_raw/valid.py	/^utf-8	@	step	(	'an inconsistent transaction is generated on "([^"]+)"'	)	\\n	def	create_inconsis/;"	f
create_inconsistent_transaction	data/data_raw/valid.py	/^utf-8	@	step	(	'an inconsistent transaction is generated on "([^"]+)"'	)	\\n	def	create_inconsis/;"	f
create_input	data/bpe_corpus_raw/test.py	/^utf-8	def	gru_input	(	)	:	\\n	    	dims_	=	st	.	tuples	(	st	.	integers	(	min_value	=	1	,	max_val/;"	f	function:gru_input	file:
create_input	data/data_raw/test.py	/^utf-8	def	gru_input	(	)	:	\\n	    	dims_	=	st	.	tuples	(	st	.	integers	(	min_value	=	1	,	max_val/;"	f	function:gru_input	file:
create_instruction	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	create_instruction	(	self	)	:	\\n	    	return	self	.	_stubs	[	'data_lab/;"	f
create_instruction	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	create_instruction	(	self	)	:	\\n	    	return	self	.	_stubs	[	'data_lab/;"	f
create_ipaddress	data/bpe_corpus_raw/valid.py	/^utf-8	def	create_ipaddress	(	ip_address	,	family	,	device	=	None	,	interface	=	None	)	:	\\n	    /;"	f
create_ipaddress	data/data_raw/valid.py	/^utf-8	def	create_ipaddress	(	ip_address	,	family	,	device	=	None	,	interface	=	None	)	:	\\n	    /;"	f
create_ipsec_site_connection	data/bpe_corpus_raw/valid.py	/^utf-8	def	create_ipsec_site_connection	(	self	,	body	=	None	)	:	\\n	    	return	self	.	post	(	se/;"	f
create_ipsec_site_connection	data/data_raw/valid.py	/^utf-8	def	create_ipsec_site_connection	(	self	,	body	=	None	)	:	\\n	    	return	self	.	post	(	se/;"	f
create_local_user	data/bpe_corpus_raw/valid.py	/^utf-8	def	create_local_user	(	self	)	:	\\n	    	user	=	User	.	query	.	filter	(	User	.	username	=/;"	f
create_local_user	data/data_raw/valid.py	/^utf-8	def	create_local_user	(	self	)	:	\\n	    	user	=	User	.	query	.	filter	(	User	.	username	=/;"	f
create_log_c	data/bpe_corpus_raw/train.py	/^utf-8	def	create_log_c	(	gamut	,	transfer_function	,	exposure_index	,	lut_directory	,	\\n	lut_re/;"	f
create_log_c	data/data_raw/train.py	/^utf-8	def	create_log_c	(	gamut	,	transfer_function	,	exposure_index	,	lut_directory	,	\\n	lut_re/;"	f
create_maxwell_config	data/bpe_corpus_raw/valid.py	/^utf-8	def	create_maxwell_config	(	client_id	,	instance	,	exclude_dbs	=	None	,	target	=	\\n	'kafk/;"	f
create_maxwell_config	data/data_raw/valid.py	/^utf-8	def	create_maxwell_config	(	client_id	,	instance	,	exclude_dbs	=	None	,	target	=	\\n	'kafk/;"	f
create_metric_ops	data/bpe_corpus_raw/test.py	/^utf-8	def	create_metric_ops	(	self	,	inputs	,	labels	,	predictions	)	:	\\n	\\n	    	def	_get_dic/;"	f
create_metric_ops	data/data_raw/test.py	/^utf-8	def	create_metric_ops	(	self	,	inputs	,	labels	,	predictions	)	:	\\n	\\n	    	def	_get_dic/;"	f
create_missing_issuetrackerissues	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	create_missing_issuetrackerissues	(	parent_type	,	parent_id	)	:	\\n/;"	f
create_missing_issuetrackerissues	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	create_missing_issuetrackerissues	(	parent_type	,	parent_id	)	:	\\n/;"	f
create_model	data/bpe_corpus_raw/valid.py	/^utf-8	def	create_model	(	session	,	source_vocab_size	,	target_vocab_size	,	\\n	forward_only	=	Tr/;"	f
create_model	data/data_raw/valid.py	/^utf-8	def	create_model	(	session	,	source_vocab_size	,	target_vocab_size	,	\\n	forward_only	=	Tr/;"	f
create_module	data/bpe_corpus_raw/valid.py	/^utf-8	def	create_module	(	sym	,	data_shapes	,	label_shapes	,	label_names	,	gpus	=	''	)	:	\\n	   /;"	f
create_module	data/data_raw/valid.py	/^utf-8	def	create_module	(	sym	,	data_shapes	,	label_shapes	,	label_names	,	gpus	=	''	)	:	\\n	   /;"	f
create_object	data/bpe_corpus_raw/train.py	/^utf-8	def	create_object	(	self	,	container	,	name	,	filename	=	None	,	md5	=	None	,	sha256	=	\\n	/;"	f
create_object	data/data_raw/train.py	/^utf-8	def	create_object	(	self	,	container	,	name	,	filename	=	None	,	md5	=	None	,	sha256	=	\\n	/;"	f
create_or_update	data/bpe_corpus_raw/valid.py	/^utf-8	def	create_or_update	(	self	,	resource_group_name	,	server_name	,	job_agent_name	,	\\n	par/;"	f
create_or_update	data/data_raw/valid.py	/^utf-8	def	create_or_update	(	self	,	resource_group_name	,	server_name	,	job_agent_name	,	\\n	par/;"	f
create_profiler_ui	data/bpe_corpus_raw/train.py	/^utf-8	def	create_profiler_ui	(	graph	,	run_metadata	,	ui_type	=	'curses'	,	on_ui_exit	=	None	)	:/;"	f
create_profiler_ui	data/data_raw/train.py	/^utf-8	def	create_profiler_ui	(	graph	,	run_metadata	,	ui_type	=	'curses'	,	on_ui_exit	=	None	)	:/;"	f
create_random_overview	data/bpe_corpus_raw/train.py	/^utf-8	def	create_random_overview	(	img_src	,	x_images	,	y_images	)	:	\\n	    	background	=	Image/;"	f
create_random_overview	data/data_raw/train.py	/^utf-8	def	create_random_overview	(	img_src	,	x_images	,	y_images	)	:	\\n	    	background	=	Image/;"	f
create_raster_from_matrix	data/bpe_corpus_raw/valid.py	/^utf-8	def	create_raster_from_matrix	(	matrix	,	outfile	,	extent	=	None	,	cellsize	=	\\n	CELL_SIZ/;"	f
create_raster_from_matrix	data/data_raw/valid.py	/^utf-8	def	create_raster_from_matrix	(	matrix	,	outfile	,	extent	=	None	,	cellsize	=	\\n	CELL_SIZ/;"	f
create_secret	data/bpe_corpus_raw/valid.py	/^utf-8	@	route	(	args	=	'[uuid, {...}]'	)	\\n	def	create_secret	(	self	,	vault	,	template	)	:	\\n/;"	f
create_secret	data/data_raw/valid.py	/^utf-8	@	route	(	args	=	'[uuid, {...}]'	)	\\n	def	create_secret	(	self	,	vault	,	template	)	:	\\n/;"	f
create_share	data/bpe_corpus_raw/train.py	/^utf-8	def	create_share	(	self	,	context	,	share	,	share_server	=	None	)	:	\\n	    	fpg	,	vfs	,	i/;"	f
create_share	data/data_raw/train.py	/^utf-8	def	create_share	(	self	,	context	,	share	,	share_server	=	None	)	:	\\n	    	fpg	,	vfs	,	i/;"	f
create_state_handler	data/bpe_corpus_raw/valid.py	/^utf-8	def	create_state_handler	(	self	,	api_service_descriptor	)	:	\\n	    	return	self	.	_state/;"	f
create_state_handler	data/data_raw/valid.py	/^utf-8	def	create_state_handler	(	self	,	api_service_descriptor	)	:	\\n	    	return	self	.	_state/;"	f
create_static_password	data/bpe_corpus_raw/valid.py	/^utf-8	def	create_static_password	(	key_hex	)	:	\\n	    	msg_hex	=	'000000000000ffffffffffffffff0/;"	f
create_static_password	data/data_raw/valid.py	/^utf-8	def	create_static_password	(	key_hex	)	:	\\n	    	msg_hex	=	'000000000000ffffffffffffffff0/;"	f
create_symlink	data/bpe_corpus_raw/valid.py	/^utf-8	def	create_symlink	(	gcs_client	,	symlink	,	output	)	:	\\n	    	m	=	GCS_REGEX	.	match	(	sy/;"	f
create_symlink	data/data_raw/valid.py	/^utf-8	def	create_symlink	(	gcs_client	,	symlink	,	output	)	:	\\n	    	m	=	GCS_REGEX	.	match	(	sy/;"	f
create_tar_oio_stream	data/bpe_corpus_raw/valid.py	/^utf-8	def	create_tar_oio_stream	(	self	,	entry	,	range_	)	:	\\n	    	mem	=	''	\\n	name	=	entry	[/;"	f
create_tar_oio_stream	data/data_raw/valid.py	/^utf-8	def	create_tar_oio_stream	(	self	,	entry	,	range_	)	:	\\n	    	mem	=	''	\\n	name	=	entry	[/;"	f
create_test_db	data/bpe_corpus_raw/valid.py	/^utf-8	def	create_test_db	(	self	,	verbosity	=	1	,	autoclobber	=	False	,	**	kwargs	)	:	\\n	    	f/;"	f
create_test_db	data/data_raw/valid.py	/^utf-8	def	create_test_db	(	self	,	verbosity	=	1	,	autoclobber	=	False	,	**	kwargs	)	:	\\n	    	f/;"	f
create_tmp_file_from_contents	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	create_tmp_file_from_contents	(	rname	,	data	,	ftype	=	'yaml'	)	:	\\/;"	f
create_tmp_file_from_contents	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	create_tmp_file_from_contents	(	rname	,	data	,	ftype	=	'yaml'	)	:	\\/;"	f
create_tmpfile	data/bpe_corpus_raw/train.py	/^utf-8	@	staticmethod	\\n	def	create_tmpfile	(	prefix	=	'tmp'	)	:	\\n	    	with	tempfile	.	NamedT/;"	f
create_tmpfile	data/data_raw/train.py	/^utf-8	@	staticmethod	\\n	def	create_tmpfile	(	prefix	=	'tmp'	)	:	\\n	    	with	tempfile	.	NamedT/;"	f
create_tmpfile_copy	data/bpe_corpus_raw/train.py	/^utf-8	@	staticmethod	\\n	def	create_tmpfile_copy	(	inc_file	)	:	\\n	    	tmpfile	=	Utils	.	creat/;"	f
create_tmpfile_copy	data/data_raw/train.py	/^utf-8	@	staticmethod	\\n	def	create_tmpfile_copy	(	inc_file	)	:	\\n	    	tmpfile	=	Utils	.	creat/;"	f
create_tool_with_necessary_models	data/bpe_corpus_raw/valid.py	/^utf-8	def	create_tool_with_necessary_models	(	tool_type	,	user	=	None	)	:	\\n	    	if	tool_type	/;"	f
create_tool_with_necessary_models	data/data_raw/valid.py	/^utf-8	def	create_tool_with_necessary_models	(	tool_type	,	user	=	None	)	:	\\n	    	if	tool_type	/;"	f
create_trainer	data/bpe_corpus_raw/valid.py	/^utf-8	def	create_trainer	(	args	,	converter	,	tag_index	)	:	\\n	    	logger	=	logging	.	getLogge/;"	f
create_trainer	data/data_raw/valid.py	/^utf-8	def	create_trainer	(	args	,	converter	,	tag_index	)	:	\\n	    	logger	=	logging	.	getLogge/;"	f
create_xoroshiro128p_states	data/bpe_corpus_raw/valid.py	/^utf-8	def	create_xoroshiro128p_states	(	n	,	seed	,	subsequence_start	=	0	,	stream	=	0	)	:	\\n	  /;"	f
create_xoroshiro128p_states	data/data_raw/valid.py	/^utf-8	def	create_xoroshiro128p_states	(	n	,	seed	,	subsequence_start	=	0	,	stream	=	0	)	:	\\n	  /;"	f
created	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_create_ignores_other_nodes	(	self	)	:	\\n	    	saving	=	self	.	persistence_servic/;"	f	function:test_create_ignores_other_nodes.saved	file:
created	data/data_raw/valid.py	/^utf-8	def	test_create_ignores_other_nodes	(	self	)	:	\\n	    	saving	=	self	.	persistence_servic/;"	f	function:test_create_ignores_other_nodes.saved	file:
cross_entropy_reward_loss	data/bpe_corpus_raw/train.py	/^utf-8	def	cross_entropy_reward_loss	(	logits	,	actions	,	rewards	)	:	\\n	    	cross_entropy	=	tf/;"	f
cross_entropy_reward_loss	data/data_raw/train.py	/^utf-8	def	cross_entropy_reward_loss	(	logits	,	actions	,	rewards	)	:	\\n	    	cross_entropy	=	tf/;"	f
cross_reference	data/bpe_corpus_raw/valid.py	/^utf-8	def	cross_reference	(	self	,	model	)	:	\\n	    	msg	=	', which is required by %s'	%	self	./;"	f
cross_reference	data/data_raw/valid.py	/^utf-8	def	cross_reference	(	self	,	model	)	:	\\n	    	msg	=	', which is required by %s'	%	self	./;"	f
csrf_response_exempt	data/bpe_corpus_raw/valid.py	/^utf-8	def	csrf_response_exempt	(	view_func	)	:	\\n	\\n	    	def	wrapped_view	(	*	args	,	**	kwarg/;"	f
csrf_response_exempt	data/data_raw/valid.py	/^utf-8	def	csrf_response_exempt	(	view_func	)	:	\\n	\\n	    	def	wrapped_view	(	*	args	,	**	kwarg/;"	f
ctime	data/bpe_corpus_raw/valid.py	/^utf-8	def	ctime	(	self	)	:	\\n	    	weekday	=	self	.	toordinal	(	)	%	7	or	7	\\n	return	'%s %s %2/;"	f
ctime	data/data_raw/valid.py	/^utf-8	def	ctime	(	self	)	:	\\n	    	weekday	=	self	.	toordinal	(	)	%	7	or	7	\\n	return	'%s %s %2/;"	f
cublasZher2	data/bpe_corpus_raw/valid.py	/^utf-8	def	cublasZher2	(	handle	,	uplo	,	n	,	alpha	,	x	,	incx	,	y	,	incy	,	A	,	lda	)	:	\\n	    	s/;"	f
cublasZher2	data/data_raw/valid.py	/^utf-8	def	cublasZher2	(	handle	,	uplo	,	n	,	alpha	,	x	,	incx	,	y	,	incy	,	A	,	lda	)	:	\\n	    	s/;"	f
cufftMakePlan1d	data/bpe_corpus_raw/train.py	/^utf-8	def	cufftMakePlan1d	(	plan	,	nx	,	fft_type	,	batch	)	:	\\n	    	worksize	=	_types	.	worksi/;"	f
cufftMakePlan1d	data/data_raw/train.py	/^utf-8	def	cufftMakePlan1d	(	plan	,	nx	,	fft_type	,	batch	)	:	\\n	    	worksize	=	_types	.	worksi/;"	f
cumsum	data/bpe_corpus_raw/valid.py	/^utf-8	def	cumsum	(	a	,	axis	=	None	,	dtype	=	None	,	out	=	None	)	:	\\n	    	return	_wrapfunc	(	a/;"	f
cumsum	data/data_raw/valid.py	/^utf-8	def	cumsum	(	a	,	axis	=	None	,	dtype	=	None	,	out	=	None	)	:	\\n	    	return	_wrapfunc	(	a/;"	f
cumulative_var	data/bpe_corpus_raw/train.py	/^utf-8	def	cumulative_var	(	self	)	:	\\n	    	from	.	.	import	extensions	\\n	agg_op	=	'__builtin_/;"	f
cumulative_var	data/data_raw/train.py	/^utf-8	def	cumulative_var	(	self	)	:	\\n	    	from	.	.	import	extensions	\\n	agg_op	=	'__builtin_/;"	f
current_fan_mode	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	current_fan_mode	(	self	)	:	\\n	    	mode	=	self	.	vera_device	.	get_fa/;"	f
current_fan_mode	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	current_fan_mode	(	self	)	:	\\n	    	mode	=	self	.	vera_device	.	get_fa/;"	f
current_revision	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	current_revision	(	self	)	:	\\n	    	return	self	.	_current_revision	\\/;"	f
current_revision	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	current_revision	(	self	)	:	\\n	    	return	self	.	_current_revision	\\/;"	f
curve_secretkey	data/bpe_corpus_raw/valid.py	/^utf-8	def	curve_secretkey	(	self	)	:	\\n	    	return	utils	.	lib	.	zsock_curve_secretkey	(	self	/;"	f
curve_secretkey	data/data_raw/valid.py	/^utf-8	def	curve_secretkey	(	self	)	:	\\n	    	return	utils	.	lib	.	zsock_curve_secretkey	(	self	/;"	f
custom_command	data/bpe_corpus_raw/train.py	/^utf-8	def	custom_command	(	self	,	command	,	arg	=	None	)	:	\\n	    	custom	=	Reply	(	command	=	c/;"	f
custom_command	data/data_raw/train.py	/^utf-8	def	custom_command	(	self	,	command	,	arg	=	None	)	:	\\n	    	custom	=	Reply	(	command	=	c/;"	f
customize_compiler_for_nvcc	data/bpe_corpus_raw/valid.py	/^utf-8	def	customize_compiler_for_nvcc	(	self	)	:	\\n	    	self	.	src_extensions	.	append	(	'.cu'/;"	f
customize_compiler_for_nvcc	data/data_raw/valid.py	/^utf-8	def	customize_compiler_for_nvcc	(	self	)	:	\\n	    	self	.	src_extensions	.	append	(	'.cu'/;"	f
cvt_fn	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	convertToDate	(	fmt	=	'%Y-%m-%d'	)	:	\\n	\\n	    	def	cvt_fn	(	s	,	/;"	f	function:convertToDate	file:
cvt_fn	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	convertToDate	(	fmt	=	'%Y-%m-%d'	)	:	\\n	\\n	    	def	cvt_fn	(	s	,	/;"	f	function:convertToDate	file:
cycle_graph	data/bpe_corpus_raw/train.py	/^utf-8	def	cycle_graph	(	n	,	create_using	=	None	)	:	\\n	    	G	=	path_graph	(	n	,	create_using	)/;"	f
cycle_graph	data/data_raw/train.py	/^utf-8	def	cycle_graph	(	n	,	create_using	=	None	)	:	\\n	    	G	=	path_graph	(	n	,	create_using	)/;"	f
cycle_index	data/bpe_corpus_raw/valid.py	/^utf-8	def	cycle_index	(	self	,	parent	=	None	)	:	\\n	    	from	sage	.	categories	.	modules	impor/;"	f
cycle_index	data/data_raw/valid.py	/^utf-8	def	cycle_index	(	self	,	parent	=	None	)	:	\\n	    	from	sage	.	categories	.	modules	impor/;"	f
cython_create_local_so	data/bpe_corpus_raw/valid.py	/^utf-8	def	cython_create_local_so	(	filename	)	:	\\n	    	from	sage	.	misc	.	superseded	import	de/;"	f
cython_create_local_so	data/data_raw/valid.py	/^utf-8	def	cython_create_local_so	(	filename	)	:	\\n	    	from	sage	.	misc	.	superseded	import	de/;"	f
dajaxice_autodiscover	data/bpe_corpus_raw/valid.py	/^utf-8	def	dajaxice_autodiscover	(	)	:	\\n	    	global	LOADING_DAJAXICE	\\n	if	LOADING_DAJAXICE	:/;"	f
dajaxice_autodiscover	data/data_raw/valid.py	/^utf-8	def	dajaxice_autodiscover	(	)	:	\\n	    	global	LOADING_DAJAXICE	\\n	if	LOADING_DAJAXICE	:/;"	f
data	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	data	(	self	)	:	\\n	    	return	self	.	_data	(	)	\\n		$/;"	f
data	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	data	(	self	)	:	\\n	    	return	self	.	_data	(	)	\\n		$/;"	f
data	data_utils/count_filesize_by_ext.py	/^    data = merge_dicts_to_table(counts, sizes)$/;"	v
data_save	data/bpe_corpus_raw/valid.py	/^utf-8	def	data_save	(	self	,	cr	,	uid	,	ids	,	context	=	None	)	:	\\n	    	journal_period_pool	=	/;"	f
data_save	data/data_raw/valid.py	/^utf-8	def	data_save	(	self	,	cr	,	uid	,	ids	,	context	=	None	)	:	\\n	    	journal_period_pool	=	/;"	f
data_watches	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	data_watches	(	self	)	:	\\n	    	return	self	.	_data_watchers	.	keys	(	/;"	f
data_watches	data/data_raw/train.py	/^utf-8	@	property	\\n	def	data_watches	(	self	)	:	\\n	    	return	self	.	_data_watchers	.	keys	(	/;"	f
database_name	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	database_name	(	self	)	:	\\n	    	return	self	.	__db	\\n		$/;"	f
database_name	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	database_name	(	self	)	:	\\n	    	return	self	.	__db	\\n		$/;"	f
dataforsize	data/bpe_corpus_raw/test.py	/^utf-8	def	dataforsize	(	self	,	size	)	:	\\n	    	dct	=	{	}	\\n	for	code	,	reader	in	self	.	SIZES/;"	f
dataforsize	data/data_raw/test.py	/^utf-8	def	dataforsize	(	self	,	size	)	:	\\n	    	dct	=	{	}	\\n	for	code	,	reader	in	self	.	SIZES/;"	f
datapath	data/bpe_corpus_raw/train.py	/^utf-8	def	datapath	(	self	,	*	paths	)	:	\\n	    	if	ranger	.	args	.	clean	:	\\n	        	self	.	/;"	f
datapath	data/data_raw/train.py	/^utf-8	def	datapath	(	self	,	*	paths	)	:	\\n	    	if	ranger	.	args	.	clean	:	\\n	        	self	.	/;"	f
dataset	data_utils/clean_dataset.py	/^dataset = dataset.compute(scheduler="processes")$/;"	v
dataset	data_utils/clean_dataset.py	/^dataset = dataset.loc[dataset["languages"] == "en"]$/;"	v
dataset	data_utils/clean_dataset.py	/^dataset = dd.from_pandas(dataset, npartitions=12)$/;"	v
dataset	data_utils/clean_dataset.py	/^dataset = pd.read_pickle("fn_data.pickle.gz")$/;"	v
dataset	data_utils/data_to_text.py	/^dataset = shuffle(dataset)$/;"	v
dataset	data_utils/data_to_text.py	/^dataset: pd.DataFrame = pd.read_pickle("data\/fn_data_cleaned.pickle.gz")$/;"	v
dataset_cov	data/bpe_corpus_raw/valid.py	/^utf-8	def	dataset_cov	(	)	:	\\n	    	n	,	dim	=	300	,	2	\\n	np	.	random	.	seed	(	0	)	\\n	C	=	np	./;"	f
dataset_cov	data/data_raw/valid.py	/^utf-8	def	dataset_cov	(	)	:	\\n	    	n	,	dim	=	300	,	2	\\n	np	.	random	.	seed	(	0	)	\\n	C	=	np	./;"	f
dataset_dest_file	models/preprocess.py	/^def dataset_dest_file(args, output_prefix, lang, extension):$/;"	f
dataset_dest_prefix	models/preprocess.py	/^def dataset_dest_prefix(args, output_prefix, lang):$/;"	f
date	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	date	(	self	)	:	\\n	    	if	self	.	type_	is	not	[	'git'	,	'annex'	]	:	\\/;"	f
date	data/data_raw/train.py	/^utf-8	@	property	\\n	def	date	(	self	)	:	\\n	    	if	self	.	type_	is	not	[	'git'	,	'annex'	]	:	\\/;"	f
date_format	data/bpe_corpus_raw/train.py	/^utf-8	def	date_format	(	value	,	format	=	None	,	use_l10n	=	None	)	:	\\n	    	return	dateformat	./;"	f
date_format	data/data_raw/train.py	/^utf-8	def	date_format	(	value	,	format	=	None	,	use_l10n	=	None	)	:	\\n	    	return	dateformat	./;"	f
datetime	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	datetime	(	self	)	:	\\n	    	post	=	[	]	\\n	for	attr	in	self	.	attrName/;"	f
datetime	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	datetime	(	self	)	:	\\n	    	post	=	[	]	\\n	for	attr	in	self	.	attrName/;"	f
datetimeToLogString	data/bpe_corpus_raw/valid.py	/^utf-8	def	datetimeToLogString	(	msSinceEpoch	=	None	)	:	\\n	    	if	msSinceEpoch	==	None	:	\\n	 /;"	f
datetimeToLogString	data/data_raw/valid.py	/^utf-8	def	datetimeToLogString	(	msSinceEpoch	=	None	)	:	\\n	    	if	msSinceEpoch	==	None	:	\\n	 /;"	f
datetime_ceil	data/bpe_corpus_raw/valid.py	/^utf-8	def	datetime_ceil	(	dateval	)	:	\\n	    	if	dateval	.	microsecond	>	0	:	\\n	        	retur/;"	f
datetime_ceil	data/data_raw/valid.py	/^utf-8	def	datetime_ceil	(	dateval	)	:	\\n	    	if	dateval	.	microsecond	>	0	:	\\n	        	retur/;"	f
datetime_from_iso8601	data/bpe_corpus_raw/train.py	/^utf-8	def	datetime_from_iso8601	(	value	)	:	\\n	    	try	:	\\n	        	try	:	\\n	            	r/;"	f
datetime_from_iso8601	data/data_raw/train.py	/^utf-8	def	datetime_from_iso8601	(	value	)	:	\\n	    	try	:	\\n	        	try	:	\\n	            	r/;"	f
days	data/bpe_corpus_raw/test.py	/^utf-8	@	property	\\n	def	days	(	self	)	:	\\n	    	return	self	.	_get_field	(	'days'	)	\\n		$/;"	f
days	data/data_raw/test.py	/^utf-8	@	property	\\n	def	days	(	self	)	:	\\n	    	return	self	.	_get_field	(	'days'	)	\\n		$/;"	f
db_location	data_utils/get_file_contents.py	/^db_location = "\/home\/rishi\/ext\/file_data.sqlite"$/;"	v
dd	data_utils/clean_dataset.py	/^import dask.dataframe as dd$/;"	I
debug_application	data/bpe_corpus_raw/valid.py	/^utf-8	def	debug_application	(	self	,	environ	,	start_response	)	:	\\n	    	app_iter	=	None	\\n	t/;"	f
debug_application	data/data_raw/valid.py	/^utf-8	def	debug_application	(	self	,	environ	,	start_response	)	:	\\n	    	app_iter	=	None	\\n	t/;"	f
debug_info	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	debug_info	(	self	)	:	\\n	    	return	[	tuple	(	imap	(	int	,	x	.	split	/;"	f
debug_info	data/data_raw/train.py	/^utf-8	@	property	\\n	def	debug_info	(	self	)	:	\\n	    	return	[	tuple	(	imap	(	int	,	x	.	split	/;"	f
debug_script	data/bpe_corpus_raw/valid.py	/^utf-8	def	debug_script	(	src	,	pm	=	False	,	globs	=	None	)	:	\\n	    	import	pdb	\\n	if	globs	:	/;"	f
debug_script	data/data_raw/valid.py	/^utf-8	def	debug_script	(	src	,	pm	=	False	,	globs	=	None	)	:	\\n	    	import	pdb	\\n	if	globs	:	/;"	f
decallmethods	data/bpe_corpus_raw/valid.py	/^utf-8	def	decallmethods	(	decorator	,	prefix	=	'test_'	)	:	\\n	\\n	    	def	dectheclass	(	cls	)	/;"	f
decallmethods	data/data_raw/valid.py	/^utf-8	def	decallmethods	(	decorator	,	prefix	=	'test_'	)	:	\\n	\\n	    	def	dectheclass	(	cls	)	/;"	f
decode	data/bpe_corpus_raw/train.py	/^utf-8	@	array_function_dispatch	(	_code_dispatcher	)	\\n	def	decode	(	a	,	encoding	=	None	,	erro/;"	f
decode	data/bpe_corpus_raw/train.py	/^utf-8	def	decode	(	loc	,	priors	,	variances	)	:	\\n	    	boxes	=	torch	.	cat	(	(	priors	[	:	,	:	/;"	f
decode	data/bpe_corpus_raw/train.py	/^utf-8	def	decode	(	s	,	convert_eols	=	None	)	:	\\n	    	if	not	s	:	\\n	        	return	s	\\n		de/;"	f
decode	data/bpe_corpus_raw/valid.py	/^utf-8	def	decode	(	encoded	,	eol	=	NL	)	:	\\n	    	if	not	encoded	:	\\n	        	return	encoded	/;"	f
decode	data/data_raw/train.py	/^utf-8	@	array_function_dispatch	(	_code_dispatcher	)	\\n	def	decode	(	a	,	encoding	=	None	,	erro/;"	f
decode	data/data_raw/train.py	/^utf-8	def	decode	(	loc	,	priors	,	variances	)	:	\\n	    	boxes	=	torch	.	cat	(	(	priors	[	:	,	:	/;"	f
decode	data/data_raw/train.py	/^utf-8	def	decode	(	s	,	convert_eols	=	None	)	:	\\n	    	if	not	s	:	\\n	        	return	s	\\n		de/;"	f
decode	data/data_raw/valid.py	/^utf-8	def	decode	(	encoded	,	eol	=	NL	)	:	\\n	    	if	not	encoded	:	\\n	        	return	encoded	/;"	f
decode_address	data/bpe_corpus_raw/train.py	/^utf-8	def	decode_address	(	self	,	addr	)	:	\\n	    	if	_debug	:	\\n	        	Address	.	_debug	(	/;"	f
decode_address	data/data_raw/train.py	/^utf-8	def	decode_address	(	self	,	addr	)	:	\\n	    	if	_debug	:	\\n	        	Address	.	_debug	(	/;"	f
decode_boolean	data/bpe_corpus_raw/valid.py	/^utf-8	def	decode_boolean	(	self	,	s	,	i	=	0	)	:	\\n	    	if	s	[	i	:	i	+	4	]	==	'true'	:	\\n	    /;"	f
decode_boolean	data/data_raw/valid.py	/^utf-8	def	decode_boolean	(	self	,	s	,	i	=	0	)	:	\\n	    	if	s	[	i	:	i	+	4	]	==	'true'	:	\\n	    /;"	f
decode_data	data/bpe_corpus_raw/valid.py	/^utf-8	def	decode_data	(	data	)	:	\\n	    	decoded	=	[	]	\\n	for	i	in	data	:	\\n	        	decoded/;"	f
decode_data	data/data_raw/valid.py	/^utf-8	def	decode_data	(	data	)	:	\\n	    	decoded	=	[	]	\\n	for	i	in	data	:	\\n	        	decoded/;"	f
decode_if_not_None	data/bpe_corpus_raw/train.py	/^utf-8	def	run	(	self	,	cmd	,	log_stdout	=	True	,	log_stderr	=	True	,	log_online	=	False	,	\\n	ex/;"	f	function:run	file:
decode_if_not_None	data/data_raw/train.py	/^utf-8	def	run	(	self	,	cmd	,	log_stdout	=	True	,	log_stderr	=	True	,	log_online	=	False	,	\\n	ex/;"	f	function:run	file:
decode_long	data/bpe_corpus_raw/valid.py	/^utf-8	def	decode_long	(	data	)	:	\\n	    	return	int	.	from_bytes	(	data	,	byteorder	=	'little'	/;"	f
decode_long	data/data_raw/valid.py	/^utf-8	def	decode_long	(	data	)	:	\\n	    	return	int	.	from_bytes	(	data	,	byteorder	=	'little'	/;"	f
decode_parameter_plus	data/bpe_corpus_raw/valid.py	/^utf-8	def	decode_parameter_plus	(	self	,	key	,	default	=	None	)	:	\\n	    	parameter	=	self	.	ge/;"	f
decode_parameter_plus	data/data_raw/valid.py	/^utf-8	def	decode_parameter_plus	(	self	,	key	,	default	=	None	)	:	\\n	    	parameter	=	self	.	ge/;"	f
decode_replay_game_events	data/bpe_corpus_raw/train.py	/^utf-8	def	decode_replay_game_events	(	contents	)	:	\\n	    	decoder	=	BitPackedDecoder	(	content/;"	f
decode_replay_game_events	data/data_raw/train.py	/^utf-8	def	decode_replay_game_events	(	contents	)	:	\\n	    	decoder	=	BitPackedDecoder	(	content/;"	f
decode_replay_header	data/bpe_corpus_raw/test.py	/^utf-8	def	decode_replay_header	(	contents	)	:	\\n	    	decoder	=	VersionedDecoder	(	contents	,	t/;"	f
decode_replay_header	data/bpe_corpus_raw/valid.py	/^utf-8	def	decode_replay_header	(	contents	)	:	\\n	    	decoder	=	VersionedDecoder	(	contents	,	t/;"	f
decode_replay_header	data/data_raw/test.py	/^utf-8	def	decode_replay_header	(	contents	)	:	\\n	    	decoder	=	VersionedDecoder	(	contents	,	t/;"	f
decode_replay_header	data/data_raw/valid.py	/^utf-8	def	decode_replay_header	(	contents	)	:	\\n	    	decoder	=	VersionedDecoder	(	contents	,	t/;"	f
decode_replay_initdata	data/bpe_corpus_raw/test.py	/^utf-8	def	decode_replay_initdata	(	contents	)	:	\\n	    	decoder	=	BitPackedDecoder	(	contents	,/;"	f
decode_replay_initdata	data/data_raw/test.py	/^utf-8	def	decode_replay_initdata	(	contents	)	:	\\n	    	decoder	=	BitPackedDecoder	(	contents	,/;"	f
decode_slice	data/bpe_corpus_raw/train.py	/^utf-8	def	decode_slice	(	slc	)	:	\\n	    	ret	=	[	]	\\n	for	x	in	(	slc	.	start	,	slc	.	stop	,	sl/;"	f
decode_slice	data/data_raw/train.py	/^utf-8	def	decode_slice	(	slc	)	:	\\n	    	ret	=	[	]	\\n	for	x	in	(	slc	.	start	,	slc	.	stop	,	sl/;"	f
decode_video_eager_fallback	data/bpe_corpus_raw/test.py	/^utf-8	def	decode_video_eager_fallback	(	contents	,	name	=	None	,	ctx	=	None	)	:	\\n	    	_ctx	=	/;"	f
decode_video_eager_fallback	data/data_raw/test.py	/^utf-8	def	decode_video_eager_fallback	(	contents	,	name	=	None	,	ctx	=	None	)	:	\\n	    	_ctx	=	/;"	f
decorator	data/bpe_corpus_raw/test.py	/^utf-8	@	staticmethod	\\n	def	removes_return	(	)	:	\\n	\\n	    	def	decorator	(	fn	)	:	\\n	      /;"	f	function:removes_return	file:
decorator	data/bpe_corpus_raw/valid.py	/^utf-8	def	requires	(	*	requirements	,	**	opts	)	:	\\n	    	identity	=	opts	.	get	(	'identity'	)	/;"	f	function:requires	file:
decorator	data/data_raw/test.py	/^utf-8	@	staticmethod	\\n	def	removes_return	(	)	:	\\n	\\n	    	def	decorator	(	fn	)	:	\\n	      /;"	f	function:removes_return	file:
decorator	data/data_raw/valid.py	/^utf-8	def	requires	(	*	requirements	,	**	opts	)	:	\\n	    	identity	=	opts	.	get	(	'identity'	)	/;"	f	function:requires	file:
dectheclass	data/bpe_corpus_raw/valid.py	/^utf-8	def	decallmethods	(	decorator	,	prefix	=	'test_'	)	:	\\n	\\n	    	def	dectheclass	(	cls	)	/;"	f	function:decallmethods	file:
dectheclass	data/data_raw/valid.py	/^utf-8	def	decallmethods	(	decorator	,	prefix	=	'test_'	)	:	\\n	\\n	    	def	dectheclass	(	cls	)	/;"	f	function:decallmethods	file:
dedent_description	data/bpe_corpus_raw/test.py	/^utf-8	def	dedent_description	(	pkg_info	)	:	\\n	    	description	=	pkg_info	[	'Description'	]	\\/;"	f
dedent_description	data/data_raw/test.py	/^utf-8	def	dedent_description	(	pkg_info	)	:	\\n	    	description	=	pkg_info	[	'Description'	]	\\/;"	f
deep_copy	data/bpe_corpus_raw/valid.py	/^utf-8	def	deep_copy	(	self	)	:	\\n	    	size	=	self	.	_size	\\n	regions	=	[	]	\\n	tys	=	[	]	\\n	/;"	f
deep_copy	data/data_raw/valid.py	/^utf-8	def	deep_copy	(	self	)	:	\\n	    	size	=	self	.	_size	\\n	regions	=	[	]	\\n	tys	=	[	]	\\n	/;"	f
default	data/bpe_corpus_raw/train.py	/^utf-8	def	default	(	self	,	injection	)	:	\\n	    	headers	=	'HTTP\/1.1 200 OK\\\\r\\\\n'	\\n	hea/;"	f
default	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	default	(	self	)	:	\\n	    	if	self	.	MUTABLE	:	\\n	        	return	cop/;"	f
default	data/data_raw/train.py	/^utf-8	def	default	(	self	,	injection	)	:	\\n	    	headers	=	'HTTP\/1.1 200 OK\\\\r\\\\n'	\\n	hea/;"	f
default	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	default	(	self	)	:	\\n	    	if	self	.	MUTABLE	:	\\n	        	return	cop/;"	f
default_role	data/bpe_corpus_raw/train.py	/^utf-8	@	utils	.	cached_slot_property	(	'_default_role'	)	\\n	def	default_role	(	self	)	:	\\n	   /;"	f
default_role	data/data_raw/train.py	/^utf-8	@	utils	.	cached_slot_property	(	'_default_role'	)	\\n	def	default_role	(	self	)	:	\\n	   /;"	f
default_super_categories	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	default_super_categories	(	cls	,	category	,	*	args	)	:	\\n	    	axio/;"	f
default_super_categories	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	default_super_categories	(	cls	,	category	,	*	args	)	:	\\n	    	axio/;"	f
default_tzinfo	data/bpe_corpus_raw/valid.py	/^utf-8	def	default_tzinfo	(	dt	,	tzinfo	)	:	\\n	    	if	dt	.	tzinfo	is	not	None	:	\\n	        	re/;"	f
default_tzinfo	data/data_raw/valid.py	/^utf-8	def	default_tzinfo	(	dt	,	tzinfo	)	:	\\n	    	if	dt	.	tzinfo	is	not	None	:	\\n	        	re/;"	f
default_user_agent	data/bpe_corpus_raw/train.py	/^utf-8	def	default_user_agent	(	name	=	'python-requests'	)	:	\\n	    	return	'%s\/%s'	%	(	name	,	/;"	f
default_user_agent	data/data_raw/train.py	/^utf-8	def	default_user_agent	(	name	=	'python-requests'	)	:	\\n	    	return	'%s\/%s'	%	(	name	,	/;"	f
defer	data/bpe_corpus_raw/train.py	/^utf-8	def	defer	(	start	)	:	\\n	    	model_specific_queue_name	=	processing	.	get_model_specific/;"	f
defer	data/data_raw/train.py	/^utf-8	def	defer	(	start	)	:	\\n	    	model_specific_queue_name	=	processing	.	get_model_specific/;"	f
deinit_ui	data/bpe_corpus_raw/valid.py	/^utf-8	def	deinit_ui	(	self	)	:	\\n	    	if	self	.	active	:	\\n	        	self	.	stop	(	)	\\n		sup/;"	f
deinit_ui	data/data_raw/valid.py	/^utf-8	def	deinit_ui	(	self	)	:	\\n	    	if	self	.	active	:	\\n	        	self	.	stop	(	)	\\n		sup/;"	f
deinterlace	data/bpe_corpus_raw/valid.py	/^utf-8	def	deinterlace	(	self	,	raw	)	:	\\n	    	vpr	=	self	.	width	*	self	.	planes	\\n	fmt	=	'BH/;"	f
deinterlace	data/data_raw/valid.py	/^utf-8	def	deinterlace	(	self	,	raw	)	:	\\n	    	vpr	=	self	.	width	*	self	.	planes	\\n	fmt	=	'BH/;"	f
delete	data/bpe_corpus_raw/test.py	/^utf-8	def	delete	(	self	)	:	\\n	    	return	self	.	_version	.	delete	(	'delete'	,	self	.	_uri	)	/;"	f
delete	data/bpe_corpus_raw/test.py	/^utf-8	def	delete	(	self	,	expected_value	=	None	,	return_values	=	None	)	:	\\n	    	return	self	/;"	f
delete	data/bpe_corpus_raw/test.py	/^utf-8	def	delete	(	self	,	resource_group_name	,	virtual_network_name	,	\\n	virtual_network_peeri/;"	f
delete	data/bpe_corpus_raw/train.py	/^utf-8	@	cli	.	command	(	)	\\n	@	click	.	argument	(	'task'	)	\\n	@	click	.	argument	(	'id'	)	\\n	/;"	f
delete	data/bpe_corpus_raw/train.py	/^utf-8	def	delete	(	url	,	**	kwargs	)	:	\\n	    	return	request	(	'delete'	,	url	,	**	kwargs	)	\\/;"	f
delete	data/bpe_corpus_raw/valid.py	/^utf-8	def	delete	(	self	)	:	\\n	    	self	.	method	=	'DELETE'	\\n	self	.	send	(	)	\\n		$/;"	f
delete	data/bpe_corpus_raw/valid.py	/^utf-8	def	delete	(	self	,	arguments	)	:	\\n	    	deleteList	=	[	]	\\n	enumeratorSet	=	set	(	eucl/;"	f
delete	data/bpe_corpus_raw/valid.py	/^utf-8	def	delete	(	self	,	resource_group_name	,	vpn_site_name	,	custom_headers	=	None	,	\\n	raw	/;"	f
delete	data/data_raw/test.py	/^utf-8	def	delete	(	self	)	:	\\n	    	return	self	.	_version	.	delete	(	'delete'	,	self	.	_uri	)	/;"	f
delete	data/data_raw/test.py	/^utf-8	def	delete	(	self	,	expected_value	=	None	,	return_values	=	None	)	:	\\n	    	return	self	/;"	f
delete	data/data_raw/test.py	/^utf-8	def	delete	(	self	,	resource_group_name	,	virtual_network_name	,	\\n	virtual_network_peeri/;"	f
delete	data/data_raw/train.py	/^utf-8	@	cli	.	command	(	)	\\n	@	click	.	argument	(	'task'	)	\\n	@	click	.	argument	(	'id'	)	\\n	/;"	f
delete	data/data_raw/train.py	/^utf-8	def	delete	(	url	,	**	kwargs	)	:	\\n	    	return	request	(	'delete'	,	url	,	**	kwargs	)	\\/;"	f
delete	data/data_raw/valid.py	/^utf-8	def	delete	(	self	)	:	\\n	    	self	.	method	=	'DELETE'	\\n	self	.	send	(	)	\\n		$/;"	f
delete	data/data_raw/valid.py	/^utf-8	def	delete	(	self	,	arguments	)	:	\\n	    	deleteList	=	[	]	\\n	enumeratorSet	=	set	(	eucl/;"	f
delete	data/data_raw/valid.py	/^utf-8	def	delete	(	self	,	resource_group_name	,	vpn_site_name	,	custom_headers	=	None	,	\\n	raw	/;"	f
deleteNamespace	data/bpe_corpus_raw/valid.py	/^utf-8	def	deleteNamespace	(	self	,	login	,	namespaceName	)	:	\\n	    	self	.	send_deleteNamespac/;"	f
deleteNamespace	data/data_raw/valid.py	/^utf-8	def	deleteNamespace	(	self	,	login	,	namespaceName	)	:	\\n	    	self	.	send_deleteNamespac/;"	f
delete_access_key	data/bpe_corpus_raw/valid.py	/^utf-8	def	delete_access_key	(	self	,	access_key_id	,	user_name	=	None	)	:	\\n	    	params	=	{	'A/;"	f
delete_access_key	data/data_raw/valid.py	/^utf-8	def	delete_access_key	(	self	,	access_key_id	,	user_name	=	None	)	:	\\n	    	params	=	{	'A/;"	f
delete_alias	data/bpe_corpus_raw/valid.py	/^utf-8	def	delete_alias	(	self	,	alias_name	)	:	\\n	    	for	aliases	in	self	.	key_to_aliases	.	v/;"	f
delete_alias	data/data_raw/valid.py	/^utf-8	def	delete_alias	(	self	,	alias_name	)	:	\\n	    	for	aliases	in	self	.	key_to_aliases	.	v/;"	f
delete_column	data/bpe_corpus_raw/valid.py	/^utf-8	def	delete_column	(	rec	,	N	)	:	\\n	    	dtd	=	rec	.	dtype	.	descr	\\n	dtd	.	pop	(	N	)	\\n/;"	f
delete_column	data/data_raw/valid.py	/^utf-8	def	delete_column	(	rec	,	N	)	:	\\n	    	dtd	=	rec	.	dtype	.	descr	\\n	dtd	.	pop	(	N	)	\\n/;"	f
delete_file	data/bpe_corpus_raw/valid.py	/^utf-8	def	delete_file	(	path	,	fileName	=	None	)	:	\\n	    	if	fileName	:	\\n	        	path	=	os/;"	f
delete_file	data/data_raw/valid.py	/^utf-8	def	delete_file	(	path	,	fileName	=	None	)	:	\\n	    	if	fileName	:	\\n	        	path	=	os/;"	f
delete_files	data/bpe_corpus_raw/test.py	/^utf-8	def	delete_files	(	self	,	storage	)	:	\\n	    	errs	=	[	]	\\n	coll_warc_key	=	self	.	_coll/;"	f
delete_files	data/data_raw/test.py	/^utf-8	def	delete_files	(	self	,	storage	)	:	\\n	    	errs	=	[	]	\\n	coll_warc_key	=	self	.	_coll/;"	f
delete_image	data/bpe_corpus_raw/valid.py	/^utf-8	def	delete_image	(	self	,	image	)	:	\\n	    	self	.	block_list	=	[	b	for	b	in	self	.	block/;"	f
delete_image	data/data_raw/valid.py	/^utf-8	def	delete_image	(	self	,	image	)	:	\\n	    	self	.	block_list	=	[	b	for	b	in	self	.	block/;"	f
delete_instance_template	data/bpe_corpus_raw/train.py	/^utf-8	@	ndb	.	transactional_tasklet	\\n	def	delete_instance_template	(	key	)	:	\\n	    	instance/;"	f
delete_instance_template	data/data_raw/train.py	/^utf-8	@	ndb	.	transactional_tasklet	\\n	def	delete_instance_template	(	key	)	:	\\n	    	instance/;"	f
delete_option_group	data/bpe_corpus_raw/train.py	/^utf-8	def	delete_option_group	(	self	,	option_group_name	)	:	\\n	    	params	=	{	'OptionGroupNam/;"	f
delete_option_group	data/data_raw/train.py	/^utf-8	def	delete_option_group	(	self	,	option_group_name	)	:	\\n	    	params	=	{	'OptionGroupNam/;"	f
delete_selected	data/bpe_corpus_raw/valid.py	/^utf-8	def	delete_selected	(	modeladmin	,	request	,	queryset	)	:	\\n	    	related_transactions	=	/;"	f
delete_selected	data/data_raw/valid.py	/^utf-8	def	delete_selected	(	modeladmin	,	request	,	queryset	)	:	\\n	    	related_transactions	=	/;"	f
delete_table	data/bpe_corpus_raw/train.py	/^utf-8	@	invalidate_table_constraints	\\n	def	delete_table	(	self	,	table_name	,	cascade	=	True	)/;"	f
delete_table	data/data_raw/train.py	/^utf-8	@	invalidate_table_constraints	\\n	def	delete_table	(	self	,	table_name	,	cascade	=	True	)/;"	f
delete_user	data/bpe_corpus_raw/train.py	/^utf-8	def	delete_user	(	self	,	email	,	**	kwargs	)	:	\\n	    	return	self	.	delete	(	self	.	Make/;"	f
delete_user	data/data_raw/train.py	/^utf-8	def	delete_user	(	self	,	email	,	**	kwargs	)	:	\\n	    	return	self	.	delete	(	self	.	Make/;"	f
delete_website_configuration	data/bpe_corpus_raw/test.py	/^utf-8	def	delete_website_configuration	(	self	,	headers	=	None	)	:	\\n	    	self	.	configure_web/;"	f
delete_website_configuration	data/data_raw/test.py	/^utf-8	def	delete_website_configuration	(	self	,	headers	=	None	)	:	\\n	    	self	.	configure_web/;"	f
delimitedList	data/bpe_corpus_raw/train.py	/^utf-8	def	delimitedList	(	expr	,	delim	=	','	,	combine	=	False	)	:	\\n	    	dlName	=	_ustr	(	exp/;"	f
delimitedList	data/data_raw/train.py	/^utf-8	def	delimitedList	(	expr	,	delim	=	','	,	combine	=	False	)	:	\\n	    	dlName	=	_ustr	(	exp/;"	f
deliver_config_snapshot	data/bpe_corpus_raw/valid.py	/^utf-8	def	deliver_config_snapshot	(	self	,	delivery_channel_name	)	:	\\n	    	params	=	{	'delive/;"	f
deliver_config_snapshot	data/data_raw/valid.py	/^utf-8	def	deliver_config_snapshot	(	self	,	delivery_channel_name	)	:	\\n	    	params	=	{	'delive/;"	f
demean	data/bpe_corpus_raw/valid.py	/^utf-8	@	expect_types	(	mask	=	(	Filter	,	NotSpecifiedType	)	,	groupby	=	(	Classifier	,	\\n	NotSp/;"	f
demean	data/data_raw/valid.py	/^utf-8	@	expect_types	(	mask	=	(	Filter	,	NotSpecifiedType	)	,	groupby	=	(	Classifier	,	\\n	NotSp/;"	f
denominator	data/bpe_corpus_raw/valid.py	/^utf-8	def	denominator	(	self	)	:	\\n	    	return	self	.	_denominator	\\n		$/;"	f
denominator	data/data_raw/valid.py	/^utf-8	def	denominator	(	self	)	:	\\n	    	return	self	.	_denominator	\\n		$/;"	f
dense_to_one_hot	data/bpe_corpus_raw/train.py	/^utf-8	def	dense_to_one_hot	(	labels_dense	,	num_classes	=	10	)	:	\\n	    	num_labels	=	labels_de/;"	f
dense_to_one_hot	data/data_raw/train.py	/^utf-8	def	dense_to_one_hot	(	labels_dense	,	num_classes	=	10	)	:	\\n	    	num_labels	=	labels_de/;"	f
depthwise_conv2d	data/bpe_corpus_raw/valid.py	/^utf-8	def	depthwise_conv2d	(	x	,	depthwise_kernel	,	strides	=	(	1	,	1	)	,	padding	=	'valid'	,	\\/;"	f
depthwise_conv2d	data/data_raw/valid.py	/^utf-8	def	depthwise_conv2d	(	x	,	depthwise_kernel	,	strides	=	(	1	,	1	)	,	padding	=	'valid'	,	\\/;"	f
dequeue	data/bpe_corpus_raw/valid.py	/^utf-8	def	dequeue	(	self	)	:	\\n	    	batched_tensors	=	self	.	_queue	.	dequeue	(	)	\\n	tensors	/;"	f
dequeue	data/data_raw/valid.py	/^utf-8	def	dequeue	(	self	)	:	\\n	    	batched_tensors	=	self	.	_queue	.	dequeue	(	)	\\n	tensors	/;"	f
deregister_hook	data/bpe_corpus_raw/valid.py	/^utf-8	def	deregister_hook	(	self	,	event	,	hook	)	:	\\n	    	try	:	\\n	        	self	.	hooks	[	e/;"	f
deregister_hook	data/data_raw/valid.py	/^utf-8	def	deregister_hook	(	self	,	event	,	hook	)	:	\\n	    	try	:	\\n	        	self	.	hooks	[	e/;"	f
deriv	data/bpe_corpus_raw/train.py	/^utf-8	def	deriv	(	self	,	m	=	1	)	:	\\n	    	return	poly1d	(	polyder	(	self	.	coeffs	,	m	=	m	)	)	/;"	f
deriv	data/data_raw/train.py	/^utf-8	def	deriv	(	self	,	m	=	1	)	:	\\n	    	return	poly1d	(	polyder	(	self	.	coeffs	,	m	=	m	)	)	/;"	f
descents	data/bpe_corpus_raw/train.py	/^utf-8	def	descents	(	self	)	:	\\n	    	descents	=	[	]	\\n	for	i	in	range	(	1	,	len	(	self	)	)	:	/;"	f
descents	data/data_raw/train.py	/^utf-8	def	descents	(	self	)	:	\\n	    	descents	=	[	]	\\n	for	i	in	range	(	1	,	len	(	self	)	)	:	/;"	f
describe_features	data/bpe_corpus_raw/valid.py	/^utf-8	def	describe_features	(	self	,	traj	)	:	\\n	    	feature_descs	=	[	]	\\n	self	.	partial_tr/;"	f
describe_features	data/data_raw/valid.py	/^utf-8	def	describe_features	(	self	,	traj	)	:	\\n	    	feature_descs	=	[	]	\\n	self	.	partial_tr/;"	f
description	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	description	(	self	)	:	\\n	    	if	self	.	_description_present	:	\\n	  /;"	f
description	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	description	(	self	)	:	\\n	    	return	self	.	_description	\\n		$/;"	f
description	data/data_raw/train.py	/^utf-8	@	property	\\n	def	description	(	self	)	:	\\n	    	if	self	.	_description_present	:	\\n	  /;"	f
description	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	description	(	self	)	:	\\n	    	return	self	.	_description	\\n		$/;"	f
dest_path	models/preprocess.py	/^    def dest_path(prefix, lang):$/;"	f	function:main	file:
destination	data/bpe_corpus_raw/train.py	/^utf-8	@	require	(	[	'report'	,	'directory'	,	'clang'	,	'output_dir'	,	'language'	,	'file'	,	\\n	/;"	f	function:report_failure.extension	file:
destination	data/data_raw/train.py	/^utf-8	@	require	(	[	'report'	,	'directory'	,	'clang'	,	'output_dir'	,	'language'	,	'file'	,	\\n	/;"	f	function:report_failure.extension	file:
destination_function	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	destination_function	(	self	)	:	\\n	    	return	self	.	_event	[	'destin/;"	f
destination_function	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	destination_function	(	self	)	:	\\n	    	return	self	.	_event	[	'destin/;"	f
destroy	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	destroy	(	cls	,	num	)	:	\\n	    	if	not	cls	.	has_fignum	(	num	)	:	\\/;"	f
destroy	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	destroy	(	cls	,	num	)	:	\\n	    	if	not	cls	.	has_fignum	(	num	)	:	\\/;"	f
destroy_fig	data/bpe_corpus_raw/train.py	/^utf-8	@	staticmethod	\\n	def	destroy_fig	(	fig	)	:	\\n	    	num	=	None	\\n	for	manager	in	six	.	/;"	f
destroy_fig	data/data_raw/train.py	/^utf-8	@	staticmethod	\\n	def	destroy_fig	(	fig	)	:	\\n	    	num	=	None	\\n	for	manager	in	six	.	/;"	f
detach	data/bpe_corpus_raw/valid.py	/^utf-8	def	detach	(	self	)	:	\\n	    	self	.	_unsupported	(	'detach'	)	\\n		$/;"	f
detach	data/data_raw/valid.py	/^utf-8	def	detach	(	self	)	:	\\n	    	self	.	_unsupported	(	'detach'	)	\\n		$/;"	f
detail	data/bpe_corpus_raw/train.py	/^utf-8	@	wsgi	.	serializers	(	xml	=	SnapshotsTemplate	)	\\n	def	detail	(	self	,	req	)	:	\\n	    	/;"	f
detail	data/data_raw/train.py	/^utf-8	@	wsgi	.	serializers	(	xml	=	SnapshotsTemplate	)	\\n	def	detail	(	self	,	req	)	:	\\n	    	/;"	f
detect_language	data_utils/clean_dataset.py	/^def detect_language(string):$/;"	f
determineException	data/bpe_corpus_raw/valid.py	/^utf-8	def	determineException	(	vm	,	m	)	:	\\n	    	if	m	.	get_code	(	)	.	get_tries_size	(	)	<=	0/;"	f
determineException	data/data_raw/valid.py	/^utf-8	def	determineException	(	vm	,	m	)	:	\\n	    	if	m	.	get_code	(	)	.	get_tries_size	(	)	<=	0/;"	f
determine_struct_tree_subtype	data/bpe_corpus_raw/test.py	/^utf-8	def	determine_struct_tree_subtype	(	self	,	data_type	,	obj	)	:	\\n	    	if	'.tag'	not	in	o/;"	f
determine_struct_tree_subtype	data/data_raw/test.py	/^utf-8	def	determine_struct_tree_subtype	(	self	,	data_type	,	obj	)	:	\\n	    	if	'.tag'	not	in	o/;"	f
develop_verbose	data/bpe_corpus_raw/train.py	/^utf-8	def	develop_verbose	(	)	:	\\n	$/;"	f
develop_verbose	data/data_raw/train.py	/^utf-8	def	develop_verbose	(	)	:	\\n	$/;"	f
device_state_attributes	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	device_state_attributes	(	self	)	->	dict	:	\\n	    	return	self	.	_attr/;"	f
device_state_attributes	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	device_state_attributes	(	self	)	:	\\n	    	attrs	=	{	}	\\n	attrs	[	ATT/;"	f
device_state_attributes	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	device_state_attributes	(	self	)	:	\\n	    	return	self	.	_attributes	\\/;"	f
device_state_attributes	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	device_state_attributes	(	self	)	:	\\n	    	return	{	ATTR_ALLOWED_BANDW/;"	f
device_state_attributes	data/data_raw/train.py	/^utf-8	@	property	\\n	def	device_state_attributes	(	self	)	->	dict	:	\\n	    	return	self	.	_attr/;"	f
device_state_attributes	data/data_raw/train.py	/^utf-8	@	property	\\n	def	device_state_attributes	(	self	)	:	\\n	    	attrs	=	{	}	\\n	attrs	[	ATT/;"	f
device_state_attributes	data/data_raw/train.py	/^utf-8	@	property	\\n	def	device_state_attributes	(	self	)	:	\\n	    	return	self	.	_attributes	\\/;"	f
device_state_attributes	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	device_state_attributes	(	self	)	:	\\n	    	return	{	ATTR_ALLOWED_BANDW/;"	f
dictConfig	data/bpe_corpus_raw/train.py	/^utf-8	def	dictConfig	(	config	)	:	\\n	    	dictConfigClass	(	config	)	.	configure	(	)	\\n		$/;"	f
dictConfig	data/data_raw/train.py	/^utf-8	def	dictConfig	(	config	)	:	\\n	    	dictConfigClass	(	config	)	.	configure	(	)	\\n		$/;"	f
dict_contents	data/bpe_corpus_raw/valid.py	/^utf-8	def	dict_contents	(	self	,	use_dict	=	None	,	as_class	=	dict	)	:	\\n	    	if	_debug	:	\\n	/;"	f
dict_contents	data/data_raw/valid.py	/^utf-8	def	dict_contents	(	self	,	use_dict	=	None	,	as_class	=	dict	)	:	\\n	    	if	_debug	:	\\n	/;"	f
dict_from_corpus	data/bpe_corpus_raw/valid.py	/^utf-8	def	dict_from_corpus	(	corpus	)	:	\\n	    	num_terms	=	1	+	get_max_id	(	corpus	)	\\n	id2wo/;"	f
dict_from_corpus	data/data_raw/valid.py	/^utf-8	def	dict_from_corpus	(	corpus	)	:	\\n	    	num_terms	=	1	+	get_max_id	(	corpus	)	\\n	id2wo/;"	f
dict_has_any_keys	data/bpe_corpus_raw/valid.py	/^utf-8	def	dict_has_any_keys	(	self	,	keys	)	:	\\n	    	if	not	_is_non_string_iterable	(	keys	)	:/;"	f
dict_has_any_keys	data/data_raw/valid.py	/^utf-8	def	dict_has_any_keys	(	self	,	keys	)	:	\\n	    	if	not	_is_non_string_iterable	(	keys	)	:/;"	f
dict_path	models/preprocess.py	/^    def dict_path(lang):$/;"	f	function:main	file:
dict_to_entity	data/bpe_corpus_raw/train.py	/^utf-8	def	dict_to_entity	(	dict	)	:	\\n	    	PARSERS	=	{	'source_date'	:	importer	.	validate_dat/;"	f
dict_to_entity	data/data_raw/train.py	/^utf-8	def	dict_to_entity	(	dict	)	:	\\n	    	PARSERS	=	{	'source_date'	:	importer	.	validate_dat/;"	f
did_complete	data/bpe_corpus_raw/test.py	/^utf-8	def	did_complete	(	self	)	:	\\n	    	agent	=	self	.	mturk_agent	\\n	return	not	(	agent	.	h/;"	f
did_complete	data/data_raw/test.py	/^utf-8	def	did_complete	(	self	)	:	\\n	    	agent	=	self	.	mturk_agent	\\n	return	not	(	agent	.	h/;"	f
diff_charsToLines	data/bpe_corpus_raw/train.py	/^utf-8	def	diff_charsToLines	(	self	,	diffs	,	lineArray	)	:	\\n	    	for	x	in	range	(	len	(	diffs/;"	f
diff_charsToLines	data/data_raw/train.py	/^utf-8	def	diff_charsToLines	(	self	,	diffs	,	lineArray	)	:	\\n	    	for	x	in	range	(	len	(	diffs/;"	f
diff_toDelta	data/bpe_corpus_raw/valid.py	/^utf-8	def	diff_toDelta	(	self	,	diffs	)	:	\\n	    	text	=	[	]	\\n	for	op	,	data	in	diffs	:	\\n	 /;"	f
diff_toDelta	data/data_raw/valid.py	/^utf-8	def	diff_toDelta	(	self	,	diffs	)	:	\\n	    	text	=	[	]	\\n	for	op	,	data	in	diffs	:	\\n	 /;"	f
difference	data/bpe_corpus_raw/valid.py	/^utf-8	def	difference	(	self	,	*	other	)	:	\\n	    	return	set	(	)	\\n		$/;"	f
difference	data/data_raw/valid.py	/^utf-8	def	difference	(	self	,	*	other	)	:	\\n	    	return	set	(	)	\\n		$/;"	f
difficulty_to_bits	data/bpe_corpus_raw/train.py	/^utf-8	def	difficulty_to_bits	(	difficulty	)	:	\\n	    	return	target_to_bits	(	difficulty_to_tar/;"	f
difficulty_to_bits	data/data_raw/train.py	/^utf-8	def	difficulty_to_bits	(	difficulty	)	:	\\n	    	return	target_to_bits	(	difficulty_to_tar/;"	f
digest	data/bpe_corpus_raw/valid.py	/^utf-8	def	digest	(	self	)	:	\\n	    	bfr	=	create_string_buffer	(	self	.	digest_size	)	\\n	resul/;"	f
digest	data/data_raw/valid.py	/^utf-8	def	digest	(	self	)	:	\\n	    	bfr	=	create_string_buffer	(	self	.	digest_size	)	\\n	resul/;"	f
dilation2d_backprop_filter	data/bpe_corpus_raw/valid.py	/^utf-8	def	dilation2d_backprop_filter	(	input	,	filter	,	out_backprop	,	strides	,	rates	,	\\n	pad/;"	f
dilation2d_backprop_filter	data/data_raw/valid.py	/^utf-8	def	dilation2d_backprop_filter	(	input	,	filter	,	out_backprop	,	strides	,	rates	,	\\n	pad/;"	f
dim	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	dim	(	self	)	:	\\n	    	if	getattr	(	self	,	'_dim'	,	None	)	is	None	:	\\/;"	f
dim	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	dim	(	self	)	:	\\n	    	if	getattr	(	self	,	'_dim'	,	None	)	is	None	:	\\/;"	f
dimValue	data/bpe_corpus_raw/valid.py	/^utf-8	def	dimValue	(	self	,	dimQname	)	:	\\n	    	try	:	\\n	        	return	self	.	qnameDims	[	d/;"	f
dimValue	data/data_raw/valid.py	/^utf-8	def	dimValue	(	self	,	dimQname	)	:	\\n	    	try	:	\\n	        	return	self	.	qnameDims	[	d/;"	f
dirname	data/bpe_corpus_raw/valid.py	/^utf-8	def	dirname	(	p	)	:	\\n	    	i	=	p	.	rfind	(	'\/'	)	+	1	\\n	head	=	p	[	:	i	]	\\n	if	head	a/;"	f
dirname	data/data_raw/valid.py	/^utf-8	def	dirname	(	p	)	:	\\n	    	i	=	p	.	rfind	(	'\/'	)	+	1	\\n	head	=	p	[	:	i	]	\\n	if	head	a/;"	f
disable_action	data/bpe_corpus_raw/valid.py	/^utf-8	def	disable_action	(	self	,	name	)	:	\\n	    	del	self	.	_actions	[	name	]	\\n		$/;"	f
disable_action	data/data_raw/valid.py	/^utf-8	def	disable_action	(	self	,	name	)	:	\\n	    	del	self	.	_actions	[	name	]	\\n		$/;"	f
disable_constraint_checking	data/bpe_corpus_raw/train.py	/^utf-8	def	disable_constraint_checking	(	self	)	:	\\n	    	return	False	\\n		$/;"	f
disable_constraint_checking	data/data_raw/train.py	/^utf-8	def	disable_constraint_checking	(	self	)	:	\\n	    	return	False	\\n		$/;"	f
disable_warnings	data/bpe_corpus_raw/valid.py	/^utf-8	def	disable_warnings	(	category	=	exceptions	.	HTTPWarning	)	:	\\n	    	warnings	.	simplef/;"	f
disable_warnings	data/data_raw/valid.py	/^utf-8	def	disable_warnings	(	category	=	exceptions	.	HTTPWarning	)	:	\\n	    	warnings	.	simplef/;"	f
disconnect	data/bpe_corpus_raw/valid.py	/^utf-8	def	disconnect	(	self	,	callback	)	:	\\n	    	if	self	.	weak_subscribers	is	not	None	:	\\n/;"	f
disconnect	data/data_raw/valid.py	/^utf-8	def	disconnect	(	self	,	callback	)	:	\\n	    	if	self	.	weak_subscribers	is	not	None	:	\\n/;"	f
dismissWorkers	data/bpe_corpus_raw/test.py	/^utf-8	def	dismissWorkers	(	self	,	num_workers	,	do_join	=	False	)	:	\\n	    	dismiss_list	=	[	]	/;"	f
dismissWorkers	data/data_raw/test.py	/^utf-8	def	dismissWorkers	(	self	,	num_workers	,	do_join	=	False	)	:	\\n	    	dismiss_list	=	[	]	/;"	f
dispatch_hook	data/bpe_corpus_raw/train.py	/^utf-8	def	dispatch_hook	(	key	,	hooks	,	hook_data	,	**	kwargs	)	:	\\n	    	hooks	=	hooks	or	dict/;"	f
dispatch_hook	data/data_raw/train.py	/^utf-8	def	dispatch_hook	(	key	,	hooks	,	hook_data	,	**	kwargs	)	:	\\n	    	hooks	=	hooks	or	dict/;"	f
display_citations	data/bpe_corpus_raw/valid.py	/^utf-8	def	display_citations	(	self	,	event	)	:	\\n	    	self	.	source_nodes	=	{	}	\\n	self	.	add/;"	f
display_citations	data/data_raw/valid.py	/^utf-8	def	display_citations	(	self	,	event	)	:	\\n	    	self	.	source_nodes	=	{	}	\\n	self	.	add/;"	f
display_diff	data/bpe_corpus_raw/valid.py	/^utf-8	def	display_diff	(	files	,	diff	)	:	\\n	    	output	=	''	\\n	field_width	=	'{:<15}'	\\n	fi/;"	f
display_diff	data/data_raw/valid.py	/^utf-8	def	display_diff	(	files	,	diff	)	:	\\n	    	output	=	''	\\n	field_width	=	'{:<15}'	\\n	fi/;"	f
display_mode	data/bpe_corpus_raw/train.py	/^utf-8	def	display_mode	(	inp_text	,	str_len	=	0	)	:	\\n	    	text	=	''	\\n	display_mode	=	get_se/;"	f
display_mode	data/data_raw/train.py	/^utf-8	def	display_mode	(	inp_text	,	str_len	=	0	)	:	\\n	    	text	=	''	\\n	display_mode	=	get_se/;"	f
dispose	data/bpe_corpus_raw/valid.py	/^utf-8	def	dispose	(	self	)	:	\\n	    	raise	NotImplementedError	(	)	\\n		$/;"	f
dispose	data/data_raw/valid.py	/^utf-8	def	dispose	(	self	)	:	\\n	    	raise	NotImplementedError	(	)	\\n		$/;"	f
dissociate_mac_from_port_profile	data/bpe_corpus_raw/train.py	/^utf-8	def	dissociate_mac_from_port_profile	(	self	,	mgr	,	name	,	mac_address	)	:	\\n	    	confst/;"	f
dissociate_mac_from_port_profile	data/data_raw/train.py	/^utf-8	def	dissociate_mac_from_port_profile	(	self	,	mgr	,	name	,	mac_address	)	:	\\n	    	confst/;"	f
dist_info_sym	data/bpe_corpus_raw/test.py	/^utf-8	def	dist_info_sym	(	self	,	obs_var	,	state_info_vars	)	:	\\n	    	raise	NotImplementedErro/;"	f
dist_info_sym	data/data_raw/test.py	/^utf-8	def	dist_info_sym	(	self	,	obs_var	,	state_info_vars	)	:	\\n	    	raise	NotImplementedErro/;"	f
distance	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	distance	(	self	)	->	Optional	[	float	]	:	\\n	    	return	self	.	_dista/;"	f
distance	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	distance	(	self	)	->	Optional	[	float	]	:	\\n	    	return	self	.	_dista/;"	f
distribution	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	distribution	(	self	)	->	typing	.	Optional	[	'Path'	]	:	\\n	    	if	sel/;"	f
distribution	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	distribution	(	self	)	->	typing	.	Optional	[	'Path'	]	:	\\n	    	if	sel/;"	f
divide	data/bpe_corpus_raw/train.py	/^utf-8	def	divide	(	self	,	dividend	,	divisor	)	:	\\n	    	if	divisor	==	0	:	\\n	        	return	/;"	f
divide	data/data_raw/train.py	/^utf-8	def	divide	(	self	,	dividend	,	divisor	)	:	\\n	    	if	divisor	==	0	:	\\n	        	return	/;"	f
do	data/bpe_corpus_raw/test.py	/^utf-8	def	do	(	self	,	irc	,	msg	,	args	,	channel	,	text	)	:	\\n	    	self	.	_preCheck	(	irc	,	ms/;"	f
do	data/data_raw/test.py	/^utf-8	def	do	(	self	,	irc	,	msg	,	args	,	channel	,	text	)	:	\\n	    	self	.	_preCheck	(	irc	,	ms/;"	f
doCmd	data/bpe_corpus_raw/valid.py	/^utf-8	def	doCmd	(	self	)	:	\\n	    	self	.	_param	.	getTuttleParam	(	)	.	setValue	(	self	.	_newV/;"	f
doCmd	data/data_raw/valid.py	/^utf-8	def	doCmd	(	self	)	:	\\n	    	self	.	_param	.	getTuttleParam	(	)	.	setValue	(	self	.	_newV/;"	f
do_GET	data/bpe_corpus_raw/valid.py	/^utf-8	def	do_GET	(	self	)	:	\\n	    	filename	=	self	.	path	.	lstrip	(	'\/'	)	\\n	if	filename	no/;"	f
do_GET	data/data_raw/valid.py	/^utf-8	def	do_GET	(	self	)	:	\\n	    	filename	=	self	.	path	.	lstrip	(	'\/'	)	\\n	if	filename	no/;"	f
do_LAST	data/bpe_corpus_raw/valid.py	/^utf-8	def	do_LAST	(	self	)	:	\\n	    	self	.	successResponse	(	self	.	_highest	)	\\n		$/;"	f
do_LAST	data/data_raw/valid.py	/^utf-8	def	do_LAST	(	self	)	:	\\n	    	self	.	successResponse	(	self	.	_highest	)	\\n		$/;"	f
do_about	data/bpe_corpus_raw/train.py	/^utf-8	def	do_about	(	self	,	line	)	:	\\n	    	print	(	'%s version: v%s'	%	(	LSIM_TITLE	,	LSIM_VE/;"	f
do_about	data/data_raw/train.py	/^utf-8	def	do_about	(	self	,	line	)	:	\\n	    	print	(	'%s version: v%s'	%	(	LSIM_TITLE	,	LSIM_VE/;"	f
do_case	data/bpe_corpus_raw/valid.py	/^utf-8	def	do_case	(	self	,	objects	,	page_num	,	num_pages	,	expected	)	:	\\n	    	request	=	Requ/;"	f
do_case	data/data_raw/valid.py	/^utf-8	def	do_case	(	self	,	objects	,	page_num	,	num_pages	,	expected	)	:	\\n	    	request	=	Requ/;"	f
do_center	data/bpe_corpus_raw/train.py	/^utf-8	def	do_center	(	value	,	width	=	80	)	:	\\n	    	return	text_type	(	value	)	.	center	(	widt/;"	f
do_center	data/data_raw/train.py	/^utf-8	def	do_center	(	value	,	width	=	80	)	:	\\n	    	return	text_type	(	value	)	.	center	(	widt/;"	f
do_clean_emptys	data/bpe_corpus_raw/valid.py	/^utf-8	def	do_clean_emptys	(	self	,	cr	,	uid	,	automatic	=	False	,	context	=	None	)	:	\\n	    	em/;"	f
do_clean_emptys	data/data_raw/valid.py	/^utf-8	def	do_clean_emptys	(	self	,	cr	,	uid	,	automatic	=	False	,	context	=	None	)	:	\\n	    	em/;"	f
do_commands	data/bpe_corpus_raw/valid.py	/^utf-8	def	do_commands	(	self	,	arg	)	:	\\n	    	if	not	arg	:	\\n	        	bnum	=	len	(	bdb	.	Bre/;"	f
do_commands	data/data_raw/valid.py	/^utf-8	def	do_commands	(	self	,	arg	)	:	\\n	    	if	not	arg	:	\\n	        	bnum	=	len	(	bdb	.	Bre/;"	f
do_copy	data/bpe_corpus_raw/valid.py	/^utf-8	def	do_copy	(	self	)	:	\\n	    	self	.	dup	(	)	\\n		$/;"	f
do_copy	data/data_raw/valid.py	/^utf-8	def	do_copy	(	self	)	:	\\n	    	self	.	dup	(	)	\\n		$/;"	f
do_debug	data/bpe_corpus_raw/valid.py	/^utf-8	def	do_debug	(	self	,	arg	)	:	\\n	    	sys	.	settrace	(	None	)	\\n	globals	=	self	.	curfra/;"	f
do_debug	data/data_raw/valid.py	/^utf-8	def	do_debug	(	self	,	arg	)	:	\\n	    	sys	.	settrace	(	None	)	\\n	globals	=	self	.	curfra/;"	f
do_draw_op	data/bpe_corpus_raw/train.py	/^utf-8	def	do_draw_op	(	self	,	drawoperations	,	drawobj	,	stat	,	texlbl_name	=	'texlbl'	,	\\n	use/;"	f
do_draw_op	data/data_raw/train.py	/^utf-8	def	do_draw_op	(	self	,	drawoperations	,	drawobj	,	stat	,	texlbl_name	=	'texlbl'	,	\\n	use/;"	f
do_enable_pretty_printer	data/bpe_corpus_raw/valid.py	/^utf-8	def	do_enable_pretty_printer	(	arg	,	flag	)	:	\\n	    	object_re	,	name_re	,	subname_re	=	/;"	f
do_enable_pretty_printer	data/data_raw/valid.py	/^utf-8	def	do_enable_pretty_printer	(	arg	,	flag	)	:	\\n	    	object_re	,	name_re	,	subname_re	=	/;"	f
do_format	data/bpe_corpus_raw/valid.py	/^utf-8	def	do_format	(	value	,	*	args	,	**	kwargs	)	:	\\n	    	if	args	and	kwargs	:	\\n	        	/;"	f
do_format	data/data_raw/valid.py	/^utf-8	def	do_format	(	value	,	*	args	,	**	kwargs	)	:	\\n	    	if	args	and	kwargs	:	\\n	        	/;"	f
do_group_snapshot_show	data/bpe_corpus_raw/train.py	/^utf-8	@	api_versions	.	wraps	(	'3.14'	)	\\n	@	utils	.	arg	(	'group_snapshot'	,	metavar	=	'<group/;"	f
do_group_snapshot_show	data/data_raw/train.py	/^utf-8	@	api_versions	.	wraps	(	'3.14'	)	\\n	@	utils	.	arg	(	'group_snapshot'	,	metavar	=	'<group/;"	f
do_help	data/bpe_corpus_raw/train.py	/^utf-8	def	do_help	(	self	,	arg	)	:	\\n	    	if	arg	:	\\n	        	try	:	\\n	            	func	=	/;"	f
do_help	data/data_raw/train.py	/^utf-8	def	do_help	(	self	,	arg	)	:	\\n	    	if	arg	:	\\n	        	try	:	\\n	            	func	=	/;"	f
do_kill	data/bpe_corpus_raw/valid.py	/^utf-8	@	action	(	kill_parser	)	\\n	def	do_kill	(	args	:	argparse	.	Namespace	)	->	None	:	\\n	   /;"	f
do_kill	data/data_raw/valid.py	/^utf-8	@	action	(	kill_parser	)	\\n	def	do_kill	(	args	:	argparse	.	Namespace	)	->	None	:	\\n	   /;"	f
do_p	data/bpe_corpus_raw/valid.py	/^utf-8	def	do_p	(	self	,	arg	)	:	\\n	    	try	:	\\n	        	self	.	message	(	repr	(	self	.	_getv/;"	f
do_p	data/data_raw/valid.py	/^utf-8	def	do_p	(	self	,	arg	)	:	\\n	    	try	:	\\n	        	self	.	message	(	repr	(	self	.	_getv/;"	f
do_ranges_intersect	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	do_ranges_intersect	(	begin	,	end	,	old_begin	,	old_end	)	:	\\n	   /;"	f
do_ranges_intersect	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	do_ranges_intersect	(	begin	,	end	,	old_begin	,	old_end	)	:	\\n	   /;"	f
do_rotate	data/bpe_corpus_raw/train.py	/^utf-8	def	do_rotate	(	self	)	:	\\n	    	angle	=	int	(	self	.	do_pop	(	)	)	\\n	image	=	self	.	do_/;"	f
do_rotate	data/data_raw/train.py	/^utf-8	def	do_rotate	(	self	)	:	\\n	    	angle	=	int	(	self	.	do_pop	(	)	)	\\n	image	=	self	.	do_/;"	f
do_striptags	data/bpe_corpus_raw/train.py	/^utf-8	def	do_striptags	(	value	)	:	\\n	    	if	hasattr	(	value	,	'__html__'	)	:	\\n	        	val/;"	f
do_striptags	data/data_raw/train.py	/^utf-8	def	do_striptags	(	value	)	:	\\n	    	if	hasattr	(	value	,	'__html__'	)	:	\\n	        	val/;"	f
do_this	data/bpe_corpus_raw/test.py	/^utf-8	def	test_requires_guest	(	monkeypatch	)	:	\\n	\\n	    	@	staticmethod	\\n	def	mock_gcs	(	)/;"	f	function:test_requires_guest.mock_gcs	file:
do_this	data/data_raw/test.py	/^utf-8	def	test_requires_guest	(	monkeypatch	)	:	\\n	\\n	    	@	staticmethod	\\n	def	mock_gcs	(	)/;"	f	function:test_requires_guest.mock_gcs	file:
do_title	data/bpe_corpus_raw/valid.py	/^utf-8	def	do_title	(	s	)	:	\\n	    	rv	=	[	]	\\n	for	item	in	re	.	compile	(	'([-\\\\\\\\s]+)(?u)/;"	f
do_title	data/data_raw/valid.py	/^utf-8	def	do_title	(	s	)	:	\\n	    	rv	=	[	]	\\n	for	item	in	re	.	compile	(	'([-\\\\\\\\s]+)(?u)/;"	f
doc	data/bpe_corpus_raw/train.py	/^utf-8	def	doc	(	self	,	string	)	:	\\n	    	return	\\n		$/;"	f
doc	data/data_raw/train.py	/^utf-8	def	doc	(	self	,	string	)	:	\\n	    	return	\\n		$/;"	f
docSetRootElement	data/bpe_corpus_raw/train.py	/^utf-8	def	docSetRootElement	(	self	,	doc	)	:	\\n	    	if	doc	is	None	:	\\n	        	doc__o	=	Non/;"	f
docSetRootElement	data/data_raw/train.py	/^utf-8	def	docSetRootElement	(	self	,	doc	)	:	\\n	    	if	doc	is	None	:	\\n	        	doc__o	=	Non/;"	f
docToHTML	data/bpe_corpus_raw/valid.py	/^utf-8	def	docToHTML	(	self	,	doc	)	:	\\n	    	doc	=	doc	.	replace	(	'\\\\n\\\\n'	,	'<p\/>'	)	\\n/;"	f
docToHTML	data/data_raw/valid.py	/^utf-8	def	docToHTML	(	self	,	doc	)	:	\\n	    	doc	=	doc	.	replace	(	'\\\\n\\\\n'	,	'<p\/>'	)	\\n/;"	f
doctest_hist_op	data/bpe_corpus_raw/valid.py	/^utf-8	@	dec	.	skip_without	(	'sqlite3'	)	\\n	def	doctest_hist_op	(	)	:	\\n	$/;"	f
doctest_hist_op	data/data_raw/valid.py	/^utf-8	@	dec	.	skip_without	(	'sqlite3'	)	\\n	def	doctest_hist_op	(	)	:	\\n	$/;"	f
document_link_entity	data/bpe_corpus_raw/train.py	/^utf-8	def	document_link_entity	(	props	)	:	\\n	    	return	DOM	.	create_element	(	'a'	,	{	'linkt/;"	f
document_link_entity	data/data_raw/train.py	/^utf-8	def	document_link_entity	(	props	)	:	\\n	    	return	DOM	.	create_element	(	'a'	,	{	'linkt/;"	f
dominance	data/bpe_corpus_raw/valid.py	/^utf-8	@	experimental	(	as_of	=	'0.4.0'	)	\\n	def	dominance	(	counts	)	:	\\n	    	counts	=	_valid/;"	f
dominance	data/data_raw/valid.py	/^utf-8	@	experimental	(	as_of	=	'0.4.0'	)	\\n	def	dominance	(	counts	)	:	\\n	    	counts	=	_valid/;"	f
dotted_netmask	data/bpe_corpus_raw/test.py	/^utf-8	def	dotted_netmask	(	mask	)	:	\\n	    	bits	=	4294967295	^	(	1	<<	32	-	mask	)	-	1	\\n	retu/;"	f
dotted_netmask	data/bpe_corpus_raw/train.py	/^utf-8	def	dotted_netmask	(	mask	)	:	\\n	    	bits	=	4294967295	^	(	1	<<	32	-	mask	)	-	1	\\n	retu/;"	f
dotted_netmask	data/data_raw/test.py	/^utf-8	def	dotted_netmask	(	mask	)	:	\\n	    	bits	=	4294967295	^	(	1	<<	32	-	mask	)	-	1	\\n	retu/;"	f
dotted_netmask	data/data_raw/train.py	/^utf-8	def	dotted_netmask	(	mask	)	:	\\n	    	bits	=	4294967295	^	(	1	<<	32	-	mask	)	-	1	\\n	retu/;"	f
download_and_create	data/bpe_corpus_raw/valid.py	/^utf-8	def	download_and_create	(	self	,	arxiv_id	)	:	\\n	    	file	=	download_source_file	(	arxiv/;"	f
download_and_create	data/data_raw/valid.py	/^utf-8	def	download_and_create	(	self	,	arxiv_id	)	:	\\n	    	file	=	download_source_file	(	arxiv/;"	f
download_setuptools	data/bpe_corpus_raw/train.py	/^utf-8	def	download_setuptools	(	version	=	DEFAULT_VERSION	,	download_base	=	DEFAULT_URL	,	\\n	to/;"	f
download_setuptools	data/data_raw/train.py	/^utf-8	def	download_setuptools	(	version	=	DEFAULT_VERSION	,	download_base	=	DEFAULT_URL	,	\\n	to/;"	f
downward_api	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	downward_api	(	self	)	:	\\n	    	return	self	.	_downward_api	\\n		$/;"	f
downward_api	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	downward_api	(	self	)	:	\\n	    	return	self	.	_downward_api	\\n		$/;"	f
draw	data/bpe_corpus_raw/train.py	/^utf-8	def	draw	(	self	)	:	\\n	    	indices	=	np	.	arange	(	len	(	self	.	classes_	)	)	\\n	prev	=	/;"	f
draw	data/bpe_corpus_raw/train.py	/^utf-8	def	draw	(	self	,	**	kwargs	)	:	\\n	    	raise	NotImplementedError	(	'Visualizers must imp/;"	f
draw	data/data_raw/train.py	/^utf-8	def	draw	(	self	)	:	\\n	    	indices	=	np	.	arange	(	len	(	self	.	classes_	)	)	\\n	prev	=	/;"	f
draw	data/data_raw/train.py	/^utf-8	def	draw	(	self	,	**	kwargs	)	:	\\n	    	raise	NotImplementedError	(	'Visualizers must imp/;"	f
draw_all_detection	data/bpe_corpus_raw/train.py	/^utf-8	def	draw_all_detection	(	im_array	,	detections	,	class_names	,	scale	)	:	\\n	    	import	c/;"	f
draw_all_detection	data/data_raw/train.py	/^utf-8	def	draw_all_detection	(	im_array	,	detections	,	class_names	,	scale	)	:	\\n	    	import	c/;"	f
draw_figure	data/bpe_corpus_raw/valid.py	/^utf-8	def	draw_figure	(	self	)	:	\\n	    	str	=	self	.	textbox	.	GetValue	(	)	\\n	self	.	data	=	/;"	f
draw_figure	data/data_raw/valid.py	/^utf-8	def	draw_figure	(	self	)	:	\\n	    	str	=	self	.	textbox	.	GetValue	(	)	\\n	self	.	data	=	/;"	f
draw_markers	data/bpe_corpus_raw/valid.py	/^utf-8	def	draw_markers	(	self	,	renderer	,	gc	,	marker_path	,	marker_trans	,	path	,	trans	,	\\n	/;"	f
draw_markers	data/data_raw/valid.py	/^utf-8	def	draw_markers	(	self	,	renderer	,	gc	,	marker_path	,	marker_trans	,	path	,	trans	,	\\n	/;"	f
draw_quad_vertices	data/bpe_corpus_raw/train.py	/^utf-8	def	draw_quad_vertices	(	self	)	:	\\n	    	glTexCoord3f	(	*	self	.	tex_coords	[	:	3	]	)	\\/;"	f
draw_quad_vertices	data/data_raw/train.py	/^utf-8	def	draw_quad_vertices	(	self	)	:	\\n	    	glTexCoord3f	(	*	self	.	tex_coords	[	:	3	]	)	\\/;"	f
drop_tree	data/bpe_corpus_raw/valid.py	/^utf-8	def	drop_tree	(	self	)	:	\\n	    	parent	=	self	.	getparent	(	)	\\n	assert	parent	is	not	N/;"	f
drop_tree	data/data_raw/valid.py	/^utf-8	def	drop_tree	(	self	)	:	\\n	    	parent	=	self	.	getparent	(	)	\\n	assert	parent	is	not	N/;"	f
dtype	data/bpe_corpus_raw/valid.py	/^utf-8	@	abstractproperty	\\n	def	dtype	(	self	)	:	\\n	$/;"	f
dtype	data/data_raw/valid.py	/^utf-8	@	abstractproperty	\\n	def	dtype	(	self	)	:	\\n	$/;"	f
dummy_func	data/bpe_corpus_raw/train.py	/^utf-8	def	dummy_func	(	)	:	\\n	    	pass	\\n		$/;"	f
dummy_func	data/data_raw/train.py	/^utf-8	def	dummy_func	(	)	:	\\n	    	pass	\\n		$/;"	f
dump	data/bpe_corpus_raw/test.py	/^utf-8	def	dump	(	self	)	:	\\n	    	opts	=	builtins	.	__xonsh__	.	env	.	get	(	'HISTCONTROL'	)	\\n/;"	f
dump	data/bpe_corpus_raw/train.py	/^utf-8	def	dump	(	node	,	annotate_fields	=	True	,	include_attributes	=	False	)	:	\\n	\\n	    	def/;"	f
dump	data/bpe_corpus_raw/train.py	/^utf-8	def	dump	(	obj	,	file	,	protocol	=	None	)	:	\\n	    	CloudPickler	(	file	,	protocol	=	prot/;"	f
dump	data/bpe_corpus_raw/valid.py	/^utf-8	def	dump	(	data	,	stream	=	None	,	Dumper	=	Dumper	,	**	kwds	)	:	\\n	    	return	dump_all	(/;"	f
dump	data/bpe_corpus_raw/valid.py	/^utf-8	def	dump	(	self	,	fileobj	)	:	\\n	    	if	self	.	file_format	==	'csv'	:	\\n	        	csv	./;"	f
dump	data/data_raw/test.py	/^utf-8	def	dump	(	self	)	:	\\n	    	opts	=	builtins	.	__xonsh__	.	env	.	get	(	'HISTCONTROL'	)	\\n/;"	f
dump	data/data_raw/train.py	/^utf-8	def	dump	(	node	,	annotate_fields	=	True	,	include_attributes	=	False	)	:	\\n	\\n	    	def/;"	f
dump	data/data_raw/train.py	/^utf-8	def	dump	(	obj	,	file	,	protocol	=	None	)	:	\\n	    	CloudPickler	(	file	,	protocol	=	prot/;"	f
dump	data/data_raw/valid.py	/^utf-8	def	dump	(	data	,	stream	=	None	,	Dumper	=	Dumper	,	**	kwds	)	:	\\n	    	return	dump_all	(/;"	f
dump	data/data_raw/valid.py	/^utf-8	def	dump	(	self	,	fileobj	)	:	\\n	    	if	self	.	file_format	==	'csv'	:	\\n	        	csv	./;"	f
dump_ssh_config	data/bpe_corpus_raw/valid.py	/^utf-8	def	dump_ssh_config	(	self	)	:	\\n	    	ssh_cfg_path	=	os	.	path	.	join	(	self	.	vagrant_d/;"	f
dump_ssh_config	data/data_raw/valid.py	/^utf-8	def	dump_ssh_config	(	self	)	:	\\n	    	ssh_cfg_path	=	os	.	path	.	join	(	self	.	vagrant_d/;"	f
dumps	data/bpe_corpus_raw/test.py	/^utf-8	def	dumps	(	self	,	indent	=	None	,	preamble	=	'Versions:'	,	query	=	False	)	:	\\n	    	if	/;"	f
dumps	data/bpe_corpus_raw/train.py	/^utf-8	def	dumps	(	obj	,	skipkeys	=	False	,	ensure_ascii	=	True	,	check_circular	=	True	,	\\n	all/;"	f
dumps	data/data_raw/test.py	/^utf-8	def	dumps	(	self	,	indent	=	None	,	preamble	=	'Versions:'	,	query	=	False	)	:	\\n	    	if	/;"	f
dumps	data/data_raw/train.py	/^utf-8	def	dumps	(	obj	,	skipkeys	=	False	,	ensure_ascii	=	True	,	check_circular	=	True	,	\\n	all/;"	f
dumptool_thread	data/bpe_corpus_raw/train.py	/^utf-8	def	dumptool_thread	(	self	)	:	\\n	    	dumptool	=	HcxDumpTool	(	self	.	target	,	self	.	pc/;"	f
dumptool_thread	data/data_raw/train.py	/^utf-8	def	dumptool_thread	(	self	)	:	\\n	    	dumptool	=	HcxDumpTool	(	self	.	target	,	self	.	pc/;"	f
dylib_info	data/bpe_corpus_raw/train.py	/^utf-8	def	dylib_info	(	filename	)	:	\\n	    	is_dylib	=	DYLIB_RE	.	match	(	filename	)	\\n	if	not/;"	f
dylib_info	data/data_raw/train.py	/^utf-8	def	dylib_info	(	filename	)	:	\\n	    	is_dylib	=	DYLIB_RE	.	match	(	filename	)	\\n	if	not/;"	f
echo	data/bpe_corpus_raw/test.py	/^utf-8	def	echo	(	message	=	None	,	file	=	None	,	nl	=	True	,	err	=	False	,	color	=	None	)	:	\\n	 /;"	f
echo	data/data_raw/test.py	/^utf-8	def	echo	(	message	=	None	,	file	=	None	,	nl	=	True	,	err	=	False	,	color	=	None	)	:	\\n	 /;"	f
ekdelr	data/bpe_corpus_raw/valid.py	/^utf-8	@	spiceErrorCheck	\\n	def	ekdelr	(	handle	,	segno	,	recno	)	:	\\n	    	handle	=	ctypes	.	c/;"	f
ekdelr	data/data_raw/valid.py	/^utf-8	@	spiceErrorCheck	\\n	def	ekdelr	(	handle	,	segno	,	recno	)	:	\\n	    	handle	=	ctypes	.	c/;"	f
elapsed_time	data/bpe_corpus_raw/valid.py	/^utf-8	def	elapsed_time	(	self	)	:	\\n	    	return	format	(	self	.	_stop_time	-	self	.	_start_tim/;"	f
elapsed_time	data/data_raw/valid.py	/^utf-8	def	elapsed_time	(	self	)	:	\\n	    	return	format	(	self	.	_stop_time	-	self	.	_start_tim/;"	f
ellipsoid	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	ellipsoid	(	self	)	:	\\n	    	if	gdal	.	HAS_GDAL	:	\\n	        	return	/;"	f
ellipsoid	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	ellipsoid	(	self	)	:	\\n	    	if	gdal	.	HAS_GDAL	:	\\n	        	return	/;"	f
emit	data/bpe_corpus_raw/test.py	/^utf-8	def	emit	(	self	,	o	,	level	=	0	)	:	\\n	    	if	level	:	\\n	        	spaces	=	'  '	*	(	lev/;"	f
emit	data/bpe_corpus_raw/valid.py	/^utf-8	def	emit	(	events	,	stream	=	None	,	Dumper	=	Dumper	,	canonical	=	None	,	indent	=	None	,	\\/;"	f
emit	data/bpe_corpus_raw/valid.py	/^utf-8	def	emit	(	self	,	record	)	:	\\n	    	try	:	\\n	        	import	smtplib	\\n	from	email	.	m/;"	f
emit	data/bpe_corpus_raw/valid.py	/^utf-8	def	emit	(	self	,	record	)	:	\\n	    	try	:	\\n	        	sres	=	os	.	stat	(	self	.	baseFil/;"	f
emit	data/data_raw/test.py	/^utf-8	def	emit	(	self	,	o	,	level	=	0	)	:	\\n	    	if	level	:	\\n	        	spaces	=	'  '	*	(	lev/;"	f
emit	data/data_raw/valid.py	/^utf-8	def	emit	(	events	,	stream	=	None	,	Dumper	=	Dumper	,	canonical	=	None	,	indent	=	None	,	\\/;"	f
emit	data/data_raw/valid.py	/^utf-8	def	emit	(	self	,	record	)	:	\\n	    	try	:	\\n	        	import	smtplib	\\n	from	email	.	m/;"	f
emit	data/data_raw/valid.py	/^utf-8	def	emit	(	self	,	record	)	:	\\n	    	try	:	\\n	        	sres	=	os	.	stat	(	self	.	baseFil/;"	f
emoji_list	data/bpe_corpus_raw/valid.py	/^utf-8	def	emoji_list	(	self	,	**	kwargs	)	->	SlackResponse	:	\\n	    	return	self	.	api_call	(	'/;"	f
emoji_list	data/data_raw/valid.py	/^utf-8	def	emoji_list	(	self	,	**	kwargs	)	->	SlackResponse	:	\\n	    	return	self	.	api_call	(	'/;"	f
empty_urlconf	data/bpe_corpus_raw/valid.py	/^utf-8	def	empty_urlconf	(	request	)	:	\\n	    	t	=	Template	(	EMPTY_URLCONF_TEMPLATE	,	name	=	'E/;"	f
empty_urlconf	data/data_raw/valid.py	/^utf-8	def	empty_urlconf	(	request	)	:	\\n	    	t	=	Template	(	EMPTY_URLCONF_TEMPLATE	,	name	=	'E/;"	f
emulated_lastrowid	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	emulated_lastrowid	(	self	)	:	\\n	    	return	exclusions	.	closed	(	)	\\/;"	f
emulated_lastrowid	data/data_raw/train.py	/^utf-8	@	property	\\n	def	emulated_lastrowid	(	self	)	:	\\n	    	return	exclusions	.	closed	(	)	\\/;"	f
enable_classic_link	data/bpe_corpus_raw/valid.py	/^utf-8	def	enable_classic_link	(	self	,	dry_run	=	False	)	:	\\n	    	return	self	.	connection	.	e/;"	f
enable_classic_link	data/data_raw/valid.py	/^utf-8	def	enable_classic_link	(	self	,	dry_run	=	False	)	:	\\n	    	return	self	.	connection	.	e/;"	f
enable_constraint_checking	data/bpe_corpus_raw/valid.py	/^utf-8	def	enable_constraint_checking	(	self	)	:	\\n	    	pass	\\n		$/;"	f
enable_constraint_checking	data/data_raw/valid.py	/^utf-8	def	enable_constraint_checking	(	self	)	:	\\n	    	pass	\\n		$/;"	f
enable_service	data/bpe_corpus_raw/train.py	/^utf-8	def	enable_service	(	self	,	service	)	:	\\n	    	svc	=	self	.	service_path	%	service	\\n	r/;"	f
enable_service	data/data_raw/train.py	/^utf-8	def	enable_service	(	self	,	service	)	:	\\n	    	svc	=	self	.	service_path	%	service	\\n	r/;"	f
enable_unstructured	data/bpe_corpus_raw/valid.py	/^utf-8	def	enable_unstructured	(	self	)	:	\\n	    	if	self	.	terminal_handler	:	\\n	        	self/;"	f
enable_unstructured	data/data_raw/valid.py	/^utf-8	def	enable_unstructured	(	self	)	:	\\n	    	if	self	.	terminal_handler	:	\\n	        	self/;"	f
encode	data/bpe_corpus_raw/train.py	/^utf-8	def	encode	(	self	,	session_dict	)	:	\\n	    	return	SessionStore	(	)	.	encode	(	session_d/;"	f
encode	data/data_raw/train.py	/^utf-8	def	encode	(	self	,	session_dict	)	:	\\n	    	return	SessionStore	(	)	.	encode	(	session_d/;"	f
encodeMask	data/bpe_corpus_raw/train.py	/^utf-8	def	encodeMask	(	M	)	:	\\n	    	[	h	,	w	]	=	M	.	shape	\\n	M	=	M	.	flatten	(	order	=	'F'	)	/;"	f
encodeMask	data/data_raw/train.py	/^utf-8	def	encodeMask	(	M	)	:	\\n	    	[	h	,	w	]	=	M	.	shape	\\n	M	=	M	.	flatten	(	order	=	'F'	)	/;"	f
encode_noop	data/bpe_corpus_raw/valid.py	/^utf-8	def	encode_noop	(	msg	)	:	\\n	$/;"	f
encode_noop	data/data_raw/valid.py	/^utf-8	def	encode_noop	(	msg	)	:	\\n	$/;"	f
encoder	data/bpe_corpus_raw/valid.py	/^utf-8	def	encoder	(	enc_input	,	attn_bias	,	n_layer	,	n_head	,	d_key	,	d_value	,	d_model	,	\\n	d/;"	f
encoder	data/data_raw/valid.py	/^utf-8	def	encoder	(	enc_input	,	attn_bias	,	n_layer	,	n_head	,	d_key	,	d_value	,	d_model	,	\\n	d/;"	f
encrypt	data/bpe_corpus_raw/valid.py	/^utf-8	def	encrypt	(	pubkey	,	password	)	:	\\n	    	key	=	load_key	(	pubkey	)	\\n	encrypted_passw/;"	f
encrypt	data/data_raw/valid.py	/^utf-8	def	encrypt	(	pubkey	,	password	)	:	\\n	    	key	=	load_key	(	pubkey	)	\\n	encrypted_passw/;"	f
endElement	data/bpe_corpus_raw/valid.py	/^utf-8	def	endElement	(	self	,	name	)	:	\\n	    	if	name	==	'document'	:	\\n	        	self	.	styl/;"	f
endElement	data/data_raw/valid.py	/^utf-8	def	endElement	(	self	,	name	)	:	\\n	    	if	name	==	'document'	:	\\n	        	self	.	styl/;"	f
end_before	data/bpe_corpus_raw/train.py	/^utf-8	def	end_before	(	self	,	document_fields	)	:	\\n	    	query	=	query_mod	.	Query	(	self	)	\\/;"	f
end_before	data/data_raw/train.py	/^utf-8	def	end_before	(	self	,	document_fields	)	:	\\n	    	query	=	query_mod	.	Query	(	self	)	\\/;"	f
end_game	data/bpe_corpus_raw/valid.py	/^utf-8	def	end_game	(	self	)	:	\\n	    	sys	.	exit	(	)	\\n		$/;"	f
end_game	data/data_raw/valid.py	/^utf-8	def	end_game	(	self	)	:	\\n	    	sys	.	exit	(	)	\\n		$/;"	f
end_headers	data/bpe_corpus_raw/valid.py	/^utf-8	def	end_headers	(	self	)	:	\\n	    	if	self	.	request_version	!=	'HTTP\/0.9'	:	\\n	       /;"	f
end_headers	data/data_raw/valid.py	/^utf-8	def	end_headers	(	self	)	:	\\n	    	if	self	.	request_version	!=	'HTTP\/0.9'	:	\\n	       /;"	f
engine_disposed	data/bpe_corpus_raw/valid.py	/^utf-8	def	engine_disposed	(	self	,	engine	)	:	\\n	$/;"	f
engine_disposed	data/data_raw/valid.py	/^utf-8	def	engine_disposed	(	self	,	engine	)	:	\\n	$/;"	f
english_name	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	english_name	(	self	)	:	\\n	    	return	self	.	get_display_name	(	Local/;"	f
english_name	data/data_raw/train.py	/^utf-8	@	property	\\n	def	english_name	(	self	)	:	\\n	    	return	self	.	get_display_name	(	Local/;"	f
ensure_directory	data/bpe_corpus_raw/train.py	/^utf-8	def	ensure_directory	(	directory	)	:	\\n	    	directory	=	os	.	path	.	expanduser	(	directo/;"	f
ensure_directory	data/data_raw/train.py	/^utf-8	def	ensure_directory	(	directory	)	:	\\n	    	directory	=	os	.	path	.	expanduser	(	directo/;"	f
ensure_dirs	data/bpe_corpus_raw/train.py	/^utf-8	def	ensure_dirs	(	dirs	)	:	\\n	    	dirs	=	[	pathlib	.	Path	(	d	)	for	d	in	listify	(	dirs	/;"	f
ensure_dirs	data/data_raw/train.py	/^utf-8	def	ensure_dirs	(	dirs	)	:	\\n	    	dirs	=	[	pathlib	.	Path	(	d	)	for	d	in	listify	(	dirs	/;"	f
ensure_fs_mode	data/bpe_corpus_raw/train.py	/^utf-8	def	ensure_fs_mode	(	filepath	,	desired_mode	=	S_IWRITE	)	:	\\n	    	mode	=	stat	(	filepat/;"	f
ensure_fs_mode	data/data_raw/train.py	/^utf-8	def	ensure_fs_mode	(	filepath	,	desired_mode	=	S_IWRITE	)	:	\\n	    	mode	=	stat	(	filepat/;"	f
ensure_sequence	data/bpe_corpus_raw/train.py	/^utf-8	def	ensure_sequence	(	obj	)	:	\\n	    	if	isinstance	(	obj	,	(	tuple	,	list	)	)	:	\\n	    /;"	f
ensure_sequence	data/data_raw/train.py	/^utf-8	def	ensure_sequence	(	obj	)	:	\\n	    	if	isinstance	(	obj	,	(	tuple	,	list	)	)	:	\\n	    /;"	f
enter	data/bpe_corpus_raw/train.py	/^utf-8	def	enter	(	self	)	:	\\n	    	self	.	_translate	(	True	)	\\n	inputCore	.	manager	.	emulate/;"	f
enter	data/data_raw/train.py	/^utf-8	def	enter	(	self	)	:	\\n	    	self	.	_translate	(	True	)	\\n	inputCore	.	manager	.	emulate/;"	f
enterNode	data/bpe_corpus_raw/test.py	/^utf-8	def	enterNode	(	self	,	event	)	:	\\n	    	self	.	selectNode	(	event	)	\\n		$/;"	f
enterNode	data/data_raw/test.py	/^utf-8	def	enterNode	(	self	,	event	)	:	\\n	    	self	.	selectNode	(	event	)	\\n		$/;"	f
entropy	data/bpe_corpus_raw/test.py	/^utf-8	def	entropy	(	state	)	:	\\n	    	rho	=	np	.	array	(	state	)	\\n	if	rho	.	ndim	==	1	:	\\n	 /;"	f
entropy	data/data_raw/test.py	/^utf-8	def	entropy	(	state	)	:	\\n	    	rho	=	np	.	array	(	state	)	\\n	if	rho	.	ndim	==	1	:	\\n	 /;"	f
entropy_H	data/bpe_corpus_raw/train.py	/^utf-8	def	entropy_H	(	self	,	data	)	:	\\n	    	if	len	(	data	)	==	0	:	\\n	        	return	0.0	\\/;"	f
entropy_H	data/data_raw/train.py	/^utf-8	def	entropy_H	(	self	,	data	)	:	\\n	    	if	len	(	data	)	==	0	:	\\n	        	return	0.0	\\/;"	f
enumerate_version_changelog	data/bpe_corpus_raw/valid.py	/^utf-8	def	enumerate_version_changelog	(	self	,	url	,	versions_estimated	,	timeout	=	15	,	\\n	hea/;"	f
enumerate_version_changelog	data/data_raw/valid.py	/^utf-8	def	enumerate_version_changelog	(	self	,	url	,	versions_estimated	,	timeout	=	15	,	\\n	hea/;"	f
enumeration_ask	data/bpe_corpus_raw/train.py	/^utf-8	def	enumeration_ask	(	X	,	e	,	bn	)	:	\\n	    	assert	X	not	in	e	,	'Query variable must be /;"	f
enumeration_ask	data/data_raw/train.py	/^utf-8	def	enumeration_ask	(	X	,	e	,	bn	)	:	\\n	    	assert	X	not	in	e	,	'Query variable must be /;"	f
epydocs	data/bpe_corpus_raw/test.py	/^utf-8	def	epydocs	(	self	)	:	\\n	    	return	self	.	docs	.	replace	(	'@see'	,	'See'	)	.	replace	/;"	f
epydocs	data/data_raw/test.py	/^utf-8	def	epydocs	(	self	)	:	\\n	    	return	self	.	docs	.	replace	(	'@see'	,	'See'	)	.	replace	/;"	f
equals	data/bpe_corpus_raw/train.py	/^utf-8	def	equals	(	self	,	unused_rhs	)	:	\\n	    	return	True	\\n		$/;"	f
equals	data/bpe_corpus_raw/valid.py	/^utf-8	def	equals	(	self	,	rhs	)	:	\\n	    	try	:	\\n	        	return	rhs	[	self	.	_key	]	==	self/;"	f
equals	data/data_raw/train.py	/^utf-8	def	equals	(	self	,	unused_rhs	)	:	\\n	    	return	True	\\n		$/;"	f
equals	data/data_raw/valid.py	/^utf-8	def	equals	(	self	,	rhs	)	:	\\n	    	try	:	\\n	        	return	rhs	[	self	.	_key	]	==	self/;"	f
error	data/bpe_corpus_raw/train.py	/^utf-8	def	error	(	self	,	code	=	500	)	:	\\n	\\n	    	def	wrapper	(	handler	)	:	\\n	        	self/;"	f
error	data/bpe_corpus_raw/valid.py	/^utf-8	def	error	(	self	,	msg	,	*	args	,	**	kwargs	)	:	\\n	    	self	.	log	(	logging	.	ERROR	,	ms/;"	f
error	data/data_raw/train.py	/^utf-8	def	error	(	self	,	code	=	500	)	:	\\n	\\n	    	def	wrapper	(	handler	)	:	\\n	        	self/;"	f
error	data/data_raw/valid.py	/^utf-8	def	error	(	self	,	msg	,	*	args	,	**	kwargs	)	:	\\n	    	self	.	log	(	logging	.	ERROR	,	ms/;"	f
errorNode	data/bpe_corpus_raw/valid.py	/^utf-8	def	errorNode	(	self	,	input	,	start	,	stop	,	exc	)	:	\\n	    	raise	NotImplementedError	\\/;"	f
errorNode	data/data_raw/valid.py	/^utf-8	def	errorNode	(	self	,	input	,	start	,	stop	,	exc	)	:	\\n	    	raise	NotImplementedError	\\/;"	f
error_handler	data/bpe_corpus_raw/train.py	/^utf-8	@	app	.	errorhandler	(	400	)	\\n	@	app	.	errorhandler	(	401	)	\\n	@	app	.	errorhandler	(	4/;"	f
error_handler	data/data_raw/train.py	/^utf-8	@	app	.	errorhandler	(	400	)	\\n	@	app	.	errorhandler	(	401	)	\\n	@	app	.	errorhandler	(	4/;"	f
error_unsupported_grant_type	data/bpe_corpus_raw/train.py	/^utf-8	@	staticmethod	\\n	def	error_unsupported_grant_type	(	)	:	\\n	    	error_response	=	dict	(/;"	f
error_unsupported_grant_type	data/data_raw/train.py	/^utf-8	@	staticmethod	\\n	def	error_unsupported_grant_type	(	)	:	\\n	    	error_response	=	dict	(/;"	f
errorhandler	data/bpe_corpus_raw/test.py	/^utf-8	def	errorhandler	(	self	,	code	:	int	,	endcode	:	int	=	None	,	step	:	int	=	None	)	:	\\n	\\/;"	f
errorhandler	data/data_raw/test.py	/^utf-8	def	errorhandler	(	self	,	code	:	int	,	endcode	:	int	=	None	,	step	:	int	=	None	)	:	\\n	\\/;"	f
escape	data/bpe_corpus_raw/train.py	/^utf-8	def	escape	(	s	)	:	\\n	    	return	urllib	.	quote	(	s	,	safe	=	'~'	)	\\n		$/;"	f
escape	data/bpe_corpus_raw/train.py	/^utf-8	def	escape	(	string	,	curpos	=	None	,	delims	=	DEFAULT_DELIMS	,	escapes	=	\\n	DEFAULT_ESCA/;"	f
escape	data/data_raw/train.py	/^utf-8	def	escape	(	s	)	:	\\n	    	return	urllib	.	quote	(	s	,	safe	=	'~'	)	\\n		$/;"	f
escape	data/data_raw/train.py	/^utf-8	def	escape	(	string	,	curpos	=	None	,	delims	=	DEFAULT_DELIMS	,	escapes	=	\\n	DEFAULT_ESCA/;"	f
escape_binary	data/bpe_corpus_raw/valid.py	/^utf-8	def	escape_binary	(	message	)	:	\\n	    	out	=	''	\\n	for	c	in	message	:	\\n	        	d	=	/;"	f
escape_binary	data/data_raw/valid.py	/^utf-8	def	escape_binary	(	message	)	:	\\n	    	out	=	''	\\n	for	c	in	message	:	\\n	        	d	=	/;"	f
escape_help_text	data/bpe_corpus_raw/train.py	/^utf-8	def	escape_help_text	(	text	)	:	\\n	    	text	=	text	.	replace	(	'\\\\\\\\'	,	'\\\\\\\\\\\\/;"	f
escape_help_text	data/data_raw/train.py	/^utf-8	def	escape_help_text	(	text	)	:	\\n	    	text	=	text	.	replace	(	'\\\\\\\\'	,	'\\\\\\\\\\\\/;"	f
escape_silent	data/bpe_corpus_raw/test.py	/^utf-8	def	escape_silent	(	s	)	:	\\n	    	if	s	is	None	:	\\n	        	return	Markup	(	)	\\n		retu/;"	f
escape_silent	data/data_raw/test.py	/^utf-8	def	escape_silent	(	s	)	:	\\n	    	if	s	is	None	:	\\n	        	return	Markup	(	)	\\n		retu/;"	f
escape_uri_path	data/bpe_corpus_raw/valid.py	/^utf-8	def	escape_uri_path	(	path	)	:	\\n	    	return	quote	(	force_bytes	(	path	)	,	safe	=	b"\/:/;"	f
escape_uri_path	data/data_raw/valid.py	/^utf-8	def	escape_uri_path	(	path	)	:	\\n	    	return	quote	(	force_bytes	(	path	)	,	safe	=	b"\/:/;"	f
ethinca_order_from_string	data/bpe_corpus_raw/valid.py	/^utf-8	def	ethinca_order_from_string	(	order	)	:	\\n	    	if	order	in	get_ethinca_orders	(	)	.	ke/;"	f
ethinca_order_from_string	data/data_raw/valid.py	/^utf-8	def	ethinca_order_from_string	(	order	)	:	\\n	    	if	order	in	get_ethinca_orders	(	)	.	ke/;"	f
eval	data/bpe_corpus_raw/valid.py	/^utf-8	def	eval	(	self	,	line	)	:	\\n	    	run_dict	=	self	.	Matlab	.	run_code	(	line	)	\\n	if	no/;"	f
eval	data/bpe_corpus_raw/valid.py	/^utf-8	def	eval	(	self	,	sample	)	:	\\n	    	T	=	sample	.	T	\\n	Du	=	sample	.	dU	\\n	Dx	=	sample	/;"	f
eval	data/data_raw/valid.py	/^utf-8	def	eval	(	self	,	line	)	:	\\n	    	run_dict	=	self	.	Matlab	.	run_code	(	line	)	\\n	if	no/;"	f
eval	data/data_raw/valid.py	/^utf-8	def	eval	(	self	,	sample	)	:	\\n	    	T	=	sample	.	T	\\n	Du	=	sample	.	dU	\\n	Dx	=	sample	/;"	f
eval_components	data/bpe_corpus_raw/train.py	/^utf-8	def	eval_components	(	self	,	params	=	None	,	**	kwargs	)	:	\\n	    	userkws	=	self	.	userk/;"	f
eval_components	data/data_raw/train.py	/^utf-8	def	eval_components	(	self	,	params	=	None	,	**	kwargs	)	:	\\n	    	userkws	=	self	.	userk/;"	f
evaluate	data/bpe_corpus_raw/test.py	/^utf-8	def	evaluate	(	self	,	expr	,	context	)	:	\\n	    	if	isinstance	(	expr	,	string_types	)	:	/;"	f
evaluate	data/bpe_corpus_raw/test.py	/^utf-8	def	evaluate	(	self	,	iterbase	,	case_label	=	''	,	case_uuid	=	None	)	:	\\n	    	if	not	se/;"	f
evaluate	data/data_raw/test.py	/^utf-8	def	evaluate	(	self	,	expr	,	context	)	:	\\n	    	if	isinstance	(	expr	,	string_types	)	:	/;"	f
evaluate	data/data_raw/test.py	/^utf-8	def	evaluate	(	self	,	iterbase	,	case_label	=	''	,	case_uuid	=	None	)	:	\\n	    	if	not	se/;"	f
evaluate_conditionals	data/bpe_corpus_raw/train.py	/^utf-8	def	evaluate_conditionals	(	self	,	use	)	:	\\n	    	if	not	(	self	.	use	and	self	.	use	.	c/;"	f
evaluate_conditionals	data/data_raw/train.py	/^utf-8	def	evaluate_conditionals	(	self	,	use	)	:	\\n	    	if	not	(	self	.	use	and	self	.	use	.	c/;"	f
event_del	data/bpe_corpus_raw/test.py	/^utf-8	@	view_config	(	context	=	InstanceContext	,	request_method	=	'DELETE'	,	renderer	=	\\n	'js/;"	f
event_del	data/data_raw/test.py	/^utf-8	@	view_config	(	context	=	InstanceContext	,	request_method	=	'DELETE'	,	renderer	=	\\n	'js/;"	f
events_filter	data/bpe_corpus_raw/valid.py	/^utf-8	def	events_filter	(	self	,	topics	:	List	[	str	]	=	None	,	from_block	:	\\n	BlockSpecificat/;"	f
events_filter	data/data_raw/valid.py	/^utf-8	def	events_filter	(	self	,	topics	:	List	[	str	]	=	None	,	from_block	:	\\n	BlockSpecificat/;"	f
evict	data/bpe_corpus_raw/valid.py	/^utf-8	def	evict	(	self	,	tag	)	:	\\n	    	select	=	(	\\n	'SELECT rowid, filename FROM Cache WHER/;"	f
evict	data/data_raw/valid.py	/^utf-8	def	evict	(	self	,	tag	)	:	\\n	    	select	=	(	\\n	'SELECT rowid, filename FROM Cache WHER/;"	f
exclude	data/bpe_corpus_raw/train.py	/^utf-8	def	exclude	(	self	,	*	args	,	**	kwargs	)	:	\\n	    	clone	=	self	.	_clone	(	)	\\n	clone	./;"	f
exclude	data/data_raw/train.py	/^utf-8	def	exclude	(	self	,	*	args	,	**	kwargs	)	:	\\n	    	clone	=	self	.	_clone	(	)	\\n	clone	./;"	f
exec_time	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	exec_time	(	self	)	:	\\n	    	return	self	.	node_exec_stats	.	all_end_r/;"	f
exec_time	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	exec_time	(	self	)	:	\\n	    	return	self	.	node_exec_stats	.	all_end_r/;"	f
execute	data/bpe_corpus_raw/valid.py	/^utf-8	def	execute	(	self	,	email	)	:	\\n	    	print	(	'Sign up user {0}'	.	format	(	email	)	)	\\/;"	f
execute	data/bpe_corpus_raw/valid.py	/^utf-8	def	execute	(	self	,	loadbalancer	)	:	\\n	    	LOG	.	debug	(	'Mark DELETED in DB for load /;"	f
execute	data/bpe_corpus_raw/valid.py	/^utf-8	def	execute	(	self	,	object_	,	*	multiparams	,	**	params	)	:	\\n	    	raise	NotImplemented/;"	f
execute	data/data_raw/valid.py	/^utf-8	def	execute	(	self	,	email	)	:	\\n	    	print	(	'Sign up user {0}'	.	format	(	email	)	)	\\/;"	f
execute	data/data_raw/valid.py	/^utf-8	def	execute	(	self	,	loadbalancer	)	:	\\n	    	LOG	.	debug	(	'Mark DELETED in DB for load /;"	f
execute	data/data_raw/valid.py	/^utf-8	def	execute	(	self	,	object_	,	*	multiparams	,	**	params	)	:	\\n	    	raise	NotImplemented/;"	f
execute_build	data/bpe_corpus_raw/valid.py	/^utf-8	def	execute_build	(	self	)	:	\\n	    	if	not	self	.	is_option_true	(	'internal_dont_check_/;"	f
execute_build	data/data_raw/valid.py	/^utf-8	def	execute_build	(	self	)	:	\\n	    	if	not	self	.	is_option_true	(	'internal_dont_check_/;"	f
execute_command	data/bpe_corpus_raw/valid.py	/^utf-8	def	execute_command	(	self	,	request	,	command	,	frame	)	:	\\n	    	return	Response	(	fram/;"	f
execute_command	data/data_raw/valid.py	/^utf-8	def	execute_command	(	self	,	request	,	command	,	frame	)	:	\\n	    	return	Response	(	fram/;"	f
execute_site_detector_slot	data/bpe_corpus_raw/valid.py	/^utf-8	def	execute_site_detector_slot	(	self	,	resource_group_name	,	site_name	,	\\n	detector_nam/;"	f
execute_site_detector_slot	data/data_raw/valid.py	/^utf-8	def	execute_site_detector_slot	(	self	,	resource_group_name	,	site_name	,	\\n	detector_nam/;"	f
exists	data/bpe_corpus_raw/train.py	/^utf-8	@	staticmethod	\\n	def	exists	(	user_alias	,	alias_list	)	:	\\n	    	for	alias	in	alias_li/;"	f
exists	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	exists	(	results	,	_name	)	:	\\n	    	if	not	results	:	\\n	        /;"	f
exists	data/bpe_corpus_raw/valid.py	/^utf-8	def	exists	(	self	,	path	,	value	)	:	\\n	    	try	:	\\n	        	entry	=	Yedit	.	get_entry/;"	f
exists	data/data_raw/train.py	/^utf-8	@	staticmethod	\\n	def	exists	(	user_alias	,	alias_list	)	:	\\n	    	for	alias	in	alias_li/;"	f
exists	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	exists	(	results	,	_name	)	:	\\n	    	if	not	results	:	\\n	        /;"	f
exists	data/data_raw/valid.py	/^utf-8	def	exists	(	self	,	path	,	value	)	:	\\n	    	try	:	\\n	        	entry	=	Yedit	.	get_entry/;"	f
exists_volume_mount	data/bpe_corpus_raw/valid.py	/^utf-8	def	exists_volume_mount	(	self	,	volume_mount	)	:	\\n	    	exist_volume_mounts	=	self	.	ge/;"	f
exists_volume_mount	data/data_raw/valid.py	/^utf-8	def	exists_volume_mount	(	self	,	volume_mount	)	:	\\n	    	exist_volume_mounts	=	self	.	ge/;"	f
exit_handler	data/bpe_corpus_raw/train.py	/^utf-8	def	run_background_process	(	cmd	,	out_log	=	None	,	err_log	=	None	,	cwd	=	None	)	:	\\n	  /;"	f	function:run_background_process	file:
exit_handler	data/data_raw/train.py	/^utf-8	def	run_background_process	(	cmd	,	out_log	=	None	,	err_log	=	None	,	cwd	=	None	)	:	\\n	  /;"	f	function:run_background_process	file:
exit_process	data/bpe_corpus_raw/valid.py	/^utf-8	def	exit_process	(	self	)	:	\\n	    	self	.	exit_requested	=	True	\\n	self	.	__exit	.	rele/;"	f
exit_process	data/data_raw/valid.py	/^utf-8	def	exit_process	(	self	)	:	\\n	    	self	.	exit_requested	=	True	\\n	self	.	__exit	.	rele/;"	f
exithook	data/bpe_corpus_raw/valid.py	/^utf-8	def	exithook	(	self	)	:	\\n	    	time	.	sleep	(	10	)	\\n		$/;"	f
exithook	data/data_raw/valid.py	/^utf-8	def	exithook	(	self	)	:	\\n	    	time	.	sleep	(	10	)	\\n		$/;"	f
expand	data/bpe_corpus_raw/valid.py	/^utf-8	def	expand	(	self	,	n	,	alphabet	=	'x'	)	:	\\n	    	from	sage	.	algebras	.	free_algebra	im/;"	f
expand	data/data_raw/valid.py	/^utf-8	def	expand	(	self	,	n	,	alphabet	=	'x'	)	:	\\n	    	from	sage	.	algebras	.	free_algebra	im/;"	f
expand_depots	data/bpe_corpus_raw/train.py	/^utf-8	def	expand_depots	(	self	,	route	,	depots	,	c	)	:	\\n	    	if	depots	==	''	:	\\n	        	/;"	f
expand_depots	data/data_raw/train.py	/^utf-8	def	expand_depots	(	self	,	route	,	depots	,	c	)	:	\\n	    	if	depots	==	''	:	\\n	        	/;"	f
expand_node_tpm	data/bpe_corpus_raw/valid.py	/^utf-8	def	expand_node_tpm	(	tpm	)	:	\\n	    	uc	=	np	.	ones	(	[	(	2	)	for	node	in	tpm	.	shape	]	/;"	f
expand_node_tpm	data/data_raw/valid.py	/^utf-8	def	expand_node_tpm	(	tpm	)	:	\\n	    	uc	=	np	.	ones	(	[	(	2	)	for	node	in	tpm	.	shape	]	/;"	f
expandvars	data/bpe_corpus_raw/train.py	/^utf-8	def	expandvars	(	path	)	:	\\n	    	global	_varprog	,	_varprogb	\\n	if	isinstance	(	path	,	/;"	f
expandvars	data/data_raw/train.py	/^utf-8	def	expandvars	(	path	)	:	\\n	    	global	_varprog	,	_varprogb	\\n	if	isinstance	(	path	,	/;"	f
expectation_importance_sampler	data/bpe_corpus_raw/train.py	/^utf-8	def	expectation_importance_sampler	(	f	,	log_p	,	sampling_dist_q	,	z	=	None	,	n	=	\\n	None/;"	f
expectation_importance_sampler	data/data_raw/train.py	/^utf-8	def	expectation_importance_sampler	(	f	,	log_p	,	sampling_dist_q	,	z	=	None	,	n	=	\\n	None/;"	f
expected_v	data/bpe_corpus_raw/valid.py	/^utf-8	def	expected_v	(	self	)	:	\\n	    	if	self	.	fixed	:	\\n	        	return	self	.	V	\\n		E_v/;"	f
expected_v	data/data_raw/valid.py	/^utf-8	def	expected_v	(	self	)	:	\\n	    	if	self	.	fixed	:	\\n	        	return	self	.	V	\\n		E_v/;"	f
explode	data/bpe_corpus_raw/valid.py	/^utf-8	def	explode	(	self	,	contactgroups	,	notificationways	)	:	\\n	    	self	.	apply_partial_in/;"	f
explode	data/data_raw/valid.py	/^utf-8	def	explode	(	self	,	contactgroups	,	notificationways	)	:	\\n	    	self	.	apply_partial_in/;"	f
expm_cond	data/bpe_corpus_raw/valid.py	/^utf-8	def	expm_cond	(	A	,	check_finite	=	True	)	:	\\n	    	if	check_finite	:	\\n	        	A	=	np/;"	f
expm_cond	data/data_raw/valid.py	/^utf-8	def	expm_cond	(	A	,	check_finite	=	True	)	:	\\n	    	if	check_finite	:	\\n	        	A	=	np/;"	f
export	data/bpe_corpus_raw/valid.py	/^utf-8	def	export	(	self	,	filenames	,	fmt	=	'TIFF16'	,	fill_gaps	=	False	,	channel_names	=	\\n	N/;"	f
export	data/data_raw/valid.py	/^utf-8	def	export	(	self	,	filenames	,	fmt	=	'TIFF16'	,	fill_gaps	=	False	,	channel_names	=	\\n	N/;"	f
export_anim_groups	data/bpe_corpus_raw/valid.py	/^utf-8	def	export_anim_groups	(	self	,	animtxt	,	block_parent	)	:	\\n	    	if	NifOp	.	props	.	ani/;"	f
export_anim_groups	data/data_raw/valid.py	/^utf-8	def	export_anim_groups	(	self	,	animtxt	,	block_parent	)	:	\\n	    	if	NifOp	.	props	.	ani/;"	f
export_elasticsearch	data/bpe_corpus_raw/valid.py	/^utf-8	@	typecheck	(	t	=	Table	,	host	=	str	,	port	=	int	,	index	=	str	,	index_type	=	str	,	\\n	b/;"	f
export_elasticsearch	data/data_raw/valid.py	/^utf-8	@	typecheck	(	t	=	Table	,	host	=	str	,	port	=	int	,	index	=	str	,	index_type	=	str	,	\\n	b/;"	f
export_to_png	data/bpe_corpus_raw/valid.py	/^utf-8	def	export_to_png	(	self	,	filename	,	*	args	)	:	\\n	    	if	self	.	parent	is	not	None	:	\\/;"	f
export_to_png	data/data_raw/valid.py	/^utf-8	def	export_to_png	(	self	,	filename	,	*	args	)	:	\\n	    	if	self	.	parent	is	not	None	:	\\/;"	f
ext_convert	data/bpe_corpus_raw/valid.py	/^utf-8	def	ext_convert	(	self	,	value	)	:	\\n	    	return	self	.	resolve	(	value	)	\\n		$/;"	f
ext_convert	data/data_raw/valid.py	/^utf-8	def	ext_convert	(	self	,	value	)	:	\\n	    	return	self	.	resolve	(	value	)	\\n		$/;"	f
extend	data/bpe_corpus_raw/train.py	/^utf-8	def	extend	(	self	,	axis	,	delta	,	npoints	,	normal	=	None	)	:	\\n	    	if	not	delta	:	\\n/;"	f
extend	data/data_raw/train.py	/^utf-8	def	extend	(	self	,	axis	,	delta	,	npoints	,	normal	=	None	)	:	\\n	    	if	not	delta	:	\\n/;"	f
extendMarkdown	data/bpe_corpus_raw/valid.py	/^utf-8	def	extendMarkdown	(	self	,	md	,	md_globals	)	:	\\n	    	md	.	preprocessors	.	add	(	'meta'/;"	f
extendMarkdown	data/data_raw/valid.py	/^utf-8	def	extendMarkdown	(	self	,	md	,	md_globals	)	:	\\n	    	md	.	preprocessors	.	add	(	'meta'/;"	f
extendRectangularSelectionUpOnePage	data/bpe_corpus_raw/valid.py	/^utf-8	def	extendRectangularSelectionUpOnePage	(	self	)	:	\\n	    	self	.	SendScintilla	(	QsciSci/;"	f
extendRectangularSelectionUpOnePage	data/data_raw/valid.py	/^utf-8	def	extendRectangularSelectionUpOnePage	(	self	)	:	\\n	    	self	.	SendScintilla	(	QsciSci/;"	f
extendSelectionRightOneCharacter	data/bpe_corpus_raw/valid.py	/^utf-8	def	extendSelectionRightOneCharacter	(	self	)	:	\\n	    	self	.	SendScintilla	(	QsciScinti/;"	f
extendSelectionRightOneCharacter	data/data_raw/valid.py	/^utf-8	def	extendSelectionRightOneCharacter	(	self	)	:	\\n	    	self	.	SendScintilla	(	QsciScinti/;"	f
extended_gcd	data/bpe_corpus_raw/valid.py	/^utf-8	def	extended_gcd	(	a	,	b	)	:	\\n	    	x	=	0	\\n	y	=	1	\\n	lx	=	1	\\n	ly	=	0	\\n	oa	=	a	\\n/;"	f
extended_gcd	data/data_raw/valid.py	/^utf-8	def	extended_gcd	(	a	,	b	)	:	\\n	    	x	=	0	\\n	y	=	1	\\n	lx	=	1	\\n	ly	=	0	\\n	oa	=	a	\\n/;"	f
extension	data/bpe_corpus_raw/train.py	/^utf-8	@	require	(	[	'report'	,	'directory'	,	'clang'	,	'output_dir'	,	'language'	,	'file'	,	\\n	/;"	f	function:report_failure	file:
extension	data/data_raw/train.py	/^utf-8	@	require	(	[	'report'	,	'directory'	,	'clang'	,	'output_dir'	,	'language'	,	'file'	,	\\n	/;"	f	function:report_failure	file:
extra_attributes	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	extra_attributes	(	self	)	:	\\n	    	return	self	.	_extra_attributes	\\/;"	f
extra_attributes	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	extra_attributes	(	self	)	:	\\n	    	return	self	.	_extra_attributes	\\/;"	f
extra_super_categories	data/bpe_corpus_raw/train.py	/^utf-8	def	extra_super_categories	(	self	)	:	\\n	    	return	[	AdditiveMagmas	(	)	.	AdditiveUnita/;"	f
extra_super_categories	data/data_raw/train.py	/^utf-8	def	extra_super_categories	(	self	)	:	\\n	    	return	[	AdditiveMagmas	(	)	.	AdditiveUnita/;"	f
extractFragment	data/bpe_corpus_raw/valid.py	/^utf-8	def	extractFragment	(	self	,	from_line	,	how_many	=	1	)	:	\\n	    	fragment	=	TextDocument/;"	f
extractFragment	data/data_raw/valid.py	/^utf-8	def	extractFragment	(	self	,	from_line	,	how_many	=	1	)	:	\\n	    	fragment	=	TextDocument/;"	f
extract_cookies_to_jar	data/bpe_corpus_raw/valid.py	/^utf-8	def	extract_cookies_to_jar	(	jar	,	request	,	response	)	:	\\n	    	if	not	(	hasattr	(	resp/;"	f
extract_cookies_to_jar	data/data_raw/valid.py	/^utf-8	def	extract_cookies_to_jar	(	jar	,	request	,	response	)	:	\\n	    	if	not	(	hasattr	(	resp/;"	f
extract_docstring	data_utils/build_dataset.py	/^def extract_docstring(ast_node):$/;"	f
extract_image_urls	data/bpe_corpus_raw/valid.py	/^utf-8	def	extract_image_urls	(	self	,	raw_xml	,	image_type	=	None	)	:	\\n	    	xml_tree	=	utils	/;"	f
extract_image_urls	data/data_raw/valid.py	/^utf-8	def	extract_image_urls	(	self	,	raw_xml	,	image_type	=	None	)	:	\\n	    	xml_tree	=	utils	/;"	f
extract_url	data/bpe_corpus_raw/train.py	/^utf-8	def	extract_url	(	self	,	line	)	:	\\n	    	pass	\\n		$/;"	f
extract_url	data/data_raw/train.py	/^utf-8	def	extract_url	(	self	,	line	)	:	\\n	    	pass	\\n		$/;"	f
extract_wheel	data/bpe_corpus_raw/train.py	/^utf-8	def	extract_wheel	(	whl_file	,	target_dir	,	exclude	=	None	)	:	\\n	    	td	=	Path	(	mkdtem/;"	f
extract_wheel	data/data_raw/train.py	/^utf-8	def	extract_wheel	(	whl_file	,	target_dir	,	exclude	=	None	)	:	\\n	    	td	=	Path	(	mkdtem/;"	f
f	data/bpe_corpus_raw/train.py	/^utf-8	def	test_surf_regular	(	fig	,	contour	=	1	)	:	\\n	\\n	    	def	f	(	x	,	y	)	:	\\n	        	/;"	f	function:test_surf_regular	file:
f	data/bpe_corpus_raw/valid.py	/^utf-8	def	_op_maker	(	op_class	,	op_symbol	)	:	\\n	\\n	    	def	f	(	self	,	node	,	*	args	,	**	kw/;"	f	function:_op_maker	file:
f	data/bpe_corpus_raw/valid.py	/^utf-8	def	str_slice_replace	(	arr	,	start	=	None	,	stop	=	None	,	repl	=	None	)	:	\\n	    	if	rep/;"	f	function:str_slice_replace	file:
f	data/bpe_corpus_raw/valid.py	/^utf-8	def	vgg_fc	(	filters	,	weight_decay	=	0.0	,	block_name	=	'block5'	)	:	\\n	\\n	    	def	f	(/;"	f	function:vgg_fc	file:
f	data/data_raw/train.py	/^utf-8	def	test_surf_regular	(	fig	,	contour	=	1	)	:	\\n	\\n	    	def	f	(	x	,	y	)	:	\\n	        	/;"	f	function:test_surf_regular	file:
f	data/data_raw/valid.py	/^utf-8	def	_op_maker	(	op_class	,	op_symbol	)	:	\\n	\\n	    	def	f	(	self	,	node	,	*	args	,	**	kw/;"	f	function:_op_maker	file:
f	data/data_raw/valid.py	/^utf-8	def	str_slice_replace	(	arr	,	start	=	None	,	stop	=	None	,	repl	=	None	)	:	\\n	    	if	rep/;"	f	function:str_slice_replace	file:
f	data/data_raw/valid.py	/^utf-8	def	vgg_fc	(	filters	,	weight_decay	=	0.0	,	block_name	=	'block5'	)	:	\\n	\\n	    	def	f	(/;"	f	function:vgg_fc	file:
f7	data/bpe_corpus_raw/valid.py	/^utf-8	def	f7	(	)	:	\\n	\\n	    	def	b	(	)	:	\\n	        	"""McCabe rating: 2"""	\\n	\\n	def	c	(	/;"	f
f7	data/data_raw/valid.py	/^utf-8	def	f7	(	)	:	\\n	\\n	    	def	b	(	)	:	\\n	        	"""McCabe rating: 2"""	\\n	\\n	def	c	(	/;"	f
factors	data/bpe_corpus_raw/valid.py	/^utf-8	@	defun	\\n	def	qp	(	ctx	,	a	,	q	=	None	,	n	=	None	,	**	kwargs	)	:	\\n	    	a	=	ctx	.	conv/;"	f	function:qp.terms	file:
factors	data/data_raw/valid.py	/^utf-8	@	defun	\\n	def	qp	(	ctx	,	a	,	q	=	None	,	n	=	None	,	**	kwargs	)	:	\\n	    	a	=	ctx	.	conv/;"	f	function:qp.terms	file:
facts_for_daemonsets	data/bpe_corpus_raw/train.py	/^utf-8	def	facts_for_daemonsets	(	self	,	namespace	)	:	\\n	    	self	.	default_keys_for	(	'daemon/;"	f
facts_for_daemonsets	data/data_raw/train.py	/^utf-8	def	facts_for_daemonsets	(	self	,	namespace	)	:	\\n	    	self	.	default_keys_for	(	'daemon/;"	f
fail	data/bpe_corpus_raw/valid.py	/^utf-8	@	wraps	(	Layer1	.	respond_activity_task_failed	)	\\n	def	fail	(	self	,	task_token	=	None	/;"	f
fail	data/bpe_corpus_raw/valid.py	/^utf-8	def	fail	(	self	,	message	,	param	=	None	,	ctx	=	None	)	:	\\n	    	raise	BadParameter	(	me/;"	f
fail	data/data_raw/valid.py	/^utf-8	@	wraps	(	Layer1	.	respond_activity_task_failed	)	\\n	def	fail	(	self	,	task_token	=	None	/;"	f
fail	data/data_raw/valid.py	/^utf-8	def	fail	(	self	,	message	,	param	=	None	,	ctx	=	None	)	:	\\n	    	raise	BadParameter	(	me/;"	f
failUnlessRaises	data/bpe_corpus_raw/train.py	/^utf-8	def	failUnlessRaises	(	self	,	excClass	,	*	args	,	**	kwargs	)	:	\\n	    	return	self	.	fai/;"	f
failUnlessRaises	data/data_raw/train.py	/^utf-8	def	failUnlessRaises	(	self	,	excClass	,	*	args	,	**	kwargs	)	:	\\n	    	return	self	.	fai/;"	f
fake_kmf	data/bpe_corpus_raw/valid.py	/^utf-8	def	load_kmf	(	chkfile	)	:	\\n	    	from	pyscf	.	lib	.	chkfile	import	load	\\n	kmf	=	load	/;"	c	function:load_kmf	file:
fake_kmf	data/data_raw/valid.py	/^utf-8	def	load_kmf	(	chkfile	)	:	\\n	    	from	pyscf	.	lib	.	chkfile	import	load	\\n	kmf	=	load	/;"	c	function:load_kmf	file:
fake_quant_with_min_max_args	data/bpe_corpus_raw/valid.py	/^utf-8	def	fake_quant_with_min_max_args	(	inputs	,	min	=	-	6	,	max	=	6	,	num_bits	=	8	,	\\n	narro/;"	f
fake_quant_with_min_max_args	data/data_raw/valid.py	/^utf-8	def	fake_quant_with_min_max_args	(	inputs	,	min	=	-	6	,	max	=	6	,	num_bits	=	8	,	\\n	narro/;"	f
family	data/bpe_corpus_raw/test.py	/^utf-8	@	property	\\n	def	family	(	self	)	:	\\n	    	return	_intenum_converter	(	super	(	)	.	fami/;"	f
family	data/data_raw/test.py	/^utf-8	@	property	\\n	def	family	(	self	)	:	\\n	    	return	_intenum_converter	(	super	(	)	.	fami/;"	f
fancy_msg	data/bpe_corpus_raw/valid.py	/^utf-8	def	fancy_msg	(	self	,	text	)	:	\\n	    	sys	.	stderr	.	write	(	self	.	colors	[	'green'	]	/;"	f
fancy_msg	data/data_raw/valid.py	/^utf-8	def	fancy_msg	(	self	,	text	)	:	\\n	    	sys	.	stderr	.	write	(	self	.	colors	[	'green'	]	/;"	f
fanout_cast	data/bpe_corpus_raw/test.py	/^utf-8	def	fanout_cast	(	conf	,	context	,	topic	,	msg	)	:	\\n	    	return	rpc_amqp	.	fanout_cast	/;"	f
fanout_cast	data/data_raw/test.py	/^utf-8	def	fanout_cast	(	conf	,	context	,	topic	,	msg	)	:	\\n	    	return	rpc_amqp	.	fanout_cast	/;"	f
fanout_cast_to_server	data/bpe_corpus_raw/train.py	/^utf-8	def	fanout_cast_to_server	(	self	,	context	,	server_params	,	msg	,	topic	=	None	,	\\n	vers/;"	f
fanout_cast_to_server	data/data_raw/train.py	/^utf-8	def	fanout_cast_to_server	(	self	,	context	,	server_params	,	msg	,	topic	=	None	,	\\n	vers/;"	f
featurize_document	data/bpe_corpus_raw/train.py	/^utf-8	def	featurize_document	(	model	,	questions	,	documents	,	same_as_question	,	\\n	repeated_w/;"	f
featurize_document	data/data_raw/train.py	/^utf-8	def	featurize_document	(	model	,	questions	,	documents	,	same_as_question	,	\\n	repeated_w/;"	f
feed	data/bpe_corpus_raw/train.py	/^utf-8	def	feed	(	self	,	aBuf	,	aCharLen	)	:	\\n	    	if	aCharLen	==	2	:	\\n	        	order	=	sel/;"	f
feed	data/data_raw/train.py	/^utf-8	def	feed	(	self	,	aBuf	,	aCharLen	)	:	\\n	    	if	aCharLen	==	2	:	\\n	        	order	=	sel/;"	f
feedback	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	feedback	(	self	)	:	\\n	    	if	self	.	_feedback	is	None	:	\\n	        /;"	f
feedback	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	feedback	(	self	)	:	\\n	    	if	self	.	_feedback	is	None	:	\\n	        /;"	f
fetch	data/bpe_corpus_raw/train.py	/^utf-8	def	fetch	(	self	)	:	\\n	    	return	self	.	_proxy	.	fetch	(	)	\\n		$/;"	f
fetch	data/bpe_corpus_raw/valid.py	/^utf-8	def	fetch	(	self	)	:	\\n	    	params	=	values	.	of	(	{	}	)	\\n	payload	=	self	.	_version	./;"	f
fetch	data/data_raw/train.py	/^utf-8	def	fetch	(	self	)	:	\\n	    	return	self	.	_proxy	.	fetch	(	)	\\n		$/;"	f
fetch	data/data_raw/valid.py	/^utf-8	def	fetch	(	self	)	:	\\n	    	params	=	values	.	of	(	{	}	)	\\n	payload	=	self	.	_version	./;"	f
fetchOverview	data/bpe_corpus_raw/valid.py	/^utf-8	def	fetchOverview	(	self	)	:	\\n	    	self	.	sendLine	(	'LIST OVERVIEW.FMT'	)	\\n	self	.	_/;"	f
fetchOverview	data/data_raw/valid.py	/^utf-8	def	fetchOverview	(	self	)	:	\\n	    	self	.	sendLine	(	'LIST OVERVIEW.FMT'	)	\\n	self	.	_/;"	f
fetch_for_login	data/bpe_corpus_raw/train.py	/^utf-8	def	fetch_for_login	(	self	,	username_or_email	)	:	\\n	    	filters	=	[	User	.	authority	=/;"	f
fetch_for_login	data/data_raw/train.py	/^utf-8	def	fetch_for_login	(	self	,	username_or_email	)	:	\\n	    	filters	=	[	User	.	authority	=/;"	f
fetch_info	data/bpe_corpus_raw/valid.py	/^utf-8	def	fetch_info	(	self	,	ctx	,	sr	)	:	\\n	    	url	=	sr	.	url	\\n	log_info	(	'Parsing url {/;"	f
fetch_info	data/data_raw/valid.py	/^utf-8	def	fetch_info	(	self	,	ctx	,	sr	)	:	\\n	    	url	=	sr	.	url	\\n	log_info	(	'Parsing url {/;"	f
fetch_requirements	data/bpe_corpus_raw/train.py	/^utf-8	def	fetch_requirements	(	requirements_file_path	)	:	\\n	    	links	=	[	]	\\n	reqs	=	[	]	\\/;"	f
fetch_requirements	data/data_raw/train.py	/^utf-8	def	fetch_requirements	(	requirements_file_path	)	:	\\n	    	links	=	[	]	\\n	reqs	=	[	]	\\/;"	f
fetchall	data/bpe_corpus_raw/valid.py	/^utf-8	def	fetchall	(	self	)	:	\\n	    	self	.	_try_fetch	(	)	\\n	return	list	(	self	.	_query_dat/;"	f
fetchall	data/data_raw/valid.py	/^utf-8	def	fetchall	(	self	)	:	\\n	    	self	.	_try_fetch	(	)	\\n	return	list	(	self	.	_query_dat/;"	f
fib	data/bpe_corpus_raw/train.py	/^utf-8	def	get_sequence	(	n	)	:	\\n	\\n	    	def	fib	(	)	:	\\n	        	"""\\n        Return Fibo/;"	f	function:get_sequence	file:
fib	data/data_raw/train.py	/^utf-8	def	get_sequence	(	n	)	:	\\n	\\n	    	def	fib	(	)	:	\\n	        	"""\\n        Return Fibo/;"	f	function:get_sequence	file:
file_exists	data/bpe_corpus_raw/test.py	/^utf-8	def	file_exists	(	pathname	)	:	\\n	    	result	=	1	\\n	try	:	\\n	        	file	=	open	(	pa/;"	f
file_exists	data/bpe_corpus_raw/train.py	/^utf-8	def	file_exists	(	self	)	:	\\n	    	if	not	self	.	data	:	\\n	        	self	.	download_html/;"	f
file_exists	data/bpe_corpus_raw/train.py	/^utf-8	def	file_exists	(	self	)	:	\\n	    	if	os	.	path	.	exists	(	self	.	filename	)	:	\\n	      /;"	f
file_exists	data/data_raw/test.py	/^utf-8	def	file_exists	(	pathname	)	:	\\n	    	result	=	1	\\n	try	:	\\n	        	file	=	open	(	pa/;"	f
file_exists	data/data_raw/train.py	/^utf-8	def	file_exists	(	self	)	:	\\n	    	if	not	self	.	data	:	\\n	        	self	.	download_html/;"	f
file_exists	data/data_raw/train.py	/^utf-8	def	file_exists	(	self	)	:	\\n	    	if	os	.	path	.	exists	(	self	.	filename	)	:	\\n	      /;"	f
file_handle	data/bpe_corpus_raw/valid.py	/^utf-8	def	file_handle	(	self	)	:	\\n	    	return	self	.	_fh	\\n		$/;"	f
file_handle	data/data_raw/valid.py	/^utf-8	def	file_handle	(	self	)	:	\\n	    	return	self	.	_fh	\\n		$/;"	f
file_name	models/preprocess.py	/^    def file_name(prefix, lang):$/;"	f	function:main	file:
file_ns_handler	data/bpe_corpus_raw/train.py	/^utf-8	def	file_ns_handler	(	importer	,	path_item	,	packageName	,	module	)	:	\\n	    	subpath	=	o/;"	f
file_ns_handler	data/data_raw/train.py	/^utf-8	def	file_ns_handler	(	importer	,	path_item	,	packageName	,	module	)	:	\\n	    	subpath	=	o/;"	f
filebytes	data/bpe_corpus_raw/valid.py	/^utf-8	def	filebytes	(	fileobj	,	buffersize	=	1024	)	:	\\n	    	buff	=	fileobj	.	read	(	buffersiz/;"	f
filebytes	data/data_raw/valid.py	/^utf-8	def	filebytes	(	fileobj	,	buffersize	=	1024	)	:	\\n	    	buff	=	fileobj	.	read	(	buffersiz/;"	f
fileno	data/bpe_corpus_raw/valid.py	/^utf-8	def	fileno	(	self	)	:	\\n	    	self	.	_check_closed	(	)	\\n	return	self	.	_handle	\\n		$/;"	f
fileno	data/data_raw/valid.py	/^utf-8	def	fileno	(	self	)	:	\\n	    	self	.	_check_closed	(	)	\\n	return	self	.	_handle	\\n		$/;"	f
files_list_folder_longpoll	data/bpe_corpus_raw/valid.py	/^utf-8	def	files_list_folder_longpoll	(	self	,	cursor	,	timeout	=	30	)	:	\\n	    	arg	=	files	.	L/;"	f
files_list_folder_longpoll	data/data_raw/valid.py	/^utf-8	def	files_list_folder_longpoll	(	self	,	cursor	,	timeout	=	30	)	:	\\n	    	arg	=	files	.	L/;"	f
fillBuffer	data/bpe_corpus_raw/valid.py	/^utf-8	def	fillBuffer	(	self	)	:	\\n	    	index	=	0	\\n	t	=	self	.	tokenSource	.	nextToken	(	)	\\/;"	f
fillBuffer	data/data_raw/valid.py	/^utf-8	def	fillBuffer	(	self	)	:	\\n	    	index	=	0	\\n	t	=	self	.	tokenSource	.	nextToken	(	)	\\/;"	f
fill_empty_line	data/bpe_corpus_raw/valid.py	/^utf-8	def	segment	(	self	,	tokens	,	style	,	renders	,	text_displayable	)	:	\\n	    	self	.	hyper/;"	f	function:segment.push	file:
fill_empty_line	data/data_raw/valid.py	/^utf-8	def	segment	(	self	,	tokens	,	style	,	renders	,	text_displayable	)	:	\\n	    	self	.	hyper/;"	f	function:segment.push	file:
filled	data/bpe_corpus_raw/valid.py	/^utf-8	def	filled	(	self	,	fill_value	=	None	)	:	\\n	    	return	asarray	(	self	)	.	filled	(	fill/;"	f
filled	data/data_raw/valid.py	/^utf-8	def	filled	(	self	,	fill_value	=	None	)	:	\\n	    	return	asarray	(	self	)	.	filled	(	fill/;"	f
filter_by_regex	data/bpe_corpus_raw/train.py	/^utf-8	def	filter_by_regex	(	self	,	kind	=	None	,	value	=	None	,	exclude	=	False	)	:	\\n	    	if	/;"	f
filter_by_regex	data/data_raw/train.py	/^utf-8	def	filter_by_regex	(	self	,	kind	=	None	,	value	=	None	,	exclude	=	False	)	:	\\n	    	if	/;"	f
filter_list_random_files	data/bpe_corpus_raw/train.py	/^utf-8	def	filter_list_random_files	(	data	,	count	)	:	\\n	    	samples	=	random	.	sample	(	data	/;"	f
filter_list_random_files	data/data_raw/train.py	/^utf-8	def	filter_list_random_files	(	data	,	count	)	:	\\n	    	samples	=	random	.	sample	(	data	/;"	f
filter_rfid_tag	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	filter_rfid_tag	(	self	)	->	Optional	[	str	]	:	\\n	    	return	self	.	d/;"	f
filter_rfid_tag	data/data_raw/train.py	/^utf-8	@	property	\\n	def	filter_rfid_tag	(	self	)	->	Optional	[	str	]	:	\\n	    	return	self	.	d/;"	f
filter_to_resume_point	data/bpe_corpus_raw/valid.py	/^utf-8	def	filter_to_resume_point	(	self	,	store_path	,	enum_seeds	)	:	\\n	\\n	\\n	    	class	Hac/;"	f
filter_to_resume_point	data/data_raw/valid.py	/^utf-8	def	filter_to_resume_point	(	self	,	store_path	,	enum_seeds	)	:	\\n	\\n	\\n	    	class	Hac/;"	f
filter_versions	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	filter_versions	(	stdout	)	:	\\n	    	version_dict	=	{	}	\\n	versio/;"	f
filter_versions	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	filter_versions	(	stdout	)	:	\\n	    	version_dict	=	{	}	\\n	versio/;"	f
finalize	data/bpe_corpus_raw/train.py	/^utf-8	def	finalize	(	self	,	basket	)	:	\\n	    	self	.	delete	(	basket	=	basket	)	\\n		$/;"	f
finalize	data/data_raw/train.py	/^utf-8	def	finalize	(	self	,	basket	)	:	\\n	    	self	.	delete	(	basket	=	basket	)	\\n		$/;"	f
finalize_object	data/bpe_corpus_raw/valid.py	/^utf-8	def	finalize_object	(	self	)	:	\\n	    	ffi	.	lib	.	LLVMPY_FinalizeObject	(	self	)	\\n		$/;"	f
finalize_object	data/data_raw/valid.py	/^utf-8	def	finalize_object	(	self	)	:	\\n	    	ffi	.	lib	.	LLVMPY_FinalizeObject	(	self	)	\\n		$/;"	f
finalize_options	data/bpe_corpus_raw/train.py	/^utf-8	def	get_cmdclass	(	)	:	\\n	    	if	'versioneer'	in	sys	.	modules	:	\\n	        	del	sys	.	/;"	f	member:get_cmdclass.cmd_version.initialize_options	file:
finalize_options	data/bpe_corpus_raw/train.py	/^utf-8	def	setup	(	pkg	,	setup_py	,	cmake_shared_library_prefix	,	\\n	cmake_shared_library_suffix/;"	m	class:setup.my_build_py.run.my_clean.run.my_bdist_wheel
finalize_options	data/data_raw/train.py	/^utf-8	def	get_cmdclass	(	)	:	\\n	    	if	'versioneer'	in	sys	.	modules	:	\\n	        	del	sys	.	/;"	f	member:get_cmdclass.cmd_version.initialize_options	file:
finalize_options	data/data_raw/train.py	/^utf-8	def	setup	(	pkg	,	setup_py	,	cmake_shared_library_prefix	,	\\n	cmake_shared_library_suffix/;"	m	class:setup.my_build_py.run.my_clean.run.my_bdist_wheel
finalized	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	finalized	(	self	)	:	\\n	    	return	self	.	_finalized	\\n		$/;"	f
finalized	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	finalized	(	self	)	:	\\n	    	return	self	.	_finalized	\\n		$/;"	f
find	data/bpe_corpus_raw/train.py	/^utf-8	@	classmethod	\\n	def	find	(	cls	,	where	=	'.'	,	exclude	=	(	)	,	include	=	(	'*'	,	)	)	:	\\/;"	f
find	data/bpe_corpus_raw/train.py	/^utf-8	def	find	(	self	,	**	kwargs	)	:	\\n	    	matches	=	self	.	findall	(	**	kwargs	)	\\n	num_ma/;"	f
find	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	find	(	cls	,	where	=	'.'	,	exclude	=	(	)	,	include	=	(	'*'	,	)	)	:	\\/;"	f
find	data/bpe_corpus_raw/valid.py	/^utf-8	def	find	(	self	,	pattern	,	start	=	None	,	end	=	None	)	:	\\n	    	if	isinstance	(	pattern/;"	f
find	data/data_raw/train.py	/^utf-8	@	classmethod	\\n	def	find	(	cls	,	where	=	'.'	,	exclude	=	(	)	,	include	=	(	'*'	,	)	)	:	\\/;"	f
find	data/data_raw/train.py	/^utf-8	def	find	(	self	,	**	kwargs	)	:	\\n	    	matches	=	self	.	findall	(	**	kwargs	)	\\n	num_ma/;"	f
find	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	find	(	cls	,	where	=	'.'	,	exclude	=	(	)	,	include	=	(	'*'	,	)	)	:	\\/;"	f
find	data/data_raw/valid.py	/^utf-8	def	find	(	self	,	pattern	,	start	=	None	,	end	=	None	)	:	\\n	    	if	isinstance	(	pattern/;"	f
find_bulb	data/bpe_corpus_raw/valid.py	/^utf-8	def	find_bulb	(	self	,	ipaddr	)	:	\\n	    	bulb	=	None	\\n	for	device	in	self	.	_devices	:/;"	f
find_bulb	data/data_raw/valid.py	/^utf-8	def	find_bulb	(	self	,	ipaddr	)	:	\\n	    	bulb	=	None	\\n	for	device	in	self	.	_devices	:/;"	f
find_class	data/bpe_corpus_raw/valid.py	/^utf-8	def	find_class	(	info	)	:	\\n	    	dic	=	sensor_mappings	\\n	for	val	,	msg	in	zip	(	(	info/;"	f
find_class	data/data_raw/valid.py	/^utf-8	def	find_class	(	info	)	:	\\n	    	dic	=	sensor_mappings	\\n	for	val	,	msg	in	zip	(	(	info/;"	f
find_executables	data/bpe_corpus_raw/valid.py	/^utf-8	def	find_executables	(	self	)	:	\\n	    	assert	self	.	_is_customised	\\n	exe_cache	=	self/;"	f
find_executables	data/data_raw/valid.py	/^utf-8	def	find_executables	(	self	)	:	\\n	    	assert	self	.	_is_customised	\\n	exe_cache	=	self/;"	f
find_files	data/bpe_corpus_raw/test.py	/^utf-8	def	find_files	(	self	,	ignore_policies	=	True	)	:	\\n	    	files	=	[	]	\\n	languages	=	[	/;"	f
find_files	data/data_raw/test.py	/^utf-8	def	find_files	(	self	,	ignore_policies	=	True	)	:	\\n	    	files	=	[	]	\\n	languages	=	[	/;"	f
find_gadgets_single_threaded	data/bpe_corpus_raw/valid.py	/^utf-8	def	find_gadgets_single_threaded	(	self	,	show_progress	=	True	)	:	\\n	    	self	.	gadgets/;"	f
find_gadgets_single_threaded	data/data_raw/valid.py	/^utf-8	def	find_gadgets_single_threaded	(	self	,	show_progress	=	True	)	:	\\n	    	self	.	gadgets/;"	f
find_head_body_sep	data/bpe_corpus_raw/valid.py	/^utf-8	def	find_head_body_sep	(	self	)	:	\\n	    	for	i	in	range	(	len	(	self	.	block	)	)	:	\\n	 /;"	f
find_head_body_sep	data/data_raw/valid.py	/^utf-8	def	find_head_body_sep	(	self	)	:	\\n	    	for	i	in	range	(	len	(	self	.	block	)	)	:	\\n	 /;"	f
find_language	data/bpe_corpus_raw/train.py	/^utf-8	def	find_language	(	locale	)	:	\\n	    	if	not	locale	:	\\n	        	return	None	\\n		LANG/;"	f
find_language	data/data_raw/train.py	/^utf-8	def	find_language	(	locale	)	:	\\n	    	if	not	locale	:	\\n	        	return	None	\\n		LANG/;"	f
find_meta_property	data/bpe_corpus_raw/train.py	/^utf-8	def	find_meta_property	(	obj	,	name	)	:	\\n	    	meta	=	obj	.	metaObject	(	)	\\n	index	=	m/;"	f
find_meta_property	data/data_raw/train.py	/^utf-8	def	find_meta_property	(	obj	,	name	)	:	\\n	    	meta	=	obj	.	metaObject	(	)	\\n	index	=	m/;"	f
find_misparsed_node	data/bpe_corpus_raw/train.py	/^utf-8	def	find_misparsed_node	(	section_node	,	label	,	change	,	amended_labels	)	:	\\n	    	cand/;"	f
find_misparsed_node	data/data_raw/train.py	/^utf-8	def	find_misparsed_node	(	section_node	,	label	,	change	,	amended_labels	)	:	\\n	    	cand/;"	f
find_module	data/bpe_corpus_raw/train.py	/^utf-8	def	find_module	(	modulename	)	:	\\n	    	try	:	\\n	        	spec	=	importlib_util_find_sp/;"	f
find_module	data/data_raw/train.py	/^utf-8	def	find_module	(	modulename	)	:	\\n	    	try	:	\\n	        	spec	=	importlib_util_find_sp/;"	f
find_modules	data/bpe_corpus_raw/valid.py	/^utf-8	def	find_modules	(	import_path	,	include_packages	=	False	,	recursive	=	False	)	:	\\n	    /;"	f
find_modules	data/data_raw/valid.py	/^utf-8	def	find_modules	(	import_path	,	include_packages	=	False	,	recursive	=	False	)	:	\\n	    /;"	f
find_newest_file	data/bpe_corpus_raw/train.py	/^utf-8	def	find_newest_file	(	name	)	:	\\n	    	date_regex	=	re	.	compile	(	'\\\\\\\\d{4}-\\\\\\\\/;"	f
find_newest_file	data/data_raw/train.py	/^utf-8	def	find_newest_file	(	name	)	:	\\n	    	date_regex	=	re	.	compile	(	'\\\\\\\\d{4}-\\\\\\\\/;"	f
find_next_place_gramps_id	data/bpe_corpus_raw/train.py	/^utf-8	def	find_next_place_gramps_id	(	self	)	:	\\n	    	if	not	self	.	db_is_open	:	\\n	        	/;"	f
find_next_place_gramps_id	data/data_raw/train.py	/^utf-8	def	find_next_place_gramps_id	(	self	)	:	\\n	    	if	not	self	.	db_is_open	:	\\n	        	/;"	f
find_pool_alloc_before	data/bpe_corpus_raw/valid.py	/^utf-8	def	find_pool_alloc_before	(	session	,	offset	,	pool_tag	)	:	\\n	    	base_offset	=	offset/;"	f
find_pool_alloc_before	data/data_raw/valid.py	/^utf-8	def	find_pool_alloc_before	(	session	,	offset	,	pool_tag	)	:	\\n	    	base_offset	=	offset/;"	f
find_result	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	find_result	(	results	,	_name	)	:	\\n	    	rval	=	None	\\n	for	resu/;"	f
find_result	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	find_result	(	results	,	_name	)	:	\\n	    	rval	=	None	\\n	for	resu/;"	f
find_singular_string	data/bpe_corpus_raw/train.py	/^utf-8	def	next_state	(	self	,	val	)	:	\\n	\\n	    	def	find_singular_string	(	p	,	max_width	)	:	/;"	f	function:next_state	file:
find_singular_string	data/data_raw/train.py	/^utf-8	def	next_state	(	self	,	val	)	:	\\n	\\n	    	def	find_singular_string	(	p	,	max_width	)	:	/;"	f	function:next_state	file:
find_undeclared	data/bpe_corpus_raw/valid.py	/^utf-8	def	find_undeclared	(	nodes	,	names	)	:	\\n	    	visitor	=	UndeclaredNameVisitor	(	names	)/;"	f
find_undeclared	data/data_raw/valid.py	/^utf-8	def	find_undeclared	(	nodes	,	names	)	:	\\n	    	visitor	=	UndeclaredNameVisitor	(	names	)/;"	f
find_volume_by_name	data/bpe_corpus_raw/train.py	/^utf-8	def	find_volume_by_name	(	self	,	volume	,	mounts	=	False	)	:	\\n	    	volumes	=	[	]	\\n	if/;"	f
find_volume_by_name	data/data_raw/train.py	/^utf-8	def	find_volume_by_name	(	self	,	volume	,	mounts	=	False	)	:	\\n	    	volumes	=	[	]	\\n	if/;"	f
find_withtag	data/bpe_corpus_raw/valid.py	/^utf-8	def	find_withtag	(	self	,	tagOrId	)	:	\\n	    	return	self	.	find	(	'withtag'	,	tagOrId	)	/;"	f
find_withtag	data/data_raw/valid.py	/^utf-8	def	find_withtag	(	self	,	tagOrId	)	:	\\n	    	return	self	.	find	(	'withtag'	,	tagOrId	)	/;"	f
fini	data/bpe_corpus_raw/train.py	/^utf-8	def	fini	(	self	)	:	\\n	    	self	.	_session	.	close_session	(	)	\\n		$/;"	f
fini	data/data_raw/train.py	/^utf-8	def	fini	(	self	)	:	\\n	    	self	.	_session	.	close_session	(	)	\\n		$/;"	f
finish	data/bpe_corpus_raw/valid.py	/^utf-8	def	finish	(	self	)	:	\\n	    	if	not	self	.	config	.	parse	:	\\n	        	log	(	'Verifica/;"	f
finish	data/bpe_corpus_raw/valid.py	/^utf-8	def	finish	(	self	)	:	\\n	    	pass	\\n		$/;"	f
finish	data/data_raw/valid.py	/^utf-8	def	finish	(	self	)	:	\\n	    	if	not	self	.	config	.	parse	:	\\n	        	log	(	'Verifica/;"	f
finish	data/data_raw/valid.py	/^utf-8	def	finish	(	self	)	:	\\n	    	pass	\\n		$/;"	f
finish_tree	data/bpe_corpus_raw/train.py	/^utf-8	def	finish_tree	(	self	,	tree	,	filename	)	:	\\n	    	pass	\\n		$/;"	f
finish_tree	data/data_raw/train.py	/^utf-8	def	finish_tree	(	self	,	tree	,	filename	)	:	\\n	    	pass	\\n		$/;"	f
finished_background	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	finished_background	(	self	)	:	\\n	    	return	self	.	_create_panel_for/;"	f
finished_background	data/data_raw/train.py	/^utf-8	@	property	\\n	def	finished_background	(	self	)	:	\\n	    	return	self	.	_create_panel_for/;"	f
fire_bullet	data/bpe_corpus_raw/valid.py	/^utf-8	def	fire_bullet	(	ai_settings	,	screen	,	ship	,	bullets	)	:	\\n	    	if	len	(	bullets	)	<	/;"	f
fire_bullet	data/data_raw/valid.py	/^utf-8	def	fire_bullet	(	ai_settings	,	screen	,	ship	,	bullets	)	:	\\n	    	if	len	(	bullets	)	<	/;"	f
firewall_policy_remove_rule	data/bpe_corpus_raw/train.py	/^utf-8	def	firewall_policy_remove_rule	(	self	,	firewall_policy	,	body	=	None	)	:	\\n	    	return/;"	f
firewall_policy_remove_rule	data/data_raw/train.py	/^utf-8	def	firewall_policy_remove_rule	(	self	,	firewall_policy	,	body	=	None	)	:	\\n	    	return/;"	f
first_connect	data/bpe_corpus_raw/valid.py	/^utf-8	def	first_connect	(	self	,	dbapi_con	,	con_record	)	:	\\n	$/;"	f
first_connect	data/data_raw/valid.py	/^utf-8	def	first_connect	(	self	,	dbapi_con	,	con_record	)	:	\\n	$/;"	f
fix_value	data/bpe_corpus_raw/valid.py	/^utf-8	def	fix_value	(	synonym	,	final	)	:	\\n	    	if	not	synonym	.	value	or	synonym	.	value	==	/;"	f
fix_value	data/data_raw/valid.py	/^utf-8	def	fix_value	(	synonym	,	final	)	:	\\n	    	if	not	synonym	.	value	or	synonym	.	value	==	/;"	f
fixmore	data/bpe_corpus_raw/train.py	/^utf-8	def	fixmore	(	self	)	:	\\n	    	module	=	self	.	module	\\n	if	not	self	.	tooMany3DModel	an/;"	f
fixmore	data/data_raw/train.py	/^utf-8	def	fixmore	(	self	)	:	\\n	    	module	=	self	.	module	\\n	if	not	self	.	tooMany3DModel	an/;"	f
fixup_indent	data/bpe_corpus_raw/train.py	/^utf-8	def	fixup_indent	(	suite	)	:	\\n	    	kids	=	suite	.	children	[	:	:	-	1	]	\\n	while	kids	:/;"	f
fixup_indent	data/data_raw/train.py	/^utf-8	def	fixup_indent	(	suite	)	:	\\n	    	kids	=	suite	.	children	[	:	:	-	1	]	\\n	while	kids	:/;"	f
flash_message_view	data/bpe_corpus_raw/valid.py	/^utf-8	def	flash_message_view	(	self	)	:	\\n	    	return	render_template	(	'tests\/flash_messages/;"	f
flash_message_view	data/data_raw/valid.py	/^utf-8	def	flash_message_view	(	self	)	:	\\n	    	return	render_template	(	'tests\/flash_messages/;"	f
flaskbb_reauth_failed	data/bpe_corpus_raw/train.py	/^utf-8	@	spec	\\n	def	flaskbb_reauth_failed	(	user	)	:	\\n	$/;"	f
flaskbb_reauth_failed	data/data_raw/train.py	/^utf-8	@	spec	\\n	def	flaskbb_reauth_failed	(	user	)	:	\\n	$/;"	f
flatten	data/bpe_corpus_raw/valid.py	/^utf-8	def	flatten	(	l	)	:	\\n	    	return	[	item	for	sublist	in	l	for	item	in	sublist	]	\\n		$/;"	f
flatten	data/data_raw/valid.py	/^utf-8	def	flatten	(	l	)	:	\\n	    	return	[	item	for	sublist	in	l	for	item	in	sublist	]	\\n		$/;"	f
flatten_dict	data/bpe_corpus_raw/valid.py	/^utf-8	def	flatten_dict	(	data	,	parent_key	=	None	)	:	\\n	    	if	not	isinstance	(	data	,	dict	)/;"	f
flatten_dict	data/data_raw/valid.py	/^utf-8	def	flatten_dict	(	data	,	parent_key	=	None	)	:	\\n	    	if	not	isinstance	(	data	,	dict	)/;"	f
flavors	data/bpe_corpus_raw/valid.py	/^utf-8	def	flavors	(	self	,	**	query	)	:	\\n	    	return	self	.	_list	(	_flavor	.	Flavor	,	**	que/;"	f
flavors	data/data_raw/valid.py	/^utf-8	def	flavors	(	self	,	**	query	)	:	\\n	    	return	self	.	_list	(	_flavor	.	Flavor	,	**	que/;"	f
flip	data/bpe_corpus_raw/train.py	/^utf-8	@	array_function_dispatch	(	_flip_dispatcher	)	\\n	def	flip	(	m	,	axis	=	None	)	:	\\n	    /;"	f
flip	data/bpe_corpus_raw/valid.py	/^utf-8	def	flip	(	m	,	axis	=	None	)	:	\\n	    	if	not	hasattr	(	m	,	'ndim'	)	:	\\n	        	m	=	a/;"	f
flip	data/data_raw/train.py	/^utf-8	@	array_function_dispatch	(	_flip_dispatcher	)	\\n	def	flip	(	m	,	axis	=	None	)	:	\\n	    /;"	f
flip	data/data_raw/valid.py	/^utf-8	def	flip	(	m	,	axis	=	None	)	:	\\n	    	if	not	hasattr	(	m	,	'ndim'	)	:	\\n	        	m	=	a/;"	f
float1_color	data/bpe_corpus_raw/valid.py	/^utf-8	def	float1_color	(	self	,	values	)	:	\\n	    	red	,	green	,	blue	=	values	\\n	return	color/;"	f
float1_color	data/data_raw/valid.py	/^utf-8	def	float1_color	(	self	,	values	)	:	\\n	    	red	,	green	,	blue	=	values	\\n	return	color/;"	f
floating_ip_find	data/bpe_corpus_raw/valid.py	/^utf-8	def	floating_ip_find	(	self	,	floating_ip	=	None	)	:	\\n	    	url	=	'\/os-floating-ips'	\\/;"	f
floating_ip_find	data/data_raw/valid.py	/^utf-8	def	floating_ip_find	(	self	,	floating_ip	=	None	)	:	\\n	    	url	=	'\/os-floating-ips'	\\/;"	f
flush	data/bpe_corpus_raw/test.py	/^utf-8	def	flush	(	self	)	:	\\n	    	self	.	_writer	.	flush	(	)	\\n		$/;"	f
flush	data/bpe_corpus_raw/train.py	/^utf-8	def	flush	(	)	:	\\n	    	return	call_command	(	'flush'	,	traceback	=	True	)	\\n		$/;"	f
flush	data/bpe_corpus_raw/valid.py	/^utf-8	def	flush	(	self	)	:	\\n	    	pass	\\n		$/;"	f
flush	data/data_raw/test.py	/^utf-8	def	flush	(	self	)	:	\\n	    	self	.	_writer	.	flush	(	)	\\n		$/;"	f
flush	data/data_raw/train.py	/^utf-8	def	flush	(	)	:	\\n	    	return	call_command	(	'flush'	,	traceback	=	True	)	\\n		$/;"	f
flush	data/data_raw/valid.py	/^utf-8	def	flush	(	self	)	:	\\n	    	pass	\\n		$/;"	f
flush_from_cache	data/bpe_corpus_raw/valid.py	/^utf-8	def	flush_from_cache	(	self	,	force	=	False	)	:	\\n	    	pk	=	self	.	_get_pk_val	(	)	\\n	i/;"	f
flush_from_cache	data/data_raw/valid.py	/^utf-8	def	flush_from_cache	(	self	,	force	=	False	)	:	\\n	    	pk	=	self	.	_get_pk_val	(	)	\\n	i/;"	f
fold	data/bpe_corpus_raw/test.py	/^utf-8	def	fold	(	self	,	name	,	value	)	:	\\n	    	return	self	.	_fold	(	name	,	value	,	refold_bi/;"	f
fold	data/data_raw/test.py	/^utf-8	def	fold	(	self	,	name	,	value	)	:	\\n	    	return	self	.	_fold	(	name	,	value	,	refold_bi/;"	f
font	data/bpe_corpus_raw/train.py	/^utf-8	@	lazyproperty	\\n	def	font	(	self	)	:	\\n	    	defRPr	=	self	.	_element	.	defRPr	\\n	font/;"	f
font	data/data_raw/train.py	/^utf-8	@	lazyproperty	\\n	def	font	(	self	)	:	\\n	    	defRPr	=	self	.	_element	.	defRPr	\\n	font/;"	f
foobar	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_check_hook	(	self	)	:	\\n	    	with	warnings	.	catch_warnings	(	record	=	True	)	a/;"	f	function:test_check_hook	file:
foobar	data/data_raw/valid.py	/^utf-8	def	test_check_hook	(	self	)	:	\\n	    	with	warnings	.	catch_warnings	(	record	=	True	)	a/;"	f	function:test_check_hook	file:
force_rescan	data/bpe_corpus_raw/train.py	/^utf-8	def	force_rescan	(	self	)	:	\\n	    	self	.	_init_vars	(	)	\\n		$/;"	f
force_rescan	data/data_raw/train.py	/^utf-8	def	force_rescan	(	self	)	:	\\n	    	self	.	_init_vars	(	)	\\n		$/;"	f
force_unicode	data/bpe_corpus_raw/test.py	/^utf-8	def	force_unicode	(	s	)	:	\\n	    	if	isinstance	(	s	,	six	.	text_type	)	:	\\n	        	re/;"	f
force_unicode	data/data_raw/test.py	/^utf-8	def	force_unicode	(	s	)	:	\\n	    	if	isinstance	(	s	,	six	.	text_type	)	:	\\n	        	re/;"	f
forecast	data/bpe_corpus_raw/valid.py	/^utf-8	def	forecast	(	bot	,	event	,	*	args	)	:	\\n	    	weather	=	_get_weather	(	bot	,	event	,	ar/;"	f
forecast	data/data_raw/valid.py	/^utf-8	def	forecast	(	bot	,	event	,	*	args	)	:	\\n	    	weather	=	_get_weather	(	bot	,	event	,	ar/;"	f
fork_and_perform_job	data/bpe_corpus_raw/valid.py	/^utf-8	def	fork_and_perform_job	(	self	,	job	)	:	\\n	    	child_pid	=	os	.	fork	(	)	\\n	if	child_/;"	f
fork_and_perform_job	data/data_raw/valid.py	/^utf-8	def	fork_and_perform_job	(	self	,	job	)	:	\\n	    	child_pid	=	os	.	fork	(	)	\\n	if	child_/;"	f
fork_processes	data/bpe_corpus_raw/valid.py	/^utf-8	def	fork_processes	(	num_processes	,	max_restarts	=	100	)	:	\\n	    	global	_task_id	\\n	a/;"	f
fork_processes	data/data_raw/valid.py	/^utf-8	def	fork_processes	(	num_processes	,	max_restarts	=	100	)	:	\\n	    	global	_task_id	\\n	a/;"	f
format	data/bpe_corpus_raw/train.py	/^utf-8	def	format	(	self	,	record	)	:	\\n	    	record	.	message	=	record	.	getMessage	(	)	\\n	if	/;"	f
format	data/bpe_corpus_raw/train.py	/^utf-8	def	format	(	self	,	undo	,	do	,	prev	)	:	\\n	    	assert	undo	or	do	\\n	if	do	:	\\n	      /;"	f
format	data/bpe_corpus_raw/valid.py	/^utf-8	def	format	(	self	,	record	)	:	\\n	    	record	.	message	=	record	.	getMessage	(	)	\\n	if	/;"	f
format	data/data_raw/train.py	/^utf-8	def	format	(	self	,	record	)	:	\\n	    	record	.	message	=	record	.	getMessage	(	)	\\n	if	/;"	f
format	data/data_raw/train.py	/^utf-8	def	format	(	self	,	undo	,	do	,	prev	)	:	\\n	    	assert	undo	or	do	\\n	if	do	:	\\n	      /;"	f
format	data/data_raw/valid.py	/^utf-8	def	format	(	self	,	record	)	:	\\n	    	record	.	message	=	record	.	getMessage	(	)	\\n	if	/;"	f
formatError	data/bpe_corpus_raw/valid.py	/^utf-8	def	formatError	(	self	,	test	,	err	)	:	\\n	    	test	.	capturedLogging	=	records	=	self	./;"	f
formatError	data/data_raw/valid.py	/^utf-8	def	formatError	(	self	,	test	,	err	)	:	\\n	    	test	.	capturedLogging	=	records	=	self	./;"	f
format_Warning	data/bpe_corpus_raw/valid.py	/^utf-8	def	format_Warning	(	message	,	category	,	filename	,	lineno	,	line	=	None	)	:	\\n	    	ret/;"	f
format_Warning	data/data_raw/valid.py	/^utf-8	def	format_Warning	(	message	,	category	,	filename	,	lineno	,	line	=	None	)	:	\\n	    	ret/;"	f
format_address	data/bpe_corpus_raw/train.py	/^utf-8	def	format_address	(	value	)	:	\\n	    	try	:	\\n	        	ret	=	int	(	value	)	\\n		except/;"	f
format_address	data/data_raw/train.py	/^utf-8	def	format_address	(	value	)	:	\\n	    	try	:	\\n	        	ret	=	int	(	value	)	\\n		except/;"	f
format_babel	data/bpe_corpus_raw/test.py	/^utf-8	def	format_babel	(	self	,	locale	)	:	\\n	    	if	locale	and	self	.	name	in	_babel_systems	/;"	f
format_babel	data/data_raw/test.py	/^utf-8	def	format_babel	(	self	,	locale	)	:	\\n	    	if	locale	and	self	.	name	in	_babel_systems	/;"	f
format_date	data/bpe_corpus_raw/train.py	/^utf-8	def	format_date	(	date	=	None	,	format	=	None	,	rebase	=	True	)	:	\\n	    	return	get_i18n/;"	f
format_date	data/bpe_corpus_raw/train.py	/^utf-8	def	format_date	(	self	)	:	\\n	    	if	self	.	date	is	None	:	\\n	        	return	'n.d.'	\\/;"	f
format_date	data/data_raw/train.py	/^utf-8	def	format_date	(	date	=	None	,	format	=	None	,	rebase	=	True	)	:	\\n	    	return	get_i18n/;"	f
format_date	data/data_raw/train.py	/^utf-8	def	format_date	(	self	)	:	\\n	    	if	self	.	date	is	None	:	\\n	        	return	'n.d.'	\\/;"	f
format_number	data/bpe_corpus_raw/train.py	/^utf-8	@	front	.	app_template_filter	(	)	\\n	@	front	.	app_template_global	(	)	\\n	def	format_num/;"	f
format_number	data/data_raw/train.py	/^utf-8	@	front	.	app_template_filter	(	)	\\n	@	front	.	app_template_global	(	)	\\n	def	format_num/;"	f
format_options	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_options	(	)	:	\\n	    	program_options	=	[	(	'no-splash'	,	_	(	\\n	'do not present/;"	f	function:get_options.make_help_text	file:
format_options	data/data_raw/valid.py	/^utf-8	def	get_options	(	)	:	\\n	    	program_options	=	[	(	'no-splash'	,	_	(	\\n	'do not present/;"	f	function:get_options.make_help_text	file:
format_time_decimal	data/bpe_corpus_raw/train.py	/^utf-8	def	format_time_decimal	(	seconds	)	:	\\n	    	minus	=	seconds	<	0	\\n	if	minus	:	\\n	    /;"	f
format_time_decimal	data/data_raw/train.py	/^utf-8	def	format_time_decimal	(	seconds	)	:	\\n	    	minus	=	seconds	<	0	\\n	if	minus	:	\\n	    /;"	f
formatdate	data/bpe_corpus_raw/valid.py	/^utf-8	def	formatdate	(	timeval	=	None	,	localtime	=	False	,	usegmt	=	False	)	:	\\n	    	if	timev/;"	f
formatdate	data/data_raw/valid.py	/^utf-8	def	formatdate	(	timeval	=	None	,	localtime	=	False	,	usegmt	=	False	)	:	\\n	    	if	timev/;"	f
formatwarning	data/bpe_corpus_raw/train.py	/^utf-8	def	formatwarning	(	self	,	message	,	category	,	filename	,	lineno	,	line	=	None	)	:	\\n	  /;"	f
formatwarning	data/data_raw/train.py	/^utf-8	def	formatwarning	(	self	,	message	,	category	,	filename	,	lineno	,	line	=	None	)	:	\\n	  /;"	f
formfield_for_manytomany	data/bpe_corpus_raw/valid.py	/^utf-8	def	formfield_for_manytomany	(	self	,	db_field	,	request	,	**	kwargs	)	:	\\n	    	if	db_fi/;"	f
formfield_for_manytomany	data/data_raw/valid.py	/^utf-8	def	formfield_for_manytomany	(	self	,	db_field	,	request	,	**	kwargs	)	:	\\n	    	if	db_fi/;"	f
formset_factory	data/bpe_corpus_raw/valid.py	/^utf-8	def	formset_factory	(	form	,	formset	=	BaseFormSet	,	extra	=	1	,	can_order	=	False	,	\\n	c/;"	f
formset_factory	data/data_raw/valid.py	/^utf-8	def	formset_factory	(	form	,	formset	=	BaseFormSet	,	extra	=	1	,	can_order	=	False	,	\\n	c/;"	f
forward	data/bpe_corpus_raw/valid.py	/^utf-8	def	forward	(	self	,	x	,	t	)	:	\\n	    	f	=	copy	.	copy	(	self	.	_func	)	\\n	return	f	(	x	/;"	f
forward	data/data_raw/valid.py	/^utf-8	def	forward	(	self	,	x	,	t	)	:	\\n	    	f	=	copy	.	copy	(	self	.	_func	)	\\n	return	f	(	x	/;"	f
forward	models/seq2seq.py	/^    def forward(self, prev_output_tokens, encoder_out, incremental_state=None):$/;"	m	class:Seq2SeqDecoder
forward	models/seq2seq.py	/^    def forward(self, src_tokens, src_lengths):$/;"	m	class:Seq2SeqEncoder
forwards	data/bpe_corpus_raw/valid.py	/^utf-8	def	forwards	(	self	,	orm	)	:	\\n	$/;"	f
forwards	data/data_raw/valid.py	/^utf-8	def	forwards	(	self	,	orm	)	:	\\n	$/;"	f
forwards_code	data/bpe_corpus_raw/valid.py	/^utf-8	def	forwards_code	(	self	)	:	\\n	    	field_defs	=	',\\\\n            '	.	join	(	[	(	'(%r,/;"	f
forwards_code	data/data_raw/valid.py	/^utf-8	def	forwards_code	(	self	)	:	\\n	    	field_defs	=	',\\\\n            '	.	join	(	[	(	'(%r,/;"	f
fprop	data/bpe_corpus_raw/valid.py	/^utf-8	def	fprop	(	self	,	fprop_in	,	scale_weights	=	0	)	:	\\n	    	fprop_in	=	super	(	ConvLayer	/;"	f
fprop	data/data_raw/valid.py	/^utf-8	def	fprop	(	self	,	fprop_in	,	scale_weights	=	0	)	:	\\n	    	fprop_in	=	super	(	ConvLayer	/;"	f
frame_size	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	frame_size	(	self	)	:	\\n	    	width_inches	,	height_inches	=	self	.	fi/;"	f
frame_size	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	frame_size	(	self	)	:	\\n	    	width_inches	,	height_inches	=	self	.	fi/;"	f
frame_updated	data/bpe_corpus_raw/valid.py	/^utf-8	@	event	\\n	def	frame_updated	(	self	,	old_frame	,	new_frame	)	:	\\n	$/;"	f
frame_updated	data/data_raw/valid.py	/^utf-8	@	event	\\n	def	frame_updated	(	self	,	old_frame	,	new_frame	)	:	\\n	$/;"	f
free_disk_space	data/bpe_corpus_raw/train.py	/^utf-8	def	free_disk_space	(	dirname	)	:	\\n	    	if	os	.	name	==	'nt'	:	\\n	        	free_bytes	/;"	f
free_disk_space	data/data_raw/train.py	/^utf-8	def	free_disk_space	(	dirname	)	:	\\n	    	if	os	.	name	==	'nt'	:	\\n	        	free_bytes	/;"	f
free_symbols	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	free_symbols	(	self	)	:	\\n	    	return	AddWithLimits	.	free_symbols	.	/;"	f
free_symbols	data/data_raw/train.py	/^utf-8	@	property	\\n	def	free_symbols	(	self	)	:	\\n	    	return	AddWithLimits	.	free_symbols	.	/;"	f
freeze	data/bpe_corpus_raw/valid.py	/^utf-8	def	freeze	(	self	,	no_etag	=	False	)	:	\\n	    	if	not	no_etag	:	\\n	        	self	.	add_/;"	f
freeze	data/data_raw/valid.py	/^utf-8	def	freeze	(	self	,	no_etag	=	False	)	:	\\n	    	if	not	no_etag	:	\\n	        	self	.	add_/;"	f
frequency	data/bpe_corpus_raw/valid.py	/^utf-8	@	frequency	.	setter	\\n	def	frequency	(	self	,	new_frequency	)	:	\\n	    	if	isinstance	(/;"	f
frequency	data/data_raw/valid.py	/^utf-8	@	frequency	.	setter	\\n	def	frequency	(	self	,	new_frequency	)	:	\\n	    	if	isinstance	(/;"	f
from_FractionField	data/bpe_corpus_raw/train.py	/^utf-8	def	from_FractionField	(	K1	,	a	,	K0	)	:	\\n	    	return	None	\\n		$/;"	f
from_FractionField	data/data_raw/train.py	/^utf-8	def	from_FractionField	(	K1	,	a	,	K0	)	:	\\n	    	return	None	\\n		$/;"	f
from_api_repr	data/bpe_corpus_raw/train.py	/^utf-8	@	classmethod	\\n	def	from_api_repr	(	cls	,	resource	)	:	\\n	    	config	=	cls	(	)	\\n	con/;"	f
from_api_repr	data/data_raw/train.py	/^utf-8	@	classmethod	\\n	def	from_api_repr	(	cls	,	resource	)	:	\\n	    	config	=	cls	(	)	\\n	con/;"	f
from_config_dict	data/bpe_corpus_raw/test.py	/^utf-8	@	classmethod	\\n	def	from_config_dict	(	cls	,	pool_name	,	obj	)	:	\\n	    	if	obj	[	'moni/;"	f
from_config_dict	data/data_raw/test.py	/^utf-8	@	classmethod	\\n	def	from_config_dict	(	cls	,	pool_name	,	obj	)	:	\\n	    	if	obj	[	'moni/;"	f
from_dictionary	data/bpe_corpus_raw/train.py	/^utf-8	@	staticmethod	\\n	def	from_dictionary	(	dictionary	)	:	\\n	    	from_dict	=	Filter	.	from/;"	f
from_dictionary	data/data_raw/train.py	/^utf-8	@	staticmethod	\\n	def	from_dictionary	(	dictionary	)	:	\\n	    	from_dict	=	Filter	.	from/;"	f
from_file	data/bpe_corpus_raw/test.py	/^utf-8	def	from_file	(	self	,	file	,	file_location	,	project	)	:	\\n	    	if	__debug__	:	\\n	    /;"	f
from_file	data/data_raw/test.py	/^utf-8	def	from_file	(	self	,	file	,	file_location	,	project	)	:	\\n	    	if	__debug__	:	\\n	    /;"	f
from_formula	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	from_formula	(	cls	,	formula	,	data	,	re_formula	=	None	,	vc_formula/;"	f
from_formula	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	from_formula	(	cls	,	formula	,	data	,	re_formula	=	None	,	vc_formula/;"	f
from_httplib	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	from_httplib	(	cls	,	message	)	:	\\n	    	headers	=	[	]	\\n	for	line/;"	f
from_httplib	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	from_httplib	(	cls	,	message	)	:	\\n	    	headers	=	[	]	\\n	for	line/;"	f
from_json	data/bpe_corpus_raw/train.py	/^utf-8	@	classmethod	\\n	def	from_json	(	cls	,	trello_client	=	None	,	organization	=	None	,	json_/;"	f
from_json	data/data_raw/train.py	/^utf-8	@	classmethod	\\n	def	from_json	(	cls	,	trello_client	=	None	,	organization	=	None	,	json_/;"	f
from_key_val_list	data/bpe_corpus_raw/valid.py	/^utf-8	def	from_key_val_list	(	value	)	:	\\n	    	if	value	is	None	:	\\n	        	return	None	\\n/;"	f
from_key_val_list	data/data_raw/valid.py	/^utf-8	def	from_key_val_list	(	value	)	:	\\n	    	if	value	is	None	:	\\n	        	return	None	\\n/;"	f
from_map	data/bpe_corpus_raw/train.py	/^utf-8	def	from_map	(	self	,	table	,	intriggers	)	:	\\n	    	for	trg	in	intriggers	:	\\n	        /;"	f
from_map	data/data_raw/train.py	/^utf-8	def	from_map	(	self	,	table	,	intriggers	)	:	\\n	    	for	trg	in	intriggers	:	\\n	        /;"	f
from_proto	data/bpe_corpus_raw/train.py	/^utf-8	@	staticmethod	\\n	def	from_proto	(	saver_def	,	import_scope	=	None	)	:	\\n	    	return	Sa/;"	f
from_proto	data/data_raw/train.py	/^utf-8	@	staticmethod	\\n	def	from_proto	(	saver_def	,	import_scope	=	None	)	:	\\n	    	return	Sa/;"	f
from_recformat	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	from_recformat	(	cls	,	recformat	)	:	\\n	    	return	cls	(	_convert_/;"	f
from_recformat	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	from_recformat	(	cls	,	recformat	)	:	\\n	    	return	cls	(	_convert_/;"	f
from_record_like	data/bpe_corpus_raw/test.py	/^utf-8	def	from_record_like	(	rec	,	stream	=	0	,	gpu_data	=	None	)	:	\\n	    	return	DeviceRecord/;"	f
from_record_like	data/data_raw/test.py	/^utf-8	def	from_record_like	(	rec	,	stream	=	0	,	gpu_data	=	None	)	:	\\n	    	return	DeviceRecord/;"	f
from_text_list	data/bpe_corpus_raw/train.py	/^utf-8	def	from_text_list	(	rdclass	,	rdtype	,	ttl	,	text_rdatas	)	:	\\n	    	if	isinstance	(	rdc/;"	f
from_text_list	data/data_raw/train.py	/^utf-8	def	from_text_list	(	rdclass	,	rdtype	,	ttl	,	text_rdatas	)	:	\\n	    	if	isinstance	(	rdc/;"	f
from_utimestamp	data/bpe_corpus_raw/train.py	/^utf-8	def	from_utimestamp	(	ts	)	:	\\n	    	return	_epoc	+	timedelta	(	microseconds	=	ts	or	0	)	/;"	f
from_utimestamp	data/data_raw/train.py	/^utf-8	def	from_utimestamp	(	ts	)	:	\\n	    	return	_epoc	+	timedelta	(	microseconds	=	ts	or	0	)	/;"	f
fromstr	data/bpe_corpus_raw/train.py	/^utf-8	def	fromstr	(	string	,	**	kwargs	)	:	\\n	    	return	GEOSGeometry	(	string	,	**	kwargs	)	\\/;"	f
fromstr	data/data_raw/train.py	/^utf-8	def	fromstr	(	string	,	**	kwargs	)	:	\\n	    	return	GEOSGeometry	(	string	,	**	kwargs	)	\\/;"	f
fromtimestamp	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	fromtimestamp	(	cls	,	t	)	:	\\n	    	y	,	m	,	d	,	hh	,	mm	,	ss	,	week/;"	f
fromtimestamp	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	fromtimestamp	(	cls	,	t	)	:	\\n	    	y	,	m	,	d	,	hh	,	mm	,	ss	,	week/;"	f
fs_dec	data/bpe_corpus_raw/valid.py	/^utf-8	def	fs_dec	(	s	)	:	\\n	    	enc	=	sys	.	getfilesystemencoding	(	)	\\n	if	enc	is	None	:	\\n/;"	f
fs_dec	data/data_raw/valid.py	/^utf-8	def	fs_dec	(	s	)	:	\\n	    	enc	=	sys	.	getfilesystemencoding	(	)	\\n	if	enc	is	None	:	\\n/;"	f
fullData	data/bpe_corpus_raw/valid.py	/^utf-8	def	fullData	(	master	)	:	\\n	    	builders	=	[	]	\\n	for	b	in	master	.	config	.	builders	/;"	f
fullData	data/data_raw/valid.py	/^utf-8	def	fullData	(	master	)	:	\\n	    	builders	=	[	]	\\n	for	b	in	master	.	config	.	builders	/;"	f
full_name	data/bpe_corpus_raw/train.py	/^utf-8	def	full_name	(	self	)	:	\\n	    	return	self	.	_full_name	\\n		$/;"	f
full_name	data/data_raw/train.py	/^utf-8	def	full_name	(	self	)	:	\\n	    	return	self	.	_full_name	\\n		$/;"	f
fully_labeled_replicas	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	fully_labeled_replicas	(	self	)	:	\\n	    	return	self	.	_fully_labeled/;"	f
fully_labeled_replicas	data/data_raw/train.py	/^utf-8	@	property	\\n	def	fully_labeled_replicas	(	self	)	:	\\n	    	return	self	.	_fully_labeled/;"	f
fun	data/bpe_corpus_raw/valid.py	/^utf-8	def	_lim_moment	(	self	,	u	,	order	=	1	)	:	\\n	\\n	    	def	fun	(	x	)	:	\\n	        	retur/;"	f	function:_lim_moment	file:
fun	data/data_raw/valid.py	/^utf-8	def	_lim_moment	(	self	,	u	,	order	=	1	)	:	\\n	\\n	    	def	fun	(	x	)	:	\\n	        	retur/;"	f	function:_lim_moment	file:
func	data/bpe_corpus_raw/train.py	/^utf-8	@	classmethod	\\n	def	func	(	cls	,	*	args	)	:	\\n	    	if	cls	.	impl	==	IMPL_NUMPY	:	\\n	 /;"	f
func	data/bpe_corpus_raw/train.py	/^utf-8	def	corr_nearest_factor	(	corr	,	rank	,	ctol	=	1e-06	,	lam_min	=	1e-30	,	lam_max	=	\\n	1e+/;"	f	function:corr_nearest_factor.grad	file:
func	data/bpe_corpus_raw/train.py	/^utf-8	def	func	(	self	)	:	\\n	    	global	_IDMAPPER	\\n	if	not	_IDMAPPER	:	\\n	        	from	eve/;"	f
func	data/bpe_corpus_raw/valid.py	/^utf-8	def	func	(	self	)	:	\\n	    	caller	=	self	.	caller	\\n	if	not	self	.	args	:	\\n	        	/;"	f
func	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_cleanPendingCancelsCalls	(	self	)	:	\\n	\\n	    	def	func	(	)	:	\\n	        	retu/;"	f	function:test_cleanPendingCancelsCalls	file:
func	data/data_raw/train.py	/^utf-8	@	classmethod	\\n	def	func	(	cls	,	*	args	)	:	\\n	    	if	cls	.	impl	==	IMPL_NUMPY	:	\\n	 /;"	f
func	data/data_raw/train.py	/^utf-8	def	corr_nearest_factor	(	corr	,	rank	,	ctol	=	1e-06	,	lam_min	=	1e-30	,	lam_max	=	\\n	1e+/;"	f	function:corr_nearest_factor.grad	file:
func	data/data_raw/train.py	/^utf-8	def	func	(	self	)	:	\\n	    	global	_IDMAPPER	\\n	if	not	_IDMAPPER	:	\\n	        	from	eve/;"	f
func	data/data_raw/valid.py	/^utf-8	def	func	(	self	)	:	\\n	    	caller	=	self	.	caller	\\n	if	not	self	.	args	:	\\n	        	/;"	f
func	data/data_raw/valid.py	/^utf-8	def	test_cleanPendingCancelsCalls	(	self	)	:	\\n	\\n	    	def	func	(	)	:	\\n	        	retu/;"	f	function:test_cleanPendingCancelsCalls	file:
fused_batch_norm_grad	data/bpe_corpus_raw/train.py	/^utf-8	def	fused_batch_norm_grad	(	y_backprop	,	x	,	scale	,	reserve_space_1	,	\\n	reserve_space_2/;"	f
fused_batch_norm_grad	data/data_raw/train.py	/^utf-8	def	fused_batch_norm_grad	(	y_backprop	,	x	,	scale	,	reserve_space_1	,	\\n	reserve_space_2/;"	f
gain_for_EI	data/bpe_corpus_raw/train.py	/^utf-8	def	create_log_c	(	gamut	,	transfer_function	,	exposure_index	,	lut_directory	,	\\n	lut_re/;"	f	function:create_log_c	file:
gain_for_EI	data/data_raw/train.py	/^utf-8	def	create_log_c	(	gamut	,	transfer_function	,	exposure_index	,	lut_directory	,	\\n	lut_re/;"	f	function:create_log_c	file:
gamma_taylor_coefficients	data/bpe_corpus_raw/valid.py	/^utf-8	def	gamma_taylor_coefficients	(	inprec	)	:	\\n	    	if	inprec	<	400	:	\\n	        	prec	=	/;"	f
gamma_taylor_coefficients	data/data_raw/valid.py	/^utf-8	def	gamma_taylor_coefficients	(	inprec	)	:	\\n	    	if	inprec	<	400	:	\\n	        	prec	=	/;"	f
gate	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	gate	(	self	)	:	\\n	    	return	XGate	(	self	.	label	[	1	]	)	\\n		$/;"	f
gate	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	gate	(	self	)	:	\\n	    	return	XGate	(	self	.	label	[	1	]	)	\\n		$/;"	f
gather_nd	data/bpe_corpus_raw/train.py	/^utf-8	def	gather_nd	(	params	,	indices	,	name	=	None	)	:	\\n	    	result	=	_op_def_lib	.	apply_o/;"	f
gather_nd	data/data_raw/train.py	/^utf-8	def	gather_nd	(	params	,	indices	,	name	=	None	)	:	\\n	    	result	=	_op_def_lib	.	apply_o/;"	f
gatk_rnaseq_calling	data/bpe_corpus_raw/train.py	/^utf-8	def	gatk_rnaseq_calling	(	data	)	:	\\n	    	from	bcbio	.	bam	import	callable	\\n	data	=	ut/;"	f
gatk_rnaseq_calling	data/data_raw/train.py	/^utf-8	def	gatk_rnaseq_calling	(	data	)	:	\\n	    	from	bcbio	.	bam	import	callable	\\n	data	=	ut/;"	f
gaussian_noise	data/bpe_corpus_raw/valid.py	/^utf-8	def	gaussian_noise	(	self	,	mean	=	0	,	std	=	25.5	)	:	\\n	    	x	=	self	.	Image	\\n	x	=	x	/;"	f
gaussian_noise	data/data_raw/valid.py	/^utf-8	def	gaussian_noise	(	self	,	mean	=	0	,	std	=	25.5	)	:	\\n	    	x	=	self	.	Image	\\n	x	=	x	/;"	f
gcd	data/bpe_corpus_raw/valid.py	/^utf-8	def	gcd	(	number1	,	number2	)	:	\\n	    	assert	isinstance	(	number1	,	int	)	and	isinstanc/;"	f
gcd	data/data_raw/valid.py	/^utf-8	def	gcd	(	number1	,	number2	)	:	\\n	    	assert	isinstance	(	number1	,	int	)	and	isinstanc/;"	f
gen_list	data/bpe_corpus_raw/train.py	/^utf-8	def	gen_list	(	querylist	)	:	\\n	    	if	not	isinstance	(	querylist	,	QueryList	)	:	\\n	  /;"	f
gen_list	data/data_raw/train.py	/^utf-8	def	gen_list	(	querylist	)	:	\\n	    	if	not	isinstance	(	querylist	,	QueryList	)	:	\\n	  /;"	f
gen_nics	data/bpe_corpus_raw/valid.py	/^utf-8	def	gen_nics	(	self	)	:	\\n	    	res	=	[	]	\\n	if	'vEOS-lab'	in	self	.	image	:	\\n	       /;"	f
gen_nics	data/data_raw/valid.py	/^utf-8	def	gen_nics	(	self	)	:	\\n	    	res	=	[	]	\\n	if	'vEOS-lab'	in	self	.	image	:	\\n	       /;"	f
gen_props	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	gen_props	(	**	kwargs	)	:	\\n	    	out	=	{	'cipd_input'	:	{	'client/;"	f
gen_props	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	gen_props	(	**	kwargs	)	:	\\n	    	out	=	{	'cipd_input'	:	{	'client/;"	f
gen_targets_rules	data/bpe_corpus_raw/test.py	/^utf-8	def	gen_targets_rules	(	self	)	:	\\n	    	rules_buf	=	[	]	\\n	skip_test	=	getattr	(	self	./;"	f
gen_targets_rules	data/data_raw/test.py	/^utf-8	def	gen_targets_rules	(	self	)	:	\\n	    	rules_buf	=	[	]	\\n	skip_test	=	getattr	(	self	./;"	f
gen_test	data/bpe_corpus_raw/valid.py	/^utf-8	def	gen_test	(	func	=	None	,	timeout	=	None	)	:	\\n	    	if	timeout	is	None	:	\\n	        /;"	f
gen_test	data/data_raw/valid.py	/^utf-8	def	gen_test	(	func	=	None	,	timeout	=	None	)	:	\\n	    	if	timeout	is	None	:	\\n	        /;"	f
generate	data/bpe_corpus_raw/train.py	/^utf-8	def	generate	(	env	)	:	\\n	    	c_file	,	cxx_file	=	SCons	.	Tool	.	createCFileBuilders	(	e/;"	f
generate	data/bpe_corpus_raw/train.py	/^utf-8	def	generate	(	self	,	state	)	:	\\n	    	if	self	.	cipher	is	None	:	\\n	        	raise	Not/;"	f
generate	data/bpe_corpus_raw/train.py	/^utf-8	def	iter_content	(	self	,	chunk_size	=	1	,	decode_unicode	=	False	)	:	\\n	\\n	    	def	gen/;"	f	function:iter_content	file:
generate	data/bpe_corpus_raw/valid.py	/^utf-8	def	generate	(	node	,	environment	,	name	,	filename	,	stream	=	None	,	defer_init	=	False	)/;"	f
generate	data/data_raw/train.py	/^utf-8	def	generate	(	env	)	:	\\n	    	c_file	,	cxx_file	=	SCons	.	Tool	.	createCFileBuilders	(	e/;"	f
generate	data/data_raw/train.py	/^utf-8	def	generate	(	self	,	state	)	:	\\n	    	if	self	.	cipher	is	None	:	\\n	        	raise	Not/;"	f
generate	data/data_raw/train.py	/^utf-8	def	iter_content	(	self	,	chunk_size	=	1	,	decode_unicode	=	False	)	:	\\n	\\n	    	def	gen/;"	f	function:iter_content	file:
generate	data/data_raw/valid.py	/^utf-8	def	generate	(	node	,	environment	,	name	,	filename	,	stream	=	None	,	defer_init	=	False	)/;"	f
generate_build_props	data/bpe_corpus_raw/valid.py	/^utf-8	def	generate_build_props	(	self	,	console_output	=	True	,	halt_on_failure	=	False	)	:	\\n	/;"	f
generate_build_props	data/data_raw/valid.py	/^utf-8	def	generate_build_props	(	self	,	console_output	=	True	,	halt_on_failure	=	False	)	:	\\n	/;"	f
generate_html_documentation	data/bpe_corpus_raw/train.py	/^utf-8	def	generate_html_documentation	(	self	)	:	\\n	    	methods	=	{	}	\\n	for	method_name	in	s/;"	f
generate_html_documentation	data/data_raw/train.py	/^utf-8	def	generate_html_documentation	(	self	)	:	\\n	    	methods	=	{	}	\\n	for	method_name	in	s/;"	f
generate_lambda	data/bpe_corpus_raw/test.py	/^utf-8	def	generate_lambda	(	function_name	,	zip_file	,	handler	,	lambda_config	,	config	,	\\n	en/;"	f
generate_lambda	data/data_raw/test.py	/^utf-8	def	generate_lambda	(	function_name	,	zip_file	,	handler	,	lambda_config	,	config	,	\\n	en/;"	f
generate_matches	data/bpe_corpus_raw/valid.py	/^utf-8	def	generate_matches	(	self	,	nodes	)	:	\\n	    	r	=	{	}	\\n	if	nodes	and	self	.	match	(	n/;"	f
generate_matches	data/data_raw/valid.py	/^utf-8	def	generate_matches	(	self	,	nodes	)	:	\\n	    	r	=	{	}	\\n	if	nodes	and	self	.	match	(	n/;"	f
generate_normalisation_mask	data/bpe_corpus_raw/valid.py	/^utf-8	def	generate_normalisation_mask	(	self	)	:	\\n	    	mask	=	np	.	zeros	(	(	37	,	37	)	,	dtyp/;"	f
generate_normalisation_mask	data/data_raw/valid.py	/^utf-8	def	generate_normalisation_mask	(	self	)	:	\\n	    	mask	=	np	.	zeros	(	(	37	,	37	)	,	dtyp/;"	f
generate_operand_kind_table	data/bpe_corpus_raw/valid.py	/^utf-8	def	generate_operand_kind_table	(	enums	)	:	\\n	    	enums	=	[	generate_enum_operand_kind	/;"	f
generate_operand_kind_table	data/data_raw/valid.py	/^utf-8	def	generate_operand_kind_table	(	enums	)	:	\\n	    	enums	=	[	generate_enum_operand_kind	/;"	f
generate_random_string	data/bpe_corpus_raw/test.py	/^utf-8	def	generate_random_string	(	length	=	8	)	:	\\n	    	return	''	.	join	(	random	.	choice	(	/;"	f
generate_random_string	data/data_raw/test.py	/^utf-8	def	generate_random_string	(	length	=	8	)	:	\\n	    	return	''	.	join	(	random	.	choice	(	/;"	f
generate_redundant_parameters	data/bpe_corpus_raw/train.py	/^utf-8	def	generate_redundant_parameters	(	hyper_params	,	gridable_parameters	,	\\n	gridable_defa/;"	f
generate_redundant_parameters	data/data_raw/train.py	/^utf-8	def	generate_redundant_parameters	(	hyper_params	,	gridable_parameters	,	\\n	gridable_defa/;"	f
generate_string	data/bpe_corpus_raw/valid.py	/^utf-8	def	generate_string	(	length	)	:	\\n	    	return	''	.	join	(	[	random	.	SystemRandom	(	)	./;"	f
generate_string	data/data_raw/valid.py	/^utf-8	def	generate_string	(	length	)	:	\\n	    	return	''	.	join	(	[	random	.	SystemRandom	(	)	./;"	f
generate_test_file_hooks	data/bpe_corpus_raw/train.py	/^utf-8	def	generate_test_file_hooks	(	config_dir	,	hook_probe	)	:	\\n	    	if	sys	.	platform	==	'/;"	f
generate_test_file_hooks	data/data_raw/train.py	/^utf-8	def	generate_test_file_hooks	(	config_dir	,	hook_probe	)	:	\\n	    	if	sys	.	platform	==	'/;"	f
generate_traj	data/bpe_corpus_raw/train.py	/^utf-8	def	generate_traj	(	self	,	N	,	start	=	None	,	stop	=	None	,	dt	=	1	)	:	\\n	    	from	msmto/;"	f
generate_traj	data/data_raw/train.py	/^utf-8	def	generate_traj	(	self	,	N	,	start	=	None	,	stop	=	None	,	dt	=	1	)	:	\\n	    	from	msmto/;"	f
generate_translate_token	data/bpe_corpus_raw/train.py	/^utf-8	def	generate_translate_token	(	token_initialization	,	text	)	:	\\n	    	token_initializati/;"	f
generate_translate_token	data/data_raw/train.py	/^utf-8	def	generate_translate_token	(	token_initialization	,	text	)	:	\\n	    	token_initializati/;"	f
generate_wcs	data/bpe_corpus_raw/train.py	/^utf-8	@	public	\\n	def	generate_wcs	(	length	=	14	)	:	\\n	    	assert	type	(	length	)	in	six	.	i/;"	f
generate_wcs	data/data_raw/train.py	/^utf-8	@	public	\\n	def	generate_wcs	(	length	=	14	)	:	\\n	    	assert	type	(	length	)	in	six	.	i/;"	f
generic	data/bpe_corpus_raw/valid.py	/^utf-8	def	generic	(	self	)	:	\\n	    	self	.	set_header	(	'Content-Type'	,	'text\/x-python'	)	\\/;"	f
generic	data/data_raw/valid.py	/^utf-8	def	generic	(	self	)	:	\\n	    	self	.	set_header	(	'Content-Type'	,	'text\/x-python'	)	\\/;"	f
genkey	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	genkey	(	cls	,	k	)	:	\\n	    	return	k	.	upper	(	)	if	isinstance	(	k/;"	f
genkey	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	genkey	(	cls	,	k	)	:	\\n	    	return	k	.	upper	(	)	if	isinstance	(	k/;"	f
geometric_sums	data/bpe_corpus_raw/train.py	/^utf-8	def	geometric_sums	(	self	,	beta	,	x_t	)	:	\\n	    	I	=	np	.	identity	(	self	.	n	)	\\n	S_x/;"	f
geometric_sums	data/data_raw/train.py	/^utf-8	def	geometric_sums	(	self	,	beta	,	x_t	)	:	\\n	    	I	=	np	.	identity	(	self	.	n	)	\\n	S_x/;"	f
get	data/bpe_corpus_raw/test.py	/^utf-8	def	get	(	self	,	key	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
get	data/bpe_corpus_raw/train.py	/^utf-8	def	get	(	self	)	:	\\n	    	result	=	self	.	_get	(	self	.	kind	,	self	.	config	.	name	)	\\/;"	f
get	data/bpe_corpus_raw/train.py	/^utf-8	def	get	(	self	)	:	\\n	    	return	WorkerStatisticsContext	(	self	.	_version	,	workspace_s/;"	f
get	data/bpe_corpus_raw/train.py	/^utf-8	def	get	(	self	,	location_name	,	long_term_retention_server_name	,	\\n	long_term_retention/;"	f
get	data/bpe_corpus_raw/train.py	/^utf-8	def	get	(	self	,	request	,	course_id	,	rolename	)	:	\\n	    	kwargs	=	self	.	_get_request_/;"	f
get	data/bpe_corpus_raw/train.py	/^utf-8	def	get	(	self	,	resource_group_name	,	account_name	,	firewall_rule_name	,	\\n	custom_head/;"	f
get	data/bpe_corpus_raw/train.py	/^utf-8	def	get	(	self	,	timeout	=	None	)	:	\\n	    	future	=	Future	(	)	\\n	try	:	\\n	        	fu/;"	f
get	data/bpe_corpus_raw/valid.py	/^utf-8	def	get	(	self	)	:	\\n	    	result	=	self	.	_get	(	self	.	kind	,	self	.	config	.	name	)	\\/;"	f
get	data/bpe_corpus_raw/valid.py	/^utf-8	def	get	(	self	)	:	\\n	    	results	=	self	.	_get	(	self	.	kind	,	name	=	self	.	name	,	sel/;"	f
get	data/bpe_corpus_raw/valid.py	/^utf-8	def	get	(	self	)	:	\\n	    	return	self	.	val	\\n		$/;"	f
get	data/bpe_corpus_raw/valid.py	/^utf-8	def	get	(	self	,	key	)	:	\\n	    	try	:	\\n	        	entry	=	Yedit	.	get_entry	(	self	.	ya/;"	f
get	data/bpe_corpus_raw/valid.py	/^utf-8	def	get	(	self	,	request	,	*	args	,	**	kwargs	)	:	\\n	    	self	.	storage	.	reset	(	)	\\n	/;"	f
get	data/bpe_corpus_raw/valid.py	/^utf-8	def	get	(	self	,	resource_group_name	,	server_name	,	job_agent_name	,	\\n	target_group_nam/;"	f
get	data/bpe_corpus_raw/valid.py	/^utf-8	def	get	(	self	,	security_group	)	:	\\n	    	return	self	.	_get	(	'\/security-groups\/%s'	/;"	f
get	data/bpe_corpus_raw/valid.py	/^utf-8	def	get	(	self	,	url_type	)	:	\\n	    	lowtype	=	url_type	.	lower	(	)	\\n	if	lowtype	==	'p/;"	f
get	data/data_raw/test.py	/^utf-8	def	get	(	self	,	key	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
get	data/data_raw/train.py	/^utf-8	def	get	(	self	)	:	\\n	    	result	=	self	.	_get	(	self	.	kind	,	self	.	config	.	name	)	\\/;"	f
get	data/data_raw/train.py	/^utf-8	def	get	(	self	)	:	\\n	    	return	WorkerStatisticsContext	(	self	.	_version	,	workspace_s/;"	f
get	data/data_raw/train.py	/^utf-8	def	get	(	self	,	location_name	,	long_term_retention_server_name	,	\\n	long_term_retention/;"	f
get	data/data_raw/train.py	/^utf-8	def	get	(	self	,	request	,	course_id	,	rolename	)	:	\\n	    	kwargs	=	self	.	_get_request_/;"	f
get	data/data_raw/train.py	/^utf-8	def	get	(	self	,	resource_group_name	,	account_name	,	firewall_rule_name	,	\\n	custom_head/;"	f
get	data/data_raw/train.py	/^utf-8	def	get	(	self	,	timeout	=	None	)	:	\\n	    	future	=	Future	(	)	\\n	try	:	\\n	        	fu/;"	f
get	data/data_raw/valid.py	/^utf-8	def	get	(	self	)	:	\\n	    	result	=	self	.	_get	(	self	.	kind	,	self	.	config	.	name	)	\\/;"	f
get	data/data_raw/valid.py	/^utf-8	def	get	(	self	)	:	\\n	    	results	=	self	.	_get	(	self	.	kind	,	name	=	self	.	name	,	sel/;"	f
get	data/data_raw/valid.py	/^utf-8	def	get	(	self	)	:	\\n	    	return	self	.	val	\\n		$/;"	f
get	data/data_raw/valid.py	/^utf-8	def	get	(	self	,	key	)	:	\\n	    	try	:	\\n	        	entry	=	Yedit	.	get_entry	(	self	.	ya/;"	f
get	data/data_raw/valid.py	/^utf-8	def	get	(	self	,	request	,	*	args	,	**	kwargs	)	:	\\n	    	self	.	storage	.	reset	(	)	\\n	/;"	f
get	data/data_raw/valid.py	/^utf-8	def	get	(	self	,	resource_group_name	,	server_name	,	job_agent_name	,	\\n	target_group_nam/;"	f
get	data/data_raw/valid.py	/^utf-8	def	get	(	self	,	security_group	)	:	\\n	    	return	self	.	_get	(	'\/security-groups\/%s'	/;"	f
get	data/data_raw/valid.py	/^utf-8	def	get	(	self	,	url_type	)	:	\\n	    	lowtype	=	url_type	.	lower	(	)	\\n	if	lowtype	==	'p/;"	f
getAllAps	data/bpe_corpus_raw/valid.py	/^utf-8	def	getAllAps	(	)	:	\\n	    	infos	=	[	]	\\n	pythonService	=	autoclass	(	'org.renpy.androi/;"	f
getAllAps	data/data_raw/valid.py	/^utf-8	def	getAllAps	(	)	:	\\n	    	infos	=	[	]	\\n	pythonService	=	autoclass	(	'org.renpy.androi/;"	f
getAllStats	data/bpe_corpus_raw/valid.py	/^utf-8	def	getAllStats	(	self	)	:	\\n	    	return	self	.	_statusDict	\\n		$/;"	f
getAllStats	data/data_raw/valid.py	/^utf-8	def	getAllStats	(	self	)	:	\\n	    	return	self	.	_statusDict	\\n		$/;"	f
getAutoScheduleMode	data/bpe_corpus_raw/train.py	/^utf-8	def	getAutoScheduleMode	(	organizer	)	:	\\n	$/;"	f
getAutoScheduleMode	data/data_raw/train.py	/^utf-8	def	getAutoScheduleMode	(	organizer	)	:	\\n	$/;"	f
getAvailableTranslations	data/bpe_corpus_raw/valid.py	/^utf-8	def	getAvailableTranslations	(	self	)	:	\\n	    	supported	=	set	(	)	\\n	for	project	in	se/;"	f
getAvailableTranslations	data/data_raw/valid.py	/^utf-8	def	getAvailableTranslations	(	self	)	:	\\n	    	supported	=	set	(	)	\\n	for	project	in	se/;"	f
getAverageRGBOld	data/bpe_corpus_raw/valid.py	/^utf-8	def	getAverageRGBOld	(	image	)	:	\\n	    	npixels	=	image	.	size	[	0	]	*	image	.	size	[	1	/;"	f
getAverageRGBOld	data/data_raw/valid.py	/^utf-8	def	getAverageRGBOld	(	image	)	:	\\n	    	npixels	=	image	.	size	[	0	]	*	image	.	size	[	1	/;"	f
getBoardType	data/bpe_corpus_raw/valid.py	/^utf-8	def	getBoardType	(	self	)	:	\\n	    	return	self	.	board_type	\\n		$/;"	f
getBoardType	data/data_raw/valid.py	/^utf-8	def	getBoardType	(	self	)	:	\\n	    	return	self	.	board_type	\\n		$/;"	f
getBodyStructure	data/bpe_corpus_raw/valid.py	/^utf-8	def	getBodyStructure	(	msg	,	extended	=	False	)	:	\\n	    	return	_getMessageStructure	(	m/;"	f
getBodyStructure	data/data_raw/valid.py	/^utf-8	def	getBodyStructure	(	msg	,	extended	=	False	)	:	\\n	    	return	_getMessageStructure	(	m/;"	f
getCharPositionInLine	data/bpe_corpus_raw/valid.py	/^utf-8	def	getCharPositionInLine	(	self	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
getCharPositionInLine	data/data_raw/valid.py	/^utf-8	def	getCharPositionInLine	(	self	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
getCheckedOutBy	data/bpe_corpus_raw/train.py	/^utf-8	def	getCheckedOutBy	(	self	)	:	\\n	    	self	.	reload	(	)	\\n	return	self	.	getProperties	/;"	f
getCheckedOutBy	data/data_raw/train.py	/^utf-8	def	getCheckedOutBy	(	self	)	:	\\n	    	self	.	reload	(	)	\\n	return	self	.	getProperties	/;"	f
getChild	data/bpe_corpus_raw/valid.py	/^utf-8	def	getChild	(	self	,	index	)	:	\\n	    	return	self	.	childs	[	index	]	\\n		$/;"	f
getChild	data/data_raw/valid.py	/^utf-8	def	getChild	(	self	,	index	)	:	\\n	    	return	self	.	childs	[	index	]	\\n		$/;"	f
getClusterCentroid	data/bpe_corpus_raw/train.py	/^utf-8	def	kmeans1d	(	data	,	k	,	cutoff	=	False	,	maxIter	=	False	)	:	\\n	\\n	    	def	getCluster/;"	f	function:kmeans1d.getClusterValues	file:
getClusterCentroid	data/data_raw/train.py	/^utf-8	def	kmeans1d	(	data	,	k	,	cutoff	=	False	,	maxIter	=	False	)	:	\\n	\\n	    	def	getCluster/;"	f	function:kmeans1d.getClusterValues	file:
getClusterValues	data/bpe_corpus_raw/train.py	/^utf-8	def	kmeans1d	(	data	,	k	,	cutoff	=	False	,	maxIter	=	False	)	:	\\n	\\n	    	def	getCluster/;"	f	function:kmeans1d	file:
getClusterValues	data/data_raw/train.py	/^utf-8	def	kmeans1d	(	data	,	k	,	cutoff	=	False	,	maxIter	=	False	)	:	\\n	\\n	    	def	getCluster/;"	f	function:kmeans1d	file:
getCraftedGcode	data/bpe_corpus_raw/train.py	/^utf-8	def	getCraftedGcode	(	self	,	repository	,	gcodeText	)	:	\\n	    	self	.	repository	=	repos/;"	f
getCraftedGcode	data/data_raw/train.py	/^utf-8	def	getCraftedGcode	(	self	,	repository	,	gcodeText	)	:	\\n	    	self	.	repository	=	repos/;"	f
getCraftedTextFromText	data/bpe_corpus_raw/train.py	/^utf-8	def	getCraftedTextFromText	(	gcodeText	,	repository	=	None	)	:	\\n	    	if	gcodec	.	isProc/;"	f
getCraftedTextFromText	data/data_raw/train.py	/^utf-8	def	getCraftedTextFromText	(	gcodeText	,	repository	=	None	)	:	\\n	    	if	gcodec	.	isProc/;"	f
getCurrentViewerIndex	data/bpe_corpus_raw/train.py	/^utf-8	def	getCurrentViewerIndex	(	self	)	:	\\n	    	return	self	.	_currentViewerIndex	\\n		$/;"	f
getCurrentViewerIndex	data/data_raw/train.py	/^utf-8	def	getCurrentViewerIndex	(	self	)	:	\\n	    	return	self	.	_currentViewerIndex	\\n		$/;"	f
getDescriptors	data/bpe_corpus_raw/test.py	/^utf-8	def	getDescriptors	(	self	,	**	filters	)	:	\\n	    	curr	=	self	.	descriptors	\\n	tofilter/;"	f
getDescriptors	data/data_raw/test.py	/^utf-8	def	getDescriptors	(	self	,	**	filters	)	:	\\n	    	curr	=	self	.	descriptors	\\n	tofilter/;"	f
getDrawing08	data/bpe_corpus_raw/valid.py	/^utf-8	def	getDrawing08	(	)	:	\\n	    	D	=	Drawing	(	400	,	200	)	\\n	Axis	=	Group	(	Line	(	0	,	0	/;"	f
getDrawing08	data/data_raw/valid.py	/^utf-8	def	getDrawing08	(	)	:	\\n	    	D	=	Drawing	(	400	,	200	)	\\n	Axis	=	Group	(	Line	(	0	,	0	/;"	f
getElementsPath	data/bpe_corpus_raw/train.py	/^utf-8	def	getElementsPath	(	subName	=	''	)	:	\\n	    	return	getJoinedPath	(	getGeometryUtilitie/;"	f
getElementsPath	data/data_raw/train.py	/^utf-8	def	getElementsPath	(	subName	=	''	)	:	\\n	    	return	getJoinedPath	(	getGeometryUtilitie/;"	f
getFeature	data/bpe_corpus_raw/valid.py	/^utf-8	def	getFeature	(	self	,	name	)	:	\\n	    	raise	SAXNotRecognizedException	(	"Feature '%s' /;"	f
getFeature	data/data_raw/valid.py	/^utf-8	def	getFeature	(	self	,	name	)	:	\\n	    	raise	SAXNotRecognizedException	(	"Feature '%s' /;"	f
getFileTextInFileDirectory	data/bpe_corpus_raw/valid.py	/^utf-8	def	getFileTextInFileDirectory	(	fileInDirectory	,	fileName	,	readMode	=	'r'	)	:	\\n	    	/;"	f
getFileTextInFileDirectory	data/data_raw/valid.py	/^utf-8	def	getFileTextInFileDirectory	(	fileInDirectory	,	fileName	,	readMode	=	'r'	)	:	\\n	    	/;"	f
getFilesToDelete	data/bpe_corpus_raw/train.py	/^utf-8	def	getFilesToDelete	(	self	)	:	\\n	    	dirName	,	baseName	=	os	.	path	.	split	(	self	.	b/;"	f
getFilesToDelete	data/data_raw/train.py	/^utf-8	def	getFilesToDelete	(	self	)	:	\\n	    	dirName	,	baseName	=	os	.	path	.	split	(	self	.	b/;"	f
getImportNameWithDot	data/bpe_corpus_raw/train.py	/^utf-8	def	getImportNameWithDot	(	self	)	:	\\n	    	if	self	.	importName	==	''	:	\\n	        	ret/;"	f
getImportNameWithDot	data/data_raw/train.py	/^utf-8	def	getImportNameWithDot	(	self	)	:	\\n	    	if	self	.	importName	==	''	:	\\n	        	ret/;"	f
getImportRadius	data/bpe_corpus_raw/train.py	/^utf-8	def	getImportRadius	(	elementNode	)	:	\\n	    	if	elementNode	==	None	:	\\n	        	retur/;"	f
getImportRadius	data/data_raw/train.py	/^utf-8	def	getImportRadius	(	elementNode	)	:	\\n	    	if	elementNode	==	None	:	\\n	        	retur/;"	f
getInternalValue	data/bpe_corpus_raw/valid.py	/^utf-8	def	getInternalValue	(	self	,	sout	,	parent	)	:	\\n	    	if	parent	is	None	:	\\n	        	/;"	f
getInternalValue	data/data_raw/valid.py	/^utf-8	def	getInternalValue	(	self	,	sout	,	parent	)	:	\\n	    	if	parent	is	None	:	\\n	        	/;"	f
getInvalidScales	data/bpe_corpus_raw/valid.py	/^utf-8	def	getInvalidScales	(	self	)	:	\\n	    	invalid_scales	=	[	]	\\n	invalid_z_scales	=	[	]	\\/;"	f
getInvalidScales	data/data_raw/valid.py	/^utf-8	def	getInvalidScales	(	self	)	:	\\n	    	invalid_scales	=	[	]	\\n	invalid_z_scales	=	[	]	\\/;"	f
getKneeEstimateDensity	data/bpe_corpus_raw/train.py	/^utf-8	def	getKneeEstimateDensity	(	cell_barcode_counts	,	expect_cells	=	False	,	\\n	cell_number	/;"	f
getKneeEstimateDensity	data/data_raw/train.py	/^utf-8	def	getKneeEstimateDensity	(	cell_barcode_counts	,	expect_cells	=	False	,	\\n	cell_number	/;"	f
getLang	data/bpe_corpus_raw/valid.py	/^utf-8	def	getLang	(	)	:	\\n	    	if	getattr	(	threadLocal	,	'currentLang'	,	None	)	:	\\n	       /;"	f
getLang	data/data_raw/valid.py	/^utf-8	def	getLang	(	)	:	\\n	    	if	getattr	(	threadLocal	,	'currentLang'	,	None	)	:	\\n	       /;"	f
getList	data/bpe_corpus_raw/valid.py	/^utf-8	def	getList	(	self	)	:	\\n	    	result	=	[	]	\\n	for	i	in	xrange	(	self	.	table	.	rowCount/;"	f
getList	data/data_raw/valid.py	/^utf-8	def	getList	(	self	)	:	\\n	    	result	=	[	]	\\n	for	i	in	xrange	(	self	.	table	.	rowCount/;"	f
getLocalNamespace	data/bpe_corpus_raw/valid.py	/^utf-8	def	getLocalNamespace	(	self	)	:	\\n	    	pass	\\n		$/;"	f
getLocalNamespace	data/data_raw/valid.py	/^utf-8	def	getLocalNamespace	(	self	)	:	\\n	    	pass	\\n		$/;"	f
getManipulatedPaths	data/bpe_corpus_raw/train.py	/^utf-8	def	getManipulatedPaths	(	close	,	elementNode	,	loop	,	prefix	,	sideLength	)	:	\\n	    	if/;"	f
getManipulatedPaths	data/data_raw/train.py	/^utf-8	def	getManipulatedPaths	(	close	,	elementNode	,	loop	,	prefix	,	sideLength	)	:	\\n	    	if/;"	f
getNewRepository	data/bpe_corpus_raw/train.py	/^utf-8	def	getNewRepository	(	)	:	\\n	    	return	MultiplyRepository	(	)	\\n		$/;"	f
getNewRepository	data/data_raw/train.py	/^utf-8	def	getNewRepository	(	)	:	\\n	    	return	MultiplyRepository	(	)	\\n		$/;"	f
getROS	data/bpe_corpus_raw/train.py	/^utf-8	def	getROS	(	fontPath	)	:	\\n	    	Reg	=	Ord	=	Sup	=	None	\\n	with	open	(	fontPath	,	'r'	,/;"	f
getROS	data/data_raw/train.py	/^utf-8	def	getROS	(	fontPath	)	:	\\n	    	Reg	=	Ord	=	Sup	=	None	\\n	with	open	(	fontPath	,	'r'	,/;"	f
getRegisteredLaunchers	data/bpe_corpus_raw/train.py	/^utf-8	def	getRegisteredLaunchers	(	self	)	:	\\n	    	try	:	\\n	        	launcher_ids	=	self	.	cl/;"	f
getRegisteredLaunchers	data/data_raw/train.py	/^utf-8	def	getRegisteredLaunchers	(	self	)	:	\\n	    	try	:	\\n	        	launcher_ids	=	self	.	cl/;"	f
getRnaQuantificationSets	data/bpe_corpus_raw/valid.py	/^utf-8	def	getRnaQuantificationSets	(	self	)	:	\\n	    	return	[	self	.	_rnaQuantificationSetIdMa/;"	f
getRnaQuantificationSets	data/data_raw/valid.py	/^utf-8	def	getRnaQuantificationSets	(	self	)	:	\\n	    	return	[	self	.	_rnaQuantificationSetIdMa/;"	f
getScrewUpSound	data/bpe_corpus_raw/train.py	/^utf-8	def	getScrewUpSound	(	self	)	:	\\n	    	return	random	.	choice	(	self	.	screwUpsounds	)	\\/;"	f
getScrewUpSound	data/data_raw/train.py	/^utf-8	def	getScrewUpSound	(	self	)	:	\\n	    	return	random	.	choice	(	self	.	screwUpsounds	)	\\/;"	f
getServiceEndpoints	data/bpe_corpus_raw/valid.py	/^utf-8	def	getServiceEndpoints	(	self	,	yadis_url	,	service_element	)	:	\\n	    	raise	NotImpleme/;"	f
getServiceEndpoints	data/data_raw/valid.py	/^utf-8	def	getServiceEndpoints	(	self	,	yadis_url	,	service_element	)	:	\\n	    	raise	NotImpleme/;"	f
getServicesInfo	data/bpe_corpus_raw/valid.py	/^utf-8	def	getServicesInfo	(	self	)	:	\\n	    	res	=	self	.	serv	.	getServicesInfo	(	)	\\n	return/;"	f
getServicesInfo	data/data_raw/valid.py	/^utf-8	def	getServicesInfo	(	self	)	:	\\n	    	res	=	self	.	serv	.	getServicesInfo	(	)	\\n	return/;"	f
getSlantAngle	data/bpe_corpus_raw/train.py	/^utf-8	def	getSlantAngle	(	font	,	returnDegrees	=	False	)	:	\\n	    	if	'I'	in	font	:	\\n	       /;"	f
getSlantAngle	data/data_raw/train.py	/^utf-8	def	getSlantAngle	(	font	,	returnDegrees	=	False	)	:	\\n	    	if	'I'	in	font	:	\\n	       /;"	f
getSnappedWidget	data/bpe_corpus_raw/valid.py	/^utf-8	def	getSnappedWidget	(	self	)	:	\\n	    	if	self	.	row	>=	0	and	self	.	col	>=	0	:	\\n	    /;"	f
getSnappedWidget	data/data_raw/valid.py	/^utf-8	def	getSnappedWidget	(	self	)	:	\\n	    	if	self	.	row	>=	0	and	self	.	col	>=	0	:	\\n	    /;"	f
getStaticCachedPath	data/bpe_corpus_raw/train.py	/^utf-8	def	getStaticCachedPath	(	self	,	url	)	:	\\n	    	m	=	hashlib	.	md5	(	)	\\n	m	.	update	(	u/;"	f
getStaticCachedPath	data/data_raw/train.py	/^utf-8	def	getStaticCachedPath	(	self	,	url	)	:	\\n	    	m	=	hashlib	.	md5	(	)	\\n	m	.	update	(	u/;"	f
getSystemConfiguration	data/bpe_corpus_raw/valid.py	/^utf-8	def	getSystemConfiguration	(	self	,	login	)	:	\\n	    	self	.	send_getSystemConfiguration	/;"	f
getSystemConfiguration	data/data_raw/valid.py	/^utf-8	def	getSystemConfiguration	(	self	,	login	)	:	\\n	    	self	.	send_getSystemConfiguration	/;"	f
getTagList	data/bpe_corpus_raw/valid.py	/^utf-8	def	getTagList	(	self	,	number	,	mbdiscid	)	:	\\n	    	trackArtist	=	'Unknown Artist'	\\n	/;"	f
getTagList	data/data_raw/valid.py	/^utf-8	def	getTagList	(	self	,	number	,	mbdiscid	)	:	\\n	    	trackArtist	=	'Unknown Artist'	\\n	/;"	f
getTaggedValue	data/bpe_corpus_raw/valid.py	/^utf-8	def	getTaggedValue	(	tag	)	:	\\n	$/;"	f
getTaggedValue	data/data_raw/valid.py	/^utf-8	def	getTaggedValue	(	tag	)	:	\\n	$/;"	f
getTeam	data/bpe_corpus_raw/valid.py	/^utf-8	def	getTeam	(	self	,	team	)	:	\\n	    	team	=	str	(	team	)	.	lower	(	)	\\n	if	team	==	'fre/;"	f
getTeam	data/data_raw/valid.py	/^utf-8	def	getTeam	(	self	,	team	)	:	\\n	    	team	=	str	(	team	)	.	lower	(	)	\\n	if	team	==	'fre/;"	f
getTiers	data/bpe_corpus_raw/valid.py	/^utf-8	def	getTiers	(	self	,	withStorage	=	False	,	tier	=	None	)	:	\\n	    	sites	=	sorted	(	self/;"	f
getTiers	data/data_raw/valid.py	/^utf-8	def	getTiers	(	self	,	withStorage	=	False	,	tier	=	None	)	:	\\n	    	sites	=	sorted	(	self/;"	f
getTokenIndex	data/bpe_corpus_raw/train.py	/^utf-8	def	getTokenIndex	(	self	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
getTokenIndex	data/data_raw/train.py	/^utf-8	def	getTokenIndex	(	self	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
getTokenSource	data/bpe_corpus_raw/test.py	/^utf-8	def	getTokenSource	(	self	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
getTokenSource	data/data_raw/test.py	/^utf-8	def	getTokenSource	(	self	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
getUserEnv	data/bpe_corpus_raw/valid.py	/^utf-8	def	getUserEnv	(	)	:	\\n	    	if	_gUserEnvCache	is	None	:	\\n	        	raise	ServerExcepti/;"	f
getUserEnv	data/data_raw/valid.py	/^utf-8	def	getUserEnv	(	)	:	\\n	    	if	_gUserEnvCache	is	None	:	\\n	        	raise	ServerExcepti/;"	f
getVulkanDeviceExtensionsRequired	data/bpe_corpus_raw/train.py	/^utf-8	def	getVulkanDeviceExtensionsRequired	(	self	,	pchValue	,	unBufferSize	)	:	\\n	    	fn	=	s/;"	f
getVulkanDeviceExtensionsRequired	data/data_raw/train.py	/^utf-8	def	getVulkanDeviceExtensionsRequired	(	self	,	pchValue	,	unBufferSize	)	:	\\n	    	fn	=	s/;"	f
getWeatherTestSuite	data/bpe_corpus_raw/valid.py	/^utf-8	def	getWeatherTestSuite	(	)	:	\\n	    	importWMODataTests	=	[	'test_import_wmo_station_dat/;"	f
getWeatherTestSuite	data/data_raw/valid.py	/^utf-8	def	getWeatherTestSuite	(	)	:	\\n	    	importWMODataTests	=	[	'test_import_wmo_station_dat/;"	f
getWindowAnalyzeFileGivenText	data/bpe_corpus_raw/train.py	/^utf-8	def	getWindowAnalyzeFileGivenText	(	fileName	,	gcodeText	)	:	\\n	    	skein	=	CommentSkein/;"	f
getWindowAnalyzeFileGivenText	data/data_raw/train.py	/^utf-8	def	getWindowAnalyzeFileGivenText	(	fileName	,	gcodeText	)	:	\\n	    	skein	=	CommentSkein/;"	f
get_Kff_and_Ff	data/bpe_corpus_raw/train.py	/^utf-8	def	get_Kff_and_Ff	(	self	,	J	,	ecc	,	triangles	,	Uc	)	:	\\n	    	ntri	=	np	.	size	(	ecc	,/;"	f
get_Kff_and_Ff	data/data_raw/train.py	/^utf-8	def	get_Kff_and_Ff	(	self	,	J	,	ecc	,	triangles	,	Uc	)	:	\\n	    	ntri	=	np	.	size	(	ecc	,/;"	f
get_abi_tag	data/bpe_corpus_raw/train.py	/^utf-8	def	get_abi_tag	(	)	:	\\n	    	soabi	=	get_config_var	(	'SOABI'	)	\\n	impl	=	get_abbr_impl/;"	f
get_abi_tag	data/data_raw/train.py	/^utf-8	def	get_abi_tag	(	)	:	\\n	    	soabi	=	get_config_var	(	'SOABI'	)	\\n	impl	=	get_abbr_impl/;"	f
get_added_logs	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_added_logs	(	self	)	:	\\n	    	with	open	(	self	.	path	,	'r'	)	as	log_file	:	\\n	 /;"	f
get_added_logs	data/data_raw/valid.py	/^utf-8	def	get_added_logs	(	self	)	:	\\n	    	with	open	(	self	.	path	,	'r'	)	as	log_file	:	\\n	 /;"	f
get_administrative_units	data/bpe_corpus_raw/train.py	/^utf-8	def	get_administrative_units	(	self	,	admin_id	=	None	,	group_id	=	None	,	\\n	integration_/;"	f
get_administrative_units	data/data_raw/train.py	/^utf-8	def	get_administrative_units	(	self	,	admin_id	=	None	,	group_id	=	None	,	\\n	integration_/;"	f
get_alias	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	get_alias	(	cls	)	:	\\n	    	return	'Cisco Credential'	\\n		$/;"	f
get_alias	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	get_alias	(	cls	)	:	\\n	    	return	'Cisco Credential'	\\n		$/;"	f
get_all	data/bpe_corpus_raw/test.py	/^utf-8	def	get_all	(	self	)	:	\\n	    	for	name	,	values	in	self	.	_as_list	.	items	(	)	:	\\n	   /;"	f
get_all	data/bpe_corpus_raw/train.py	/^utf-8	def	test_metamodel_provider_advanced_test3_inheritance2	(	)	:	\\n	    	this_folder	=	dirna/;"	f	function:test_metamodel_provider_advanced_test3_inheritance2.get_meta_model	file:
get_all	data/data_raw/test.py	/^utf-8	def	get_all	(	self	)	:	\\n	    	for	name	,	values	in	self	.	_as_list	.	items	(	)	:	\\n	   /;"	f
get_all	data/data_raw/train.py	/^utf-8	def	test_metamodel_provider_advanced_test3_inheritance2	(	)	:	\\n	    	this_folder	=	dirna/;"	f	function:test_metamodel_provider_advanced_test3_inheritance2.get_meta_model	file:
get_all_hits	data/bpe_corpus_raw/train.py	/^utf-8	def	get_all_hits	(	self	,	query	)	:	\\n	    	page	=	0	\\n	num_pages_needed	=	0	\\n	while	p/;"	f
get_all_hits	data/data_raw/train.py	/^utf-8	def	get_all_hits	(	self	,	query	)	:	\\n	    	page	=	0	\\n	num_pages_needed	=	0	\\n	while	p/;"	f
get_all_services	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_all_services	(	self	,	view	=	None	)	:	\\n	    	return	services	.	get_all_services	/;"	f
get_all_services	data/data_raw/valid.py	/^utf-8	def	get_all_services	(	self	,	view	=	None	)	:	\\n	    	return	services	.	get_all_services	/;"	f
get_api_resources_with_http_info	data/bpe_corpus_raw/train.py	/^utf-8	def	get_api_resources_with_http_info	(	self	,	**	kwargs	)	:	\\n	    	all_params	=	[	]	\\n	/;"	f
get_api_resources_with_http_info	data/data_raw/train.py	/^utf-8	def	get_api_resources_with_http_info	(	self	,	**	kwargs	)	:	\\n	    	all_params	=	[	]	\\n	/;"	f
get_app	data/bpe_corpus_raw/train.py	/^utf-8	def	get_app	(	raise_exception	=	False	,	return_none	=	False	)	:	\\n	    	try	:	\\n	       /;"	f
get_app	data/data_raw/train.py	/^utf-8	def	get_app	(	raise_exception	=	False	,	return_none	=	False	)	:	\\n	    	try	:	\\n	       /;"	f
get_app_iter	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_app_iter	(	self	,	environ	)	:	\\n	    	status	=	self	.	status_code	\\n	if	environ	/;"	f
get_app_iter	data/data_raw/valid.py	/^utf-8	def	get_app_iter	(	self	,	environ	)	:	\\n	    	status	=	self	.	status_code	\\n	if	environ	/;"	f
get_arch_name	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_arch_name	(	self	)	:	\\n	    	try	:	\\n	        	self	.	arch_name	\\n		except	Attr/;"	f
get_arch_name	data/data_raw/valid.py	/^utf-8	def	get_arch_name	(	self	)	:	\\n	    	try	:	\\n	        	self	.	arch_name	\\n		except	Attr/;"	f
get_args_keys	data/bpe_corpus_raw/train.py	/^utf-8	def	get_args_keys	(	self	)	:	\\n	    	return	{	'target_id'	:	'Dom element target to replac/;"	f
get_args_keys	data/data_raw/train.py	/^utf-8	def	get_args_keys	(	self	)	:	\\n	    	return	{	'target_id'	:	'Dom element target to replac/;"	f
get_argument_from_call	data/bpe_corpus_raw/train.py	/^utf-8	def	get_argument_from_call	(	call_node	:	astroid	.	Call	,	position	:	int	=	None	,	\\n	keyw/;"	f
get_argument_from_call	data/data_raw/train.py	/^utf-8	def	get_argument_from_call	(	call_node	:	astroid	.	Call	,	position	:	int	=	None	,	\\n	keyw/;"	f
get_artist_count	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_artist_count	(	bigquery_connection	,	musicbrainz_id	,	time_interval	=	None	)	:	\\n/;"	f
get_artist_count	data/data_raw/valid.py	/^utf-8	def	get_artist_count	(	bigquery_connection	,	musicbrainz_id	,	time_interval	=	None	)	:	\\n/;"	f
get_assignments_for_hit	data/bpe_corpus_raw/train.py	/^utf-8	def	get_assignments_for_hit	(	self	,	hit_id	)	:	\\n	    	client	=	mturk_utils	.	get_mturk_/;"	f
get_assignments_for_hit	data/data_raw/train.py	/^utf-8	def	get_assignments_for_hit	(	self	,	hit_id	)	:	\\n	    	client	=	mturk_utils	.	get_mturk_/;"	f
get_associations	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_associations	(	self	,	qos_specs	)	:	\\n	    	return	self	.	_list	(	'\/qos-specs\/%/;"	f
get_associations	data/data_raw/valid.py	/^utf-8	def	get_associations	(	self	,	qos_specs	)	:	\\n	    	return	self	.	_list	(	'\/qos-specs\/%/;"	f
get_ast	data/bpe_corpus_raw/train.py	/^utf-8	def	get_ast	(	self	)	:	\\n	    	return	self	.	syntax_tree	\\n		$/;"	f
get_ast	data/data_raw/train.py	/^utf-8	def	get_ast	(	self	)	:	\\n	    	return	self	.	syntax_tree	\\n		$/;"	f
get_async_test_timeout	data/bpe_corpus_raw/train.py	/^utf-8	def	get_async_test_timeout	(	)	:	\\n	    	try	:	\\n	        	return	float	(	os	.	environ	./;"	f
get_async_test_timeout	data/data_raw/train.py	/^utf-8	def	get_async_test_timeout	(	)	:	\\n	    	try	:	\\n	        	return	float	(	os	.	environ	./;"	f
get_attachments	data/bpe_corpus_raw/train.py	/^utf-8	def	get_attachments	(	self	)	:	\\n	    	return	self	.	attachments	\\n		$/;"	f
get_attachments	data/data_raw/train.py	/^utf-8	def	get_attachments	(	self	)	:	\\n	    	return	self	.	attachments	\\n		$/;"	f
get_availability	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_availability	(	self	)	:	\\n	    	if	not	self	.	lt_status	:	\\n	        	return	0	\\/;"	f
get_availability	data/data_raw/valid.py	/^utf-8	def	get_availability	(	self	)	:	\\n	    	if	not	self	.	lt_status	:	\\n	        	return	0	\\/;"	f
get_available_name	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_available_name	(	self	,	name	)	:	\\n	    	return	name	\\n		$/;"	f
get_available_name	data/data_raw/valid.py	/^utf-8	def	get_available_name	(	self	,	name	)	:	\\n	    	return	name	\\n		$/;"	f
get_avg_fst_pair	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_avg_fst_pair	(	self	)	:	\\n	    	return	self	.	_controller	.	calc_fst_pair	(	self	/;"	f
get_avg_fst_pair	data/data_raw/valid.py	/^utf-8	def	get_avg_fst_pair	(	self	)	:	\\n	    	return	self	.	_controller	.	calc_fst_pair	(	self	/;"	f
get_axis	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_axis	(	self	,	attr_name	)	:	\\n	    	if	(	attr_name	,	self	.	orientation	)	in	[	(	/;"	f
get_axis	data/data_raw/valid.py	/^utf-8	def	get_axis	(	self	,	attr_name	)	:	\\n	    	if	(	attr_name	,	self	.	orientation	)	in	[	(	/;"	f
get_beta_contents	data/bpe_corpus_raw/train.py	/^utf-8	def	get_beta_contents	(	self	,	_type	=	None	)	:	\\n	    	return	self	.	get_user_contents_q/;"	f
get_beta_contents	data/data_raw/train.py	/^utf-8	def	get_beta_contents	(	self	,	_type	=	None	)	:	\\n	    	return	self	.	get_user_contents_q/;"	f
get_bindable_actions_by_name	data/bpe_corpus_raw/train.py	/^utf-8	def	get_bindable_actions_by_name	(	self	)	:	\\n	    	actions	=	[	str	(	x	)	for	x	in	self	./;"	f
get_bindable_actions_by_name	data/data_raw/train.py	/^utf-8	def	get_bindable_actions_by_name	(	self	)	:	\\n	    	actions	=	[	str	(	x	)	for	x	in	self	./;"	f
get_bits	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_bits	(	self	)	:	\\n	    	return	0	\\n		$/;"	f
get_bits	data/data_raw/valid.py	/^utf-8	def	get_bits	(	self	)	:	\\n	    	return	0	\\n		$/;"	f
get_block_symbol_data	data/bpe_corpus_raw/train.py	/^utf-8	def	get_block_symbol_data	(	editor	,	block	)	:	\\n	\\n	    	def	list_symbols	(	editor	,	bl/;"	f
get_block_symbol_data	data/data_raw/train.py	/^utf-8	def	get_block_symbol_data	(	editor	,	block	)	:	\\n	\\n	    	def	list_symbols	(	editor	,	bl/;"	f
get_box	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_box	(	self	,	box_id	)	:	\\n	    	box_ids_to_path	=	self	.	_compute_box_ids	(	)	\\n/;"	f
get_box	data/data_raw/valid.py	/^utf-8	def	get_box	(	self	,	box_id	)	:	\\n	    	box_ids_to_path	=	self	.	_compute_box_ids	(	)	\\n/;"	f
get_build_platform	data/bpe_corpus_raw/train.py	/^utf-8	def	get_build_platform	(	)	:	\\n	    	try	:	\\n	        	from	sysconfig	import	get_platfor/;"	f
get_build_platform	data/data_raw/train.py	/^utf-8	def	get_build_platform	(	)	:	\\n	    	try	:	\\n	        	from	sysconfig	import	get_platfor/;"	f
get_by_name	data/bpe_corpus_raw/valid.py	/^utf-8	@	base	.	remotable_classmethod	\\n	def	get_by_name	(	cls	,	context	,	name	)	:	\\n	    	db_/;"	f
get_by_name	data/data_raw/valid.py	/^utf-8	@	base	.	remotable_classmethod	\\n	def	get_by_name	(	cls	,	context	,	name	)	:	\\n	    	db_/;"	f
get_by_user	data/bpe_corpus_raw/test.py	/^utf-8	@	classmethod	\\n	def	get_by_user	(	cls	,	user	)	:	\\n	    	return	user	.	current_game	\\n/;"	f
get_by_user	data/data_raw/test.py	/^utf-8	@	classmethod	\\n	def	get_by_user	(	cls	,	user	)	:	\\n	    	return	user	.	current_game	\\n/;"	f
get_bytes	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_bytes	(	self	,	s	)	:	\\n	    	return	struct	.	unpack	(	'%sB'	%	len	(	s	)	,	s	)	\\n/;"	f
get_bytes	data/data_raw/valid.py	/^utf-8	def	get_bytes	(	self	,	s	)	:	\\n	    	return	struct	.	unpack	(	'%sB'	%	len	(	s	)	,	s	)	\\n/;"	f
get_cache	data/bpe_corpus_raw/train.py	/^utf-8	def	get_cache	(	key	,	default	=	None	)	:	\\n	    	struct	=	_channel_repository_cache	.	get/;"	f
get_cache	data/data_raw/train.py	/^utf-8	def	get_cache	(	key	,	default	=	None	)	:	\\n	    	struct	=	_channel_repository_cache	.	get/;"	f
get_cache_base	data/bpe_corpus_raw/train.py	/^utf-8	def	get_cache_base	(	suffix	=	None	)	:	\\n	    	if	suffix	is	None	:	\\n	        	suffix	=	/;"	f
get_cache_base	data/data_raw/train.py	/^utf-8	def	get_cache_base	(	suffix	=	None	)	:	\\n	    	if	suffix	is	None	:	\\n	        	suffix	=	/;"	f
get_call_signature	data/bpe_corpus_raw/train.py	/^utf-8	def	get_call_signature	(	self	,	width	=	72	,	func_name	=	None	)	:	\\n	    	func_name	=	fun/;"	f
get_call_signature	data/data_raw/train.py	/^utf-8	def	get_call_signature	(	self	,	width	=	72	,	func_name	=	None	)	:	\\n	    	func_name	=	fun/;"	f
get_capabilities	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_capabilities	(	provider	,	force	=	False	)	:	\\n	    	if	not	force	and	len	(	provid/;"	f
get_capabilities	data/data_raw/valid.py	/^utf-8	def	get_capabilities	(	provider	,	force	=	False	)	:	\\n	    	if	not	force	and	len	(	provid/;"	f
get_category_tree	data/bpe_corpus_raw/train.py	/^utf-8	def	get_category_tree	(	self	)	:	\\n	    	from	lfs	.	catalog	.	models	import	Category	\\n	/;"	f
get_category_tree	data/data_raw/train.py	/^utf-8	def	get_category_tree	(	self	)	:	\\n	    	from	lfs	.	catalog	.	models	import	Category	\\n	/;"	f
get_cfg_opts	data/bpe_corpus_raw/train.py	/^utf-8	@	classmethod	\\n	def	get_cfg_opts	(	cls	)	:	\\n	    	return	[	]	\\n		$/;"	f
get_cfg_opts	data/data_raw/train.py	/^utf-8	@	classmethod	\\n	def	get_cfg_opts	(	cls	)	:	\\n	    	return	[	]	\\n		$/;"	f
get_channel_info	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_channel_info	(	bundle_name	,	channel	=	'stable'	)	:	\\n	    	query	=	path	.	join	(/;"	f
get_channel_info	data/data_raw/valid.py	/^utf-8	def	get_channel_info	(	bundle_name	,	channel	=	'stable'	)	:	\\n	    	query	=	path	.	join	(/;"	f
get_characteristic_subpattern	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_characteristic_subpattern	(	subpatterns	)	:	\\n	    	if	not	isinstance	(	subpatter/;"	f
get_characteristic_subpattern	data/data_raw/valid.py	/^utf-8	def	get_characteristic_subpattern	(	subpatterns	)	:	\\n	    	if	not	isinstance	(	subpatter/;"	f
get_charset	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_charset	(	self	)	:	\\n	    	return	self	.	_charset	\\n		$/;"	f
get_charset	data/data_raw/valid.py	/^utf-8	def	get_charset	(	self	)	:	\\n	    	return	self	.	_charset	\\n		$/;"	f
get_chatlist	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_chatlist	(	chatfile	)	:	\\n	    	if	not	chatfile	:	\\n	        	return	set	(	)	\\n/;"	f
get_chatlist	data/data_raw/valid.py	/^utf-8	def	get_chatlist	(	chatfile	)	:	\\n	    	if	not	chatfile	:	\\n	        	return	set	(	)	\\n/;"	f
get_checks	data/bpe_corpus_raw/train.py	/^utf-8	def	get_checks	(	)	:	\\n	    	manager	=	Manager	(	)	\\n	add	=	manager	.	add	\\n	JOY_DEVICE/;"	f
get_checks	data/data_raw/train.py	/^utf-8	def	get_checks	(	)	:	\\n	    	manager	=	Manager	(	)	\\n	add	=	manager	.	add	\\n	JOY_DEVICE/;"	f
get_children	data/bpe_corpus_raw/train.py	/^utf-8	def	get_children	(	self	)	:	\\n	    	children	=	[	self	.	patch	]	\\n	children	.	extend	(	s/;"	f
get_children	data/data_raw/train.py	/^utf-8	def	get_children	(	self	)	:	\\n	    	children	=	[	self	.	patch	]	\\n	children	.	extend	(	s/;"	f
get_children_from_path	data/bpe_corpus_raw/train.py	/^utf-8	@	staticmethod	\\n	def	get_children_from_path	(	node	,	*	path	)	:	\\n	    	cur	=	node	\\n	/;"	f
get_children_from_path	data/data_raw/train.py	/^utf-8	@	staticmethod	\\n	def	get_children_from_path	(	node	,	*	path	)	:	\\n	    	cur	=	node	\\n	/;"	f
get_chunk	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_chunk	(	samples	,	labels	,	chunk_size	)	:	\\n	    	if	len	(	samples	)	!=	len	(	lab/;"	f
get_chunk	data/data_raw/valid.py	/^utf-8	def	get_chunk	(	samples	,	labels	,	chunk_size	)	:	\\n	    	if	len	(	samples	)	!=	len	(	lab/;"	f
get_class_histogram	data/bpe_corpus_raw/test.py	/^utf-8	def	get_class_histogram	(	self	)	:	\\n	    	histogram	=	[	Histogram	(	h	)	for	h	in	self	.	/;"	f
get_class_histogram	data/data_raw/test.py	/^utf-8	def	get_class_histogram	(	self	)	:	\\n	    	histogram	=	[	Histogram	(	h	)	for	h	in	self	.	/;"	f
get_client	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_client	(	self	,	**	filters	)	:	\\n	    	return	models	.	Client	.	objects	.	get	(	*/;"	f
get_client	data/data_raw/valid.py	/^utf-8	def	get_client	(	self	,	**	filters	)	:	\\n	    	return	models	.	Client	.	objects	.	get	(	*/;"	f
get_closest_epoch	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_closest_epoch	(	self	,	dt	)	:	\\n	    	dt	=	dt	.	replace	(	tzinfo	=	None	)	\\n	bef/;"	f
get_closest_epoch	data/data_raw/valid.py	/^utf-8	def	get_closest_epoch	(	self	,	dt	)	:	\\n	    	dt	=	dt	.	replace	(	tzinfo	=	None	)	\\n	bef/;"	f
get_cmdclass	data/bpe_corpus_raw/train.py	/^utf-8	def	get_cmdclass	(	)	:	\\n	    	if	'versioneer'	in	sys	.	modules	:	\\n	        	del	sys	.	/;"	f
get_cmdclass	data/data_raw/train.py	/^utf-8	def	get_cmdclass	(	)	:	\\n	    	if	'versioneer'	in	sys	.	modules	:	\\n	        	del	sys	.	/;"	f
get_color	data/bpe_corpus_raw/train.py	/^utf-8	def	get_color	(	self	,	word	)	:	\\n	    	stripped	=	word	.	strip	(	)	\\n	if	stripped	in	se/;"	f
get_color	data/data_raw/train.py	/^utf-8	def	get_color	(	self	,	word	)	:	\\n	    	stripped	=	word	.	strip	(	)	\\n	if	stripped	in	se/;"	f
get_component_references	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_component_references	(	self	)	:	\\n	    	for	r	in	self	.	dependencies	:	\\n	      /;"	f
get_component_references	data/data_raw/valid.py	/^utf-8	def	get_component_references	(	self	)	:	\\n	    	for	r	in	self	.	dependencies	:	\\n	      /;"	f
get_confidence	data/bpe_corpus_raw/train.py	/^utf-8	def	get_confidence	(	self	)	:	\\n	    	if	self	.	_mTotalChars	<=	0	or	self	.	_mFreqChars	</;"	f
get_confidence	data/data_raw/train.py	/^utf-8	def	get_confidence	(	self	)	:	\\n	    	if	self	.	_mTotalChars	<=	0	or	self	.	_mFreqChars	</;"	f
get_config	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_config	(	self	)	:	\\n	    	config	=	super	(	LinearAnnealedPolicy	,	self	)	.	get_co/;"	f
get_config	data/data_raw/valid.py	/^utf-8	def	get_config	(	self	)	:	\\n	    	config	=	super	(	LinearAnnealedPolicy	,	self	)	.	get_co/;"	f
get_config_generator_logger	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_config_generator_logger	(	)	:	\\n	    	handler	=	logging	.	StreamHandler	(	)	\\n	h/;"	f
get_config_generator_logger	data/data_raw/valid.py	/^utf-8	def	get_config_generator_logger	(	)	:	\\n	    	handler	=	logging	.	StreamHandler	(	)	\\n	h/;"	f
get_config_sequence	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_config_sequence	(	)	:	\\n	    	from	easy_node	.	easy_node	import	EasyNode	\\n	if	n/;"	f
get_config_sequence	data/data_raw/valid.py	/^utf-8	def	get_config_sequence	(	)	:	\\n	    	from	easy_node	.	easy_node	import	EasyNode	\\n	if	n/;"	f
get_connect_duration	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_connect_duration	(	self	)	:	\\n	    	if	self	.	_start_connect	is	None	:	\\n	      /;"	f
get_connect_duration	data/data_raw/valid.py	/^utf-8	def	get_connect_duration	(	self	)	:	\\n	    	if	self	.	_start_connect	is	None	:	\\n	      /;"	f
get_consensus_hashes	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_consensus_hashes	(	block_heights	,	hostport	=	None	,	proxy	=	None	)	:	\\n	    	ass/;"	f
get_consensus_hashes	data/data_raw/valid.py	/^utf-8	def	get_consensus_hashes	(	block_heights	,	hostport	=	None	,	proxy	=	None	)	:	\\n	    	ass/;"	f
get_consistent_unit_set	data/bpe_corpus_raw/train.py	/^utf-8	def	get_consistent_unit_set	(	length	=	None	,	time	=	None	,	mass	=	None	,	temperature	=	No/;"	f
get_consistent_unit_set	data/data_raw/train.py	/^utf-8	def	get_consistent_unit_set	(	length	=	None	,	time	=	None	,	mass	=	None	,	temperature	=	No/;"	f
get_constraint_list	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_constraint_list	(	self	)	:	\\n	    	constraints	=	[	]	\\n	for	i	in	range	(	self	.	/;"	f
get_constraint_list	data/data_raw/valid.py	/^utf-8	def	get_constraint_list	(	self	)	:	\\n	    	constraints	=	[	]	\\n	for	i	in	range	(	self	.	/;"	f
get_contact_period	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_contact_period	(	self	,	fqdn	)	:	\\n	    	try	:	\\n	        	return	self	.	_contac/;"	f
get_contact_period	data/data_raw/valid.py	/^utf-8	def	get_contact_period	(	self	,	fqdn	)	:	\\n	    	try	:	\\n	        	return	self	.	_contac/;"	f
get_content_index	data/bpe_corpus_raw/train.py	/^utf-8	def	get_content_index	(	haystack	,	needle	)	:	\\n	    	pos	=	haystack	.	find	(	needle	)	\\/;"	f
get_content_index	data/data_raw/train.py	/^utf-8	def	get_content_index	(	haystack	,	needle	)	:	\\n	    	pos	=	haystack	.	find	(	needle	)	\\/;"	f
get_content_length	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_content_length	(	environ	)	:	\\n	    	content_length	=	environ	.	get	(	'CONTENT_LE/;"	f
get_content_length	data/data_raw/valid.py	/^utf-8	def	get_content_length	(	environ	)	:	\\n	    	content_length	=	environ	.	get	(	'CONTENT_LE/;"	f
get_context	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_context	(	self	)	:	\\n	    	handle	=	drvapi	.	cu_context	(	0	)	\\n	driver	.	cuCtxG/;"	f
get_context	data/data_raw/valid.py	/^utf-8	def	get_context	(	self	)	:	\\n	    	handle	=	drvapi	.	cu_context	(	0	)	\\n	driver	.	cuCtxG/;"	f
get_conversion	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_conversion	(	self	,	pred_labels	,	cat	)	:	\\n	    	regressors	=	{	}	\\n	for	j	in	r/;"	f
get_conversion	data/data_raw/valid.py	/^utf-8	def	get_conversion	(	self	,	pred_labels	,	cat	)	:	\\n	    	regressors	=	{	}	\\n	for	j	in	r/;"	f
get_cookie_header	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_cookie_header	(	jar	,	request	)	:	\\n	    	r	=	MockRequest	(	request	)	\\n	jar	.	a/;"	f
get_cookie_header	data/data_raw/valid.py	/^utf-8	def	get_cookie_header	(	jar	,	request	)	:	\\n	    	r	=	MockRequest	(	request	)	\\n	jar	.	a/;"	f
get_count	data/bpe_corpus_raw/train.py	/^utf-8	def	get_count	(	prefix	=	''	)	:	\\n	    	keys	=	list	(	options	.	messages	.	keys	(	)	)	\\n/;"	f
get_count	data/data_raw/train.py	/^utf-8	def	get_count	(	prefix	=	''	)	:	\\n	    	keys	=	list	(	options	.	messages	.	keys	(	)	)	\\n/;"	f
get_curr_value	data/bpe_corpus_raw/train.py	/^utf-8	@	staticmethod	\\n	def	get_curr_value	(	invalue	,	val_type	)	:	\\n	    	if	invalue	is	None/;"	f
get_curr_value	data/data_raw/train.py	/^utf-8	@	staticmethod	\\n	def	get_curr_value	(	invalue	,	val_type	)	:	\\n	    	if	invalue	is	None/;"	f
get_current_institution_charges	data/bpe_corpus_raw/train.py	/^utf-8	def	get_current_institution_charges	(	self	,	moment	=	None	)	:	\\n	    	return	self	.	inst/;"	f
get_current_institution_charges	data/data_raw/train.py	/^utf-8	def	get_current_institution_charges	(	self	,	moment	=	None	)	:	\\n	    	return	self	.	inst/;"	f
get_current_year_prediction	data/bpe_corpus_raw/train.py	/^utf-8	def	get_current_year_prediction	(	)	:	\\n	    	query	=	"""SELECT \\n                    SU/;"	f
get_current_year_prediction	data/data_raw/train.py	/^utf-8	def	get_current_year_prediction	(	)	:	\\n	    	query	=	"""SELECT \\n                    SU/;"	f
get_curve	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_curve	(	self	)	:	\\n	    	return	OpenSSL	.	get_curve_by_id	(	self	.	curve	)	\\n		$/;"	f
get_curve	data/data_raw/valid.py	/^utf-8	def	get_curve	(	self	)	:	\\n	    	return	OpenSSL	.	get_curve_by_id	(	self	.	curve	)	\\n		$/;"	f
get_dB_ant_signal	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_dB_ant_signal	(	self	)	:	\\n	    	values	=	self	.	__get_field_values	(	self	.	RTF_/;"	f
get_dB_ant_signal	data/data_raw/valid.py	/^utf-8	def	get_dB_ant_signal	(	self	)	:	\\n	    	values	=	self	.	__get_field_values	(	self	.	RTF_/;"	f
get_data_dim	data/bpe_corpus_raw/train.py	/^utf-8	def	get_data_dim	(	self	,	key	)	:	\\n	    	if	key	==	'data'	:	\\n	        	return	self	.	n/;"	f
get_data_dim	data/data_raw/train.py	/^utf-8	def	get_data_dim	(	self	,	key	)	:	\\n	    	if	key	==	'data'	:	\\n	        	return	self	.	n/;"	f
get_datasource_name	data/bpe_corpus_raw/valid.py	/^utf-8	def	__do_test	(	self	,	rets	,	transfers	,	request_ixfr	,	zone_soa	=	begin_soa_rrset	)	:	\\/;"	m	class:__do_test.MyDataSourceClient
get_datasource_name	data/data_raw/valid.py	/^utf-8	def	__do_test	(	self	,	rets	,	transfers	,	request_ixfr	,	zone_soa	=	begin_soa_rrset	)	:	\\/;"	m	class:__do_test.MyDataSourceClient
get_date	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_date	(	)	:	\\n	    	return	datetime	.	datetime	.	now	(	)	.	strftime	(	'%B %d, %Y'	/;"	f
get_date	data/data_raw/valid.py	/^utf-8	def	get_date	(	)	:	\\n	    	return	datetime	.	datetime	.	now	(	)	.	strftime	(	'%B %d, %Y'	/;"	f
get_date_from_event_type	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_date_from_event_type	(	db	,	person	,	event_type	,	estimate	=	False	)	:	\\n	    	if/;"	f
get_date_from_event_type	data/data_raw/valid.py	/^utf-8	def	get_date_from_event_type	(	db	,	person	,	event_type	,	estimate	=	False	)	:	\\n	    	if/;"	f
get_dated_items	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_dated_items	(	self	)	:	\\n	    	qs	=	self	.	get_dated_queryset	(	ordering	=	'-%s'	/;"	f
get_dated_items	data/data_raw/valid.py	/^utf-8	def	get_dated_items	(	self	)	:	\\n	    	qs	=	self	.	get_dated_queryset	(	ordering	=	'-%s'	/;"	f
get_db_table_columns	data/bpe_corpus_raw/train.py	/^utf-8	def	get_db_table_columns	(	self	,	table	)	:	\\n	    	return	[	r	[	0	]	for	r	in	self	.	sql	/;"	f
get_db_table_columns	data/data_raw/train.py	/^utf-8	def	get_db_table_columns	(	self	,	table	)	:	\\n	    	return	[	r	[	0	]	for	r	in	self	.	sql	/;"	f
get_default	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_default	(	self	)	:	\\n	    	field_default	=	super	(	ForeignKey	,	self	)	.	get_defa/;"	f
get_default	data/data_raw/valid.py	/^utf-8	def	get_default	(	self	)	:	\\n	    	field_default	=	super	(	ForeignKey	,	self	)	.	get_defa/;"	f
get_default_arch	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_default_arch	(	env	)	:	\\n	    	arch	=	env	.	get	(	'MSVS_ARCH'	,	'x86'	)	\\n	msvs	/;"	f
get_default_arch	data/data_raw/valid.py	/^utf-8	def	get_default_arch	(	env	)	:	\\n	    	arch	=	env	.	get	(	'MSVS_ARCH'	,	'x86'	)	\\n	msvs	/;"	f
get_default_model_permissions	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_default_model_permissions	(	model	)	:	\\n	    	warnings	.	warn	(	\\n	'get_default_/;"	f
get_default_model_permissions	data/data_raw/valid.py	/^utf-8	def	get_default_model_permissions	(	model	)	:	\\n	    	warnings	.	warn	(	\\n	'get_default_/;"	f
get_default_rule_config	data/bpe_corpus_raw/train.py	/^utf-8	def	get_default_rule_config	(	self	)	:	\\n	    	config	=	{	}	\\n	config	.	update	(	{	'coll/;"	f
get_default_rule_config	data/data_raw/train.py	/^utf-8	def	get_default_rule_config	(	self	)	:	\\n	    	config	=	{	}	\\n	config	.	update	(	{	'coll/;"	f
get_delete_url	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_delete_url	(	comment	)	:	\\n	    	if	get_comment_app_name	(	)	!=	DEFAULT_COMMENTS_/;"	f
get_delete_url	data/data_raw/valid.py	/^utf-8	def	get_delete_url	(	comment	)	:	\\n	    	if	get_comment_app_name	(	)	!=	DEFAULT_COMMENTS_/;"	f
get_deps	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_deps	(	self	,	db	)	:	\\n	    	deps	=	set	(	)	\\n	for	dep	in	self	.	depends_on	:	\\/;"	f
get_deps	data/data_raw/valid.py	/^utf-8	def	get_deps	(	self	,	db	)	:	\\n	    	deps	=	set	(	)	\\n	for	dep	in	self	.	depends_on	:	\\/;"	f
get_deps_minimal	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_deps_minimal	(	exclude_ignored	=	True	,	**	kwargs	)	:	\\n	    	core_mods	=	[	'audi/;"	f
get_deps_minimal	data/data_raw/valid.py	/^utf-8	def	get_deps_minimal	(	exclude_ignored	=	True	,	**	kwargs	)	:	\\n	    	core_mods	=	[	'audi/;"	f
get_desired_state	data/bpe_corpus_raw/test.py	/^utf-8	def	get_desired_state	(	branch	:	str	,	remote_refs	:	Dict	[	str	,	str	]	,	\\n	deploy_group/;"	f
get_desired_state	data/data_raw/test.py	/^utf-8	def	get_desired_state	(	branch	:	str	,	remote_refs	:	Dict	[	str	,	str	]	,	\\n	deploy_group/;"	f
get_detector_from_pixel	data/bpe_corpus_raw/train.py	/^utf-8	def	get_detector_from_pixel	(	self	,	pixel_list	,	workspace	=	None	)	:	\\n	    	return	[	]/;"	f
get_detector_from_pixel	data/data_raw/train.py	/^utf-8	def	get_detector_from_pixel	(	self	,	pixel_list	,	workspace	=	None	)	:	\\n	    	return	[	]/;"	f
get_device_count	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_device_count	(	)	:	\\n	    	c_num	=	c_int_t	(	0	)	\\n	safe_call	(	backend	.	get	(	/;"	f
get_device_count	data/data_raw/valid.py	/^utf-8	def	get_device_count	(	)	:	\\n	    	c_num	=	c_int_t	(	0	)	\\n	safe_call	(	backend	.	get	(	/;"	f
get_device_name	data/bpe_corpus_raw/train.py	/^utf-8	def	get_device_name	(	self	,	device	)	:	\\n	    	if	not	self	.	last_results	:	\\n	        /;"	f
get_device_name	data/data_raw/train.py	/^utf-8	def	get_device_name	(	self	,	device	)	:	\\n	    	if	not	self	.	last_results	:	\\n	        /;"	f
get_dict	data/bpe_corpus_raw/train.py	/^utf-8	def	get_dict	(	self	,	domain	=	None	,	path	=	None	)	:	\\n	    	dictionary	=	{	}	\\n	for	co/;"	f
get_dict	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_dict	(	self	,	domain	=	None	,	path	=	None	)	:	\\n	    	dictionary	=	{	}	\\n	for	co/;"	f
get_dict	data/data_raw/train.py	/^utf-8	def	get_dict	(	self	,	domain	=	None	,	path	=	None	)	:	\\n	    	dictionary	=	{	}	\\n	for	co/;"	f
get_dict	data/data_raw/valid.py	/^utf-8	def	get_dict	(	self	,	domain	=	None	,	path	=	None	)	:	\\n	    	dictionary	=	{	}	\\n	for	co/;"	f
get_dir	data/bpe_corpus_raw/train.py	/^utf-8	def	get_dir	(	self	,	scope	,	class_	)	:	\\n	    	prop_name	=	'{scope}_{class_}_dir'	.	form/;"	f
get_dir	data/data_raw/train.py	/^utf-8	def	get_dir	(	self	,	scope	,	class_	)	:	\\n	    	prop_name	=	'{scope}_{class_}_dir'	.	form/;"	f
get_distance	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_distance	(	self	,	sq1	,	sq2	)	:	\\n	    	dx	=	min	(	abs	(	sq1	.	x	-	sq2	.	x	)	,	sq/;"	f
get_distance	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_distance	(	self	,	value	,	lookup_type	,	connection	)	:	\\n	    	return	connection	/;"	f
get_distance	data/data_raw/valid.py	/^utf-8	def	get_distance	(	self	,	sq1	,	sq2	)	:	\\n	    	dx	=	min	(	abs	(	sq1	.	x	-	sq2	.	x	)	,	sq/;"	f
get_distance	data/data_raw/valid.py	/^utf-8	def	get_distance	(	self	,	value	,	lookup_type	,	connection	)	:	\\n	    	return	connection	/;"	f
get_distro	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_distro	(	)	:	\\n	    	return	distro_instance	\\n		$/;"	f
get_distro	data/data_raw/valid.py	/^utf-8	def	get_distro	(	)	:	\\n	    	return	distro_instance	\\n		$/;"	f
get_division_scheme	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_division_scheme	(	self	,	obj	)	:	\\n	    	return	self	.	context	[	'course_discussi/;"	f
get_division_scheme	data/data_raw/valid.py	/^utf-8	def	get_division_scheme	(	self	,	obj	)	:	\\n	    	return	self	.	context	[	'course_discussi/;"	f
get_domains	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_domains	(	self	)	:	\\n	    	return	{	domain	.	name	for	domain	in	self	.	\\n	get_as/;"	f
get_domains	data/data_raw/valid.py	/^utf-8	def	get_domains	(	self	)	:	\\n	    	return	{	domain	.	name	for	domain	in	self	.	\\n	get_as/;"	f
get_download_url	data/bpe_corpus_raw/train.py	/^utf-8	def	get_download_url	(	self	,	filename	,	expiration	=	DEFAULT_EXPIRATION	)	:	\\n	    	retu/;"	f
get_download_url	data/data_raw/train.py	/^utf-8	def	get_download_url	(	self	,	filename	,	expiration	=	DEFAULT_EXPIRATION	)	:	\\n	    	retu/;"	f
get_dsmr_object_attr	data/bpe_corpus_raw/train.py	/^utf-8	def	get_dsmr_object_attr	(	self	,	attribute	)	:	\\n	    	if	self	.	_obis	not	in	self	.	tel/;"	f
get_dsmr_object_attr	data/data_raw/train.py	/^utf-8	def	get_dsmr_object_attr	(	self	,	attribute	)	:	\\n	    	if	self	.	_obis	not	in	self	.	tel/;"	f
get_elem	data_utils/count_filesize_by_ext.py	/^    get_elem = lambda key: (key, dict1[key], dict2[key])$/;"	f	function:merge_dicts_to_table	file:
get_entry	data/bpe_corpus_raw/test.py	/^utf-8	@	staticmethod	\\n	def	get_entry	(	data	,	key	,	sep	=	'.'	)	:	\\n	    	if	key	==	''	:	\\n	/;"	f
get_entry	data/bpe_corpus_raw/train.py	/^utf-8	@	staticmethod	\\n	def	get_entry	(	data	,	key	,	sep	=	'.'	)	:	\\n	    	if	key	==	''	:	\\n	/;"	f
get_entry	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	get_entry	(	data	,	key	,	sep	=	'.'	)	:	\\n	    	if	key	==	''	:	\\n	/;"	f
get_entry	data/data_raw/test.py	/^utf-8	@	staticmethod	\\n	def	get_entry	(	data	,	key	,	sep	=	'.'	)	:	\\n	    	if	key	==	''	:	\\n	/;"	f
get_entry	data/data_raw/train.py	/^utf-8	@	staticmethod	\\n	def	get_entry	(	data	,	key	,	sep	=	'.'	)	:	\\n	    	if	key	==	''	:	\\n	/;"	f
get_entry	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	get_entry	(	data	,	key	,	sep	=	'.'	)	:	\\n	    	if	key	==	''	:	\\n	/;"	f
get_entry_by_key	data/bpe_corpus_raw/valid.py	/^utf-8	@	abc	.	abstractmethod	\\n	def	get_entry_by_key	(	self	,	key	)	:	\\n	$/;"	f
get_entry_by_key	data/data_raw/valid.py	/^utf-8	@	abc	.	abstractmethod	\\n	def	get_entry_by_key	(	self	,	key	)	:	\\n	$/;"	f
get_entry_info	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_entry_info	(	self	,	group	,	name	)	:	\\n	    	return	self	.	get_entry_map	(	group	/;"	f
get_entry_info	data/data_raw/valid.py	/^utf-8	def	get_entry_info	(	self	,	group	,	name	)	:	\\n	    	return	self	.	get_entry_map	(	group	/;"	f
get_environ	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_environ	(	self	)	:	\\n	    	input_stream	=	self	.	input_stream	\\n	content_length	/;"	f
get_environ	data/data_raw/valid.py	/^utf-8	def	get_environ	(	self	)	:	\\n	    	input_stream	=	self	.	input_stream	\\n	content_length	/;"	f
get_environ_vars	data/bpe_corpus_raw/train.py	/^utf-8	def	get_environ_vars	(	self	)	:	\\n	    	for	key	,	val	in	os	.	environ	.	items	(	)	:	\\n	 /;"	f
get_environ_vars	data/data_raw/train.py	/^utf-8	def	get_environ_vars	(	self	)	:	\\n	    	for	key	,	val	in	os	.	environ	.	items	(	)	:	\\n	 /;"	f
get_error_info	data/bpe_corpus_raw/train.py	/^utf-8	def	get_error_info	(	lily_status	)	:	\\n	    	if	lily_status	>=	500	:	\\n	        	return	/;"	f
get_error_info	data/data_raw/train.py	/^utf-8	def	get_error_info	(	lily_status	)	:	\\n	    	if	lily_status	>=	500	:	\\n	        	return	/;"	f
get_event_type_details	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_event_type_details	(	self	,	event_type	,	service	,	requestslib_kwargs	=	None	)	:	\\/;"	f
get_event_type_details	data/data_raw/valid.py	/^utf-8	def	get_event_type_details	(	self	,	event_type	,	service	,	requestslib_kwargs	=	None	)	:	\\/;"	f
get_event_types	data/bpe_corpus_raw/valid.py	/^utf-8	@	abc	.	abstractmethod	\\n	def	get_event_types	(	self	)	:	\\n	$/;"	f
get_event_types	data/data_raw/valid.py	/^utf-8	@	abc	.	abstractmethod	\\n	def	get_event_types	(	self	)	:	\\n	$/;"	f
get_events	data/bpe_corpus_raw/train.py	/^utf-8	def	get_events	(	self	)	:	\\n	    	disallowed	=	[	ident	(	self	.	add_event	.	im_func	)	,	i/;"	f
get_events	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_events	(	self	,	from_	=	None	,	to	=	None	)	:	\\n	    	return	self	.	stores	[	0	]	./;"	f
get_events	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_events	(	self	,	path	)	:	\\n	    	events	=	[	]	\\n	for	s	,	d	in	zip	(	path	[	:	-	1/;"	f
get_events	data/data_raw/train.py	/^utf-8	def	get_events	(	self	)	:	\\n	    	disallowed	=	[	ident	(	self	.	add_event	.	im_func	)	,	i/;"	f
get_events	data/data_raw/valid.py	/^utf-8	def	get_events	(	self	,	from_	=	None	,	to	=	None	)	:	\\n	    	return	self	.	stores	[	0	]	./;"	f
get_events	data/data_raw/valid.py	/^utf-8	def	get_events	(	self	,	path	)	:	\\n	    	events	=	[	]	\\n	for	s	,	d	in	zip	(	path	[	:	-	1/;"	f
get_exception	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_exception	(	self	)	:	\\n	    	self	.	lock	.	acquire	(	)	\\n	try	:	\\n	        	e	=/;"	f
get_exception	data/data_raw/valid.py	/^utf-8	def	get_exception	(	self	)	:	\\n	    	self	.	lock	.	acquire	(	)	\\n	try	:	\\n	        	e	=/;"	f
get_experiment	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_experiment_fn	(	args	)	:	\\n	    	vocab_sizes	=	get_vocab_sizes	(	)	\\n	use_crosse/;"	f	function:get_experiment_fn	file:
get_experiment	data/data_raw/valid.py	/^utf-8	def	get_experiment_fn	(	args	)	:	\\n	    	vocab_sizes	=	get_vocab_sizes	(	)	\\n	use_crosse/;"	f	function:get_experiment_fn	file:
get_experiment_fn	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_experiment_fn	(	args	)	:	\\n	    	vocab_sizes	=	get_vocab_sizes	(	)	\\n	use_crosse/;"	f
get_experiment_fn	data/data_raw/valid.py	/^utf-8	def	get_experiment_fn	(	args	)	:	\\n	    	vocab_sizes	=	get_vocab_sizes	(	)	\\n	use_crosse/;"	f
get_expired	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_expired	(	)	:	\\n	    	q	=	DBSession	.	query	(	User	)	.	filter	(	User	.	email	!=	'/;"	f
get_expired	data/data_raw/valid.py	/^utf-8	def	get_expired	(	)	:	\\n	    	q	=	DBSession	.	query	(	User	)	.	filter	(	User	.	email	!=	'/;"	f
get_exported	data/bpe_corpus_raw/train.py	/^utf-8	def	get_exported	(	self	)	:	\\n	    	return	dict	(	(	k	,	self	.	vars	[	k	]	)	for	k	in	self/;"	f
get_exported	data/data_raw/train.py	/^utf-8	def	get_exported	(	self	)	:	\\n	    	return	dict	(	(	k	,	self	.	vars	[	k	]	)	for	k	in	self/;"	f
get_extension_processor	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_extension_processor	(	extension_request	)	:	\\n	    	processor_class	=	_available_/;"	f
get_extension_processor	data/data_raw/valid.py	/^utf-8	def	get_extension_processor	(	extension_request	)	:	\\n	    	processor_class	=	_available_/;"	f
get_extra_context	data/bpe_corpus_raw/train.py	/^utf-8	def	get_extra_context	(	self	,	request	)	:	\\n	    	info	=	app_model_label	(	self	.	model	/;"	f
get_extra_context	data/data_raw/train.py	/^utf-8	def	get_extra_context	(	self	,	request	)	:	\\n	    	info	=	app_model_label	(	self	.	model	/;"	f
get_family_bookmarks	data/bpe_corpus_raw/train.py	/^utf-8	def	get_family_bookmarks	(	self	)	:	\\n	    	return	self	.	family_bookmarks	\\n		$/;"	f
get_family_bookmarks	data/data_raw/train.py	/^utf-8	def	get_family_bookmarks	(	self	)	:	\\n	    	return	self	.	family_bookmarks	\\n		$/;"	f
get_field	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_field	(	self	,	name	)	:	\\n	    	return	self	.	_local_fields	.	get	(	name	,	None	)/;"	f
get_field	data/data_raw/valid.py	/^utf-8	def	get_field	(	self	,	name	)	:	\\n	    	return	self	.	_local_fields	.	get	(	name	,	None	)/;"	f
get_field_list	data/bpe_corpus_raw/train.py	/^utf-8	def	get_field_list	(	self	,	name	,	fallback	=	None	)	:	\\n	    	if	not	name	in	self	.	fiel/;"	f
get_field_list	data/data_raw/train.py	/^utf-8	def	get_field_list	(	self	,	name	,	fallback	=	None	)	:	\\n	    	if	not	name	in	self	.	fiel/;"	f
get_file	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_paths	(	self	)	:	\\n	\\n	    	def	get_file	(	path	)	:	\\n	        	if	os	.	path	./;"	f	function:_get_paths	file:
get_file	data/data_raw/valid.py	/^utf-8	def	_get_paths	(	self	)	:	\\n	\\n	    	def	get_file	(	path	)	:	\\n	        	if	os	.	path	./;"	f	function:_get_paths	file:
get_file_contents	data_utils/build_dataset.py	/^def get_file_contents(filename, rootdir):$/;"	f
get_file_lists	data_utils/count_filesize_by_ext.py	/^def get_file_lists(rootdir, pbar=None):$/;"	f
get_filenames	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_filenames	(	window	,	bids	)	:	\\n	    	return	{	v	.	buffer_id	(	)	:	(	v	.	file_nam/;"	f
get_filenames	data/data_raw/valid.py	/^utf-8	def	get_filenames	(	window	,	bids	)	:	\\n	    	return	{	v	.	buffer_id	(	)	:	(	v	.	file_nam/;"	f
get_files	data/bpe_corpus_raw/train.py	/^utf-8	def	get_files	(	config	)	:	\\n	    	files	=	[	]	\\n	exclude	=	[	'.*'	,	'\/templates'	]	\\n/;"	f
get_files	data/data_raw/train.py	/^utf-8	def	get_files	(	config	)	:	\\n	    	files	=	[	]	\\n	exclude	=	[	'.*'	,	'\/templates'	]	\\n/;"	f
get_filtered_names	data/bpe_corpus_raw/train.py	/^utf-8	def	get_filtered_names	(	all_names	)	:	\\n	    	filtered_names	=	set	(	)	\\n	for	name	in	a/;"	f
get_filtered_names	data/data_raw/train.py	/^utf-8	def	get_filtered_names	(	all_names	)	:	\\n	    	filtered_names	=	set	(	)	\\n	for	name	in	a/;"	f
get_filters	data/bpe_corpus_raw/train.py	/^utf-8	def	get_filters	(	self	)	:	\\n	    	if	self	.	column_filters	:	\\n	        	collection	=	[/;"	f
get_filters	data/data_raw/train.py	/^utf-8	def	get_filters	(	self	)	:	\\n	    	if	self	.	column_filters	:	\\n	        	collection	=	[/;"	f
get_flag	data/bpe_corpus_raw/train.py	/^utf-8	def	get_flag	(	var	,	fallback	,	expected	=	True	,	warn	=	True	)	:	\\n	    	val	=	get_confi/;"	f
get_flag	data/data_raw/train.py	/^utf-8	def	get_flag	(	var	,	fallback	,	expected	=	True	,	warn	=	True	)	:	\\n	    	val	=	get_confi/;"	f
get_fns_from_file	data_utils/build_dataset.py	/^def get_fns_from_file(filename, rootdir):$/;"	f
get_focus	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_focus	(	self	,	c	)	:	\\n	    	return	c	.	frame	.	top	.	focus_displayof	(	)	\\n		$/;"	f
get_focus	data/data_raw/valid.py	/^utf-8	def	get_focus	(	self	,	c	)	:	\\n	    	return	c	.	frame	.	top	.	focus_displayof	(	)	\\n		$/;"	f
get_following_comment_same_line	data/bpe_corpus_raw/train.py	/^utf-8	def	get_following_comment_same_line	(	node	)	:	\\n	    	try	:	\\n	        	if	node	.	type	/;"	f
get_following_comment_same_line	data/data_raw/train.py	/^utf-8	def	get_following_comment_same_line	(	node	)	:	\\n	    	try	:	\\n	        	if	node	.	type	/;"	f
get_forbidden_regs	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_forbidden_regs	(	self	)	:	\\n	    	regs	=	set	(	[	self	.	ir_arch	.	pc	,	self	.	ir_/;"	f
get_forbidden_regs	data/data_raw/valid.py	/^utf-8	def	get_forbidden_regs	(	self	)	:	\\n	    	regs	=	set	(	[	self	.	ir_arch	.	pc	,	self	.	ir_/;"	f
get_framer_status	data/bpe_corpus_raw/train.py	/^utf-8	def	get_framer_status	(	self	)	:	\\n	    	rb	=	self	.	regs	.	peek32	(	self	.	MGT_TRANSMITT/;"	f
get_framer_status	data/data_raw/train.py	/^utf-8	def	get_framer_status	(	self	)	:	\\n	    	rb	=	self	.	regs	.	peek32	(	self	.	MGT_TRANSMITT/;"	f
get_full_refs	data/bpe_corpus_raw/train.py	/^utf-8	def	get_full_refs	(	self	,	location	)	:	\\n	    	output	=	self	.	run_command	(	[	'show-ref/;"	f
get_full_refs	data/data_raw/train.py	/^utf-8	def	get_full_refs	(	self	,	location	)	:	\\n	    	output	=	self	.	run_command	(	[	'show-ref/;"	f
get_function_arguments	data/bpe_corpus_raw/test.py	/^utf-8	def	get_function_arguments	(	func	)	:	\\n	    	return	list	(	func	.	__code__	.	co_varnames/;"	f
get_function_arguments	data/data_raw/test.py	/^utf-8	def	get_function_arguments	(	func	)	:	\\n	    	return	list	(	func	.	__code__	.	co_varnames/;"	f
get_functions_fast	data/bpe_corpus_raw/train.py	/^utf-8	def	get_functions_fast	(	self	,	code	)	:	\\n	    	return	self	.	cache	.	get	(	code	,	[	]	)/;"	f
get_functions_fast	data/data_raw/train.py	/^utf-8	def	get_functions_fast	(	self	,	code	)	:	\\n	    	return	self	.	cache	.	get	(	code	,	[	]	)/;"	f
get_gcs_output	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_gcs_output	(	)	:	\\n	    	job_name	=	os	.	getenv	(	'JOB_NAME'	)	\\n	pull_number	=	/;"	f
get_gcs_output	data/data_raw/valid.py	/^utf-8	def	get_gcs_output	(	)	:	\\n	    	job_name	=	os	.	getenv	(	'JOB_NAME'	)	\\n	pull_number	=	/;"	f
get_geometry_type	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_geometry_type	(	self	,	table_name	,	geo_col	)	:	\\n	    	cursor	=	self	.	connectio/;"	f
get_geometry_type	data/data_raw/valid.py	/^utf-8	def	get_geometry_type	(	self	,	table_name	,	geo_col	)	:	\\n	    	cursor	=	self	.	connectio/;"	f
get_glyph_advances	data/bpe_corpus_raw/train.py	/^utf-8	def	get_glyph_advances	(	self	)	:	\\n	    	hm	=	self	.	get_horizontal_metrics	(	)	\\n	retu/;"	f
get_glyph_advances	data/data_raw/train.py	/^utf-8	def	get_glyph_advances	(	self	)	:	\\n	    	hm	=	self	.	get_horizontal_metrics	(	)	\\n	retu/;"	f
get_gpio_pin	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	get_gpio_pin	(	gpio_user_index	)	:	\\n	    	return	GPIO	.	get_gpio_/;"	f
get_gpio_pin	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	get_gpio_pin	(	gpio_user_index	)	:	\\n	    	return	GPIO	.	get_gpio_/;"	f
get_group_position	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	get_group_position	(	cls	,	group	,	relative_to	=	None	)	:	\\n	    	r/;"	f
get_group_position	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	get_group_position	(	cls	,	group	,	relative_to	=	None	)	:	\\n	    	r/;"	f
get_groupids	data/bpe_corpus_raw/train.py	/^utf-8	def	get_groupids	(	userid	)	:	\\n	$/;"	f
get_groupids	data/data_raw/train.py	/^utf-8	def	get_groupids	(	userid	)	:	\\n	$/;"	f
get_gst_bus	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_gst_bus	(	)	:	\\n	    	global	__bus	\\n	return	__bus	\\n		$/;"	f
get_gst_bus	data/data_raw/valid.py	/^utf-8	def	get_gst_bus	(	)	:	\\n	    	global	__bus	\\n	return	__bus	\\n		$/;"	f
get_gtk_bookmarks	data/bpe_corpus_raw/train.py	/^utf-8	def	get_gtk_bookmarks	(	)	:	\\n	    	if	os	.	name	==	'nt'	:	\\n	        	return	[	]	\\n		p/;"	f
get_gtk_bookmarks	data/data_raw/train.py	/^utf-8	def	get_gtk_bookmarks	(	)	:	\\n	    	if	os	.	name	==	'nt'	:	\\n	        	return	[	]	\\n		p/;"	f
get_hatch	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_hatch	(	self	)	:	\\n	    	return	self	.	_hatch	\\n		$/;"	f
get_hatch	data/data_raw/valid.py	/^utf-8	def	get_hatch	(	self	)	:	\\n	    	return	self	.	_hatch	\\n		$/;"	f
get_header	data/bpe_corpus_raw/train.py	/^utf-8	def	get_header	(	graphs	,	proto_fileformat	=	'rawproto'	,	default_ops	=	\\n	'NoOp:NoOp,_Re/;"	f
get_header	data/data_raw/train.py	/^utf-8	def	get_header	(	graphs	,	proto_fileformat	=	'rawproto'	,	default_ops	=	\\n	'NoOp:NoOp,_Re/;"	f
get_headers	data/bpe_corpus_raw/train.py	/^utf-8	def	get_headers	(	self	,	environ	)	:	\\n	    	return	[	(	'Content-Type'	,	'text\/html'	)	]/;"	f
get_headers	data/data_raw/train.py	/^utf-8	def	get_headers	(	self	,	environ	)	:	\\n	    	return	[	(	'Content-Type'	,	'text\/html'	)	]/;"	f
get_height	data/bpe_corpus_raw/train.py	/^utf-8	def	get_height	(	tensor_shape	)	:	\\n	    	tensor_shape	.	assert_has_rank	(	rank	=	4	)	\\n/;"	f
get_height	data/data_raw/train.py	/^utf-8	def	get_height	(	tensor_shape	)	:	\\n	    	tensor_shape	.	assert_has_rank	(	rank	=	4	)	\\n/;"	f
get_hop_freq	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_hop_freq	(	self	,	hop	)	:	\\n	    	start_freq	=	self	.	params	[	'start_freq'	]	*	1/;"	f
get_hop_freq	data/data_raw/valid.py	/^utf-8	def	get_hop_freq	(	self	,	hop	)	:	\\n	    	start_freq	=	self	.	params	[	'start_freq'	]	*	1/;"	f
get_html_report_content	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_html_report_content	(	self	,	module	)	:	\\n	    	filename	=	module	.	replace	(	'.'/;"	f
get_html_report_content	data/data_raw/valid.py	/^utf-8	def	get_html_report_content	(	self	,	module	)	:	\\n	    	filename	=	module	.	replace	(	'.'/;"	f
get_hyperparameters	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_hyperparameters	(	self	)	:	\\n	    	return	numpy	.	copy	(	self	.	_hyperparameters	/;"	f
get_hyperparameters	data/data_raw/valid.py	/^utf-8	def	get_hyperparameters	(	self	)	:	\\n	    	return	numpy	.	copy	(	self	.	_hyperparameters	/;"	f
get_id_name	data/bpe_corpus_raw/train.py	/^utf-8	def	_Net_get_id_name	(	func	,	field	)	:	\\n	\\n	    	@	property	\\n	def	get_id_name	(	self/;"	f	function:_Net_get_id_name	file:
get_id_name	data/data_raw/train.py	/^utf-8	def	_Net_get_id_name	(	func	,	field	)	:	\\n	\\n	    	@	property	\\n	def	get_id_name	(	self/;"	f	function:_Net_get_id_name	file:
get_image_file_path	data/bpe_corpus_raw/train.py	/^utf-8	def	get_image_file_path	(	instance	)	:	\\n	    	return	os	.	path	.	join	(	CONF	.	instances/;"	f
get_image_file_path	data/data_raw/train.py	/^utf-8	def	get_image_file_path	(	instance	)	:	\\n	    	return	os	.	path	.	join	(	CONF	.	instances/;"	f
get_image_info_by_image_name	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_image_info_by_image_name	(	self	,	image	,	exact_tag	=	True	)	:	\\n	    	logger	.	i/;"	f
get_image_info_by_image_name	data/data_raw/valid.py	/^utf-8	def	get_image_info_by_image_name	(	self	,	image	,	exact_tag	=	True	)	:	\\n	    	logger	.	i/;"	f
get_impersonation_token	data/bpe_corpus_raw/test.py	/^utf-8	@	app	.	route	(	'\/v2.0\/RAX-AUTH\/impersonation-tokens'	,	methods	=	[	'POST'	]	)	\\n	def	/;"	f
get_impersonation_token	data/data_raw/test.py	/^utf-8	@	app	.	route	(	'\/v2.0\/RAX-AUTH\/impersonation-tokens'	,	methods	=	[	'POST'	]	)	\\n	def	/;"	f
get_indexers	data/bpe_corpus_raw/train.py	/^utf-8	def	_to_ijv	(	ss	,	row_levels	=	(	0	,	)	,	column_levels	=	(	1	,	)	,	sort_labels	=	False	)	/;"	f	function:_to_ijv	file:
get_indexers	data/data_raw/train.py	/^utf-8	def	_to_ijv	(	ss	,	row_levels	=	(	0	,	)	,	column_levels	=	(	1	,	)	,	sort_labels	=	False	)	/;"	f	function:_to_ijv	file:
get_indexes	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_indexes	(	self	,	table_name	,	schema	=	None	,	**	kw	)	:	\\n	    	return	self	.	dia/;"	f
get_indexes	data/data_raw/valid.py	/^utf-8	def	get_indexes	(	self	,	table_name	,	schema	=	None	,	**	kw	)	:	\\n	    	return	self	.	dia/;"	f
get_info	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_info	(	self	)	:	\\n	    	info	=	{	'name'	:	self	.	name	,	'mode'	:	self	.	mode	&	40/;"	f
get_info	data/data_raw/valid.py	/^utf-8	def	get_info	(	self	)	:	\\n	    	info	=	{	'name'	:	self	.	name	,	'mode'	:	self	.	mode	&	40/;"	f
get_inputs	data/bpe_corpus_raw/train.py	/^utf-8	def	get_inputs	(	self	)	:	\\n	    	inputs	=	[	]	\\n	if	self	.	distribution	.	has_pure_modu/;"	f
get_inputs	data/bpe_corpus_raw/train.py	/^utf-8	def	get_inputs	(	self	)	:	\\n	    	return	self	.	input	\\n		$/;"	f
get_inputs	data/data_raw/train.py	/^utf-8	def	get_inputs	(	self	)	:	\\n	    	inputs	=	[	]	\\n	if	self	.	distribution	.	has_pure_modu/;"	f
get_inputs	data/data_raw/train.py	/^utf-8	def	get_inputs	(	self	)	:	\\n	    	return	self	.	input	\\n		$/;"	f
get_installed_version	data/bpe_corpus_raw/test.py	/^utf-8	def	get_installed_version	(	self	)	:	\\n	    	if	self	.	check	(	)	:	\\n	        	return	'%/;"	f
get_installed_version	data/data_raw/test.py	/^utf-8	def	get_installed_version	(	self	)	:	\\n	    	if	self	.	check	(	)	:	\\n	        	return	'%/;"	f
get_instance	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_instance	(	self	,	payload	)	:	\\n	    	return	WorkspaceStatisticsInstance	(	self	./;"	f
get_instance	data/data_raw/valid.py	/^utf-8	def	get_instance	(	self	,	payload	)	:	\\n	    	return	WorkspaceStatisticsInstance	(	self	./;"	f
get_int	data/bpe_corpus_raw/test.py	/^utf-8	def	get_int	(	value	,	allow_sign	=	False	)	:	\\n	    	try	:	\\n	        	int_val	=	int	(	v/;"	f
get_int	data/data_raw/test.py	/^utf-8	def	get_int	(	value	,	allow_sign	=	False	)	:	\\n	    	try	:	\\n	        	int_val	=	int	(	v/;"	f
get_kernel_append	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_kernel_append	(	recipe	)	:	\\n	    	if	'customizations'	not	in	recipe	or	'kernel'	/;"	f
get_kernel_append	data/data_raw/valid.py	/^utf-8	def	get_kernel_append	(	recipe	)	:	\\n	    	if	'customizations'	not	in	recipe	or	'kernel'	/;"	f
get_key_for_group	data/bpe_corpus_raw/valid.py	/^utf-8	def	instance_info	(	request	,	instance	)	:	\\n	    	user	=	request	.	user	\\n	role	=	Role	/;"	f	function:instance_info.add_perms	file:
get_key_for_group	data/data_raw/valid.py	/^utf-8	def	instance_info	(	request	,	instance	)	:	\\n	    	user	=	request	.	user	\\n	role	=	Role	/;"	f	function:instance_info.add_perms	file:
get_label	data/bpe_corpus_raw/train.py	/^utf-8	def	get_label	(	self	,	marker	)	:	\\n	    	markup	=	None	\\n	if	self	.	__player	.	current	/;"	f
get_label	data/data_raw/train.py	/^utf-8	def	get_label	(	self	,	marker	)	:	\\n	    	markup	=	None	\\n	if	self	.	__player	.	current	/;"	f
get_labels	data/bpe_corpus_raw/train.py	/^utf-8	def	get_labels	(	self	)	:	\\n	    	return	self	.	labels	\\n		$/;"	f
get_labels	data/data_raw/train.py	/^utf-8	def	get_labels	(	self	)	:	\\n	    	return	self	.	labels	\\n		$/;"	f
get_last_hidden_state	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_last_hidden_state	(	self	,	key	)	:	\\n	    	h	=	self	.	subnetwork	.	get_default_ou/;"	f
get_last_hidden_state	data/data_raw/valid.py	/^utf-8	def	get_last_hidden_state	(	self	,	key	)	:	\\n	    	h	=	self	.	subnetwork	.	get_default_ou/;"	f
get_latency_stats	data/bpe_corpus_raw/valid.py	/^utf-8	@	client_api	(	'getter'	,	True	)	\\n	def	get_latency_stats	(	self	,	skip_zero	=	True	)	:	\\/;"	f
get_latency_stats	data/data_raw/valid.py	/^utf-8	@	client_api	(	'getter'	,	True	)	\\n	def	get_latency_stats	(	self	,	skip_zero	=	True	)	:	\\/;"	f
get_latest_episode_release	data/bpe_corpus_raw/train.py	/^utf-8	def	get_latest_episode_release	(	series	,	downloaded	=	True	,	season	=	None	)	:	\\n	    	s/;"	f
get_latest_episode_release	data/data_raw/train.py	/^utf-8	def	get_latest_episode_release	(	series	,	downloaded	=	True	,	season	=	None	)	:	\\n	    	s/;"	f
get_leftover_faces	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_leftover_faces	(	self	)	:	\\n	    	self	.	output_message	=	'Faces missing from the/;"	f
get_leftover_faces	data/data_raw/valid.py	/^utf-8	def	get_leftover_faces	(	self	)	:	\\n	    	self	.	output_message	=	'Faces missing from the/;"	f
get_legend	data/bpe_corpus_raw/train.py	/^utf-8	def	get_legend	(	self	)	->	str	:	\\n	    	if	request	.	json	:	\\n	        	opts	=	request	/;"	f
get_legend	data/data_raw/train.py	/^utf-8	def	get_legend	(	self	)	->	str	:	\\n	    	if	request	.	json	:	\\n	        	opts	=	request	/;"	f
get_line_count	data/bpe_corpus_raw/test.py	/^utf-8	def	get_line_count	(	self	)	:	\\n	    	return	len	(	self	.	lines	)	\\n		$/;"	f
get_line_count	data/data_raw/test.py	/^utf-8	def	get_line_count	(	self	)	:	\\n	    	return	len	(	self	.	lines	)	\\n		$/;"	f
get_lines	data/bpe_corpus_raw/train.py	/^utf-8	def	get_lines	(	self	)	:	\\n	    	return	'\\\\n'	.	join	(	self	.	lines	)	\\n		$/;"	f
get_lines	data/data_raw/train.py	/^utf-8	def	get_lines	(	self	)	:	\\n	    	return	'\\\\n'	.	join	(	self	.	lines	)	\\n		$/;"	f
get_list	data/bpe_corpus_raw/train.py	/^utf-8	def	get_list	(	)	:	\\n	    	res	=	[	]	\\n	modnames	=	[	]	\\n	for	filename	in	os	.	listdir	/;"	f
get_list	data/data_raw/train.py	/^utf-8	def	get_list	(	)	:	\\n	    	res	=	[	]	\\n	modnames	=	[	]	\\n	for	filename	in	os	.	listdir	/;"	f
get_list_health_checks	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_list_health_checks	(	self	,	maxitems	=	None	,	marker	=	None	)	:	\\n	    	params	=	/;"	f
get_list_health_checks	data/data_raw/valid.py	/^utf-8	def	get_list_health_checks	(	self	,	maxitems	=	None	,	marker	=	None	)	:	\\n	    	params	=	/;"	f
get_lists	data/bpe_corpus_raw/valid.py	/^utf-8	@	csrf_exempt	\\n	@	never_cache	\\n	@	allowed_methods	(	[	'GET'	]	)	\\n	@	cors_origin	(	)	/;"	f
get_lists	data/data_raw/valid.py	/^utf-8	@	csrf_exempt	\\n	@	never_cache	\\n	@	allowed_methods	(	[	'GET'	]	)	\\n	@	cors_origin	(	)	/;"	f
get_long_running_output	data/bpe_corpus_raw/test.py	/^utf-8	def	delete	(	self	,	resource_group_name	,	virtual_network_name	,	\\n	virtual_network_peeri/;"	f	function:delete	file:
get_long_running_output	data/bpe_corpus_raw/valid.py	/^utf-8	def	create_or_update	(	self	,	resource_group_name	,	server_name	,	job_agent_name	,	\\n	par/;"	f	function:create_or_update	file:
get_long_running_output	data/bpe_corpus_raw/valid.py	/^utf-8	def	delete	(	self	,	resource_group_name	,	vpn_site_name	,	custom_headers	=	None	,	\\n	raw	/;"	f	function:delete	file:
get_long_running_output	data/bpe_corpus_raw/valid.py	/^utf-8	def	restart	(	self	,	resource_group_name	,	server_name	,	custom_headers	=	None	,	\\n	raw	=/;"	f	function:restart	file:
get_long_running_output	data/data_raw/test.py	/^utf-8	def	delete	(	self	,	resource_group_name	,	virtual_network_name	,	\\n	virtual_network_peeri/;"	f	function:delete	file:
get_long_running_output	data/data_raw/valid.py	/^utf-8	def	create_or_update	(	self	,	resource_group_name	,	server_name	,	job_agent_name	,	\\n	par/;"	f	function:create_or_update	file:
get_long_running_output	data/data_raw/valid.py	/^utf-8	def	delete	(	self	,	resource_group_name	,	vpn_site_name	,	custom_headers	=	None	,	\\n	raw	/;"	f	function:delete	file:
get_long_running_output	data/data_raw/valid.py	/^utf-8	def	restart	(	self	,	resource_group_name	,	server_name	,	custom_headers	=	None	,	\\n	raw	=/;"	f	function:restart	file:
get_machine_by_mac	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_machine_by_mac	(	self	,	mac	)	:	\\n	    	nic	=	self	.	get_nic_by_mac	(	mac	)	\\n	i/;"	f
get_machine_by_mac	data/data_raw/valid.py	/^utf-8	def	get_machine_by_mac	(	self	,	mac	)	:	\\n	    	nic	=	self	.	get_nic_by_mac	(	mac	)	\\n	i/;"	f
get_many	data/bpe_corpus_raw/train.py	/^utf-8	def	get_many	(	self	,	*	keys	)	:	\\n	    	return	map	(	self	.	get	,	keys	)	\\n		$/;"	f
get_many	data/data_raw/train.py	/^utf-8	def	get_many	(	self	,	*	keys	)	:	\\n	    	return	map	(	self	.	get	,	keys	)	\\n		$/;"	f
get_map	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_map	(	self	)	:	\\n	    	return	self	.	_map	\\n		$/;"	f
get_map	data/data_raw/valid.py	/^utf-8	def	get_map	(	self	)	:	\\n	    	return	self	.	_map	\\n		$/;"	f
get_margins	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_margins	(	self	)	:	\\n	    	return	copy	.	copy	(	self	.	margins	)	\\n		$/;"	f
get_margins	data/data_raw/valid.py	/^utf-8	def	get_margins	(	self	)	:	\\n	    	return	copy	.	copy	(	self	.	margins	)	\\n		$/;"	f
get_max_account_data_stream_id	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_max_account_data_stream_id	(	self	)	:	\\n	    	return	self	.	_account_data_id_gen	/;"	f
get_max_account_data_stream_id	data/data_raw/valid.py	/^utf-8	def	get_max_account_data_stream_id	(	self	)	:	\\n	    	return	self	.	_account_data_id_gen	/;"	f
get_max_bytes	data/bpe_corpus_raw/test.py	/^utf-8	def	get_max_bytes	(	self	,	request	)	:	\\n	    	return	self	.	max_bytes	\\n		$/;"	f
get_max_bytes	data/data_raw/test.py	/^utf-8	def	get_max_bytes	(	self	,	request	)	:	\\n	    	return	self	.	max_bytes	\\n		$/;"	f
get_max_size_cols	data/bpe_corpus_raw/train.py	/^utf-8	def	__print_table	(	data	,	headers	,	show_header	=	False	)	:	\\n	\\n	    	def	get_max_size/;"	f	function:__print_table	file:
get_max_size_cols	data/data_raw/train.py	/^utf-8	def	__print_table	(	data	,	headers	,	show_header	=	False	)	:	\\n	\\n	    	def	get_max_size/;"	f	function:__print_table	file:
get_mc_credentials	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_mc_credentials	(	)	:	\\n	    	try	:	\\n	        	with	open	(	CREDENTIALS_LOCATION	/;"	f
get_mc_credentials	data/data_raw/valid.py	/^utf-8	def	get_mc_credentials	(	)	:	\\n	    	try	:	\\n	        	with	open	(	CREDENTIALS_LOCATION	/;"	f
get_members	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_members	(	self	)	:	\\n	    	try	:	\\n	        	from	tendenci	.	apps	.	memberships	/;"	f
get_members	data/data_raw/valid.py	/^utf-8	def	get_members	(	self	)	:	\\n	    	try	:	\\n	        	from	tendenci	.	apps	.	memberships	/;"	f
get_message	data/bpe_corpus_raw/train.py	/^utf-8	def	get_message	(	self	,	msg_id	)	:	\\n	    	for	msg	in	self	.	delivery_list	:	\\n	       /;"	f
get_message	data/data_raw/train.py	/^utf-8	def	get_message	(	self	,	msg_id	)	:	\\n	    	for	msg	in	self	.	delivery_list	:	\\n	       /;"	f
get_meta_model	data/bpe_corpus_raw/train.py	/^utf-8	def	test_metamodel_provider_advanced_test3_inheritance2	(	)	:	\\n	    	this_folder	=	dirna/;"	f	function:test_metamodel_provider_advanced_test3_inheritance2	file:
get_meta_model	data/data_raw/train.py	/^utf-8	def	test_metamodel_provider_advanced_test3_inheritance2	(	)	:	\\n	    	this_folder	=	dirna/;"	f	function:test_metamodel_provider_advanced_test3_inheritance2	file:
get_metadata	data/bpe_corpus_raw/train.py	/^utf-8	def	install_as_egg	(	self	,	destination_eggdir	)	:	\\n	    	with	zipfile	.	ZipFile	(	self	/;"	f	function:install_as_egg	file:
get_metadata	data/data_raw/train.py	/^utf-8	def	install_as_egg	(	self	,	destination_eggdir	)	:	\\n	    	with	zipfile	.	ZipFile	(	self	/;"	f	function:install_as_egg	file:
get_mfd	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_mfd	(	self	,	slip	,	area	,	shear_modulus	=	30.0	)	:	\\n	    	moment_rate	=	shear_m/;"	f
get_mfd	data/data_raw/valid.py	/^utf-8	def	get_mfd	(	self	,	slip	,	area	,	shear_modulus	=	30.0	)	:	\\n	    	moment_rate	=	shear_m/;"	f
get_mid	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_mid	(	self	)	:	\\n	    	x0	,	y0	,	x1	,	y1	=	self	.	get	(	)	\\n	return	x0	+	(	x1	-	/;"	f
get_mid	data/data_raw/valid.py	/^utf-8	def	get_mid	(	self	)	:	\\n	    	x0	,	y0	,	x1	,	y1	=	self	.	get	(	)	\\n	return	x0	+	(	x1	-	/;"	f
get_milestone_major	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_milestone_major	(	milestone	)	:	\\n	    	return	milestone	.	split	(	'.'	)	[	0	]	\\/;"	f
get_milestone_major	data/data_raw/valid.py	/^utf-8	def	get_milestone_major	(	milestone	)	:	\\n	    	return	milestone	.	split	(	'.'	)	[	0	]	\\/;"	f
get_mm_per_unit	data/bpe_corpus_raw/train.py	/^utf-8	def	get_mm_per_unit	(	resolution_unit	)	:	\\n	    	if	resolution_unit	==	2	:	\\n	        	/;"	f
get_mm_per_unit	data/data_raw/train.py	/^utf-8	def	get_mm_per_unit	(	resolution_unit	)	:	\\n	    	if	resolution_unit	==	2	:	\\n	        	/;"	f
get_model_class	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_model_class	(	self	,	object_path	,	**	kwargs	)	:	\\n	    	bits	=	object_path	.	spl/;"	f
get_model_class	data/data_raw/valid.py	/^utf-8	def	get_model_class	(	self	,	object_path	,	**	kwargs	)	:	\\n	    	bits	=	object_path	.	spl/;"	f
get_module_constant	data/bpe_corpus_raw/train.py	/^utf-8	def	get_module_constant	(	module	,	symbol	,	default	=	-	1	,	paths	=	None	)	:	\\n	    	try	/;"	f
get_module_constant	data/data_raw/train.py	/^utf-8	def	get_module_constant	(	module	,	symbol	,	default	=	-	1	,	paths	=	None	)	:	\\n	    	try	/;"	f
get_month_data_range	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_month_data_range	(	months_ago	=	1	,	include_this_month	=	False	)	:	\\n	    	today	/;"	f
get_month_data_range	data/data_raw/valid.py	/^utf-8	def	get_month_data_range	(	months_ago	=	1	,	include_this_month	=	False	)	:	\\n	    	today	/;"	f
get_motor_force	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_motor_force	(	self	,	motor_name	)	:	\\n	    	return	self	.	call_remote_api	(	'simx/;"	f
get_motor_force	data/data_raw/valid.py	/^utf-8	def	get_motor_force	(	self	,	motor_name	)	:	\\n	    	return	self	.	call_remote_api	(	'simx/;"	f
get_my_ipv4_addresses	data/bpe_corpus_raw/train.py	/^utf-8	def	get_my_ipv4_addresses	(	self	,	vip	=	None	)	:	\\n	    	ips	=	[	]	\\n	_n	=	notifier	(	)/;"	f
get_my_ipv4_addresses	data/data_raw/train.py	/^utf-8	def	get_my_ipv4_addresses	(	self	,	vip	=	None	)	:	\\n	    	ips	=	[	]	\\n	_n	=	notifier	(	)/;"	f
get_name	data/bpe_corpus_raw/test.py	/^utf-8	def	get_name	(	self	)	:	\\n	    	return	getattr	(	self	,	'host_name'	,	getattr	(	self	,	'n/;"	f
get_name	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_name	(	self	)	:	\\n	$/;"	f
get_name	data/data_raw/test.py	/^utf-8	def	get_name	(	self	)	:	\\n	    	return	getattr	(	self	,	'host_name'	,	getattr	(	self	,	'n/;"	f
get_name	data/data_raw/valid.py	/^utf-8	def	get_name	(	self	)	:	\\n	$/;"	f
get_netrc_auth	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_netrc_auth	(	url	,	raise_errors	=	False	)	:	\\n	    	try	:	\\n	        	from	netrc/;"	f
get_netrc_auth	data/data_raw/valid.py	/^utf-8	def	get_netrc_auth	(	url	,	raise_errors	=	False	)	:	\\n	    	try	:	\\n	        	from	netrc/;"	f
get_next_task	data/bpe_corpus_raw/train.py	/^utf-8	def	get_next_task	(	self	,	peek	=	False	)	:	\\n	    	return	self	.	_host_entries	[	self	.	/;"	f
get_next_task	data/data_raw/train.py	/^utf-8	def	get_next_task	(	self	,	peek	=	False	)	:	\\n	    	return	self	.	_host_entries	[	self	.	/;"	f
get_nic_attributes	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	get_nic_attributes	(	cls	,	interface	)	:	\\n	    	return	(	NodeNICIn/;"	f
get_nic_attributes	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	get_nic_attributes	(	cls	,	interface	)	:	\\n	    	return	(	NodeNICIn/;"	f
get_non_parenthesis_words	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_non_parenthesis_words	(	items	)	:	\\n	    	return	[	x	.	lower	(	)	for	x	in	items	i/;"	f
get_non_parenthesis_words	data/data_raw/valid.py	/^utf-8	def	get_non_parenthesis_words	(	items	)	:	\\n	    	return	[	x	.	lower	(	)	for	x	in	items	i/;"	f
get_num_condition	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	get_num_condition	(	con	)	:	\\n	    	return	MPost	.	query_under_con/;"	f
get_num_condition	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	get_num_condition	(	con	)	:	\\n	    	return	MPost	.	query_under_con/;"	f
get_num_examples	data/bpe_corpus_raw/train.py	/^utf-8	def	get_num_examples	(	self	)	:	\\n	    	raise	NotImplementedError	(	)	\\n		$/;"	f
get_num_examples	data/data_raw/train.py	/^utf-8	def	get_num_examples	(	self	)	:	\\n	    	raise	NotImplementedError	(	)	\\n		$/;"	f
get_object	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_object	(	self	)	:	\\n	    	common_prefix	,	prefix1	,	aList	=	self	.	compute_comple/;"	f
get_object	data/data_raw/valid.py	/^utf-8	def	get_object	(	self	)	:	\\n	    	common_prefix	,	prefix1	,	aList	=	self	.	compute_comple/;"	f
get_object_by_uid	data/bpe_corpus_raw/train.py	/^utf-8	def	get_object_by_uid	(	self	,	uid	)	:	\\n	    	logger	.	debug	(	'get_object_by_uid::UID={/;"	f
get_object_by_uid	data/data_raw/train.py	/^utf-8	def	get_object_by_uid	(	self	,	uid	)	:	\\n	    	logger	.	debug	(	'get_object_by_uid::UID={/;"	f
get_object_stat	data/bpe_corpus_raw/test.py	/^utf-8	def	get_object_stat	(	self	,	name	)	:	\\n	    	path	=	self	.	base_path	+	'\/'	+	name	\\n	r/;"	f
get_object_stat	data/data_raw/test.py	/^utf-8	def	get_object_stat	(	self	,	name	)	:	\\n	    	path	=	self	.	base_path	+	'\/'	+	name	\\n	r/;"	f
get_offset	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_offset	(	self	,	fieldname	)	:	\\n	    	return	conf	.	lib	.	clang_Type_getOffsetOf	/;"	f
get_offset	data/data_raw/valid.py	/^utf-8	def	get_offset	(	self	,	fieldname	)	:	\\n	    	return	conf	.	lib	.	clang_Type_getOffsetOf	/;"	f
get_offsets	models/preprocess.py	/^def get_offsets(input_file, num_workers):$/;"	f
get_one_match	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_one_match	(	expr	,	lines	)	:	\\n	    	expr	=	f'\\\\\\\\[({expr})\\\\\\\\]'	\\n	mat/;"	f
get_one_match	data/data_raw/valid.py	/^utf-8	def	get_one_match	(	expr	,	lines	)	:	\\n	    	expr	=	f'\\\\\\\\[({expr})\\\\\\\\]'	\\n	mat/;"	f
get_option	data/bpe_corpus_raw/train.py	/^utf-8	def	get_option	(	s	)	:	\\n	    	key	=	None	\\n	value	=	None	\\n	opts	=	OPTIONS	(	s	)	\\n	i/;"	f
get_option	data/data_raw/train.py	/^utf-8	def	get_option	(	s	)	:	\\n	    	key	=	None	\\n	value	=	None	\\n	opts	=	OPTIONS	(	s	)	\\n	i/;"	f
get_options	data/bpe_corpus_raw/train.py	/^utf-8	def	get_options	(	self	)	:	\\n	    	d1	=	'Word list to use in the file name brute forcing /;"	f
get_options	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_options	(	)	:	\\n	    	program_options	=	[	(	'no-splash'	,	_	(	\\n	'do not present/;"	f
get_options	data/data_raw/train.py	/^utf-8	def	get_options	(	self	)	:	\\n	    	d1	=	'Word list to use in the file name brute forcing /;"	f
get_options	data/data_raw/valid.py	/^utf-8	def	get_options	(	)	:	\\n	    	program_options	=	[	(	'no-splash'	,	_	(	\\n	'do not present/;"	f
get_or_create_struct	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_or_create_struct	(	self	,	key	)	:	\\n	    	return	self	.	fields	[	key	]	.	struct_v/;"	f
get_or_create_struct	data/data_raw/valid.py	/^utf-8	def	get_or_create_struct	(	self	,	key	)	:	\\n	    	return	self	.	fields	[	key	]	.	struct_v/;"	f
get_or_default	data/bpe_corpus_raw/test.py	/^utf-8	@	staticmethod	\\n	def	get_or_default	(	arg_name	,	collection_key	,	default_constructor	)	/;"	f
get_or_default	data/data_raw/test.py	/^utf-8	@	staticmethod	\\n	def	get_or_default	(	arg_name	,	collection_key	,	default_constructor	)	/;"	f
get_outcome_groups_in_context	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_outcome_groups_in_context	(	self	)	:	\\n	    	from	canvasapi	.	outcome	import	Outc/;"	f
get_outcome_groups_in_context	data/data_raw/valid.py	/^utf-8	def	get_outcome_groups_in_context	(	self	)	:	\\n	    	from	canvasapi	.	outcome	import	Outc/;"	f
get_param	data/bpe_corpus_raw/test.py	/^utf-8	def	get_param	(	self	,	key	)	:	\\n	    	params	=	self	.	get_params	(	)	\\n	if	params	is	No/;"	f
get_param	data/data_raw/test.py	/^utf-8	def	get_param	(	self	,	key	)	:	\\n	    	params	=	self	.	get_params	(	)	\\n	if	params	is	No/;"	f
get_parameters_by_unit	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_parameters_by_unit	(	parameter	,	parameters_by_unit	=	None	)	:	\\n	    	if	paramet/;"	f
get_parameters_by_unit	data/data_raw/valid.py	/^utf-8	def	get_parameters_by_unit	(	parameter	,	parameters_by_unit	=	None	)	:	\\n	    	if	paramet/;"	f
get_params	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_params	(	self	,	failobj	=	None	,	header	=	'content-type'	,	unquote	=	True	)	:	\\n	/;"	f
get_params	data/data_raw/valid.py	/^utf-8	def	get_params	(	self	,	failobj	=	None	,	header	=	'content-type'	,	unquote	=	True	)	:	\\n	/;"	f
get_path	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_path	(	self	)	:	\\n	    	return	Path	.	unit_rectangle	(	)	\\n		$/;"	f
get_path	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_path	(	self	,	inner_path	)	:	\\n	    	return	os	.	path	.	join	(	self	.	base_dir	,	/;"	f
get_path	data/data_raw/valid.py	/^utf-8	def	get_path	(	self	)	:	\\n	    	return	Path	.	unit_rectangle	(	)	\\n		$/;"	f
get_path	data/data_raw/valid.py	/^utf-8	def	get_path	(	self	,	inner_path	)	:	\\n	    	return	os	.	path	.	join	(	self	.	base_dir	,	/;"	f
get_paths	data/bpe_corpus_raw/valid.py	/^utf-8	@	deprecated	(	'2017-06-30'	,	'Please use SavedModel instead.'	)	\\n	def	get_paths	(	base_/;"	f
get_paths	data/data_raw/valid.py	/^utf-8	@	deprecated	(	'2017-06-30'	,	'Please use SavedModel instead.'	)	\\n	def	get_paths	(	base_/;"	f
get_patient	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_patient	(	db	,	patient_id	)	:	\\n	    	result	=	tasks	.	data_get_patient	.	apply_a/;"	f
get_patient	data/data_raw/valid.py	/^utf-8	def	get_patient	(	db	,	patient_id	)	:	\\n	    	result	=	tasks	.	data_get_patient	.	apply_a/;"	f
get_peering_stats	data/bpe_corpus_raw/train.py	/^utf-8	def	get_peering_stats	(	self	,	resource_group_name	,	circuit_name	,	peering_name	,	\\n	cus/;"	f
get_peering_stats	data/data_raw/train.py	/^utf-8	def	get_peering_stats	(	self	,	resource_group_name	,	circuit_name	,	peering_name	,	\\n	cus/;"	f
get_perf_data	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_perf_data	(	perfname	,	stats	)	:	\\n	    	ver	=	defaultdict	(	list	)	\\n	for	x	in	/;"	f
get_perf_data	data/data_raw/valid.py	/^utf-8	def	get_perf_data	(	perfname	,	stats	)	:	\\n	    	ver	=	defaultdict	(	list	)	\\n	for	x	in	/;"	f
get_policy	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_policy	(	self	)	:	\\n	    	return	self	.	_policy	\\n		$/;"	f
get_policy	data/data_raw/valid.py	/^utf-8	def	get_policy	(	self	)	:	\\n	    	return	self	.	_policy	\\n		$/;"	f
get_pooled_output	data/bpe_corpus_raw/train.py	/^utf-8	def	get_pooled_output	(	self	)	:	\\n	    	next_sent_feat	=	fluid	.	layers	.	slice	(	input	/;"	f
get_pooled_output	data/data_raw/train.py	/^utf-8	def	get_pooled_output	(	self	)	:	\\n	    	next_sent_feat	=	fluid	.	layers	.	slice	(	input	/;"	f
get_posts	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_posts	(	self	,	count	=	10	,	offset	=	0	,	recent	=	True	,	tag	=	None	,	user_id	=	No/;"	f
get_posts	data/data_raw/valid.py	/^utf-8	def	get_posts	(	self	,	count	=	10	,	offset	=	0	,	recent	=	True	,	tag	=	None	,	user_id	=	No/;"	f
get_prep_partition_size	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_prep_partition_size	(	self	)	:	\\n	    	if	self	.	ofw_mode	(	)	:	\\n	        	retu/;"	f
get_prep_partition_size	data/data_raw/valid.py	/^utf-8	def	get_prep_partition_size	(	self	)	:	\\n	    	if	self	.	ofw_mode	(	)	:	\\n	        	retu/;"	f
get_preparation_data	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_preparation_data	(	name	)	:	\\n	    	from	.	util	import	_logger	,	_log_to_stderr	\\/;"	f
get_preparation_data	data/data_raw/valid.py	/^utf-8	def	get_preparation_data	(	name	)	:	\\n	    	from	.	util	import	_logger	,	_log_to_stderr	\\/;"	f
get_process_by_pid	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_process_by_pid	(	self	,	pid	=	None	)	:	\\n	    	for	item	in	self	.	get_results	(	'/;"	f
get_process_by_pid	data/data_raw/valid.py	/^utf-8	def	get_process_by_pid	(	self	,	pid	=	None	)	:	\\n	    	for	item	in	self	.	get_results	(	'/;"	f
get_profile_form	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_profile_form	(	)	:	\\n	    	from	mezzanine	.	conf	import	settings	\\n	try	:	\\n	  /;"	f
get_profile_form	data/data_raw/valid.py	/^utf-8	def	get_profile_form	(	)	:	\\n	    	from	mezzanine	.	conf	import	settings	\\n	try	:	\\n	  /;"	f
get_profiles	data/bpe_corpus_raw/test.py	/^utf-8	def	get_profiles	(	self	)	:	\\n	    	self	.	_update_data	(	)	\\n	profiles	=	[	data	.	get_y/;"	f
get_profiles	data/data_raw/test.py	/^utf-8	def	get_profiles	(	self	)	:	\\n	    	self	.	_update_data	(	)	\\n	profiles	=	[	data	.	get_y/;"	f
get_project_root	data/bpe_corpus_raw/train.py	/^utf-8	def	get_project_root	(	)	:	\\n	    	settings_mod	=	__import__	(	settings	.	SETTINGS_MODULE/;"	f
get_project_root	data/data_raw/train.py	/^utf-8	def	get_project_root	(	)	:	\\n	    	settings_mod	=	__import__	(	settings	.	SETTINGS_MODULE/;"	f
get_protocol_version	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_protocol_version	(	self	,	cb	=	None	)	:	\\n	    	task	=	asyncio	.	ensure_future	(	/;"	f
get_protocol_version	data/data_raw/valid.py	/^utf-8	def	get_protocol_version	(	self	,	cb	=	None	)	:	\\n	    	task	=	asyncio	.	ensure_future	(	/;"	f
get_publisher	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_publisher	(	self	,	connection	=	None	,	exchange	=	None	,	exchange_type	=	None	,	\\/;"	f
get_publisher	data/data_raw/valid.py	/^utf-8	def	get_publisher	(	self	,	connection	=	None	,	exchange	=	None	,	exchange_type	=	None	,	\\/;"	f
get_q_values	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_q_values	(	self	,	state	,	action	)	:	\\n	    	return	sum	(	[	(	P_s1_s_a	*	(	self	./;"	f
get_q_values	data/data_raw/valid.py	/^utf-8	def	get_q_values	(	self	,	state	,	action	)	:	\\n	    	return	sum	(	[	(	P_s1_s_a	*	(	self	./;"	f
get_qresult_id	data/bpe_corpus_raw/train.py	/^utf-8	def	get_qresult_id	(	self	,	pos	)	:	\\n	    	handle	=	self	.	_handle	\\n	handle	.	seek	(	p/;"	f
get_qresult_id	data/data_raw/train.py	/^utf-8	def	get_qresult_id	(	self	,	pos	)	:	\\n	    	handle	=	self	.	_handle	\\n	handle	.	seek	(	p/;"	f
get_queryset	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_queryset	(	self	)	:	\\n	    	if	not	self	.	request	.	user	.	is_staff	:	\\n	       /;"	f
get_queryset	data/data_raw/valid.py	/^utf-8	def	get_queryset	(	self	)	:	\\n	    	if	not	self	.	request	.	user	.	is_staff	:	\\n	       /;"	f
get_rand_digit_str	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_rand_digit_str	(	length	=	16	)	:	\\n	    	if	length	==	1	:	\\n	        	raise	Valu/;"	f
get_rand_digit_str	data/data_raw/valid.py	/^utf-8	def	get_rand_digit_str	(	length	=	16	)	:	\\n	    	if	length	==	1	:	\\n	        	raise	Valu/;"	f
get_random_xy_color	data/bpe_corpus_raw/train.py	/^utf-8	def	get_random_xy_color	(	self	)	:	\\n	    	r	=	self	.	color	.	random_rgb_value	(	)	\\n	g	/;"	f
get_random_xy_color	data/data_raw/train.py	/^utf-8	def	get_random_xy_color	(	self	)	:	\\n	    	r	=	self	.	color	.	random_rgb_value	(	)	\\n	g	/;"	f
get_range_tracker	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_range_tracker	(	self	,	start_position	,	stop_position	)	:	\\n	    	raise	NotImplem/;"	f
get_range_tracker	data/data_raw/valid.py	/^utf-8	def	get_range_tracker	(	self	,	start_position	,	stop_position	)	:	\\n	    	raise	NotImplem/;"	f
get_real	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_real	(	self	)	:	\\n	    	return	fs	.	get_svg_all	(	*	self	.	realdirs	)	\\n		$/;"	f
get_real	data/data_raw/valid.py	/^utf-8	def	get_real	(	self	)	:	\\n	    	return	fs	.	get_svg_all	(	*	self	.	realdirs	)	\\n		$/;"	f
get_redirect_location	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_redirect_location	(	self	)	:	\\n	    	if	self	.	status	in	[	301	,	302	,	303	,	307	/;"	f
get_redirect_location	data/data_raw/valid.py	/^utf-8	def	get_redirect_location	(	self	)	:	\\n	    	if	self	.	status	in	[	301	,	302	,	303	,	307	/;"	f
get_region_boxes	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_region_boxes	(	layer_in	,	imw	,	imh	,	netw	,	neth	,	thresh	,	probs	,	boxes	,	\\n	r/;"	f
get_region_boxes	data/data_raw/valid.py	/^utf-8	def	get_region_boxes	(	layer_in	,	imw	,	imh	,	netw	,	neth	,	thresh	,	probs	,	boxes	,	\\n	r/;"	f
get_regular_saves	data/bpe_corpus_raw/train.py	/^utf-8	@	classmethod	\\n	def	get_regular_saves	(	cls	,	include_displaynames	=	True	)	:	\\n	    	w/;"	f
get_regular_saves	data/data_raw/train.py	/^utf-8	@	classmethod	\\n	def	get_regular_saves	(	cls	,	include_displaynames	=	True	)	:	\\n	    	w/;"	f
get_relations	data/bpe_corpus_raw/train.py	/^utf-8	def	get_relations	(	self	,	cursor	,	table_name	)	:	\\n	    	cursor	.	execute	(	\\n	"""\\n /;"	f
get_relations	data/data_raw/train.py	/^utf-8	def	get_relations	(	self	,	cursor	,	table_name	)	:	\\n	    	cursor	.	execute	(	\\n	"""\\n /;"	f
get_release_json	data/bpe_corpus_raw/valid.py	/^utf-8	@	release	.	get	(	accept	=	(	'application\/json'	,	'text\/json'	)	,	renderer	=	'json'	,	\\/;"	f
get_release_json	data/data_raw/valid.py	/^utf-8	@	release	.	get	(	accept	=	(	'application\/json'	,	'text\/json'	)	,	renderer	=	'json'	,	\\/;"	f
get_remote_addr	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_remote_addr	(	self	,	forwarded_for	)	:	\\n	    	if	len	(	forwarded_for	)	>=	self	./;"	f
get_remote_addr	data/data_raw/valid.py	/^utf-8	def	get_remote_addr	(	self	,	forwarded_for	)	:	\\n	    	if	len	(	forwarded_for	)	>=	self	./;"	f
get_replicas	data/bpe_corpus_raw/test.py	/^utf-8	def	get_replicas	(	self	)	:	\\n	    	return	self	.	get	(	DeploymentConfig	.	replicas_path	/;"	f
get_replicas	data/data_raw/test.py	/^utf-8	def	get_replicas	(	self	)	:	\\n	    	return	self	.	get	(	DeploymentConfig	.	replicas_path	/;"	f
get_repo	data_utils/downloaded_repos.py	/^def get_repo(url):$/;"	f
get_repo_dir	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_repo_dir	(	)	:	\\n	    	dirname	,	_	=	os	.	path	.	split	(	os	.	path	.	abspath	(	__/;"	f
get_repo_dir	data/data_raw/valid.py	/^utf-8	def	get_repo_dir	(	)	:	\\n	    	dirname	,	_	=	os	.	path	.	split	(	os	.	path	.	abspath	(	__/;"	f
get_report_schedule_count	data/bpe_corpus_raw/valid.py	/^utf-8	@	structured_lists	(	'ReportTypeList.Type'	)	\\n	@	api_action	(	'Reports'	,	10	,	45	)	\\n	/;"	f
get_report_schedule_count	data/data_raw/valid.py	/^utf-8	@	structured_lists	(	'ReportTypeList.Type'	)	\\n	@	api_action	(	'Reports'	,	10	,	45	)	\\n	/;"	f
get_request	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_request	(	self	)	:	\\n	    	return	self	.	socket	.	accept	(	)	\\n		$/;"	f
get_request	data/data_raw/valid.py	/^utf-8	def	get_request	(	self	)	:	\\n	    	return	self	.	socket	.	accept	(	)	\\n		$/;"	f
get_request_from_view_args	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_request_from_view_args	(	self	,	view	,	args	,	kwargs	)	:	\\n	    	req	=	args	[	1	]/;"	f
get_request_from_view_args	data/data_raw/valid.py	/^utf-8	def	get_request_from_view_args	(	self	,	view	,	args	,	kwargs	)	:	\\n	    	req	=	args	[	1	]/;"	f
get_resolution	data/bpe_corpus_raw/test.py	/^utf-8	def	get_resolution	(	self	)	:	\\n	    	return	self	.	_sampling_resolution	\\n		$/;"	f
get_resolution	data/data_raw/test.py	/^utf-8	def	get_resolution	(	self	)	:	\\n	    	return	self	.	_sampling_resolution	\\n		$/;"	f
get_resource	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_resource	(	self	,	resource_name	)	:	\\n	    	path	=	self	.	_get_resource_path	(	re/;"	f
get_resource	data/data_raw/valid.py	/^utf-8	def	get_resource	(	self	,	resource_name	)	:	\\n	    	path	=	self	.	_get_resource_path	(	re/;"	f
get_resource_file	data/bpe_corpus_raw/test.py	/^utf-8	@	staticmethod	\\n	def	get_resource_file	(	sfile	,	sfile_type	=	'yaml'	)	:	\\n	    	conten/;"	f
get_resource_file	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	get_resource_file	(	sfile	,	sfile_type	=	'yaml'	)	:	\\n	    	conten/;"	f
get_resource_file	data/data_raw/test.py	/^utf-8	@	staticmethod	\\n	def	get_resource_file	(	sfile	,	sfile_type	=	'yaml'	)	:	\\n	    	conten/;"	f
get_resource_file	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	get_resource_file	(	sfile	,	sfile_type	=	'yaml'	)	:	\\n	    	conten/;"	f
get_resource_filename	data/bpe_corpus_raw/train.py	/^utf-8	def	get_resource_filename	(	manager	,	resource_name	)	:	\\n	$/;"	f
get_resource_filename	data/data_raw/train.py	/^utf-8	def	get_resource_filename	(	manager	,	resource_name	)	:	\\n	$/;"	f
get_retry_after	data/bpe_corpus_raw/train.py	/^utf-8	def	get_retry_after	(	self	,	response	)	:	\\n	    	retry_after	=	response	.	getheader	(	'R/;"	f
get_retry_after	data/data_raw/train.py	/^utf-8	def	get_retry_after	(	self	,	response	)	:	\\n	    	retry_after	=	response	.	getheader	(	'R/;"	f
get_rip_type	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_rip_type	(	self	)	:	\\n	    	return	self	.	raw	.	u	.	RipInfo	.	dwType	\\n		$/;"	f
get_rip_type	data/data_raw/valid.py	/^utf-8	def	get_rip_type	(	self	)	:	\\n	    	return	self	.	raw	.	u	.	RipInfo	.	dwType	\\n		$/;"	f
get_role	data/bpe_corpus_raw/train.py	/^utf-8	@	_utils	.	valid_kwargs	(	'domain_id'	)	\\n	def	get_role	(	self	,	name_or_id	,	filters	=	N/;"	f
get_role	data/data_raw/train.py	/^utf-8	@	_utils	.	valid_kwargs	(	'domain_id'	)	\\n	def	get_role	(	self	,	name_or_id	,	filters	=	N/;"	f
get_role_for_trust	data/bpe_corpus_raw/train.py	/^utf-8	@	controller	.	protected	\\n	def	get_role_for_trust	(	self	,	context	,	trust_id	,	role_id	/;"	f
get_role_for_trust	data/data_raw/train.py	/^utf-8	@	controller	.	protected	\\n	def	get_role_for_trust	(	self	,	context	,	trust_id	,	role_id	/;"	f
get_room_edge_text	data/bpe_corpus_raw/test.py	/^utf-8	def	get_room_edge_text	(	self	,	room_descs	,	past	=	False	)	:	\\n	    	if	len	(	room_descs/;"	f
get_room_edge_text	data/data_raw/test.py	/^utf-8	def	get_room_edge_text	(	self	,	room_descs	,	past	=	False	)	:	\\n	    	if	len	(	room_descs/;"	f
get_root_dir	data/bpe_corpus_raw/train.py	/^utf-8	def	get_root_dir	(	self	,	file_path	=	None	,	view	=	None	)	:	\\n	    	if	self	.	is_project/;"	f
get_root_dir	data/data_raw/train.py	/^utf-8	def	get_root_dir	(	self	,	file_path	=	None	,	view	=	None	)	:	\\n	    	if	self	.	is_project/;"	f
get_routed_orgvdc_network	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_routed_orgvdc_network	(	self	,	name	)	:	\\n	    	result	=	self	.	list_orgvdc_netwo/;"	f
get_routed_orgvdc_network	data/data_raw/valid.py	/^utf-8	def	get_routed_orgvdc_network	(	self	,	name	)	:	\\n	    	result	=	self	.	list_orgvdc_netwo/;"	f
get_row_value	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_row_value	(	self	,	row_index	)	:	\\n	    	if	row_index	<	0	or	row_index	>=	self	.	/;"	f
get_row_value	data/data_raw/valid.py	/^utf-8	def	get_row_value	(	self	,	row_index	)	:	\\n	    	if	row_index	<	0	or	row_index	>=	self	.	/;"	f
get_rule_strings	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_rule_strings	(	config_obj	,	section	)	:	\\n	    	rule_strings	=	{	}	\\n	kwargs	=	d/;"	f
get_rule_strings	data/data_raw/valid.py	/^utf-8	def	get_rule_strings	(	config_obj	,	section	)	:	\\n	    	rule_strings	=	{	}	\\n	kwargs	=	d/;"	f
get_rules_engine_with_rule	data/bpe_corpus_raw/train.py	/^utf-8	def	get_rules_engine_with_rule	(	rule	)	:	\\n	    	with	tempfile	.	NamedTemporaryFile	(	su/;"	f
get_rules_engine_with_rule	data/data_raw/train.py	/^utf-8	def	get_rules_engine_with_rule	(	rule	)	:	\\n	    	with	tempfile	.	NamedTemporaryFile	(	su/;"	f
get_sample_data	data/bpe_corpus_raw/train.py	/^utf-8	def	get_sample_data	(	fname	,	asfileobj	=	True	)	:	\\n	    	if	dict	.	__getitem__	(	matplo/;"	f
get_sample_data	data/data_raw/train.py	/^utf-8	def	get_sample_data	(	fname	,	asfileobj	=	True	)	:	\\n	    	if	dict	.	__getitem__	(	matplo/;"	f
get_saved_fn	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_saved_fn	(	filename	)	:	\\n	    	return	join	(	split	(	abspath	(	__file__	)	)	[	0	/;"	f
get_saved_fn	data/data_raw/valid.py	/^utf-8	def	get_saved_fn	(	filename	)	:	\\n	    	return	join	(	split	(	abspath	(	__file__	)	)	[	0	/;"	f
get_script_args	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_script_args	(	dist	,	executable	=	sys_executable	,	wininst	=	False	)	:	\\n	    	sp/;"	f
get_script_args	data/data_raw/valid.py	/^utf-8	def	get_script_args	(	dist	,	executable	=	sys_executable	,	wininst	=	False	)	:	\\n	    	sp/;"	f
get_secrets	data/bpe_corpus_raw/test.py	/^utf-8	def	get_secrets	(	self	)	:	\\n	    	return	self	.	get	(	Secret	.	secret_path	)	or	{	}	\\n	/;"	f
get_secrets	data/data_raw/test.py	/^utf-8	def	get_secrets	(	self	)	:	\\n	    	return	self	.	get	(	Secret	.	secret_path	)	or	{	}	\\n	/;"	f
get_selector	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_selector	(	self	)	:	\\n	    	return	self	.	get	(	Service	.	selector_path	)	or	{	}	/;"	f
get_selector	data/data_raw/valid.py	/^utf-8	def	get_selector	(	self	)	:	\\n	    	return	self	.	get	(	Service	.	selector_path	)	or	{	}	/;"	f
get_sequence	data/bpe_corpus_raw/train.py	/^utf-8	def	get_sequence	(	n	)	:	\\n	\\n	    	def	fib	(	)	:	\\n	        	"""\\n        Return Fibo/;"	f
get_sequence	data/data_raw/train.py	/^utf-8	def	get_sequence	(	n	)	:	\\n	\\n	    	def	fib	(	)	:	\\n	        	"""\\n        Return Fibo/;"	f
get_serial	data/bpe_corpus_raw/train.py	/^utf-8	def	get_serial	(	self	)	:	\\n	    	bio	=	_new_mem_buf	(	)	\\n	asn1_int	=	_lib	.	X509_REVOK/;"	f
get_serial	data/data_raw/train.py	/^utf-8	def	get_serial	(	self	)	:	\\n	    	bio	=	_new_mem_buf	(	)	\\n	asn1_int	=	_lib	.	X509_REVOK/;"	f
get_session_tensor	data/bpe_corpus_raw/train.py	/^utf-8	def	get_session_tensor	(	handle	,	dtype	,	name	=	None	)	:	\\n	    	handle_device	=	TensorH/;"	f
get_session_tensor	data/data_raw/train.py	/^utf-8	def	get_session_tensor	(	handle	,	dtype	,	name	=	None	)	:	\\n	    	handle_device	=	TensorH/;"	f
get_shape	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_shape	(	self	)	:	\\n	    	return	self	.	_operator	.	get_shape	(	)	\\n		$/;"	f
get_shape	data/data_raw/valid.py	/^utf-8	def	get_shape	(	self	)	:	\\n	    	return	self	.	_operator	.	get_shape	(	)	\\n		$/;"	f
get_shared_content_add_link_password_details	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_shared_content_add_link_password_details	(	self	)	:	\\n	    	if	not	self	.	is_shar/;"	f
get_shared_content_add_link_password_details	data/data_raw/valid.py	/^utf-8	def	get_shared_content_add_link_password_details	(	self	)	:	\\n	    	if	not	self	.	is_shar/;"	f
get_shared_link_change_visibility	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_shared_link_change_visibility	(	self	)	:	\\n	    	if	not	self	.	is_shared_link_cha/;"	f
get_shared_link_change_visibility	data/data_raw/valid.py	/^utf-8	def	get_shared_link_change_visibility	(	self	)	:	\\n	    	if	not	self	.	is_shared_link_cha/;"	f
get_sigma_tables	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_sigma_tables	(	self	,	imt	,	rctx	,	stddev_types	)	:	\\n	    	output_tables	=	[	]	\\/;"	f
get_sigma_tables	data/data_raw/valid.py	/^utf-8	def	get_sigma_tables	(	self	,	imt	,	rctx	,	stddev_types	)	:	\\n	    	output_tables	=	[	]	\\/;"	f
get_single_relationship_string	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_single_relationship_string	(	self	,	Ga	,	Gb	,	gender_a	,	gender_b	,	\\n	reltocommo/;"	f
get_single_relationship_string	data/data_raw/valid.py	/^utf-8	def	get_single_relationship_string	(	self	,	Ga	,	Gb	,	gender_a	,	gender_b	,	\\n	reltocommo/;"	f
get_single_scan_pt_model	data/bpe_corpus_raw/train.py	/^utf-8	def	get_single_scan_pt_model	(	self	,	exp_number	,	scan_number	,	pt_number	,	\\n	roi_name	/;"	f
get_single_scan_pt_model	data/data_raw/train.py	/^utf-8	def	get_single_scan_pt_model	(	self	,	exp_number	,	scan_number	,	pt_number	,	\\n	roi_name	/;"	f
get_spider_from_reference	data/bpe_corpus_raw/train.py	/^utf-8	def	get_spider_from_reference	(	self	,	ref	)	:	\\n	    	m	=	self	.	spider_ref_re	.	search	/;"	f
get_spider_from_reference	data/data_raw/train.py	/^utf-8	def	get_spider_from_reference	(	self	,	ref	)	:	\\n	    	m	=	self	.	spider_ref_re	.	search	/;"	f
get_spot_value	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_spot_value	(	self	,	asset	,	field	,	dt	,	data_frequency	)	:	\\n	    	raise	NotImpl/;"	f
get_spot_value	data/data_raw/valid.py	/^utf-8	def	get_spot_value	(	self	,	asset	,	field	,	dt	,	data_frequency	)	:	\\n	    	raise	NotImpl/;"	f
get_standard_network_desc	data/bpe_corpus_raw/train.py	/^utf-8	def	get_standard_network_desc	(	self	,	network	)	:	\\n	    	raise	NotImplementedError	(	'P/;"	f
get_standard_network_desc	data/data_raw/train.py	/^utf-8	def	get_standard_network_desc	(	self	,	network	)	:	\\n	    	raise	NotImplementedError	(	'P/;"	f
get_start_end	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_start_end	(	self	,	host	)	:	\\n	    	try	:	\\n	        	result	=	self	.	FetchURL	(/;"	f
get_start_end	data/data_raw/valid.py	/^utf-8	def	get_start_end	(	self	,	host	)	:	\\n	    	try	:	\\n	        	result	=	self	.	FetchURL	(/;"	f
get_start_time	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_start_time	(	line_iterable	,	year	)	:	\\n	    	start_datetime	=	None	\\n	for	line	/;"	f
get_start_time	data/data_raw/valid.py	/^utf-8	def	get_start_time	(	line_iterable	,	year	)	:	\\n	    	start_datetime	=	None	\\n	for	line	/;"	f
get_state	data/bpe_corpus_raw/train.py	/^utf-8	def	get_state	(	self	,	aid	)	:	\\n	    	for	state	in	self	.	data	:	\\n	        	if	state	[/;"	f
get_state	data/data_raw/train.py	/^utf-8	def	get_state	(	self	,	aid	)	:	\\n	    	for	state	in	self	.	data	:	\\n	        	if	state	[/;"	f
get_stats_commit_activity	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_stats_commit_activity	(	self	)	:	\\n	    	headers	,	data	=	self	.	_requester	.	req/;"	f
get_stats_commit_activity	data/data_raw/valid.py	/^utf-8	def	get_stats_commit_activity	(	self	)	:	\\n	    	headers	,	data	=	self	.	_requester	.	req/;"	f
get_stats_label	data/bpe_corpus_raw/test.py	/^utf-8	def	get_stats_label	(	self	,	stat	)	:	\\n	    	return	PyStatDriver	[	stat	]	\\n		$/;"	f
get_stats_label	data/data_raw/test.py	/^utf-8	def	get_stats_label	(	self	,	stat	)	:	\\n	    	return	PyStatDriver	[	stat	]	\\n		$/;"	f
get_status	data/bpe_corpus_raw/valid.py	/^utf-8	@	status	.	getter	(	)	\\n	def	get_status	(	self	)	:	\\n	    	if	self	.	task	:	\\n	        /;"	f
get_status	data/data_raw/valid.py	/^utf-8	@	status	.	getter	(	)	\\n	def	get_status	(	self	)	:	\\n	    	if	self	.	task	:	\\n	        /;"	f
get_stop_words	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_stop_words	(	self	)	:	\\n	    	return	_check_stop_list	(	self	.	stop_words	)	\\n		$/;"	f
get_stop_words	data/data_raw/valid.py	/^utf-8	def	get_stop_words	(	self	)	:	\\n	    	return	_check_stop_list	(	self	.	stop_words	)	\\n		$/;"	f
get_studio_url	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_studio_url	(	course	,	page	)	:	\\n	    	studio_link	=	None	\\n	if	course	.	course_/;"	f
get_studio_url	data/data_raw/valid.py	/^utf-8	def	get_studio_url	(	course	,	page	)	:	\\n	    	studio_link	=	None	\\n	if	course	.	course_/;"	f
get_subscriber_hash	data/bpe_corpus_raw/train.py	/^utf-8	def	get_subscriber_hash	(	member_email	)	:	\\n	    	check_email	(	member_email	)	\\n	membe/;"	f
get_subscriber_hash	data/data_raw/train.py	/^utf-8	def	get_subscriber_hash	(	member_email	)	:	\\n	    	check_email	(	member_email	)	\\n	membe/;"	f
get_summaries	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_summaries	(	ordered	=	True	)	:	\\n	    	if	ordered	:	\\n	        	cmditems	=	_sort/;"	f
get_summaries	data/data_raw/valid.py	/^utf-8	def	get_summaries	(	ordered	=	True	)	:	\\n	    	if	ordered	:	\\n	        	cmditems	=	_sort/;"	f
get_supported_currency_choices	data/bpe_corpus_raw/train.py	/^utf-8	def	get_supported_currency_choices	(	api_key	)	:	\\n	    	import	stripe	\\n	stripe	.	api_k/;"	f
get_supported_currency_choices	data/data_raw/train.py	/^utf-8	def	get_supported_currency_choices	(	api_key	)	:	\\n	    	import	stripe	\\n	stripe	.	api_k/;"	f
get_symbol_names	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_symbol_names	(	symbols	,	prefix	,	strip_leading	=	0	)	:	\\n	    	return	{	value	:	/;"	f
get_symbol_names	data/data_raw/valid.py	/^utf-8	def	get_symbol_names	(	symbols	,	prefix	,	strip_leading	=	0	)	:	\\n	    	return	{	value	:	/;"	f
get_table_names	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_table_names	(	self	,	connection	,	schema	=	None	,	**	kw	)	:	\\n	    	raise	NotImpl/;"	f
get_table_names	data/data_raw/valid.py	/^utf-8	def	get_table_names	(	self	,	connection	,	schema	=	None	,	**	kw	)	:	\\n	    	raise	NotImpl/;"	f
get_table_type	data/bpe_corpus_raw/train.py	/^utf-8	def	get_table_type	(	self	,	account_name	,	database_name	,	schema_name	,	\\n	table_type_na/;"	f
get_table_type	data/data_raw/train.py	/^utf-8	def	get_table_type	(	self	,	account_name	,	database_name	,	schema_name	,	\\n	table_type_na/;"	f
get_task_split_indices	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_task_split_indices	(	self	,	y	,	w	,	frac_split	)	:	\\n	    	w_present	=	w	!=	0	\\n/;"	f
get_task_split_indices	data/data_raw/valid.py	/^utf-8	def	get_task_split_indices	(	self	,	y	,	w	,	frac_split	)	:	\\n	    	w_present	=	w	!=	0	\\n/;"	f
get_template	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_template	(	self	,	uri	)	:	\\n	    	return	_lookup_template	(	self	.	context	,	uri	/;"	f
get_template	data/data_raw/valid.py	/^utf-8	def	get_template	(	self	,	uri	)	:	\\n	    	return	_lookup_template	(	self	.	context	,	uri	/;"	f
get_template_prefixes	data/bpe_corpus_raw/train.py	/^utf-8	def	get_template_prefixes	(	self	)	:	\\n	    	possible	=	[	self	.	tag	]	\\n	if	hasattr	(	s/;"	f
get_template_prefixes	data/data_raw/train.py	/^utf-8	def	get_template_prefixes	(	self	)	:	\\n	    	possible	=	[	self	.	tag	]	\\n	if	hasattr	(	s/;"	f
get_text	data/bpe_corpus_raw/train.py	/^utf-8	def	get_text	(	self	)	:	\\n	    	start	,	end	=	self	.	textbuffer	.	get_bounds	(	)	\\n	retu/;"	f
get_text	data/data_raw/train.py	/^utf-8	def	get_text	(	self	)	:	\\n	    	start	,	end	=	self	.	textbuffer	.	get_bounds	(	)	\\n	retu/;"	f
get_ticker	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_ticker	(	self	)	:	\\n	    	return	self	.	call	(	'get_ticker'	,	api	=	'market_histo/;"	f
get_ticker	data/data_raw/valid.py	/^utf-8	def	get_ticker	(	self	)	:	\\n	    	return	self	.	call	(	'get_ticker'	,	api	=	'market_histo/;"	f
get_timestamp	data/bpe_corpus_raw/test.py	/^utf-8	@	staticmethod	\\n	def	get_timestamp	(	category	,	key	,	default	=	None	)	:	\\n	    	try	:	/;"	f
get_timestamp	data/data_raw/test.py	/^utf-8	@	staticmethod	\\n	def	get_timestamp	(	category	,	key	,	default	=	None	)	:	\\n	    	try	:	/;"	f
get_tokens	data_utils/clean_dataset.py	/^def get_tokens(fn_string):$/;"	f
get_tokens_unprocessed	data/bpe_corpus_raw/train.py	/^utf-8	def	get_tokens_unprocessed	(	self	,	text	=	None	,	context	=	None	)	:	\\n	    	tokendefs	=	/;"	f
get_tokens_unprocessed	data/data_raw/train.py	/^utf-8	def	get_tokens_unprocessed	(	self	,	text	=	None	,	context	=	None	)	:	\\n	    	tokendefs	=	/;"	f
get_top	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_paths	(	self	)	:	\\n	\\n	    	def	get_file	(	path	)	:	\\n	        	if	os	.	path	./;"	f	function:_get_paths.get_file.get_walk_all.get_walk_files	file:
get_top	data/data_raw/valid.py	/^utf-8	def	_get_paths	(	self	)	:	\\n	\\n	    	def	get_file	(	path	)	:	\\n	        	if	os	.	path	./;"	f	function:_get_paths.get_file.get_walk_all.get_walk_files	file:
get_tracker_info	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_tracker_info	(	self	,	tracker_url	)	:	\\n	    	sanitized_tracker_url	=	get_uniform/;"	f
get_tracker_info	data/data_raw/valid.py	/^utf-8	def	get_tracker_info	(	self	,	tracker_url	)	:	\\n	    	sanitized_tracker_url	=	get_uniform/;"	f
get_transitions	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_transitions	(	self	,	instance	)	:	\\n	    	return	self	.	transitions	\\n		$/;"	f
get_transitions	data/data_raw/valid.py	/^utf-8	def	get_transitions	(	self	,	instance	)	:	\\n	    	return	self	.	transitions	\\n		$/;"	f
get_trigger_function_schema	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_trigger_function_schema	(	self	,	data	)	:	\\n	    	if	data	[	'lanname'	]	==	'edbsp/;"	f
get_trigger_function_schema	data/data_raw/valid.py	/^utf-8	def	get_trigger_function_schema	(	self	,	data	)	:	\\n	    	if	data	[	'lanname'	]	==	'edbsp/;"	f
get_tts_type	data/bpe_corpus_raw/train.py	/^utf-8	def	get_tts_type	(	cfg	)	:	\\n	    	return	cfg	[	'TTS'	]	[	'type'	]	\\n		$/;"	f
get_tts_type	data/data_raw/train.py	/^utf-8	def	get_tts_type	(	cfg	)	:	\\n	    	return	cfg	[	'TTS'	]	[	'type'	]	\\n		$/;"	f
get_type_score	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	get_type_score	(	)	:	\\n	    	return	2	\\n		$/;"	f
get_type_score	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	get_type_score	(	)	:	\\n	    	return	2	\\n		$/;"	f
get_uniref_ec_nums	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_uniref_ec_nums	(	acc	,	c	)	:	\\n	    	qry	=	"""\\n          SELECT us_ec.ec_num\\n/;"	f
get_uniref_ec_nums	data/data_raw/valid.py	/^utf-8	def	get_uniref_ec_nums	(	acc	,	c	)	:	\\n	    	qry	=	"""\\n          SELECT us_ec.ec_num\\n/;"	f
get_unsat_core	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_unsat_core	(	self	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
get_unsat_core	data/data_raw/valid.py	/^utf-8	def	get_unsat_core	(	self	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
get_url	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_url	(	self	,	location	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
get_url	data/data_raw/valid.py	/^utf-8	def	get_url	(	self	,	location	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
get_user	data/bpe_corpus_raw/train.py	/^utf-8	def	get_user	(	)	:	\\n	    	return	login	.	get_current_user	(	use_external_user	=	False	)	/;"	f
get_user	data/bpe_corpus_raw/train.py	/^utf-8	def	get_user	(	self	,	user_pk	)	:	\\n	    	user	=	None	\\n	try	:	\\n	        	user	=	User	/;"	f
get_user	data/bpe_corpus_raw/valid.py	/^utf-8	def	auth	(	request	)	:	\\n	\\n	    	def	get_user	(	)	:	\\n	        	if	hasattr	(	request	,/;"	f	function:auth	file:
get_user	data/data_raw/train.py	/^utf-8	def	get_user	(	)	:	\\n	    	return	login	.	get_current_user	(	use_external_user	=	False	)	/;"	f
get_user	data/data_raw/train.py	/^utf-8	def	get_user	(	self	,	user_pk	)	:	\\n	    	user	=	None	\\n	try	:	\\n	        	user	=	User	/;"	f
get_user	data/data_raw/valid.py	/^utf-8	def	auth	(	request	)	:	\\n	\\n	    	def	get_user	(	)	:	\\n	        	if	hasattr	(	request	,/;"	f	function:auth	file:
get_user_autocompletions	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_user_autocompletions	(	ctx	,	args	,	incomplete	,	cmd_param	)	:	\\n	    	results	=	/;"	f
get_user_autocompletions	data/data_raw/valid.py	/^utf-8	def	get_user_autocompletions	(	ctx	,	args	,	incomplete	,	cmd_param	)	:	\\n	    	results	=	/;"	f
get_user_by_auth_token	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_user_by_auth_token	(	self	,	user_id	,	token	)	:	\\n	    	user	,	ts	=	self	.	user_m/;"	f
get_user_by_auth_token	data/data_raw/valid.py	/^utf-8	def	get_user_by_auth_token	(	self	,	user_id	,	token	)	:	\\n	    	user	,	ts	=	self	.	user_m/;"	f
get_value	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_value	(	log	)	:	\\n	    	MAX_LOG_SIZE	=	20	\\n	if	isinstance	(	log	,	TimeSeriesPro/;"	f
get_value	data/data_raw/valid.py	/^utf-8	def	get_value	(	log	)	:	\\n	    	MAX_LOG_SIZE	=	20	\\n	if	isinstance	(	log	,	TimeSeriesPro/;"	f
get_values	data/bpe_corpus_raw/test.py	/^utf-8	def	get_values	(	sheet	)	:	\\n	    	rows	=	sheet	.	get_rows	(	)	\\n	next	(	rows	)	\\n	next/;"	f
get_values	data/data_raw/test.py	/^utf-8	def	get_values	(	sheet	)	:	\\n	    	rows	=	sheet	.	get_rows	(	)	\\n	next	(	rows	)	\\n	next/;"	f
get_vaults	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_vaults	(	self	)	:	\\n	    	return	[	self	.	_get_vault	(	uuid	)	for	uuid	in	self	.	/;"	f
get_vaults	data/data_raw/valid.py	/^utf-8	def	get_vaults	(	self	)	:	\\n	    	return	[	self	.	_get_vault	(	uuid	)	for	uuid	in	self	.	/;"	f
get_vectors	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_vectors	(	self	,	**	kwargs	)	:	\\n	    	if	self	.	_cache_time	==	self	.	_update_ti/;"	f
get_vectors	data/data_raw/valid.py	/^utf-8	def	get_vectors	(	self	,	**	kwargs	)	:	\\n	    	if	self	.	_cache_time	==	self	.	_update_ti/;"	f
get_version	data/bpe_corpus_raw/train.py	/^utf-8	def	get_version	(	)	:	\\n	    	return	get_versions	(	)	[	'version'	]	\\n		$/;"	f
get_version	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_version	(	)	:	\\n	    	return	get_versions	(	)	[	'version'	]	\\n		$/;"	f
get_version	data/data_raw/train.py	/^utf-8	def	get_version	(	)	:	\\n	    	return	get_versions	(	)	[	'version'	]	\\n		$/;"	f
get_version	data/data_raw/valid.py	/^utf-8	def	get_version	(	)	:	\\n	    	return	get_versions	(	)	[	'version'	]	\\n		$/;"	f
get_version_string	data/bpe_corpus_raw/train.py	/^utf-8	def	get_version_string	(	)	:	\\n	    	version	=	'%s.%s'	%	(	VERSION	[	0	]	,	VERSION	[	1	]	/;"	f
get_version_string	data/data_raw/train.py	/^utf-8	def	get_version_string	(	)	:	\\n	    	version	=	'%s.%s'	%	(	VERSION	[	0	]	,	VERSION	[	1	]	/;"	f
get_versions	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_versions	(	)	:	\\n	    	cfg	=	get_config	(	)	\\n	verbose	=	cfg	.	verbose	\\n	try	:/;"	f
get_versions	data/data_raw/valid.py	/^utf-8	def	get_versions	(	)	:	\\n	    	cfg	=	get_config	(	)	\\n	verbose	=	cfg	.	verbose	\\n	try	:/;"	f
get_walk_all	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_paths	(	self	)	:	\\n	\\n	    	def	get_file	(	path	)	:	\\n	        	if	os	.	path	./;"	f	function:_get_paths.get_file	file:
get_walk_all	data/data_raw/valid.py	/^utf-8	def	_get_paths	(	self	)	:	\\n	\\n	    	def	get_file	(	path	)	:	\\n	        	if	os	.	path	./;"	f	function:_get_paths.get_file	file:
get_walk_files	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_paths	(	self	)	:	\\n	\\n	    	def	get_file	(	path	)	:	\\n	        	if	os	.	path	./;"	f	function:_get_paths.get_file.get_walk_all	file:
get_walk_files	data/data_raw/valid.py	/^utf-8	def	_get_paths	(	self	)	:	\\n	\\n	    	def	get_file	(	path	)	:	\\n	        	if	os	.	path	./;"	f	function:_get_paths.get_file.get_walk_all	file:
get_week	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_week	(	self	)	:	\\n	    	week	=	self	.	week	\\n	if	week	is	None	:	\\n	        	try/;"	f
get_week	data/data_raw/valid.py	/^utf-8	def	get_week	(	self	)	:	\\n	    	week	=	self	.	week	\\n	if	week	is	None	:	\\n	        	try/;"	f
get_weight	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_weight	(	self	)	:	\\n	    	return	self	.	get	(	Route	.	weight_path	)	\\n		$/;"	f
get_weight	data/data_raw/valid.py	/^utf-8	def	get_weight	(	self	)	:	\\n	    	return	self	.	get	(	Route	.	weight_path	)	\\n		$/;"	f
get_widgets	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_widgets	(	self	)	:	\\n	    	widgets	=	[	]	\\n	for	widget	in	self	.	widgets	.	iterv/;"	f
get_widgets	data/data_raw/valid.py	/^utf-8	def	get_widgets	(	self	)	:	\\n	    	widgets	=	[	]	\\n	for	widget	in	self	.	widgets	.	iterv/;"	f
get_with_metadata	data/bpe_corpus_raw/train.py	/^utf-8	@	abc	.	abstractmethod	\\n	def	get_with_metadata	(	self	,	path	)	:	\\n	$/;"	f
get_with_metadata	data/data_raw/train.py	/^utf-8	@	abc	.	abstractmethod	\\n	def	get_with_metadata	(	self	,	path	)	:	\\n	$/;"	f
get_wordlist	data/bpe_corpus_raw/train.py	/^utf-8	def	get_wordlist	(	self	,	locale	)	:	\\n	    	if	locale	not	in	self	.	__language2words	:	\\/;"	f
get_wordlist	data/data_raw/train.py	/^utf-8	def	get_wordlist	(	self	,	locale	)	:	\\n	    	if	locale	not	in	self	.	__language2words	:	\\/;"	f
getabsfile	data/bpe_corpus_raw/train.py	/^utf-8	def	getabsfile	(	object	,	_filename	=	None	)	:	\\n	    	if	_filename	is	None	:	\\n	       /;"	f
getabsfile	data/data_raw/train.py	/^utf-8	def	getabsfile	(	object	,	_filename	=	None	)	:	\\n	    	if	_filename	is	None	:	\\n	       /;"	f
getargs	data/bpe_corpus_raw/train.py	/^utf-8	def	add	(	self	,	rule	,	method	,	target	,	name	=	None	)	:	\\n	    	anons	=	0	\\n	keys	=	[	/;"	f	function:add	file:
getargs	data/bpe_corpus_raw/train.py	/^utf-8	def	add	(	self	,	rule	,	method	,	target	,	name	=	None	)	:	\\n	    	anons	=	0	\\n	keys	=	[	/;"	f	function:add.getargs	file:
getargs	data/bpe_corpus_raw/train.py	/^utf-8	def	getargs	(	co	)	:	\\n	    	if	not	iscode	(	co	)	:	\\n	        	raise	TypeError	(	'{!r} /;"	f
getargs	data/data_raw/train.py	/^utf-8	def	add	(	self	,	rule	,	method	,	target	,	name	=	None	)	:	\\n	    	anons	=	0	\\n	keys	=	[	/;"	f	function:add	file:
getargs	data/data_raw/train.py	/^utf-8	def	add	(	self	,	rule	,	method	,	target	,	name	=	None	)	:	\\n	    	anons	=	0	\\n	keys	=	[	/;"	f	function:add.getargs	file:
getargs	data/data_raw/train.py	/^utf-8	def	getargs	(	co	)	:	\\n	    	if	not	iscode	(	co	)	:	\\n	        	raise	TypeError	(	'{!r} /;"	f
getblock	data/bpe_corpus_raw/train.py	/^utf-8	def	getblock	(	lines	)	:	\\n	    	blockfinder	=	BlockFinder	(	)	\\n	try	:	\\n	        	tok/;"	f
getblock	data/data_raw/train.py	/^utf-8	def	getblock	(	lines	)	:	\\n	    	blockfinder	=	BlockFinder	(	)	\\n	try	:	\\n	        	tok/;"	f
getbufsize	data/bpe_corpus_raw/test.py	/^utf-8	@	set_module	(	'numpy'	)	\\n	def	getbufsize	(	)	:	\\n	    	return	umath	.	geterrobj	(	)	[	/;"	f
getbufsize	data/data_raw/test.py	/^utf-8	@	set_module	(	'numpy'	)	\\n	def	getbufsize	(	)	:	\\n	    	return	umath	.	geterrobj	(	)	[	/;"	f
getcolor	data/bpe_corpus_raw/test.py	/^utf-8	def	getcolor	(	self	,	color	)	:	\\n	    	if	self	.	rawmode	:	\\n	        	raise	ValueError/;"	f
getcolor	data/data_raw/test.py	/^utf-8	def	getcolor	(	self	,	color	)	:	\\n	    	if	self	.	rawmode	:	\\n	        	raise	ValueError/;"	f
getctime	data/bpe_corpus_raw/train.py	/^utf-8	def	getctime	(	self	)	:	\\n	    	return	self	.	module	.	getctime	(	self	)	\\n		$/;"	f
getctime	data/data_raw/train.py	/^utf-8	def	getctime	(	self	)	:	\\n	    	return	self	.	module	.	getctime	(	self	)	\\n		$/;"	f
getdata	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_cache_expires	(	wf	)	:	\\n	    	data	=	'hello'	,	'goodbye'	\\n	called	=	{	'called/;"	f	function:test_cache_expires	file:
getdata	data/data_raw/valid.py	/^utf-8	def	test_cache_expires	(	wf	)	:	\\n	    	data	=	'hello'	,	'goodbye'	\\n	called	=	{	'called/;"	f	function:test_cache_expires	file:
getdecoder	data/bpe_corpus_raw/train.py	/^utf-8	def	getdecoder	(	encoding	)	:	\\n	    	return	lookup	(	encoding	)	.	decode	\\n		$/;"	f
getdecoder	data/data_raw/train.py	/^utf-8	def	getdecoder	(	encoding	)	:	\\n	    	return	lookup	(	encoding	)	.	decode	\\n		$/;"	f
getdoc	data/bpe_corpus_raw/valid.py	/^utf-8	def	getdoc	(	object	)	:	\\n	    	try	:	\\n	        	doc	=	object	.	__doc__	\\n		except	Att/;"	f
getdoc	data/data_raw/valid.py	/^utf-8	def	getdoc	(	object	)	:	\\n	    	try	:	\\n	        	doc	=	object	.	__doc__	\\n		except	Att/;"	f
getenv	data/bpe_corpus_raw/test.py	/^utf-8	def	getenv	(	key	,	value	=	None	)	:	\\n	    	key	=	path2fsn	(	key	)	\\n	if	is_win	and	PY2	/;"	f
getenv	data/data_raw/test.py	/^utf-8	def	getenv	(	key	,	value	=	None	)	:	\\n	    	key	=	path2fsn	(	key	)	\\n	if	is_win	and	PY2	/;"	f
getfirst	data/bpe_corpus_raw/valid.py	/^utf-8	def	getfirst	(	self	,	key	,	default	=	None	)	:	\\n	    	if	key	in	self	:	\\n	        	valu/;"	f
getfirst	data/data_raw/valid.py	/^utf-8	def	getfirst	(	self	,	key	,	default	=	None	)	:	\\n	    	if	key	in	self	:	\\n	        	valu/;"	f
getfslineno	data/bpe_corpus_raw/valid.py	/^utf-8	def	getfslineno	(	obj	)	:	\\n	    	try	:	\\n	        	code	=	py	.	code	.	Code	(	obj	)	\\n	/;"	f
getfslineno	data/data_raw/valid.py	/^utf-8	def	getfslineno	(	obj	)	:	\\n	    	try	:	\\n	        	code	=	py	.	code	.	Code	(	obj	)	\\n	/;"	f
gethostbyname_ex	data/bpe_corpus_raw/valid.py	/^utf-8	def	gethostbyname_ex	(	hostname	)	:	\\n	    	if	is_ipv4_addr	(	hostname	)	:	\\n	        	r/;"	f
gethostbyname_ex	data/data_raw/valid.py	/^utf-8	def	gethostbyname_ex	(	hostname	)	:	\\n	    	if	is_ipv4_addr	(	hostname	)	:	\\n	        	r/;"	f
getitem_block	data/bpe_corpus_raw/train.py	/^utf-8	def	getitem_block	(	self	,	slicer	,	new_mgr_locs	=	None	)	:	\\n	    	if	new_mgr_locs	is	No/;"	f
getitem_block	data/data_raw/train.py	/^utf-8	def	getitem_block	(	self	,	slicer	,	new_mgr_locs	=	None	)	:	\\n	    	if	new_mgr_locs	is	No/;"	f
getmodulename	data/bpe_corpus_raw/valid.py	/^utf-8	def	getmodulename	(	path	)	:	\\n	    	info	=	getmoduleinfo	(	path	)	\\n	if	info	:	\\n	    /;"	f
getmodulename	data/data_raw/valid.py	/^utf-8	def	getmodulename	(	path	)	:	\\n	    	info	=	getmoduleinfo	(	path	)	\\n	if	info	:	\\n	    /;"	f
getnext	data/bpe_corpus_raw/valid.py	/^utf-8	def	getnext	(	self	)	:	\\n	    	if	self	.	last	!=	self	.	master	.	getvalue	(	)	:	\\n	     /;"	f
getnext	data/data_raw/valid.py	/^utf-8	def	getnext	(	self	)	:	\\n	    	if	self	.	last	!=	self	.	master	.	getvalue	(	)	:	\\n	     /;"	f
getpalette	data/bpe_corpus_raw/valid.py	/^utf-8	def	getpalette	(	self	)	:	\\n	    	self	.	load	(	)	\\n	try	:	\\n	        	if	py3	:	\\n	   /;"	f
getpalette	data/data_raw/valid.py	/^utf-8	def	getpalette	(	self	)	:	\\n	    	self	.	load	(	)	\\n	try	:	\\n	        	if	py3	:	\\n	   /;"	f
getproxypeername	data/bpe_corpus_raw/valid.py	/^utf-8	def	getproxypeername	(	self	)	:	\\n	    	return	_orgsocket	.	getpeername	(	self	)	\\n		$/;"	f
getproxypeername	data/data_raw/valid.py	/^utf-8	def	getproxypeername	(	self	)	:	\\n	    	return	_orgsocket	.	getpeername	(	self	)	\\n		$/;"	f
getrawchangeaddress	data/bpe_corpus_raw/valid.py	/^utf-8	def	getrawchangeaddress	(	self	)	:	\\n	    	r	=	self	.	_call	(	'getrawchangeaddress'	)	\\n/;"	f
getrawchangeaddress	data/data_raw/valid.py	/^utf-8	def	getrawchangeaddress	(	self	)	:	\\n	    	r	=	self	.	_call	(	'getrawchangeaddress'	)	\\n/;"	f
getstatus	data/bpe_corpus_raw/valid.py	/^utf-8	def	getstatus	(	file	)	:	\\n	    	import	warnings	\\n	warnings	.	warn	(	'commands.getstatu/;"	f
getstatus	data/data_raw/valid.py	/^utf-8	def	getstatus	(	file	)	:	\\n	    	import	warnings	\\n	warnings	.	warn	(	'commands.getstatu/;"	f
gid	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	gid	(	self	)	:	\\n	    	return	int	(	self	.	check_output	(	'id -g %s'	,/;"	f
gid	data/data_raw/train.py	/^utf-8	@	property	\\n	def	gid	(	self	)	:	\\n	    	return	int	(	self	.	check_output	(	'id -g %s'	,/;"	f
git_branch_test	data/bpe_corpus_raw/valid.py	/^utf-8	def	git_branch_test	(	self	)	:	\\n	    	git_repo	=	toml	.	loads	(	\\n	"""\\n            [[/;"	f
git_branch_test	data/data_raw/valid.py	/^utf-8	def	git_branch_test	(	self	)	:	\\n	    	git_repo	=	toml	.	loads	(	\\n	"""\\n            [[/;"	f
git_pieces_from_vcs	data/bpe_corpus_raw/valid.py	/^utf-8	@	register_vcs_handler	(	'git'	,	'pieces_from_vcs'	)	\\n	def	git_pieces_from_vcs	(	tag_pre/;"	f
git_pieces_from_vcs	data/data_raw/valid.py	/^utf-8	@	register_vcs_handler	(	'git'	,	'pieces_from_vcs'	)	\\n	def	git_pieces_from_vcs	(	tag_pre/;"	f
global_max_pool2d	data/bpe_corpus_raw/valid.py	/^utf-8	def	global_max_pool2d	(	data	,	layout	=	'NCHW'	)	:	\\n	    	return	_make	.	global_max_pool/;"	f
global_max_pool2d	data/data_raw/valid.py	/^utf-8	def	global_max_pool2d	(	data	,	layout	=	'NCHW'	)	:	\\n	    	return	_make	.	global_max_pool/;"	f
gnu_version_match	data/bpe_corpus_raw/train.py	/^utf-8	def	gnu_version_match	(	self	,	version_string	)	:	\\n	    	while	version_string	.	startswi/;"	f
gnu_version_match	data/data_raw/train.py	/^utf-8	def	gnu_version_match	(	self	,	version_string	)	:	\\n	    	while	version_string	.	startswi/;"	f
google2_log_prefix	data/bpe_corpus_raw/train.py	/^utf-8	def	google2_log_prefix	(	level	,	timestamp	=	None	,	file_and_line	=	None	)	:	\\n	    	glob/;"	f
google2_log_prefix	data/data_raw/train.py	/^utf-8	def	google2_log_prefix	(	level	,	timestamp	=	None	,	file_and_line	=	None	)	:	\\n	    	glob/;"	f
goto	data/bpe_corpus_raw/valid.py	/^utf-8	def	goto	(	self	,	href	,	method	=	'get'	,	**	args	)	:	\\n	    	scheme	,	host	,	path	,	quer/;"	f
goto	data/data_raw/valid.py	/^utf-8	def	goto	(	self	,	href	,	method	=	'get'	,	**	args	)	:	\\n	    	scheme	,	host	,	path	,	quer/;"	f
grad	data/bpe_corpus_raw/train.py	/^utf-8	def	corr_nearest_factor	(	corr	,	rank	,	ctol	=	1e-06	,	lam_min	=	1e-30	,	lam_max	=	\\n	1e+/;"	f	function:corr_nearest_factor	file:
grad	data/data_raw/train.py	/^utf-8	def	corr_nearest_factor	(	corr	,	rank	,	ctol	=	1e-06	,	lam_min	=	1e-30	,	lam_max	=	\\n	1e+/;"	f	function:corr_nearest_factor	file:
grad_sync	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	grad_sync	(	self	)	:	\\n	    	if	self	.	_grad_sync	is	None	:	\\n	      /;"	f
grad_sync	data/data_raw/train.py	/^utf-8	@	property	\\n	def	grad_sync	(	self	)	:	\\n	    	if	self	.	_grad_sync	is	None	:	\\n	      /;"	f
gradient	data/bpe_corpus_raw/valid.py	/^utf-8	def	gradient	(	f	,	*	varargs	,	**	kwargs	)	:	\\n	    	f	=	np	.	asanyarray	(	f	)	\\n	N	=	f	/;"	f
gradient	data/data_raw/valid.py	/^utf-8	def	gradient	(	f	,	*	varargs	,	**	kwargs	)	:	\\n	    	f	=	np	.	asanyarray	(	f	)	\\n	N	=	f	/;"	f
grayscale	data/bpe_corpus_raw/train.py	/^utf-8	def	grayscale	(	self	)	:	\\n	    	luminance	=	self	.	get_luminance	(	)	\\n	self	.	r	=	lumi/;"	f
grayscale	data/data_raw/train.py	/^utf-8	def	grayscale	(	self	)	:	\\n	    	luminance	=	self	.	get_luminance	(	)	\\n	self	.	r	=	lumi/;"	f
gripEdit	data/bpe_corpus_raw/valid.py	/^utf-8	def	gripEdit	(	self	,	before	,	after	)	:	\\n	    	if	before	==	self	.	scenePos	(	)	:	\\n	 /;"	f
gripEdit	data/data_raw/valid.py	/^utf-8	def	gripEdit	(	self	,	before	,	after	)	:	\\n	    	if	before	==	self	.	scenePos	(	)	:	\\n	 /;"	f
grist	data/bpe_corpus_raw/train.py	/^utf-8	def	grist	(	self	)	:	\\n	    	path	=	self	.	path	(	)	\\n	if	path	:	\\n	        	return	'p'/;"	f
grist	data/data_raw/train.py	/^utf-8	def	grist	(	self	)	:	\\n	    	path	=	self	.	path	(	)	\\n	if	path	:	\\n	        	return	'p'/;"	f
group_versions	data/bpe_corpus_raw/valid.py	/^utf-8	def	group_versions	(	versions	)	:	\\n	    	return	list	(	list	(	releases	)	for	_	,	release/;"	f
group_versions	data/data_raw/valid.py	/^utf-8	def	group_versions	(	versions	)	:	\\n	    	return	list	(	list	(	releases	)	for	_	,	release/;"	f
groupsMissingSince	data/bpe_corpus_raw/valid.py	/^utf-8	@	inlineCallbacks	\\n	def	groupsMissingSince	(	self	,	since	)	:	\\n	    	results	=	yield	G/;"	f
groupsMissingSince	data/data_raw/valid.py	/^utf-8	@	inlineCallbacks	\\n	def	groupsMissingSince	(	self	,	since	)	:	\\n	    	results	=	yield	G/;"	f
groups_update	data/bpe_corpus_raw/valid.py	/^utf-8	def	groups_update	(	self	,	studyId	,	groupId	,	data	,	**	options	)	:	\\n	    	return	self	/;"	f
groups_update	data/data_raw/valid.py	/^utf-8	def	groups_update	(	self	,	studyId	,	groupId	,	data	,	**	options	)	:	\\n	    	return	self	/;"	f
gru_input	data/bpe_corpus_raw/test.py	/^utf-8	def	gru_input	(	)	:	\\n	    	dims_	=	st	.	tuples	(	st	.	integers	(	min_value	=	1	,	max_val/;"	f
gru_input	data/data_raw/test.py	/^utf-8	def	gru_input	(	)	:	\\n	    	dims_	=	st	.	tuples	(	st	.	integers	(	min_value	=	1	,	max_val/;"	f
guess_all_extensions	data/bpe_corpus_raw/train.py	/^utf-8	def	guess_all_extensions	(	self	,	type	,	strict	=	True	)	:	\\n	    	type	=	type	.	lower	(	/;"	f
guess_all_extensions	data/data_raw/train.py	/^utf-8	def	guess_all_extensions	(	self	,	type	,	strict	=	True	)	:	\\n	    	type	=	type	.	lower	(	/;"	f
guess_mimetype	data/bpe_corpus_raw/train.py	/^utf-8	def	guess_mimetype	(	container	,	type_	=	None	,	default	=	None	)	:	\\n	    	if	type_	is	No/;"	f
guess_mimetype	data/data_raw/train.py	/^utf-8	def	guess_mimetype	(	container	,	type_	=	None	,	default	=	None	)	:	\\n	    	if	type_	is	No/;"	f
guess_type	data/bpe_corpus_raw/train.py	/^utf-8	def	guess_type	(	self	,	path	)	:	\\n	    	base	,	ext	=	posixpath	.	splitext	(	path	)	\\n	i/;"	f
guess_type	data/data_raw/train.py	/^utf-8	def	guess_type	(	self	,	path	)	:	\\n	    	base	,	ext	=	posixpath	.	splitext	(	path	)	\\n	i/;"	f
gunzip_file	data/bpe_corpus_raw/train.py	/^utf-8	def	gunzip_file	(	gz_path	,	new_path	)	:	\\n	    	print	(	'Unpacking %s to %s'	%	(	gz_path/;"	f
gunzip_file	data/data_raw/train.py	/^utf-8	def	gunzip_file	(	gz_path	,	new_path	)	:	\\n	    	print	(	'Unpacking %s to %s'	%	(	gz_path/;"	f
handle	data/bpe_corpus_raw/train.py	/^utf-8	def	handle	(	self	)	:	\\n	    	try	:	\\n	        	data	=	self	.	request	.	recv	(	4096	)	.	/;"	f
handle	data/bpe_corpus_raw/train.py	/^utf-8	def	handle	(	self	,	record	)	:	\\n	    	if	self	.	filter	(	record	)	:	\\n	        	self	.	/;"	f
handle	data/bpe_corpus_raw/valid.py	/^utf-8	def	handle	(	self	,	*	args	,	**	options	)	:	\\n	    	self	.	verbosity	=	int	(	options	.	ge/;"	f
handle	data/data_raw/train.py	/^utf-8	def	handle	(	self	)	:	\\n	    	try	:	\\n	        	data	=	self	.	request	.	recv	(	4096	)	.	/;"	f
handle	data/data_raw/train.py	/^utf-8	def	handle	(	self	,	record	)	:	\\n	    	if	self	.	filter	(	record	)	:	\\n	        	self	.	/;"	f
handle	data/data_raw/valid.py	/^utf-8	def	handle	(	self	,	*	args	,	**	options	)	:	\\n	    	self	.	verbosity	=	int	(	options	.	ge/;"	f
handle_disco_items	data/bpe_corpus_raw/train.py	/^utf-8	def	testGetItemsRemote	(	self	)	:	\\n	    	self	.	stream_start	(	mode	=	'client'	,	plugins/;"	f	function:testGetItemsRemote	file:
handle_disco_items	data/data_raw/train.py	/^utf-8	def	testGetItemsRemote	(	self	)	:	\\n	    	self	.	stream_start	(	mode	=	'client'	,	plugins/;"	f	function:testGetItemsRemote	file:
handle_display_options	data/bpe_corpus_raw/valid.py	/^utf-8	def	handle_display_options	(	self	,	option_order	)	:	\\n	    	import	sys	\\n	if	PY2	or	sel/;"	f
handle_display_options	data/data_raw/valid.py	/^utf-8	def	handle_display_options	(	self	,	option_order	)	:	\\n	    	import	sys	\\n	if	PY2	or	sel/;"	f
handle_model	data/bpe_corpus_raw/valid.py	/^utf-8	def	handle_model	(	self	,	instance	,	fields	=	None	,	exclude	=	None	)	:	\\n	    	from	djan/;"	f
handle_model	data/data_raw/valid.py	/^utf-8	def	handle_model	(	self	,	instance	,	fields	=	None	,	exclude	=	None	)	:	\\n	    	from	djan/;"	f
handle_not_found_error	data/bpe_corpus_raw/valid.py	/^utf-8	@	metrics	.	errorhandler	(	NotFoundError	)	\\n	def	handle_not_found_error	(	e	)	:	\\n	    /;"	f
handle_not_found_error	data/data_raw/valid.py	/^utf-8	@	metrics	.	errorhandler	(	NotFoundError	)	\\n	def	handle_not_found_error	(	e	)	:	\\n	    /;"	f
handle_peers	data/bpe_corpus_raw/valid.py	/^utf-8	@	when	(	'hbase.installed'	)	\\n	@	when_any	(	'hbpeer.departed'	,	'hbpeer.joined'	)	\\n	de/;"	f
handle_peers	data/data_raw/valid.py	/^utf-8	@	when	(	'hbase.installed'	)	\\n	@	when_any	(	'hbpeer.departed'	,	'hbpeer.joined'	)	\\n	de/;"	f
handle_pressed_v_pot	data/bpe_corpus_raw/train.py	/^utf-8	def	handle_pressed_v_pot	(	self	,	strip_index	,	stack_offset	)	:	\\n	    	if	(	self	.	__as/;"	f
handle_pressed_v_pot	data/data_raw/train.py	/^utf-8	def	handle_pressed_v_pot	(	self	,	strip_index	,	stack_offset	)	:	\\n	    	if	(	self	.	__as/;"	f
handle_starttag	data/bpe_corpus_raw/valid.py	/^utf-8	def	handle_starttag	(	self	,	tag	,	attrs	)	:	\\n	    	if	not	self	.	is_anchor	(	tag	,	attr/;"	f
handle_starttag	data/data_raw/valid.py	/^utf-8	def	handle_starttag	(	self	,	tag	,	attrs	)	:	\\n	    	if	not	self	.	is_anchor	(	tag	,	attr/;"	f
handle_timeout	data/bpe_corpus_raw/train.py	/^utf-8	def	handle_timeout	(	self	)	:	\\n	    	self	.	collect_children	(	)	\\n		$/;"	f
handle_timeout	data/data_raw/train.py	/^utf-8	def	handle_timeout	(	self	)	:	\\n	    	self	.	collect_children	(	)	\\n		$/;"	f
has_base	data/bpe_corpus_raw/test.py	/^utf-8	def	has_base	(	self	,	node	)	:	\\n	    	return	False	\\n		$/;"	f
has_base	data/data_raw/test.py	/^utf-8	def	has_base	(	self	,	node	)	:	\\n	    	return	False	\\n		$/;"	f
has_command	data/bpe_corpus_raw/valid.py	/^utf-8	def	has_command	(	cmd	)	:	\\n	    	return	not	run	(	cmd	,	False	)	\\n		$/;"	f
has_command	data/data_raw/valid.py	/^utf-8	def	has_command	(	cmd	)	:	\\n	    	return	not	run	(	cmd	,	False	)	\\n		$/;"	f
has_context	data/bpe_corpus_raw/valid.py	/^utf-8	def	has_context	(	self	)	:	\\n	    	return	not	self	.	getContext	(	)	==	None	\\n		$/;"	f
has_context	data/data_raw/valid.py	/^utf-8	def	has_context	(	self	)	:	\\n	    	return	not	self	.	getContext	(	)	==	None	\\n		$/;"	f
has_descent	data/bpe_corpus_raw/train.py	/^utf-8	def	has_descent	(	self	,	i	,	side	=	'right'	,	positive	=	False	)	:	\\n	    	return	self	.	/;"	f
has_descent	data/data_raw/train.py	/^utf-8	def	has_descent	(	self	,	i	,	side	=	'right'	,	positive	=	False	)	:	\\n	    	return	self	.	/;"	f
has_dns	data/bpe_corpus_raw/valid.py	/^utf-8	def	has_dns	(	self	)	:	\\n	    	return	not	self	.	config	.	get	(	'no_dns'	)	\\n		$/;"	f
has_dns	data/data_raw/valid.py	/^utf-8	def	has_dns	(	self	)	:	\\n	    	return	not	self	.	config	.	get	(	'no_dns'	)	\\n		$/;"	f
has_fixer	data/bpe_corpus_raw/valid.py	/^utf-8	def	has_fixer	(	self	)	:	\\n	    	return	bool	(	self	.	options	.	get	(	'fixer'	,	False	)	)/;"	f
has_fixer	data/data_raw/valid.py	/^utf-8	def	has_fixer	(	self	)	:	\\n	    	return	bool	(	self	.	options	.	get	(	'fixer'	,	False	)	)/;"	f
has_image_recipes	data/bpe_corpus_raw/valid.py	/^utf-8	def	has_image_recipes	(	self	)	:	\\n	    	image_recipes	=	self	.	get_image_recipes	(	)	\\n/;"	f
has_image_recipes	data/data_raw/valid.py	/^utf-8	def	has_image_recipes	(	self	)	:	\\n	    	image_recipes	=	self	.	get_image_recipes	(	)	\\n/;"	f
has_member	data/bpe_corpus_raw/train.py	/^utf-8	def	has_member	(	self	,	user	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
has_member	data/data_raw/train.py	/^utf-8	def	has_member	(	self	,	user	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
has_next_page	data/bpe_corpus_raw/valid.py	/^utf-8	def	has_next_page	(	self	)	:	\\n	    	return	self	.	continuation	is	not	None	\\n		$/;"	f
has_next_page	data/data_raw/valid.py	/^utf-8	def	has_next_page	(	self	)	:	\\n	    	return	self	.	continuation	is	not	None	\\n		$/;"	f
has_permission	data/bpe_corpus_raw/test.py	/^utf-8	def	model_permission	(	permission	)	:	\\n	\\n	    	def	has_permission	(	request	,	view	,	o/;"	f	function:model_permission	file:
has_permission	data/data_raw/test.py	/^utf-8	def	model_permission	(	permission	)	:	\\n	\\n	    	def	has_permission	(	request	,	view	,	o/;"	f	function:model_permission	file:
has_powershell	data/bpe_corpus_raw/valid.py	/^utf-8	def	has_powershell	(	)	:	\\n	    	if	platform	.	system	(	)	!=	'Windows'	:	\\n	        	ret/;"	f
has_powershell	data/data_raw/valid.py	/^utf-8	def	has_powershell	(	)	:	\\n	    	if	platform	.	system	(	)	!=	'Windows'	:	\\n	        	ret/;"	f
has_problems	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	has_problems	(	self	)	:	\\n	    	if	self	.	status	in	REGION_PROBLEMS	:	/;"	f
has_problems	data/data_raw/train.py	/^utf-8	@	property	\\n	def	has_problems	(	self	)	:	\\n	    	if	self	.	status	in	REGION_PROBLEMS	:	/;"	f
hash_then_or	data/bpe_corpus_raw/test.py	/^utf-8	def	_hash_comparison	(	self	)	:	\\n	\\n	    	def	hash_then_or	(	hash_name	)	:	\\n	        /;"	f	function:_hash_comparison	file:
hash_then_or	data/data_raw/test.py	/^utf-8	def	_hash_comparison	(	self	)	:	\\n	\\n	    	def	hash_then_or	(	hash_name	)	:	\\n	        /;"	f	function:_hash_comparison	file:
haskeys	data/bpe_corpus_raw/valid.py	/^utf-8	def	haskeys	(	self	)	:	\\n	    	return	bool	(	self	.	__tokdict	)	\\n		$/;"	f
haskeys	data/data_raw/valid.py	/^utf-8	def	haskeys	(	self	)	:	\\n	    	return	bool	(	self	.	__tokdict	)	\\n		$/;"	f
haversine	data/bpe_corpus_raw/valid.py	/^utf-8	def	haversine	(	lng_p1	,	lat_p1	,	lng_p2	,	lat_p2	)	:	\\n	    	return	12742	*	asin	(	sqrt	/;"	f
haversine	data/data_raw/valid.py	/^utf-8	def	haversine	(	lng_p1	,	lat_p1	,	lng_p2	,	lat_p2	)	:	\\n	    	return	12742	*	asin	(	sqrt	/;"	f
hb_write	data/bpe_corpus_raw/valid.py	/^utf-8	def	hb_write	(	file	,	m	,	hb_info	=	None	)	:	\\n	    	if	hb_info	is	None	:	\\n	        	hb/;"	f
hb_write	data/data_raw/valid.py	/^utf-8	def	hb_write	(	file	,	m	,	hb_info	=	None	)	:	\\n	    	if	hb_info	is	None	:	\\n	        	hb/;"	f
hdfs_exists	data/bpe_corpus_raw/valid.py	/^utf-8	def	hdfs_exists	(	hadoop_node_config	,	file_pattern	)	:	\\n	    	cmd	=	'hadoop fs -ls %s 2/;"	f
hdfs_exists	data/data_raw/valid.py	/^utf-8	def	hdfs_exists	(	hadoop_node_config	,	file_pattern	)	:	\\n	    	cmd	=	'hadoop fs -ls %s 2/;"	f
head_object	data/bpe_corpus_raw/valid.py	/^utf-8	@	app	.	route	(	'\/<string:container_name>\/<path:object_name>'	,	methods	=	[	'HEAD'	]	)	\\/;"	f
head_object	data/data_raw/valid.py	/^utf-8	@	app	.	route	(	'\/<string:container_name>\/<path:object_name>'	,	methods	=	[	'HEAD'	]	)	\\/;"	f
header_install_path	data/bpe_corpus_raw/valid.py	/^utf-8	def	header_install_path	(	header	,	header_path	)	:	\\n	    	if	not	header_path	:	\\n	     /;"	f
header_install_path	data/data_raw/valid.py	/^utf-8	def	header_install_path	(	header	,	header_path	)	:	\\n	    	if	not	header_path	:	\\n	     /;"	f
header_quopri_check	data/bpe_corpus_raw/train.py	/^utf-8	def	header_quopri_check	(	c	)	:	\\n	    	return	bool	(	hqre	.	match	(	c	)	)	\\n		$/;"	f
header_quopri_check	data/data_raw/train.py	/^utf-8	def	header_quopri_check	(	c	)	:	\\n	    	return	bool	(	hqre	.	match	(	c	)	)	\\n		$/;"	f
hellinger_distance	data/bpe_corpus_raw/train.py	/^utf-8	def	hellinger_distance	(	outputs	,	targets	,	derivative	=	False	)	:	\\n	    	root_differen/;"	f
hellinger_distance	data/data_raw/train.py	/^utf-8	def	hellinger_distance	(	outputs	,	targets	,	derivative	=	False	)	:	\\n	    	root_differen/;"	f
help	data/bpe_corpus_raw/valid.py	/^utf-8	def	help	(	self	,	args	)	:	\\n	    	help_str	=	''	\\n	if	len	(	args	)	==	0	:	\\n	        	/;"	f
help	data/data_raw/valid.py	/^utf-8	def	help	(	self	,	args	)	:	\\n	    	help_str	=	''	\\n	if	len	(	args	)	==	0	:	\\n	        	/;"	f
help_menu	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	help_menu	(	magic_number	=	13	)	:	\\n	    	print	(	'Command  Second/;"	f
help_menu	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	help_menu	(	magic_number	=	13	)	:	\\n	    	print	(	'Command  Second/;"	f
hermegrid3d	data/bpe_corpus_raw/valid.py	/^utf-8	def	hermegrid3d	(	x	,	y	,	z	,	c	)	:	\\n	    	c	=	hermeval	(	x	,	c	)	\\n	c	=	hermeval	(	y	,/;"	f
hermegrid3d	data/data_raw/valid.py	/^utf-8	def	hermegrid3d	(	x	,	y	,	z	,	c	)	:	\\n	    	c	=	hermeval	(	x	,	c	)	\\n	c	=	hermeval	(	y	,/;"	f
hermepow	data/bpe_corpus_raw/train.py	/^utf-8	def	hermepow	(	c	,	pow	,	maxpower	=	16	)	:	\\n	    	[	c	]	=	pu	.	as_series	(	[	c	]	)	\\n	p/;"	f
hermepow	data/data_raw/train.py	/^utf-8	def	hermepow	(	c	,	pow	,	maxpower	=	16	)	:	\\n	    	[	c	]	=	pu	.	as_series	(	[	c	]	)	\\n	p/;"	f
hermite_weights	data/bpe_corpus_raw/train.py	/^utf-8	def	create_log_c	(	gamut	,	transfer_function	,	exposure_index	,	lut_directory	,	\\n	lut_re/;"	f	function:create_log_c.gain_for_EI	file:
hermite_weights	data/data_raw/train.py	/^utf-8	def	create_log_c	(	gamut	,	transfer_function	,	exposure_index	,	lut_directory	,	\\n	lut_re/;"	f	function:create_log_c.gain_for_EI	file:
hermline	data/bpe_corpus_raw/train.py	/^utf-8	def	hermline	(	off	,	scl	)	:	\\n	    	if	scl	!=	0	:	\\n	        	return	np	.	array	(	[	off/;"	f
hermline	data/data_raw/train.py	/^utf-8	def	hermline	(	off	,	scl	)	:	\\n	    	if	scl	!=	0	:	\\n	        	return	np	.	array	(	[	off/;"	f
hessenberg_reduce_1	data/bpe_corpus_raw/valid.py	/^utf-8	def	hessenberg_reduce_1	(	ctx	,	A	,	T	)	:	\\n	    	n	=	A	.	rows	\\n	if	n	==	1	:	\\n	      /;"	f
hessenberg_reduce_1	data/data_raw/valid.py	/^utf-8	def	hessenberg_reduce_1	(	ctx	,	A	,	T	)	:	\\n	    	n	=	A	.	rows	\\n	if	n	==	1	:	\\n	      /;"	f
hexdigest	data/bpe_corpus_raw/train.py	/^utf-8	def	hexdigest	(	self	)	:	\\n	    	h	=	self	.	_current	(	)	\\n	return	h	.	hexdigest	(	)	\\n/;"	f
hexdigest	data/bpe_corpus_raw/valid.py	/^utf-8	def	hexdigest	(	self	)	:	\\n	    	return	self	.	_hash	.	hexdigest	(	)	\\n		$/;"	f
hexdigest	data/data_raw/train.py	/^utf-8	def	hexdigest	(	self	)	:	\\n	    	h	=	self	.	_current	(	)	\\n	return	h	.	hexdigest	(	)	\\n/;"	f
hexdigest	data/data_raw/valid.py	/^utf-8	def	hexdigest	(	self	)	:	\\n	    	return	self	.	_hash	.	hexdigest	(	)	\\n		$/;"	f
hide_gridlines	data/bpe_corpus_raw/valid.py	/^utf-8	def	hide_gridlines	(	self	,	option	=	1	)	:	\\n	    	if	option	==	0	:	\\n	        	self	.	p/;"	f
hide_gridlines	data/data_raw/valid.py	/^utf-8	def	hide_gridlines	(	self	,	option	=	1	)	:	\\n	    	if	option	==	0	:	\\n	        	self	.	p/;"	f
history	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	history	(	self	)	:	\\n	    	return	self	.	_history	\\n		$/;"	f
history	data/data_raw/train.py	/^utf-8	@	property	\\n	def	history	(	self	)	:	\\n	    	return	self	.	_history	\\n		$/;"	f
history_view	data/bpe_corpus_raw/valid.py	/^utf-8	def	history_view	(	self	,	request	,	object_id	,	extra_context	=	None	)	:	\\n	    	opts	=	s/;"	f
history_view	data/data_raw/valid.py	/^utf-8	def	history_view	(	self	,	request	,	object_id	,	extra_context	=	None	)	:	\\n	    	opts	=	s/;"	f
host_addrinfo	data/bpe_corpus_raw/train.py	/^utf-8	def	host_addrinfo	(	host	=	None	,	socket_family	=	None	,	ipv4_multicast	=	False	)	:	\\n	\\/;"	f
host_addrinfo	data/data_raw/train.py	/^utf-8	def	host_addrinfo	(	host	=	None	,	socket_family	=	None	,	ipv4_multicast	=	False	)	:	\\n	\\/;"	f
hostname	data/bpe_corpus_raw/test.py	/^utf-8	def	hostname	(	arg	)	:	\\n	    	if	HOSTNAME_RE	.	match	(	arg	)	and	len	(	arg	)	<	256	:	\\n/;"	f
hostname	data/data_raw/test.py	/^utf-8	def	hostname	(	arg	)	:	\\n	    	if	HOSTNAME_RE	.	match	(	arg	)	and	len	(	arg	)	<	256	:	\\n/;"	f
htmlInitAutoClose	data/bpe_corpus_raw/valid.py	/^utf-8	def	htmlInitAutoClose	(	)	:	\\n	    	libxml2mod	.	htmlInitAutoClose	(	)	\\n		$/;"	f
htmlInitAutoClose	data/data_raw/valid.py	/^utf-8	def	htmlInitAutoClose	(	)	:	\\n	    	libxml2mod	.	htmlInitAutoClose	(	)	\\n		$/;"	f
html_footer	data/bpe_corpus_raw/train.py	/^utf-8	def	html_footer	(	self	)	:	\\n	    	self	.	output	.	write	(	'<\/table>\\\\n<\/body>\\\\n<\//;"	f
html_footer	data/data_raw/train.py	/^utf-8	def	html_footer	(	self	)	:	\\n	    	self	.	output	.	write	(	'<\/table>\\\\n<\/body>\\\\n<\//;"	f
http	data/bpe_corpus_raw/valid.py	/^utf-8	def	http	(	self	,	*	args	,	**	kwargs	)	:	\\n	    	return	self	.	credentials	.	authorize	(	/;"	f
http	data/data_raw/valid.py	/^utf-8	def	http	(	self	,	*	args	,	**	kwargs	)	:	\\n	    	return	self	.	credentials	.	authorize	(	/;"	f
hyphenate	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	hyphenate	(	self	)	:	\\n	    	return	self	.	get_pref	(	'hyphenate'	)	\\/;"	f
hyphenate	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	hyphenate	(	self	)	:	\\n	    	return	self	.	get_pref	(	'hyphenate'	)	\\/;"	f
i2c_write_block_data	data/bpe_corpus_raw/train.py	/^utf-8	def	i2c_write_block_data	(	self	,	handle	,	reg	,	data	)	:	\\n	    	if	len	(	data	)	:	\\n	 /;"	f
i2c_write_block_data	data/data_raw/train.py	/^utf-8	def	i2c_write_block_data	(	self	,	handle	,	reg	,	data	)	:	\\n	    	if	len	(	data	)	:	\\n	 /;"	f
ibo	data/bpe_corpus_raw/valid.py	/^utf-8	def	ibo	(	mol	,	orbocc	,	iaos	=	None	,	exponent	=	4	,	grad_tol	=	1e-08	,	max_iter	=	200	,	/;"	f
ibo	data/data_raw/valid.py	/^utf-8	def	ibo	(	mol	,	orbocc	,	iaos	=	None	,	exponent	=	4	,	grad_tol	=	1e-08	,	max_iter	=	200	,	/;"	f
icon	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	icon	(	self	)	->	Dict	:	\\n	    	return	self	.	_query_helper	(	'system'/;"	f
icon	data/data_raw/train.py	/^utf-8	@	property	\\n	def	icon	(	self	)	->	Dict	:	\\n	    	return	self	.	_query_helper	(	'system'/;"	f
id	data/bpe_corpus_raw/test.py	/^utf-8	@	property	\\n	def	id	(	self	)	:	\\n	    	return	self	.	get	(	ID	)	\\n		$/;"	f
id	data/data_raw/test.py	/^utf-8	@	property	\\n	def	id	(	self	)	:	\\n	    	return	self	.	get	(	ID	)	\\n		$/;"	f
ident	data/bpe_corpus_raw/test.py	/^utf-8	def	_setCssText	(	self	,	cssText	)	:	\\n	    	self	.	_checkReadonly	(	)	\\n	tokenizer	=	se/;"	f	function:_setCssText	file:
ident	data/data_raw/test.py	/^utf-8	def	_setCssText	(	self	,	cssText	)	:	\\n	    	self	.	_checkReadonly	(	)	\\n	tokenizer	=	se/;"	f	function:_setCssText	file:
idf	data/bpe_corpus_raw/valid.py	/^utf-8	@	since	(	'1.4.0'	)	\\n	def	idf	(	self	)	:	\\n	    	return	self	.	call	(	'idf'	)	\\n		$/;"	f
idf	data/data_raw/valid.py	/^utf-8	@	since	(	'1.4.0'	)	\\n	def	idf	(	self	)	:	\\n	    	return	self	.	call	(	'idf'	)	\\n		$/;"	f
ifft2	data/bpe_corpus_raw/valid.py	/^utf-8	def	ifft2	(	x	,	shape	=	None	,	axes	=	(	-	2	,	-	1	)	,	overwrite_x	=	False	)	:	\\n	    	ret/;"	f
ifft2	data/data_raw/valid.py	/^utf-8	def	ifft2	(	x	,	shape	=	None	,	axes	=	(	-	2	,	-	1	)	,	overwrite_x	=	False	)	:	\\n	    	ret/;"	f
ifgram	data/bpe_corpus_raw/valid.py	/^utf-8	def	ifgram	(	y	,	sr	=	22050	,	n_fft	=	2048	,	hop_length	=	None	,	win_length	=	None	,	\\n	w/;"	f
ifgram	data/data_raw/valid.py	/^utf-8	def	ifgram	(	y	,	sr	=	22050	,	n_fft	=	2048	,	hop_length	=	None	,	win_length	=	None	,	\\n	w/;"	f
ignore_protected_mode_settings	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	ignore_protected_mode_settings	(	self	)	:	\\n	    	return	self	.	_optio/;"	f
ignore_protected_mode_settings	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	ignore_protected_mode_settings	(	self	)	:	\\n	    	return	self	.	_optio/;"	f
image	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	image	(	self	)	:	\\n	    	return	self	.	_img	\\n		$/;"	f
image	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	image	(	self	)	:	\\n	    	return	self	.	_img	\\n		$/;"	f
image2np	data/bpe_corpus_raw/train.py	/^utf-8	def	image2np	(	image	:	Tensor	)	->	np	.	ndarray	:	\\n	    	res	=	image	.	cpu	(	)	.	permute/;"	f
image2np	data/data_raw/train.py	/^utf-8	def	image2np	(	image	:	Tensor	)	->	np	.	ndarray	:	\\n	    	res	=	image	.	cpu	(	)	.	permute/;"	f
image_id	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	image_id	(	self	)	:	\\n	    	return	self	.	_image_id	\\n		$/;"	f
image_id	data/data_raw/train.py	/^utf-8	@	property	\\n	def	image_id	(	self	)	:	\\n	    	return	self	.	_image_id	\\n		$/;"	f
image_pull_secrets	data/bpe_corpus_raw/valid.py	/^utf-8	@	image_pull_secrets	.	setter	\\n	def	image_pull_secrets	(	self	,	secrets	)	:	\\n	    	sel/;"	f
image_pull_secrets	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	image_pull_secrets	(	self	)	:	\\n	    	if	self	.	_image_pull_secrets	is/;"	f
image_pull_secrets	data/data_raw/valid.py	/^utf-8	@	image_pull_secrets	.	setter	\\n	def	image_pull_secrets	(	self	,	secrets	)	:	\\n	    	sel/;"	f
image_pull_secrets	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	image_pull_secrets	(	self	)	:	\\n	    	if	self	.	_image_pull_secrets	is/;"	f
image_quad_norm	data/bpe_corpus_raw/valid.py	/^utf-8	def	image_quad_norm	(	inarray	)	:	\\n	    	if	inarray	.	shape	[	-	1	]	!=	inarray	.	shape	[/;"	f
image_quad_norm	data/data_raw/valid.py	/^utf-8	def	image_quad_norm	(	inarray	)	:	\\n	    	if	inarray	.	shape	[	-	1	]	!=	inarray	.	shape	[/;"	f
impSymCache	data/bpe_corpus_raw/valid.py	/^utf-8	def	impSymCache	(	self	,	symcache	,	symfname	=	None	,	baseaddr	=	0	)	:	\\n	    	symtups	=	/;"	f
impSymCache	data/data_raw/valid.py	/^utf-8	def	impSymCache	(	self	,	symcache	,	symfname	=	None	,	baseaddr	=	0	)	:	\\n	    	symtups	=	/;"	f
importForDeclaration	data/bpe_corpus_raw/valid.py	/^utf-8	def	importForDeclaration	(	self	,	decl	)	:	\\n	    	sdecl	=	decl	\\n	while	sdecl	.	_cloneS/;"	f
importForDeclaration	data/data_raw/valid.py	/^utf-8	def	importForDeclaration	(	self	,	decl	)	:	\\n	    	sdecl	=	decl	\\n	while	sdecl	.	_cloneS/;"	f
import_context	data/bpe_corpus_raw/valid.py	/^utf-8	def	import_context	(	self	,	context	)	:	\\n	    	context_dict	=	context	.	to_dict	(	)	\\n	/;"	f
import_context	data/data_raw/valid.py	/^utf-8	def	import_context	(	self	,	context	)	:	\\n	    	context_dict	=	context	.	to_dict	(	)	\\n	/;"	f
import_from_glance	data/bpe_corpus_raw/valid.py	/^utf-8	def	import_from_glance	(	request	,	glance_id	)	:	\\n	    	if	openstackUtils	.	connect_to_o/;"	f
import_from_glance	data/data_raw/valid.py	/^utf-8	def	import_from_glance	(	request	,	glance_id	)	:	\\n	    	if	openstackUtils	.	connect_to_o/;"	f
import_obj	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	import_obj	(	cls	,	slc_to_import	,	slc_to_override	,	import_time	=	N/;"	f
import_obj	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	import_obj	(	cls	,	slc_to_import	,	slc_to_override	,	import_time	=	N/;"	f
import_status_handler	data/bpe_corpus_raw/valid.py	/^utf-8	@	transaction	.	non_atomic_requests	\\n	@	require_GET	\\n	@	ensure_csrf_cookie	\\n	@	login/;"	f
import_status_handler	data/data_raw/valid.py	/^utf-8	@	transaction	.	non_atomic_requests	\\n	@	require_GET	\\n	@	ensure_csrf_cookie	\\n	@	login/;"	f
import_transactions	data/bpe_corpus_raw/valid.py	/^utf-8	def	import_transactions	(	self	,	content	)	:	\\n	    	f	=	StringIO	.	StringIO	(	content	)	/;"	f
import_transactions	data/data_raw/valid.py	/^utf-8	def	import_transactions	(	self	,	content	)	:	\\n	    	f	=	StringIO	.	StringIO	(	content	)	/;"	f
import_xml	data/bpe_corpus_raw/valid.py	/^utf-8	def	import_xml	(	self	,	xml	)	:	\\n	    	capi	.	from_xml	(	self	.	ptr	,	xml	)	\\n		$/;"	f
import_xml	data/data_raw/valid.py	/^utf-8	def	import_xml	(	self	,	xml	)	:	\\n	    	capi	.	from_xml	(	self	.	ptr	,	xml	)	\\n		$/;"	f
imshow	data/bpe_corpus_raw/valid.py	/^utf-8	def	imshow	(	self	,	*	args	,	**	kwargs	)	:	\\n	    	ax	,	plt	=	self	.	_ax_plt_from_kw	(	kw/;"	f
imshow	data/data_raw/valid.py	/^utf-8	def	imshow	(	self	,	*	args	,	**	kwargs	)	:	\\n	    	ax	,	plt	=	self	.	_ax_plt_from_kw	(	kw/;"	f
in_top_k	data/bpe_corpus_raw/valid.py	/^utf-8	def	in_top_k	(	predictions	,	targets	,	k	)	:	\\n	    	predictions_top_k	=	T	.	argsort	(	pr/;"	f
in_top_k	data/data_raw/valid.py	/^utf-8	def	in_top_k	(	predictions	,	targets	,	k	)	:	\\n	    	predictions_top_k	=	T	.	argsort	(	pr/;"	f
inactivate_missing	data/bpe_corpus_raw/valid.py	/^utf-8	def	inactivate_missing	(	self	,	plugins	=	None	)	:	\\n	    	if	not	plugins	:	\\n	        	/;"	f
inactivate_missing	data/data_raw/valid.py	/^utf-8	def	inactivate_missing	(	self	,	plugins	=	None	)	:	\\n	    	if	not	plugins	:	\\n	        	/;"	f
inc_degree	data/bpe_corpus_raw/train.py	/^utf-8	def	inc_degree	(	self	,	node	)	:	\\n	    	return	len	(	self	.	inc_edges	(	node	)	)	\\n		$/;"	f
inc_degree	data/data_raw/train.py	/^utf-8	def	inc_degree	(	self	,	node	)	:	\\n	    	return	len	(	self	.	inc_edges	(	node	)	)	\\n		$/;"	f
inc_edges	data/bpe_corpus_raw/train.py	/^utf-8	def	inc_edges	(	self	,	node	)	:	\\n	    	try	:	\\n	        	return	list	(	self	.	nodes	[	n/;"	f
inc_edges	data/data_raw/train.py	/^utf-8	def	inc_edges	(	self	,	node	)	:	\\n	    	try	:	\\n	        	return	list	(	self	.	nodes	[	n/;"	f
include	data/bpe_corpus_raw/valid.py	/^utf-8	def	include	(	self	,	**	attrs	)	:	\\n	    	for	k	,	v	in	attrs	.	items	(	)	:	\\n	        	i/;"	f
include	data/bpe_corpus_raw/valid.py	/^utf-8	def	include	(	self	,	pattern	)	:	\\n	    	found	=	[	f	for	f	in	glob	(	pattern	)	if	not	os	/;"	f
include	data/data_raw/valid.py	/^utf-8	def	include	(	self	,	**	attrs	)	:	\\n	    	for	k	,	v	in	attrs	.	items	(	)	:	\\n	        	i/;"	f
include	data/data_raw/valid.py	/^utf-8	def	include	(	self	,	pattern	)	:	\\n	    	found	=	[	f	for	f	in	glob	(	pattern	)	if	not	os	/;"	f
include_before	data/bpe_corpus_raw/valid.py	/^utf-8	def	include_before	(	predicate	,	num	,	iterative	)	:	\\n	    	it0	,	it1	=	itertools	.	tee	/;"	f
include_before	data/data_raw/valid.py	/^utf-8	def	include_before	(	predicate	,	num	,	iterative	)	:	\\n	    	it0	,	it1	=	itertools	.	tee	/;"	f
include_system	data/bpe_corpus_raw/valid.py	/^utf-8	def	include_system	(	self	)	:	\\n	    	self	.	_pieces	.	append	(	_platform_tuple	(	)	)	\\n/;"	f
include_system	data/data_raw/valid.py	/^utf-8	def	include_system	(	self	)	:	\\n	    	self	.	_pieces	.	append	(	_platform_tuple	(	)	)	\\n/;"	f
increment_affinity	data/bpe_corpus_raw/valid.py	/^utf-8	def	increment_affinity	(	self	,	counters	)	:	\\n	    	self	.	affinity_counters	.	update	(	/;"	f
increment_affinity	data/data_raw/valid.py	/^utf-8	def	increment_affinity	(	self	,	counters	)	:	\\n	    	self	.	affinity_counters	.	update	(	/;"	f
indentedBlock	data/bpe_corpus_raw/train.py	/^utf-8	def	indentedBlock	(	blockStatementExpr	,	indentStack	,	indent	=	True	)	:	\\n	\\n	    	def	/;"	f
indentedBlock	data/data_raw/train.py	/^utf-8	def	indentedBlock	(	blockStatementExpr	,	indentStack	,	indent	=	True	)	:	\\n	\\n	    	def	/;"	f
index	data/bpe_corpus_raw/train.py	/^utf-8	@	wsgi	.	serializers	(	xml	=	common	.	MetadataTemplate	)	\\n	def	index	(	self	,	req	,	snap/;"	f
index	data/data_raw/train.py	/^utf-8	@	wsgi	.	serializers	(	xml	=	common	.	MetadataTemplate	)	\\n	def	index	(	self	,	req	,	snap/;"	f
indexof	data/bpe_corpus_raw/valid.py	/^utf-8	def	indexof	(	self	,	value	,	tag	=	WORD	)	:	\\n	    	match	=	lambda	a	,	b	:	a	.	endswith	(/;"	f
indexof	data/data_raw/valid.py	/^utf-8	def	indexof	(	self	,	value	,	tag	=	WORD	)	:	\\n	    	match	=	lambda	a	,	b	:	a	.	endswith	(/;"	f
inference	data/bpe_corpus_raw/valid.py	/^utf-8	def	inference	(	args	)	:	\\n	    	indir	=	os	.	path	.	join	(	args	.	log_dir	,	'train'	)	\\/;"	f
inference	data/data_raw/valid.py	/^utf-8	def	inference	(	args	)	:	\\n	    	indir	=	os	.	path	.	join	(	args	.	log_dir	,	'train'	)	\\/;"	f
info	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	info	(	self	)	:	\\n	    	return	self	.	args	[	2	]	\\n		$/;"	f
info	data/bpe_corpus_raw/train.py	/^utf-8	@	util	.	memoized_property	\\n	def	info	(	self	)	:	\\n	    	return	{	}	\\n		$/;"	f
info	data/bpe_corpus_raw/train.py	/^utf-8	def	info	(	path	)	:	\\n	    	fh	=	open	(	path	,	'rb'	)	\\n	info	=	__readHeader	(	fh	)	\\n	/;"	f
info	data/bpe_corpus_raw/valid.py	/^utf-8	def	info	(	)	:	\\n	    	try	:	\\n	        	platform_info	=	{	'system'	:	platform	.	system	/;"	f
info	data/data_raw/train.py	/^utf-8	@	property	\\n	def	info	(	self	)	:	\\n	    	return	self	.	args	[	2	]	\\n		$/;"	f
info	data/data_raw/train.py	/^utf-8	@	util	.	memoized_property	\\n	def	info	(	self	)	:	\\n	    	return	{	}	\\n		$/;"	f
info	data/data_raw/train.py	/^utf-8	def	info	(	path	)	:	\\n	    	fh	=	open	(	path	,	'rb'	)	\\n	info	=	__readHeader	(	fh	)	\\n	/;"	f
info	data/data_raw/valid.py	/^utf-8	def	info	(	)	:	\\n	    	try	:	\\n	        	platform_info	=	{	'system'	:	platform	.	system	/;"	f
init	data/bpe_corpus_raw/train.py	/^utf-8	def	init	(	root_dir	=	os	.	curdir	,	no_scm	=	False	,	force	=	False	)	:	\\n	    	root_dir	=/;"	f
init	data/bpe_corpus_raw/valid.py	/^utf-8	def	init	(	)	:	\\n	    	server_formatter	=	cli	.	make_formatter	(	'server'	)	\\n	\\n	@	cli/;"	f
init	data/bpe_corpus_raw/valid.py	/^utf-8	def	init	(	self	)	:	\\n	    	if	not	self	.	export_enable	:	\\n	        	return	None	\\n		u/;"	f
init	data/bpe_corpus_raw/valid.py	/^utf-8	def	init	(	self	,	config	=	None	)	:	\\n	    	if	not	self	.	initialized	:	\\n	        	self/;"	f
init	data/bpe_corpus_raw/valid.py	/^utf-8	def	init	(	self	,	one	,	times	)	:	\\n	    	self	.	one	=	one	\\n	self	.	times	=	times	\\n	i/;"	f
init	data/bpe_corpus_raw/valid.py	/^utf-8	def	init	(	sync	=	False	)	:	\\n	    	args	=	[	b''	]	\\n	if	sync	:	\\n	        	args	.	appe/;"	f
init	data/data_raw/train.py	/^utf-8	def	init	(	root_dir	=	os	.	curdir	,	no_scm	=	False	,	force	=	False	)	:	\\n	    	root_dir	=/;"	f
init	data/data_raw/valid.py	/^utf-8	def	init	(	)	:	\\n	    	server_formatter	=	cli	.	make_formatter	(	'server'	)	\\n	\\n	@	cli/;"	f
init	data/data_raw/valid.py	/^utf-8	def	init	(	self	)	:	\\n	    	if	not	self	.	export_enable	:	\\n	        	return	None	\\n		u/;"	f
init	data/data_raw/valid.py	/^utf-8	def	init	(	self	,	config	=	None	)	:	\\n	    	if	not	self	.	initialized	:	\\n	        	self/;"	f
init	data/data_raw/valid.py	/^utf-8	def	init	(	self	,	one	,	times	)	:	\\n	    	self	.	one	=	one	\\n	self	.	times	=	times	\\n	i/;"	f
init	data/data_raw/valid.py	/^utf-8	def	init	(	sync	=	False	)	:	\\n	    	args	=	[	b''	]	\\n	if	sync	:	\\n	        	args	.	appe/;"	f
init_app	data/bpe_corpus_raw/train.py	/^utf-8	def	init_app	(	self	,	app	,	scopes	=	None	,	client_secrets_file	=	None	,	client_id	=	\\n	N/;"	f
init_app	data/data_raw/train.py	/^utf-8	def	init_app	(	self	,	app	,	scopes	=	None	,	client_secrets_file	=	None	,	client_id	=	\\n	N/;"	f
init_brpy	data/bpe_corpus_raw/test.py	/^utf-8	def	init_brpy	(	br_loc	=	'\/usr\/local\/lib'	)	:	\\n	    	lib_path	=	os	.	environ	.	get	(	/;"	f
init_brpy	data/data_raw/test.py	/^utf-8	def	init_brpy	(	br_loc	=	'\/usr\/local\/lib'	)	:	\\n	    	lib_path	=	os	.	environ	.	get	(	/;"	f
init_business	data/bpe_corpus_raw/valid.py	/^utf-8	def	init_business	(	client	)	:	\\n	    	http	=	onedrivesdk	.	HttpProvider	(	)	\\n	auth	=	o/;"	f
init_business	data/data_raw/valid.py	/^utf-8	def	init_business	(	client	)	:	\\n	    	http	=	onedrivesdk	.	HttpProvider	(	)	\\n	auth	=	o/;"	f
init_from_checkpoint	data/bpe_corpus_raw/train.py	/^utf-8	@	deprecated	(	'2016-08-22'	,	\\n	'Please use tf.contrib.framework.init_from_checkpoint in/;"	f
init_from_checkpoint	data/data_raw/train.py	/^utf-8	@	deprecated	(	'2016-08-22'	,	\\n	'Please use tf.contrib.framework.init_from_checkpoint in/;"	f
init_libvirt_state	data/bpe_corpus_raw/train.py	/^utf-8	def	init_libvirt_state	(	self	)	:	\\n	    	if	self	.	__initialized	:	\\n	        	return	\\/;"	f
init_libvirt_state	data/data_raw/train.py	/^utf-8	def	init_libvirt_state	(	self	)	:	\\n	    	if	self	.	__initialized	:	\\n	        	return	\\/;"	f
init_opt	data/bpe_corpus_raw/train.py	/^utf-8	def	init_opt	(	self	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
init_opt	data/data_raw/train.py	/^utf-8	def	init_opt	(	self	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
init_params	data/bpe_corpus_raw/valid.py	/^utf-8	def	init_params	(	self	,	initializer	=	Uniform	(	0.01	)	,	arg_params	=	None	,	\\n	aux_para/;"	f
init_params	data/data_raw/valid.py	/^utf-8	def	init_params	(	self	,	initializer	=	Uniform	(	0.01	)	,	arg_params	=	None	,	\\n	aux_para/;"	f
init_qtapp	data/bpe_corpus_raw/train.py	/^utf-8	def	init_qtapp	(	)	:	\\n	    	global	QApp	\\n	QApp	=	QtWidgets	.	QApplication	.	instance	(/;"	f
init_qtapp	data/data_raw/train.py	/^utf-8	def	init_qtapp	(	)	:	\\n	    	global	QApp	\\n	QApp	=	QtWidgets	.	QApplication	.	instance	(/;"	f
init_tensors	data/bpe_corpus_raw/valid.py	/^utf-8	def	init_tensors	(	self	,	seed	=	None	)	:	\\n	    	return	[	(	tf	.	random_normal	(	shape	,/;"	f
init_tensors	data/data_raw/valid.py	/^utf-8	def	init_tensors	(	self	,	seed	=	None	)	:	\\n	    	return	[	(	tf	.	random_normal	(	shape	,/;"	f
init_ui	data/bpe_corpus_raw/train.py	/^utf-8	def	init_ui	(	self	,	parent	)	:	\\n	    	factory	=	self	.	factory	\\n	if	factory	.	columns/;"	f
init_ui	data/data_raw/train.py	/^utf-8	def	init_ui	(	self	,	parent	)	:	\\n	    	factory	=	self	.	factory	\\n	if	factory	.	columns/;"	f
initialise	data/bpe_corpus_raw/valid.py	/^utf-8	def	initialise	(	self	,	data_param	,	new_partition	=	False	,	data_split_file	=	None	,	\\n	/;"	f
initialise	data/data_raw/valid.py	/^utf-8	def	initialise	(	self	,	data_param	,	new_partition	=	False	,	data_split_file	=	None	,	\\n	/;"	f
initialize	data/bpe_corpus_raw/train.py	/^utf-8	@	asyncio	.	coroutine	\\n	def	initialize	(	self	)	:	\\n	    	if	not	SMBus2Asyncio	:	\\n	  /;"	f
initialize	data/bpe_corpus_raw/train.py	/^utf-8	def	initialize	(	)	:	\\n	    	print	(	'Connecting to Arduino....'	)	\\n	arduino_ports	=	[	/;"	f
initialize	data/data_raw/train.py	/^utf-8	@	asyncio	.	coroutine	\\n	def	initialize	(	self	)	:	\\n	    	if	not	SMBus2Asyncio	:	\\n	  /;"	f
initialize	data/data_raw/train.py	/^utf-8	def	initialize	(	)	:	\\n	    	print	(	'Connecting to Arduino....'	)	\\n	arduino_ports	=	[	/;"	f
initialize_conditions	data/bpe_corpus_raw/valid.py	/^utf-8	def	initialize_conditions	(	segment	)	:	\\n	    	alt	=	segment	.	altitude	\\n	xf	=	segment/;"	f
initialize_conditions	data/data_raw/valid.py	/^utf-8	def	initialize_conditions	(	segment	)	:	\\n	    	alt	=	segment	.	altitude	\\n	xf	=	segment/;"	f
initialize_options	data/bpe_corpus_raw/train.py	/^utf-8	def	get_cmdclass	(	)	:	\\n	    	if	'versioneer'	in	sys	.	modules	:	\\n	        	del	sys	.	/;"	m	class:get_cmdclass.cmd_version
initialize_options	data/data_raw/train.py	/^utf-8	def	get_cmdclass	(	)	:	\\n	    	if	'versioneer'	in	sys	.	modules	:	\\n	        	del	sys	.	/;"	m	class:get_cmdclass.cmd_version
initialize_theta	data/bpe_corpus_raw/test.py	/^utf-8	def	initialize_theta	(	input_layer_size	,	hidden_layer_size	,	number_of_labels	)	:	\\n	   /;"	f
initialize_theta	data/data_raw/test.py	/^utf-8	def	initialize_theta	(	input_layer_size	,	hidden_layer_size	,	number_of_labels	)	:	\\n	   /;"	f
initiate_job	data/bpe_corpus_raw/train.py	/^utf-8	def	initiate_job	(	self	,	vault_name	,	job_data	)	:	\\n	    	uri	=	'vaults\/%s\/jobs'	%	va/;"	f
initiate_job	data/data_raw/train.py	/^utf-8	def	initiate_job	(	self	,	vault_name	,	job_data	)	:	\\n	    	uri	=	'vaults\/%s\/jobs'	%	va/;"	f
inject_metadata_term_lists	data/bpe_corpus_raw/valid.py	/^utf-8	def	inject_metadata_term_lists	(	self	,	term_dict	)	:	\\n	    	check_topic_model_string_fo/;"	f
inject_metadata_term_lists	data/data_raw/valid.py	/^utf-8	def	inject_metadata_term_lists	(	self	,	term_dict	)	:	\\n	    	check_topic_model_string_fo/;"	f
inner	data/bpe_corpus_raw/train.py	/^utf-8	def	scheduled_job	(	self	,	trigger	,	args	=	None	,	kwargs	=	None	,	id	=	None	,	name	=	None/;"	f	function:scheduled_job	file:
inner	data/bpe_corpus_raw/valid.py	/^utf-8	def	_e	(	op	,	inv	=	False	)	:	\\n	\\n	    	def	inner	(	self	,	rhs	)	:	\\n	        	if	inv	/;"	f	function:_e	file:
inner	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_catching_exception_from_subgen_and_returning	(	self	)	:	\\n	    	trace	=	[	]	\\n	/;"	f	function:test_catching_exception_from_subgen_and_returning	file:
inner	data/data_raw/train.py	/^utf-8	def	scheduled_job	(	self	,	trigger	,	args	=	None	,	kwargs	=	None	,	id	=	None	,	name	=	None/;"	f	function:scheduled_job	file:
inner	data/data_raw/valid.py	/^utf-8	def	_e	(	op	,	inv	=	False	)	:	\\n	\\n	    	def	inner	(	self	,	rhs	)	:	\\n	        	if	inv	/;"	f	function:_e	file:
inner	data/data_raw/valid.py	/^utf-8	def	test_catching_exception_from_subgen_and_returning	(	self	)	:	\\n	    	trace	=	[	]	\\n	/;"	f	function:test_catching_exception_from_subgen_and_returning	file:
inplace_csr_row_scale	data/bpe_corpus_raw/train.py	/^utf-8	def	inplace_csr_row_scale	(	X	,	scale	)	:	\\n	    	assert	scale	.	shape	[	0	]	==	X	.	shape/;"	f
inplace_csr_row_scale	data/data_raw/train.py	/^utf-8	def	inplace_csr_row_scale	(	X	,	scale	)	:	\\n	    	assert	scale	.	shape	[	0	]	==	X	.	shape/;"	f
input_shape	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	input_shape	(	self	)	:	\\n	    	self	.	_ensure_is_connected	(	)	\\n	ret/;"	f
input_shape	data/data_raw/train.py	/^utf-8	@	property	\\n	def	input_shape	(	self	)	:	\\n	    	self	.	_ensure_is_connected	(	)	\\n	ret/;"	f
inputs	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	inputs	(	self	)	:	\\n	    	return	[	IrOpNode	(	n	)	for	n	in	self	.	node/;"	f
inputs	data/data_raw/train.py	/^utf-8	@	property	\\n	def	inputs	(	self	)	:	\\n	    	return	[	IrOpNode	(	n	)	for	n	in	self	.	node/;"	f
insecure_skip_tls_verify	data/bpe_corpus_raw/valid.py	/^utf-8	@	insecure_skip_tls_verify	.	setter	\\n	def	insecure_skip_tls_verify	(	self	,	insecure_ski/;"	f
insecure_skip_tls_verify	data/data_raw/valid.py	/^utf-8	@	insecure_skip_tls_verify	.	setter	\\n	def	insecure_skip_tls_verify	(	self	,	insecure_ski/;"	f
insert	data/bpe_corpus_raw/valid.py	/^utf-8	def	insert	(	self	,	index	,	chars	)	:	\\n	    	if	not	chars	:	\\n	        	return	\\n		cha/;"	f
insert	data/data_raw/valid.py	/^utf-8	def	insert	(	self	,	index	,	chars	)	:	\\n	    	if	not	chars	:	\\n	        	return	\\n		cha/;"	f
insertText	data/bpe_corpus_raw/train.py	/^utf-8	def	insertText	(	self	,	data	,	insertBefore	=	None	)	:	\\n	    	raise	NotImplementedError	/;"	f
insertText	data/data_raw/train.py	/^utf-8	def	insertText	(	self	,	data	,	insertBefore	=	None	)	:	\\n	    	raise	NotImplementedError	/;"	f
insert_grad_of	data/bpe_corpus_raw/test.py	/^utf-8	def	insert_grad_of	(	var	)	:	\\n	    	raise	ValueError	(	\\n	'use the tangent decorator fo/;"	f
insert_grad_of	data/data_raw/test.py	/^utf-8	def	insert_grad_of	(	var	)	:	\\n	    	raise	ValueError	(	\\n	'use the tangent decorator fo/;"	f
insert_java	data_utils/get_file_contents.py	/^def insert_java(filename, rootdir):$/;"	f
insert_on	data/bpe_corpus_raw/train.py	/^utf-8	def	insert_on	(	self	,	path	,	loc	=	None	,	replace	=	False	)	:	\\n	    	loc	=	loc	or	self	/;"	f
insert_on	data/data_raw/train.py	/^utf-8	def	insert_on	(	self	,	path	,	loc	=	None	,	replace	=	False	)	:	\\n	    	loc	=	loc	or	self	/;"	f
insert_python	data_utils/get_file_contents.py	/^def insert_python(filename, rootdir):$/;"	f
insert_sql	data/bpe_corpus_raw/valid.py	/^utf-8	@	check_precondition	\\n	def	insert_sql	(	self	,	gid	,	sid	,	did	,	scid	,	foid	)	:	\\n	   /;"	f
insert_sql	data/data_raw/valid.py	/^utf-8	@	check_precondition	\\n	def	insert_sql	(	self	,	gid	,	sid	,	did	,	scid	,	foid	)	:	\\n	   /;"	f
inspect_llvm	data/bpe_corpus_raw/train.py	/^utf-8	def	inspect_llvm	(	self	)	:	\\n	    	return	self	.	_library	.	get_llvm_str	(	)	\\n		$/;"	f
inspect_llvm	data/data_raw/train.py	/^utf-8	def	inspect_llvm	(	self	)	:	\\n	    	return	self	.	_library	.	get_llvm_str	(	)	\\n		$/;"	f
install	data/bpe_corpus_raw/valid.py	/^utf-8	@	abc	.	abstractmethod	\\n	def	install	(	self	,	state	)	:	\\n	$/;"	f
install	data/data_raw/valid.py	/^utf-8	@	abc	.	abstractmethod	\\n	def	install	(	self	,	state	)	:	\\n	$/;"	f
install_as_egg	data/bpe_corpus_raw/train.py	/^utf-8	def	install_as_egg	(	self	,	destination_eggdir	)	:	\\n	    	with	zipfile	.	ZipFile	(	self	/;"	f
install_as_egg	data/data_raw/train.py	/^utf-8	def	install_as_egg	(	self	,	destination_eggdir	)	:	\\n	    	with	zipfile	.	ZipFile	(	self	/;"	f
install_binary	data/bpe_corpus_raw/train.py	/^utf-8	@	feature	(	'install_bin'	)	\\n	@	after	(	'apply_core'	)	\\n	@	before	(	'apply_link'	,	'ap/;"	f
install_binary	data/data_raw/train.py	/^utf-8	@	feature	(	'install_bin'	)	\\n	@	after	(	'apply_core'	)	\\n	@	before	(	'apply_link'	,	'ap/;"	f
install_browser_packages	data/bpe_corpus_raw/valid.py	/^utf-8	def	install_browser_packages	(	self	)	:	\\n	    	raise	NotImplementedError	(	\\n	'Cannot b/;"	f
install_browser_packages	data/data_raw/valid.py	/^utf-8	def	install_browser_packages	(	self	)	:	\\n	    	raise	NotImplementedError	(	\\n	'Cannot b/;"	f
install_data	data/bpe_corpus_raw/valid.py	/^utf-8	def	install_data	(	config_source	,	approaches	=	None	)	:	\\n	    	from	fabric	.	api	import/;"	f
install_data	data/data_raw/valid.py	/^utf-8	def	install_data	(	config_source	,	approaches	=	None	)	:	\\n	    	from	fabric	.	api	import/;"	f
instance_info	data/bpe_corpus_raw/valid.py	/^utf-8	def	instance_info	(	request	,	instance	)	:	\\n	    	user	=	request	.	user	\\n	role	=	Role	/;"	f
instance_info	data/data_raw/valid.py	/^utf-8	def	instance_info	(	request	,	instance	)	:	\\n	    	user	=	request	.	user	\\n	role	=	Role	/;"	f
integer	data/bpe_corpus_raw/train.py	/^utf-8	def	integer	(	self	)	:	\\n	    	result	=	''	\\n	while	self	.	current_char	is	not	None	and	/;"	f
integer	data/data_raw/train.py	/^utf-8	def	integer	(	self	)	:	\\n	    	result	=	''	\\n	while	self	.	current_char	is	not	None	and	/;"	f
integer_repr	data/bpe_corpus_raw/train.py	/^utf-8	def	integer_repr	(	x	)	:	\\n	    	import	numpy	as	np	\\n	if	x	.	dtype	==	np	.	float32	:	\\/;"	f
integer_repr	data/data_raw/train.py	/^utf-8	def	integer_repr	(	x	)	:	\\n	    	import	numpy	as	np	\\n	if	x	.	dtype	==	np	.	float32	:	\\/;"	f
integrate	data/bpe_corpus_raw/train.py	/^utf-8	def	integrate	(	self	,	a	,	b	,	extrapolate	=	None	)	:	\\n	    	ib	=	self	.	antiderivative	/;"	f
integrate	data/data_raw/train.py	/^utf-8	def	integrate	(	self	,	a	,	b	,	extrapolate	=	None	)	:	\\n	    	ib	=	self	.	antiderivative	/;"	f
interact_GxG	data/bpe_corpus_raw/valid.py	/^utf-8	def	interact_GxG	(	pheno	,	snps1	,	snps2	=	None	,	K	=	None	,	covs	=	None	)	:	\\n	    	if	K/;"	f
interact_GxG	data/data_raw/valid.py	/^utf-8	def	interact_GxG	(	pheno	,	snps1	,	snps2	=	None	,	K	=	None	,	covs	=	None	)	:	\\n	    	if	K/;"	f
internal	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_nested_sequence	(	)	:	\\n	\\n	\\n	    	@	attr	.	s	\\n	class	WrappedIntent	(	objec/;"	m	class:test_nested_sequence.WrappedIntent
internal	data/data_raw/valid.py	/^utf-8	def	test_nested_sequence	(	)	:	\\n	\\n	\\n	    	@	attr	.	s	\\n	class	WrappedIntent	(	objec/;"	m	class:test_nested_sequence.WrappedIntent
internal_api_url	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	internal_api_url	(	self	)	:	\\n	    	root	=	helpers	.	get_value	(	'CRED/;"	f
internal_api_url	data/data_raw/train.py	/^utf-8	@	property	\\n	def	internal_api_url	(	self	)	:	\\n	    	root	=	helpers	.	get_value	(	'CRED/;"	f
internal_convert_n_to_tensor_or_indexed_slices	data/bpe_corpus_raw/valid.py	/^utf-8	def	internal_convert_n_to_tensor_or_indexed_slices	(	values	,	dtype	=	None	,	name	\\n	=	No/;"	f
internal_convert_n_to_tensor_or_indexed_slices	data/data_raw/valid.py	/^utf-8	def	internal_convert_n_to_tensor_or_indexed_slices	(	values	,	dtype	=	None	,	name	\\n	=	No/;"	f
internal_paging	data/bpe_corpus_raw/train.py	/^utf-8	def	list	(	self	,	resource_group_name	,	circuit_name	,	custom_headers	=	None	,	raw	=	\\n	F/;"	f	function:list	file:
internal_paging	data/bpe_corpus_raw/train.py	/^utf-8	def	list_available_ssl_predefined_policies	(	self	,	custom_headers	=	None	,	raw	=	\\n	Fals/;"	f	function:list_available_ssl_predefined_policies	file:
internal_paging	data/bpe_corpus_raw/train.py	/^utf-8	def	list_by_automation_account	(	self	,	resource_group_name	,	\\n	automation_account_name	/;"	f	function:list_by_automation_account	file:
internal_paging	data/bpe_corpus_raw/valid.py	/^utf-8	def	list	(	self	,	custom_headers	=	None	,	raw	=	False	,	**	operation_config	)	:	\\n	\\n	  /;"	f	function:list	file:
internal_paging	data/data_raw/train.py	/^utf-8	def	list	(	self	,	resource_group_name	,	circuit_name	,	custom_headers	=	None	,	raw	=	\\n	F/;"	f	function:list	file:
internal_paging	data/data_raw/train.py	/^utf-8	def	list_available_ssl_predefined_policies	(	self	,	custom_headers	=	None	,	raw	=	\\n	Fals/;"	f	function:list_available_ssl_predefined_policies	file:
internal_paging	data/data_raw/train.py	/^utf-8	def	list_by_automation_account	(	self	,	resource_group_name	,	\\n	automation_account_name	/;"	f	function:list_by_automation_account	file:
internal_paging	data/data_raw/valid.py	/^utf-8	def	list	(	self	,	custom_headers	=	None	,	raw	=	False	,	**	operation_config	)	:	\\n	\\n	  /;"	f	function:list	file:
interp10	data/bpe_corpus_raw/train.py	/^utf-8	def	interp10	(	x	)	:	\\n	    	L	=	len	(	x	)	\\n	return	np	.	interp	(	np	.	r_	[	0	:	L	-	0.9/;"	f
interp10	data/data_raw/train.py	/^utf-8	def	interp10	(	x	)	:	\\n	    	L	=	len	(	x	)	\\n	return	np	.	interp	(	np	.	r_	[	0	:	L	-	0.9/;"	f
intersection	data/bpe_corpus_raw/valid.py	/^utf-8	def	intersection	(	self	,	other	)	:	\\n	    	self	.	_assert_can_do_setop	(	other	)	\\n	if	/;"	f
intersection	data/data_raw/valid.py	/^utf-8	def	intersection	(	self	,	other	)	:	\\n	    	self	.	_assert_can_do_setop	(	other	)	\\n	if	/;"	f
invalidPythonNames	data/bpe_corpus_raw/valid.py	/^utf-8	def	invalidPythonNames	(	)	:	\\n	    	ts	=	[	getattr	(	types	,	n	)	for	n	in	dir	(	types	)	/;"	f
invalidPythonNames	data/data_raw/valid.py	/^utf-8	def	invalidPythonNames	(	)	:	\\n	    	ts	=	[	getattr	(	types	,	n	)	for	n	in	dir	(	types	)	/;"	f
invalid_op	data/bpe_corpus_raw/valid.py	/^utf-8	def	make_invalid_op	(	name	)	:	\\n	\\n	    	def	invalid_op	(	self	,	other	=	None	)	:	\\n	 /;"	f	function:make_invalid_op	file:
invalid_op	data/data_raw/valid.py	/^utf-8	def	make_invalid_op	(	name	)	:	\\n	\\n	    	def	invalid_op	(	self	,	other	=	None	)	:	\\n	 /;"	f	function:make_invalid_op	file:
inverse	data/bpe_corpus_raw/valid.py	/^utf-8	def	inverse	(	self	,	argindex	=	1	)	:	\\n	    	return	atanh	\\n		$/;"	f
inverse	data/data_raw/valid.py	/^utf-8	def	inverse	(	self	,	argindex	=	1	)	:	\\n	    	return	atanh	\\n		$/;"	f
inverse_deriv	data/bpe_corpus_raw/train.py	/^utf-8	def	inverse_deriv	(	self	,	z	)	:	\\n	    	t	=	np	.	exp	(	z	)	\\n	return	t	\/	(	1	+	t	)	**	/;"	f
inverse_deriv	data/data_raw/train.py	/^utf-8	def	inverse_deriv	(	self	,	z	)	:	\\n	    	t	=	np	.	exp	(	z	)	\\n	return	t	\/	(	1	+	t	)	**	/;"	f
ip2int	data/bpe_corpus_raw/valid.py	/^utf-8	def	ip2int	(	ip_str	)	:	\\n	    	try	:	\\n	        	return	struct	.	unpack	(	'!I'	,	socket/;"	f
ip2int	data/data_raw/valid.py	/^utf-8	def	ip2int	(	ip_str	)	:	\\n	    	try	:	\\n	        	return	struct	.	unpack	(	'!I'	,	socket/;"	f
isCocoaTk	data/bpe_corpus_raw/valid.py	/^utf-8	def	isCocoaTk	(	)	:	\\n	    	assert	_tk_type	is	not	None	\\n	return	_tk_type	==	'cocoa'	\\/;"	f
isCocoaTk	data/data_raw/valid.py	/^utf-8	def	isCocoaTk	(	)	:	\\n	    	assert	_tk_type	is	not	None	\\n	return	_tk_type	==	'cocoa'	\\/;"	f
isCovers	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	isCovers	(	self	)	->	bool	:	\\n	    	return	(	self	.	_matches	(	self	.	/;"	f
isCovers	data/data_raw/train.py	/^utf-8	@	property	\\n	def	isCovers	(	self	)	->	bool	:	\\n	    	return	(	self	.	_matches	(	self	.	/;"	f
isID	data/bpe_corpus_raw/train.py	/^utf-8	def	isID	(	self	,	elem	,	attr	)	:	\\n	    	if	elem	is	None	:	\\n	        	elem__o	=	None	\\/;"	f
isID	data/data_raw/train.py	/^utf-8	def	isID	(	self	,	elem	,	attr	)	:	\\n	    	if	elem	is	None	:	\\n	        	elem__o	=	None	\\/;"	f
isOrphan	data/bpe_corpus_raw/valid.py	/^utf-8	def	isOrphan	(	self	,	item	)	:	\\n	    	from	.	folder	import	Folder	\\n	return	not	Folder	/;"	f
isOrphan	data/data_raw/valid.py	/^utf-8	def	isOrphan	(	self	,	item	)	:	\\n	    	from	.	folder	import	Folder	\\n	return	not	Folder	/;"	f
isRemoveButtonSensitive	data/bpe_corpus_raw/train.py	/^utf-8	def	isRemoveButtonSensitive	(	self	)	:	\\n	    	if	not	self	.	cur_preset	:	\\n	        	re/;"	f
isRemoveButtonSensitive	data/data_raw/train.py	/^utf-8	def	isRemoveButtonSensitive	(	self	)	:	\\n	    	if	not	self	.	cur_preset	:	\\n	        	re/;"	f
isSupportedLLVMVersion	data/bpe_corpus_raw/valid.py	/^utf-8	def	isSupportedLLVMVersion	(	llvmProgram	,	supportedVersions	=	None	)	:	\\n	    	assert	ll/;"	f
isSupportedLLVMVersion	data/data_raw/valid.py	/^utf-8	def	isSupportedLLVMVersion	(	llvmProgram	,	supportedVersions	=	None	)	:	\\n	    	assert	ll/;"	f
isValid	data/bpe_corpus_raw/valid.py	/^utf-8	def	isValid	(	text	)	:	\\n	    	return	any	(	word	in	text	for	word	in	[	'\\u62cd\\u7167'	,/;"	f
isValid	data/data_raw/valid.py	/^utf-8	def	isValid	(	text	)	:	\\n	    	return	any	(	word	in	text	for	word	in	[	'\\u62cd\\u7167'	,/;"	f
is_alive	data/bpe_corpus_raw/valid.py	/^utf-8	def	is_alive	(	self	)	:	\\n	    	return	self	.	expiry_date	>	time	(	)	\\n		$/;"	f
is_alive	data/data_raw/valid.py	/^utf-8	def	is_alive	(	self	)	:	\\n	    	return	self	.	expiry_date	>	time	(	)	\\n		$/;"	f
is_all_white	data/bpe_corpus_raw/train.py	/^utf-8	def	is_all_white	(	line	)	:	\\n	    	return	re	.	match	(	'^\\\\\\\\s*$'	,	line	)	is	not	No/;"	f
is_all_white	data/data_raw/train.py	/^utf-8	def	is_all_white	(	line	)	:	\\n	    	return	re	.	match	(	'^\\\\\\\\s*$'	,	line	)	is	not	No/;"	f
is_allowed	data/bpe_corpus_raw/train.py	/^utf-8	def	is_allowed	(	self	,	filename	)	:	\\n	    	return	True	\\n		$/;"	f
is_allowed	data/data_raw/train.py	/^utf-8	def	is_allowed	(	self	,	filename	)	:	\\n	    	return	True	\\n		$/;"	f
is_ambiguous	data/bpe_corpus_raw/train.py	/^utf-8	def	is_ambiguous	(	self	,	dt	)	:	\\n	    	if	not	self	.	hasdst	:	\\n	        	return	False/;"	f
is_ambiguous	data/bpe_corpus_raw/train.py	/^utf-8	def	is_ambiguous	(	self	,	dt	)	:	\\n	    	naive_dst	=	self	.	_naive_is_dst	(	dt	)	\\n	retu/;"	f
is_ambiguous	data/data_raw/train.py	/^utf-8	def	is_ambiguous	(	self	,	dt	)	:	\\n	    	if	not	self	.	hasdst	:	\\n	        	return	False/;"	f
is_ambiguous	data/data_raw/train.py	/^utf-8	def	is_ambiguous	(	self	,	dt	)	:	\\n	    	naive_dst	=	self	.	_naive_is_dst	(	dt	)	\\n	retu/;"	f
is_attrib_modified	data/bpe_corpus_raw/valid.py	/^utf-8	def	is_attrib_modified	(	kev	)	:	\\n	    	return	kev	.	fflags	&	select	.	KQ_NOTE_ATTRIB	\\/;"	f
is_attrib_modified	data/data_raw/valid.py	/^utf-8	def	is_attrib_modified	(	kev	)	:	\\n	    	return	kev	.	fflags	&	select	.	KQ_NOTE_ATTRIB	\\/;"	f
is_closed	data/bpe_corpus_raw/valid.py	/^utf-8	def	is_closed	(	self	,	name	=	None	)	:	\\n	    	if	name	is	None	:	\\n	        	name	=	'%s_/;"	f
is_closed	data/data_raw/valid.py	/^utf-8	def	is_closed	(	self	,	name	=	None	)	:	\\n	    	if	name	is	None	:	\\n	        	name	=	'%s_/;"	f
is_compatible	data/bpe_corpus_raw/train.py	/^utf-8	def	is_compatible	(	self	)	:	\\n	    	return	True	,	''	\\n		$/;"	f
is_compatible	data/data_raw/train.py	/^utf-8	def	is_compatible	(	self	)	:	\\n	    	return	True	,	''	\\n		$/;"	f
is_endpoint	data/bpe_corpus_raw/train.py	/^utf-8	@	public	\\n	def	is_endpoint	(	self	)	:	\\n	    	return	self	.	_target	==	Pattern	.	URI_TA/;"	f
is_endpoint	data/data_raw/train.py	/^utf-8	@	public	\\n	def	is_endpoint	(	self	)	:	\\n	    	return	self	.	_target	==	Pattern	.	URI_TA/;"	f
is_exhausted	data/bpe_corpus_raw/valid.py	/^utf-8	def	is_exhausted	(	self	)	:	\\n	    	retry_counts	=	(	self	.	total	,	self	.	connect	,	self/;"	f
is_exhausted	data/bpe_corpus_raw/valid.py	/^utf-8	def	is_exhausted	(	self	)	:	\\n	    	retry_counts	=	self	.	total	,	self	.	connect	,	self	./;"	f
is_exhausted	data/data_raw/valid.py	/^utf-8	def	is_exhausted	(	self	)	:	\\n	    	retry_counts	=	(	self	.	total	,	self	.	connect	,	self/;"	f
is_exhausted	data/data_raw/valid.py	/^utf-8	def	is_exhausted	(	self	)	:	\\n	    	retry_counts	=	self	.	total	,	self	.	connect	,	self	./;"	f
is_fifo	data/bpe_corpus_raw/valid.py	/^utf-8	def	is_fifo	(	self	)	:	\\n	    	try	:	\\n	        	return	S_ISFIFO	(	self	.	stat	(	)	.	st_/;"	f
is_fifo	data/data_raw/valid.py	/^utf-8	def	is_fifo	(	self	)	:	\\n	    	try	:	\\n	        	return	S_ISFIFO	(	self	.	stat	(	)	.	st_/;"	f
is_file	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	is_file	(	self	)	:	\\n	    	return	self	.	plugin	.	is_file	\\n		$/;"	f
is_file	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	is_file	(	self	)	:	\\n	    	return	self	.	plugin	.	is_file	\\n		$/;"	f
is_frozen	data/bpe_corpus_raw/valid.py	/^utf-8	def	is_frozen	(	G	)	:	\\n	    	try	:	\\n	        	return	G	.	frozen	\\n		except	AttributeE/;"	f
is_frozen	data/data_raw/valid.py	/^utf-8	def	is_frozen	(	G	)	:	\\n	    	try	:	\\n	        	return	G	.	frozen	\\n		except	AttributeE/;"	f
is_hop_by_hop	data/bpe_corpus_raw/train.py	/^utf-8	def	is_hop_by_hop	(	header_name	)	:	\\n	    	return	_hoppish	(	header_name	.	lower	(	)	)	\\/;"	f
is_hop_by_hop	data/data_raw/train.py	/^utf-8	def	is_hop_by_hop	(	header_name	)	:	\\n	    	return	_hoppish	(	header_name	.	lower	(	)	)	\\/;"	f
is_ip_address	data/bpe_corpus_raw/valid.py	/^utf-8	def	is_ip_address	(	hostname	)	:	\\n	    	import	six	\\n	try	:	\\n	        	ip_address	(	s/;"	f
is_ip_address	data/data_raw/valid.py	/^utf-8	def	is_ip_address	(	hostname	)	:	\\n	    	import	six	\\n	try	:	\\n	        	ip_address	(	s/;"	f
is_locked	data/bpe_corpus_raw/valid.py	/^utf-8	def	is_locked	(	self	)	:	\\n	    	if	self	.	is_old_lockfile	(	)	:	\\n	        	return	Fals/;"	f
is_locked	data/data_raw/valid.py	/^utf-8	def	is_locked	(	self	)	:	\\n	    	if	self	.	is_old_lockfile	(	)	:	\\n	        	return	Fals/;"	f
is_lyndon	data/bpe_corpus_raw/valid.py	/^utf-8	def	is_lyndon	(	w	)	:	\\n	    	i	=	0	\\n	for	let	in	w	[	1	:	]	:	\\n	        	if	w	[	i	]	<	/;"	f
is_lyndon	data/data_raw/valid.py	/^utf-8	def	is_lyndon	(	w	)	:	\\n	    	i	=	0	\\n	for	let	in	w	[	1	:	]	:	\\n	        	if	w	[	i	]	<	/;"	f
is_math_text	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	@	cbook	.	deprecated	(	'3.1'	)	\\n	def	is_math_text	(	s	,	usetex	=	None/;"	f
is_math_text	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	@	cbook	.	deprecated	(	'3.1'	)	\\n	def	is_math_text	(	s	,	usetex	=	None/;"	f
is_mouse_scrolling	data/bpe_corpus_raw/test.py	/^utf-8	@	property	\\n	def	is_mouse_scrolling	(	self	,	*	args	)	:	\\n	    	return	'button'	in	self/;"	f
is_mouse_scrolling	data/data_raw/test.py	/^utf-8	@	property	\\n	def	is_mouse_scrolling	(	self	,	*	args	)	:	\\n	    	return	'button'	in	self/;"	f
is_multipart	data/bpe_corpus_raw/train.py	/^utf-8	def	is_multipart	(	self	)	:	\\n	    	return	isinstance	(	self	.	_payload	,	list	)	\\n		$/;"	f
is_multipart	data/data_raw/train.py	/^utf-8	def	is_multipart	(	self	)	:	\\n	    	return	isinstance	(	self	.	_payload	,	list	)	\\n		$/;"	f
is_number	data/bpe_corpus_raw/train.py	/^utf-8	def	is_number	(	obj	)	:	\\n	    	return	isinstance	(	obj	,	(	Number	,	np	.	number	)	)	\\n	/;"	f
is_number	data/data_raw/train.py	/^utf-8	def	is_number	(	obj	)	:	\\n	    	return	isinstance	(	obj	,	(	Number	,	np	.	number	)	)	\\n	/;"	f
is_on	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	is_on	(	self	)	->	bool	:	\\n	    	return	self	.	_device	.	on	\\n		$/;"	f
is_on	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	is_on	(	self	)	->	bool	:	\\n	    	return	self	.	_device	.	on	\\n		$/;"	f
is_package	data/bpe_corpus_raw/test.py	/^utf-8	def	is_package	(	self	,	fullname	)	:	\\n	    	return	hasattr	(	self	.	__get_module	(	fulln/;"	f
is_package	data/bpe_corpus_raw/valid.py	/^utf-8	def	is_package	(	self	,	fullname	)	:	\\n	    	return	hasattr	(	self	.	__get_module	(	fulln/;"	f
is_package	data/data_raw/test.py	/^utf-8	def	is_package	(	self	,	fullname	)	:	\\n	    	return	hasattr	(	self	.	__get_module	(	fulln/;"	f
is_package	data/data_raw/valid.py	/^utf-8	def	is_package	(	self	,	fullname	)	:	\\n	    	return	hasattr	(	self	.	__get_module	(	fulln/;"	f
is_picking_or_placing	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	is_picking_or_placing	(	self	)	:	\\n	    	return	(	self	.	_robot_status/;"	f
is_picking_or_placing	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	is_picking_or_placing	(	self	)	:	\\n	    	return	(	self	.	_robot_status/;"	f
is_png	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	is_png	(	self	)	:	\\n	    	if	hasattr	(	self	,	'_m_is_png'	)	:	\\n	    /;"	f
is_png	data/data_raw/train.py	/^utf-8	@	property	\\n	def	is_png	(	self	)	:	\\n	    	if	hasattr	(	self	,	'_m_is_png'	)	:	\\n	    /;"	f
is_printable	data/bpe_corpus_raw/train.py	/^utf-8	def	is_printable	(	unichar	)	:	\\n	    	return	unicodedata	.	category	(	unichar	)	not	in	_/;"	f
is_printable	data/bpe_corpus_raw/valid.py	/^utf-8	def	is_printable	(	c	)	:	\\n	    	global	have_ascii	\\n	if	have_ascii	:	\\n	        	retur/;"	f
is_printable	data/data_raw/train.py	/^utf-8	def	is_printable	(	unichar	)	:	\\n	    	return	unicodedata	.	category	(	unichar	)	not	in	_/;"	f
is_printable	data/data_raw/valid.py	/^utf-8	def	is_printable	(	c	)	:	\\n	    	global	have_ascii	\\n	if	have_ascii	:	\\n	        	retur/;"	f
is_ready_to_next_step	data/bpe_corpus_raw/train.py	/^utf-8	def	is_ready_to_next_step	(	self	)	:	\\n	    	return	True	\\n		$/;"	f
is_ready_to_next_step	data/data_raw/train.py	/^utf-8	def	is_ready_to_next_step	(	self	)	:	\\n	    	return	True	\\n		$/;"	f
is_resource	data/bpe_corpus_raw/train.py	/^utf-8	def	is_resource	(	filename	)	:	\\n	    	return	extension_in	(	filename	,	Resource	.	ALLOWE/;"	f
is_resource	data/data_raw/train.py	/^utf-8	def	is_resource	(	filename	)	:	\\n	    	return	extension_in	(	filename	,	Resource	.	ALLOWE/;"	f
is_sorted	data/bpe_corpus_raw/valid.py	/^utf-8	@	misc_tools	.	limit_positional_arguments	(	1	)	\\n	def	is_sorted	(	iterable	,	rising	=	Tr/;"	f
is_sorted	data/data_raw/valid.py	/^utf-8	@	misc_tools	.	limit_positional_arguments	(	1	)	\\n	def	is_sorted	(	iterable	,	rising	=	Tr/;"	f
is_ssl_error	data/bpe_corpus_raw/valid.py	/^utf-8	def	is_ssl_error	(	error	=	None	)	:	\\n	    	exc_types	=	ssl	.	SSLError	,	\\n	try	:	\\n	  /;"	f
is_ssl_error	data/data_raw/valid.py	/^utf-8	def	is_ssl_error	(	error	=	None	)	:	\\n	    	exc_types	=	ssl	.	SSLError	,	\\n	try	:	\\n	  /;"	f
is_sync_settings_error	data/bpe_corpus_raw/train.py	/^utf-8	def	is_sync_settings_error	(	self	)	:	\\n	    	return	self	.	_tag	==	'sync_settings_error'/;"	f
is_sync_settings_error	data/data_raw/train.py	/^utf-8	def	is_sync_settings_error	(	self	)	:	\\n	    	return	self	.	_tag	==	'sync_settings_error'/;"	f
is_trainable	data/bpe_corpus_raw/valid.py	/^utf-8	@	skip_on_condition	(	'sys.version_info >= (3,7)'	,	'test conflicts with PEP 479'	)	\\n	de/;"	m	class:test_codecorator_no_iteration.CoroutineBiNode
is_trainable	data/data_raw/valid.py	/^utf-8	@	skip_on_condition	(	'sys.version_info >= (3,7)'	,	'test conflicts with PEP 479'	)	\\n	de/;"	m	class:test_codecorator_no_iteration.CoroutineBiNode
is_unit	data/bpe_corpus_raw/valid.py	/^utf-8	def	is_unit	(	x	)	:	\\n	    	return	isinstance	(	x	,	Unit	)	\\n		$/;"	f
is_unit	data/data_raw/valid.py	/^utf-8	def	is_unit	(	x	)	:	\\n	    	return	isinstance	(	x	,	Unit	)	\\n		$/;"	f
is_up_to_date	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	is_up_to_date	(	self	)	:	\\n	    	if	self	.	_uptodate	is	None	:	\\n	   /;"	f
is_up_to_date	data/data_raw/train.py	/^utf-8	@	property	\\n	def	is_up_to_date	(	self	)	:	\\n	    	if	self	.	_uptodate	is	None	:	\\n	   /;"	f
is_url	data/bpe_corpus_raw/train.py	/^utf-8	def	is_url	(	self	,	template	)	:	\\n	    	if	':'	not	in	template	:	\\n	        	return	Fal/;"	f
is_url	data/data_raw/train.py	/^utf-8	def	is_url	(	self	,	template	)	:	\\n	    	if	':'	not	in	template	:	\\n	        	return	Fal/;"	f
is_valid	data/bpe_corpus_raw/test.py	/^utf-8	def	is_valid	(	number	)	:	\\n	    	try	:	\\n	        	return	bool	(	validate	(	number	)	)	/;"	f
is_valid	data/bpe_corpus_raw/train.py	/^utf-8	def	is_valid	(	self	)	:	\\n	    	return	True	\\n		$/;"	f
is_valid	data/data_raw/test.py	/^utf-8	def	is_valid	(	number	)	:	\\n	    	try	:	\\n	        	return	bool	(	validate	(	number	)	)	/;"	f
is_valid	data/data_raw/train.py	/^utf-8	def	is_valid	(	self	)	:	\\n	    	return	True	\\n		$/;"	f
is_valid_y	data/bpe_corpus_raw/valid.py	/^utf-8	def	is_valid_y	(	y	,	warning	=	False	,	throw	=	False	,	name	=	None	)	:	\\n	    	y	=	np	.	a/;"	f
is_valid_y	data/data_raw/valid.py	/^utf-8	def	is_valid_y	(	y	,	warning	=	False	,	throw	=	False	,	name	=	None	)	:	\\n	    	y	=	np	.	a/;"	f
is_volume_muted	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	is_volume_muted	(	self	)	:	\\n	    	return	self	.	_volume_muted	\\n		$/;"	f
is_volume_muted	data/data_raw/train.py	/^utf-8	@	property	\\n	def	is_volume_muted	(	self	)	:	\\n	    	return	self	.	_volume_muted	\\n		$/;"	f
isatty	data/bpe_corpus_raw/train.py	/^utf-8	def	isatty	(	self	)	:	\\n	    	return	self	.	stream	.	isatty	(	)	\\n		$/;"	f
isatty	data/data_raw/train.py	/^utf-8	def	isatty	(	self	)	:	\\n	    	return	self	.	stream	.	isatty	(	)	\\n		$/;"	f
isdisjoint	data/bpe_corpus_raw/test.py	/^utf-8	def	isdisjoint	(	self	,	other	)	:	\\n	    	for	value	in	other	:	\\n	        	if	value	in	s/;"	f
isdisjoint	data/data_raw/test.py	/^utf-8	def	isdisjoint	(	self	,	other	)	:	\\n	    	for	value	in	other	:	\\n	        	if	value	in	s/;"	f
isint	data/bpe_corpus_raw/valid.py	/^utf-8	def	isint	(	x	)	:	\\n	    	try	:	\\n	        	a	=	float	(	x	)	\\n	b	=	int	(	a	)	\\n		excep/;"	f
isint	data/data_raw/valid.py	/^utf-8	def	isint	(	x	)	:	\\n	    	try	:	\\n	        	a	=	float	(	x	)	\\n	b	=	int	(	a	)	\\n		excep/;"	f
ismemberdescriptor	data/bpe_corpus_raw/train.py	/^utf-8	def	ismemberdescriptor	(	object	)	:	\\n	    	return	False	\\n		$/;"	f
ismemberdescriptor	data/data_raw/train.py	/^utf-8	def	ismemberdescriptor	(	object	)	:	\\n	    	return	False	\\n		$/;"	f
ismodule	data/bpe_corpus_raw/valid.py	/^utf-8	def	ismodule	(	object	)	:	\\n	    	return	isinstance	(	object	,	types	.	ModuleType	)	\\n		$/;"	f
ismodule	data/data_raw/valid.py	/^utf-8	def	ismodule	(	object	)	:	\\n	    	return	isinstance	(	object	,	types	.	ModuleType	)	\\n		$/;"	f
isolate	data/bpe_corpus_raw/train.py	/^utf-8	def	isolate	(	state	,	sel	=	None	,	panel	=	None	)	:	\\n	    	if	sel	!=	None	and	not	sel	:	/;"	f
isolate	data/data_raw/train.py	/^utf-8	def	isolate	(	state	,	sel	=	None	,	panel	=	None	)	:	\\n	    	if	sel	!=	None	and	not	sel	:	/;"	f
isolated_filesystem	data/bpe_corpus_raw/valid.py	/^utf-8	@	contextlib	.	contextmanager	\\n	def	isolated_filesystem	(	self	)	:	\\n	    	cwd	=	os	.	g/;"	f
isolated_filesystem	data/data_raw/valid.py	/^utf-8	@	contextlib	.	contextmanager	\\n	def	isolated_filesystem	(	self	)	:	\\n	    	cwd	=	os	.	g/;"	f
issubdtype	data/bpe_corpus_raw/test.py	/^utf-8	def	issubdtype	(	arg1	,	arg2	)	:	\\n	    	if	issubclass_	(	arg2	,	generic	)	:	\\n	        /;"	f
issubdtype	data/data_raw/test.py	/^utf-8	def	issubdtype	(	arg1	,	arg2	)	:	\\n	    	if	issubclass_	(	arg2	,	generic	)	:	\\n	        /;"	f
istraceback	data/bpe_corpus_raw/valid.py	/^utf-8	def	istraceback	(	object	)	:	\\n	    	return	isinstance	(	object	,	types	.	TracebackType	)/;"	f
istraceback	data/data_raw/valid.py	/^utf-8	def	istraceback	(	object	)	:	\\n	    	return	isinstance	(	object	,	types	.	TracebackType	)/;"	f
item_join_column	data/bpe_corpus_raw/train.py	/^utf-8	def	item_join_column	(	self	,	table	)	:	\\n	    	return	self	.	join_info	[	table	]	[	0	]	\\/;"	f
item_join_column	data/data_raw/train.py	/^utf-8	def	item_join_column	(	self	,	table	)	:	\\n	    	return	self	.	join_info	[	table	]	[	0	]	\\/;"	f
items	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	items	(	self	)	:	\\n	    	return	super	(	)	.	items	\\n		$/;"	f
items	data/data_raw/train.py	/^utf-8	@	property	\\n	def	items	(	self	)	:	\\n	    	return	super	(	)	.	items	\\n		$/;"	f
items_for_result	data/bpe_corpus_raw/valid.py	/^utf-8	def	items_for_result	(	cl	,	result	,	form	)	:	\\n	\\n	    	def	link_in_col	(	is_first	,	fi/;"	f
items_for_result	data/data_raw/valid.py	/^utf-8	def	items_for_result	(	cl	,	result	,	form	)	:	\\n	\\n	    	def	link_in_col	(	is_first	,	fi/;"	f
iter_content	data/bpe_corpus_raw/train.py	/^utf-8	def	iter_content	(	self	,	chunk_size	=	1	,	decode_unicode	=	False	)	:	\\n	\\n	    	def	gen/;"	f
iter_content	data/data_raw/train.py	/^utf-8	def	iter_content	(	self	,	chunk_size	=	1	,	decode_unicode	=	False	)	:	\\n	\\n	    	def	gen/;"	f
iter_crm_project_liens	data/bpe_corpus_raw/valid.py	/^utf-8	@	abc	.	abstractmethod	\\n	def	iter_crm_project_liens	(	self	,	project_number	)	:	\\n	$/;"	f
iter_crm_project_liens	data/data_raw/valid.py	/^utf-8	@	abc	.	abstractmethod	\\n	def	iter_crm_project_liens	(	self	,	project_number	)	:	\\n	$/;"	f
iter_distribution_names	data/bpe_corpus_raw/valid.py	/^utf-8	def	iter_distribution_names	(	self	)	:	\\n	    	for	pkg	in	(	self	.	packages	or	(	)	)	:	\\/;"	f
iter_distribution_names	data/data_raw/valid.py	/^utf-8	def	iter_distribution_names	(	self	)	:	\\n	    	for	pkg	in	(	self	.	packages	or	(	)	)	:	\\/;"	f
iter_initial_states	data/bpe_corpus_raw/valid.py	/^utf-8	def	iter_initial_states	(	self	)	:	\\n	    	from	six	.	moves	import	filter	\\n	return	filt/;"	f
iter_initial_states	data/data_raw/valid.py	/^utf-8	def	iter_initial_states	(	self	)	:	\\n	    	from	six	.	moves	import	filter	\\n	return	filt/;"	f
iter_multi_items	data/bpe_corpus_raw/valid.py	/^utf-8	def	iter_multi_items	(	mapping	)	:	\\n	    	if	isinstance	(	mapping	,	MultiDict	)	:	\\n	  /;"	f
iter_multi_items	data/data_raw/valid.py	/^utf-8	def	iter_multi_items	(	mapping	)	:	\\n	    	if	isinstance	(	mapping	,	MultiDict	)	:	\\n	  /;"	f
iter_qs	data/bpe_corpus_raw/valid.py	/^utf-8	def	iter_qs	(	qs	,	adapter	)	:	\\n	    	for	obj	in	qs	.	no_cache	(	)	.	no_dereference	(	)	/;"	f
iter_qs	data/data_raw/valid.py	/^utf-8	def	iter_qs	(	qs	,	adapter	)	:	\\n	    	for	obj	in	qs	.	no_cache	(	)	.	no_dereference	(	)	/;"	f
iter_unique_scheme_hostname	data/bpe_corpus_raw/valid.py	/^utf-8	def	iter_unique_scheme_hostname	(	urls	)	:	\\n	    	scheme_hostname	=	set	(	)	\\n	for	x	in/;"	f
iter_unique_scheme_hostname	data/data_raw/valid.py	/^utf-8	def	iter_unique_scheme_hostname	(	urls	)	:	\\n	    	scheme_hostname	=	set	(	)	\\n	for	x	in/;"	f
iterate	data/bpe_corpus_raw/valid.py	/^utf-8	def	iterate	(	func	,	x	)	:	\\n	    	while	True	:	\\n	        	yield	x	\\n	x	=	func	(	x	)	\\/;"	f
iterate	data/data_raw/valid.py	/^utf-8	def	iterate	(	func	,	x	)	:	\\n	    	while	True	:	\\n	        	yield	x	\\n	x	=	func	(	x	)	\\/;"	f
iterate_properties	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	iterate_properties	(	self	)	:	\\n	    	if	Mapper	.	_new_mappers	:	\\n	 /;"	f
iterate_properties	data/data_raw/train.py	/^utf-8	@	property	\\n	def	iterate_properties	(	self	)	:	\\n	    	if	Mapper	.	_new_mappers	:	\\n	 /;"	f
iterdata	data/bpe_corpus_raw/valid.py	/^utf-8	def	iterdata	(	d	,	offset	,	tokenlist	,	it	)	:	\\n	    	assert	len	(	tokenlist	)	,	'Empty /;"	f
iterdata	data/data_raw/valid.py	/^utf-8	def	iterdata	(	d	,	offset	,	tokenlist	,	it	)	:	\\n	    	assert	len	(	tokenlist	)	,	'Empty /;"	f
iteritems	data/bpe_corpus_raw/train.py	/^utf-8	def	iteritems	(	d	)	:	\\n	    	return	iter	(	d	.	items	(	)	)	\\n		$/;"	f
iteritems	data/bpe_corpus_raw/valid.py	/^utf-8	def	iteritems	(	d	,	**	kw	)	:	\\n	    	return	iter	(	getattr	(	d	,	_iteritems	)	(	**	kw	)	/;"	f
iteritems	data/data_raw/train.py	/^utf-8	def	iteritems	(	d	)	:	\\n	    	return	iter	(	d	.	items	(	)	)	\\n		$/;"	f
iteritems	data/data_raw/valid.py	/^utf-8	def	iteritems	(	d	,	**	kw	)	:	\\n	    	return	iter	(	getattr	(	d	,	_iteritems	)	(	**	kw	)	/;"	f
iterkeys	data/bpe_corpus_raw/valid.py	/^utf-8	def	iterkeys	(	d	)	:	\\n	    	return	iter	(	getattr	(	d	,	_iterkeys	)	(	)	)	\\n		$/;"	f
iterkeys	data/data_raw/valid.py	/^utf-8	def	iterkeys	(	d	)	:	\\n	    	return	iter	(	getattr	(	d	,	_iterkeys	)	(	)	)	\\n		$/;"	f
itersubclasses	data/bpe_corpus_raw/train.py	/^utf-8	def	itersubclasses	(	cls	,	_seen	=	None	)	:	\\n	    	if	_seen	is	None	:	\\n	        	_seen/;"	f
itersubclasses	data/data_raw/train.py	/^utf-8	def	itersubclasses	(	cls	,	_seen	=	None	)	:	\\n	    	if	_seen	is	None	:	\\n	        	_seen/;"	f
itervalues	data/bpe_corpus_raw/test.py	/^utf-8	def	itervalues	(	self	)	:	\\n	    	for	k	in	self	:	\\n	        	yield	self	[	k	]	\\n			$/;"	f
itervalues	data/bpe_corpus_raw/valid.py	/^utf-8	def	itervalues	(	self	)	:	\\n	    	for	k	in	self	:	\\n	        	yield	self	[	k	]	\\n			$/;"	f
itervalues	data/data_raw/test.py	/^utf-8	def	itervalues	(	self	)	:	\\n	    	for	k	in	self	:	\\n	        	yield	self	[	k	]	\\n			$/;"	f
itervalues	data/data_raw/valid.py	/^utf-8	def	itervalues	(	self	)	:	\\n	    	for	k	in	self	:	\\n	        	yield	self	[	k	]	\\n			$/;"	f
java_df	data_utils/get_repolist.py	/^java_df = java_df.loc[pd.to_numeric(java_df["langs_files_count_Java"], errors="coerce") >= 10]$/;"	v
java_df	data_utils/get_repolist.py	/^java_df = repo_list[["url", "langs_files_count_Java"]]$/;"	v
jdbc	data/bpe_corpus_raw/valid.py	/^utf-8	@	since	(	1.4	)	\\n	def	jdbc	(	self	,	url	,	table	,	mode	=	None	,	properties	=	None	)	:	\\/;"	f
jdbc	data/data_raw/valid.py	/^utf-8	@	since	(	1.4	)	\\n	def	jdbc	(	self	,	url	,	table	,	mode	=	None	,	properties	=	None	)	:	\\/;"	f
jiffies	data/bpe_corpus_raw/train.py	/^utf-8	def	jiffies	(	_proc_pid_stat	=	'\/proc\/%s\/stat'	%	os	.	getpid	(	)	,	_load_time	=	[	]	)	:/;"	f
jiffies	data/data_raw/train.py	/^utf-8	def	jiffies	(	_proc_pid_stat	=	'\/proc\/%s\/stat'	%	os	.	getpid	(	)	,	_load_time	=	[	]	)	:/;"	f
join	data/bpe_corpus_raw/train.py	/^utf-8	def	join	(	self	)	:	\\n	    	self	.	_future	=	False	\\n	self	.	_job	.	poll	(	)	\\n	self	.	/;"	f
join	data/data_raw/train.py	/^utf-8	def	join	(	self	)	:	\\n	    	self	.	_future	=	False	\\n	self	.	_job	.	poll	(	)	\\n	self	.	/;"	f
json_encode	data/bpe_corpus_raw/train.py	/^utf-8	def	json_encode	(	value	)	:	\\n	    	return	json	.	dumps	(	value	)	.	replace	(	'<\/'	,	'<\\/;"	f
json_encode	data/data_raw/train.py	/^utf-8	def	json_encode	(	value	)	:	\\n	    	return	json	.	dumps	(	value	)	.	replace	(	'<\/'	,	'<\\/;"	f
json_out	data/bpe_corpus_raw/valid.py	/^utf-8	def	json_out	(	content_type	=	'application\/json'	,	debug	=	False	,	handler	=	json_handler/;"	f
json_out	data/data_raw/valid.py	/^utf-8	def	json_out	(	content_type	=	'application\/json'	,	debug	=	False	,	handler	=	json_handler/;"	f
jump_to_id	data/bpe_corpus_raw/valid.py	/^utf-8	@	ensure_csrf_cookie	\\n	@	ensure_valid_course_key	\\n	def	jump_to_id	(	request	,	course_i/;"	f
jump_to_id	data/data_raw/valid.py	/^utf-8	@	ensure_csrf_cookie	\\n	@	ensure_valid_course_key	\\n	def	jump_to_id	(	request	,	course_i/;"	f
jw_sz_indices	data/bpe_corpus_raw/test.py	/^utf-8	def	jw_sz_indices	(	sz_value	,	n_qubits	,	n_electrons	=	None	,	up_index	=	up_index	,	\\n	d/;"	f
jw_sz_indices	data/data_raw/test.py	/^utf-8	def	jw_sz_indices	(	sz_value	,	n_qubits	,	n_electrons	=	None	,	up_index	=	up_index	,	\\n	d/;"	f
k	data/bpe_corpus_raw/valid.py	/^utf-8	def	put_circle	(	self	,	x0	,	y0	,	radius	,	char	=	None	,	color	=	None	,	background	=	None	/;"	f	function:put_circle	file:
k	data/data_raw/valid.py	/^utf-8	def	put_circle	(	self	,	x0	,	y0	,	radius	,	char	=	None	,	color	=	None	,	background	=	None	/;"	f	function:put_circle	file:
k_prototypes	data/bpe_corpus_raw/valid.py	/^utf-8	def	k_prototypes	(	X	,	categorical	,	n_clusters	,	max_iter	,	num_dissim	,	\\n	cat_dissim	,/;"	f
k_prototypes	data/data_raw/valid.py	/^utf-8	def	k_prototypes	(	X	,	categorical	,	n_clusters	,	max_iter	,	num_dissim	,	\\n	cat_dissim	,/;"	f
kde	data/bpe_corpus_raw/train.py	/^utf-8	def	kde	(	data	,	grid	,	package	,	**	kwargs	)	:	\\n	    	if	package	==	'statsmodels'	:	\\n/;"	f
kde	data/data_raw/train.py	/^utf-8	def	kde	(	data	,	grid	,	package	,	**	kwargs	)	:	\\n	    	if	package	==	'statsmodels'	:	\\n/;"	f
kernel	data/bpe_corpus_raw/valid.py	/^utf-8	def	cc_diff	(	x	,	a	,	b	,	period	=	None	,	_cache	=	_cache	)	:	\\n	    	tmp	=	asarray	(	x	)/;"	f	function:cc_diff	file:
kernel	data/data_raw/valid.py	/^utf-8	def	cc_diff	(	x	,	a	,	b	,	period	=	None	,	_cache	=	_cache	)	:	\\n	    	tmp	=	asarray	(	x	)/;"	f	function:cc_diff	file:
kernel_files	data/bpe_corpus_raw/train.py	/^utf-8	def	kernel_files	(	self	,	local_file_set	)	:	\\n	    	if	self	.	authz_kernels	is	None	:	\\/;"	f
kernel_files	data/data_raw/train.py	/^utf-8	def	kernel_files	(	self	,	local_file_set	)	:	\\n	    	if	self	.	authz_kernels	is	None	:	\\/;"	f
kernel_imag	data/bpe_corpus_raw/valid.py	/^utf-8	def	shift	(	x	,	a	,	period	=	None	,	_cache	=	_cache	)	:	\\n	    	tmp	=	asarray	(	x	)	\\n	i/;"	f	function:shift.kernel_real	file:
kernel_imag	data/data_raw/valid.py	/^utf-8	def	shift	(	x	,	a	,	period	=	None	,	_cache	=	_cache	)	:	\\n	    	tmp	=	asarray	(	x	)	\\n	i/;"	f	function:shift.kernel_real	file:
kernel_real	data/bpe_corpus_raw/valid.py	/^utf-8	def	shift	(	x	,	a	,	period	=	None	,	_cache	=	_cache	)	:	\\n	    	tmp	=	asarray	(	x	)	\\n	i/;"	f	function:shift	file:
kernel_real	data/data_raw/valid.py	/^utf-8	def	shift	(	x	,	a	,	period	=	None	,	_cache	=	_cache	)	:	\\n	    	tmp	=	asarray	(	x	)	\\n	i/;"	f	function:shift	file:
key_signature_event	data/bpe_corpus_raw/train.py	/^utf-8	def	key_signature_event	(	self	,	key	=	'C'	)	:	\\n	    	if	key	.	islower	(	)	:	\\n	       /;"	f
key_signature_event	data/data_raw/train.py	/^utf-8	def	key_signature_event	(	self	,	key	=	'C'	)	:	\\n	    	if	key	.	islower	(	)	:	\\n	       /;"	f
keys	data/bpe_corpus_raw/train.py	/^utf-8	def	keys	(	self	)	:	\\n	    	return	list	(	self	)	\\n		$/;"	f
keys	data/bpe_corpus_raw/valid.py	/^utf-8	def	keys	(	self	)	:	\\n	    	return	list	(	self	)	\\n		$/;"	f
keys	data/data_raw/train.py	/^utf-8	def	keys	(	self	)	:	\\n	    	return	list	(	self	)	\\n		$/;"	f
keys	data/data_raw/valid.py	/^utf-8	def	keys	(	self	)	:	\\n	    	return	list	(	self	)	\\n		$/;"	f
kill_background_grayscale	data/bpe_corpus_raw/valid.py	/^utf-8	def	kill_background_grayscale	(	image	,	bg	)	:	\\n	    	H	,	W	,	_	=	image	.	shape	\\n	R	=	/;"	f
kill_background_grayscale	data/data_raw/valid.py	/^utf-8	def	kill_background_grayscale	(	image	,	bg	)	:	\\n	    	H	,	W	,	_	=	image	.	shape	\\n	R	=	/;"	f
killbycn	data/bpe_corpus_raw/valid.py	/^utf-8	def	killbycn	(	self	,	cn	)	:	\\n	    	return	self	.	execute	(	'kill'	,	cn	)	[	0	]	\\n		$/;"	f
killbycn	data/data_raw/valid.py	/^utf-8	def	killbycn	(	self	,	cn	)	:	\\n	    	return	self	.	execute	(	'kill'	,	cn	)	[	0	]	\\n		$/;"	f
kinetic_energy	data/bpe_corpus_raw/valid.py	/^utf-8	def	kinetic_energy	(	velocity	)	:	\\n	    	return	np	.	sum	(	np	.	square	(	velocity	)	)	\//;"	f
kinetic_energy	data/data_raw/valid.py	/^utf-8	def	kinetic_energy	(	velocity	)	:	\\n	    	return	np	.	sum	(	np	.	square	(	velocity	)	)	\//;"	f
kmeans1d	data/bpe_corpus_raw/train.py	/^utf-8	def	kmeans1d	(	data	,	k	,	cutoff	=	False	,	maxIter	=	False	)	:	\\n	\\n	    	def	getCluster/;"	f
kmeans1d	data/data_raw/train.py	/^utf-8	def	kmeans1d	(	data	,	k	,	cutoff	=	False	,	maxIter	=	False	)	:	\\n	\\n	    	def	getCluster/;"	f
l2w_typed	data/bpe_corpus_raw/valid.py	/^utf-8	def	l2w_typed	(	self	,	data	)	:	\\n	    	t	=	type	(	data	)	\\n	assert	t	in	self	.	fn_l2w_t/;"	f
l2w_typed	data/data_raw/valid.py	/^utf-8	def	l2w_typed	(	self	,	data	)	:	\\n	    	t	=	type	(	data	)	\\n	assert	t	in	self	.	fn_l2w_t/;"	f
last	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	last	(	self	)	:	\\n	    	last_items	=	[	]	\\n	for	k	,	v	in	self	.	items/;"	f
last	data/bpe_corpus_raw/valid.py	/^utf-8	def	last	(	self	)	:	\\n	    	return	self	.	_statcmd	(	'LAST'	)	\\n		$/;"	f
last	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	last	(	self	)	:	\\n	    	last_items	=	[	]	\\n	for	k	,	v	in	self	.	items/;"	f
last	data/data_raw/valid.py	/^utf-8	def	last	(	self	)	:	\\n	    	return	self	.	_statcmd	(	'LAST'	)	\\n		$/;"	f
last_qty	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	last_qty	(	self	)	:	\\n	    	return	self	.	_last_qty	\\n		$/;"	f
last_qty	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	last_qty	(	self	)	:	\\n	    	return	self	.	_last_qty	\\n		$/;"	f
lastmod	data/bpe_corpus_raw/train.py	/^utf-8	def	lastmod	(	self	,	obj	)	:	\\n	    	nodetypes	=	obj	.	nodetypes_published	(	)	\\n	if	not/;"	f
lastmod	data/data_raw/train.py	/^utf-8	def	lastmod	(	self	,	obj	)	:	\\n	    	nodetypes	=	obj	.	nodetypes_published	(	)	\\n	if	not/;"	f
latexdiff	data/bpe_corpus_raw/valid.py	/^utf-8	def	latexdiff	(	files1	,	files2	)	:	\\n	    	if	not	which	(	'latexdiff'	)	:	\\n	        	_/;"	f
latexdiff	data/data_raw/valid.py	/^utf-8	def	latexdiff	(	files1	,	files2	)	:	\\n	    	if	not	which	(	'latexdiff'	)	:	\\n	        	_/;"	f
latitude	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	latitude	(	self	)	:	\\n	    	return	self	.	_properties	[	'latitude'	]	\\/;"	f
latitude	data/data_raw/train.py	/^utf-8	@	property	\\n	def	latitude	(	self	)	:	\\n	    	return	self	.	_properties	[	'latitude'	]	\\/;"	f
launchApplication	data/bpe_corpus_raw/train.py	/^utf-8	def	launchApplication	(	self	,	pchAppKey	)	:	\\n	    	fn	=	self	.	function_table	.	launchA/;"	f
launchApplication	data/data_raw/train.py	/^utf-8	def	launchApplication	(	self	,	pchAppKey	)	:	\\n	    	fn	=	self	.	function_table	.	launchA/;"	f
layer_norm	data/bpe_corpus_raw/valid.py	/^utf-8	@	templatedoc	(	)	\\n	def	layer_norm	(	input	,	scale	=	True	,	shift	=	True	,	begin_norm_ax/;"	f
layer_norm	data/data_raw/valid.py	/^utf-8	@	templatedoc	(	)	\\n	def	layer_norm	(	input	,	scale	=	True	,	shift	=	True	,	begin_norm_ax/;"	f
layer_test	data/bpe_corpus_raw/train.py	/^utf-8	def	layer_test	(	layer_cls	,	kwargs	=	{	}	,	input_shape	=	None	,	input_dtype	=	None	,	\\n	/;"	f
layer_test	data/data_raw/train.py	/^utf-8	def	layer_test	(	layer_cls	,	kwargs	=	{	}	,	input_shape	=	None	,	input_dtype	=	None	,	\\n	/;"	f
layers	data/bpe_corpus_raw/valid.py	/^utf-8	@	abstractmethod	\\n	def	layers	(	self	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
layers	data/data_raw/valid.py	/^utf-8	@	abstractmethod	\\n	def	layers	(	self	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
lcm	data/bpe_corpus_raw/valid.py	/^utf-8	def	lcm	(	self	,	term	)	:	\\n	    	result	=	Integer	(	0	)	\\n	if	not	isinstance	(	term	,	I/;"	f
lcm	data/data_raw/valid.py	/^utf-8	def	lcm	(	self	,	term	)	:	\\n	    	result	=	Integer	(	0	)	\\n	if	not	isinstance	(	term	,	I/;"	f
ldflags	data/bpe_corpus_raw/valid.py	/^utf-8	def	ldflags	(	libs	=	True	,	flags	=	False	,	libs_dir	=	False	,	include_dir	=	False	)	:	\\n/;"	f
ldflags	data/data_raw/valid.py	/^utf-8	def	ldflags	(	libs	=	True	,	flags	=	False	,	libs_dir	=	False	,	include_dir	=	False	)	:	\\n/;"	f
leaveEvent	data/bpe_corpus_raw/valid.py	/^utf-8	def	leaveEvent	(	self	,	event	)	:	\\n	    	super	(	CallTipWidget	,	self	)	.	leaveEvent	(	e/;"	f
leaveEvent	data/data_raw/valid.py	/^utf-8	def	leaveEvent	(	self	,	event	)	:	\\n	    	super	(	CallTipWidget	,	self	)	.	leaveEvent	(	e/;"	f
legadd	data/bpe_corpus_raw/valid.py	/^utf-8	def	legadd	(	c1	,	c2	)	:	\\n	    	[	c1	,	c2	]	=	pu	.	as_series	(	[	c1	,	c2	]	)	\\n	if	len	/;"	f
legadd	data/data_raw/valid.py	/^utf-8	def	legadd	(	c1	,	c2	)	:	\\n	    	[	c1	,	c2	]	=	pu	.	as_series	(	[	c1	,	c2	]	)	\\n	if	len	/;"	f
len	data/bpe_corpus_raw/valid.py	/^utf-8	def	len	(	self	)	:	\\n	    	return	math	.	sqrt	(	self	.	x	**	2	+	self	.	y	**	2	)	\\n		$/;"	f
len	data/data_raw/valid.py	/^utf-8	def	len	(	self	)	:	\\n	    	return	math	.	sqrt	(	self	.	x	**	2	+	self	.	y	**	2	)	\\n		$/;"	f
length	data/bpe_corpus_raw/test.py	/^utf-8	def	length	(	self	)	:	\\n	    	return	apply_expr	(	lambda	x	:	ArrayLen	(	x	)	,	tint32	,	hl/;"	f
length	data/data_raw/test.py	/^utf-8	def	length	(	self	)	:	\\n	    	return	apply_expr	(	lambda	x	:	ArrayLen	(	x	)	,	tint32	,	hl/;"	f
lessthanfn	data/bpe_corpus_raw/train.py	/^utf-8	def	_get_contig_based_lessthan	(	contigs	)	:	\\n	    	contig_index	=	{	contig	.	name	:	i	f/;"	f	function:_get_contig_based_lessthan	file:
lessthanfn	data/data_raw/train.py	/^utf-8	def	_get_contig_based_lessthan	(	contigs	)	:	\\n	    	contig_index	=	{	contig	.	name	:	i	f/;"	f	function:_get_contig_based_lessthan	file:
lib_utils_oo_hostname_from_url	data/bpe_corpus_raw/train.py	/^utf-8	def	lib_utils_oo_hostname_from_url	(	url	)	:	\\n	    	if	not	isinstance	(	url	,	string_typ/;"	f
lib_utils_oo_hostname_from_url	data/data_raw/train.py	/^utf-8	def	lib_utils_oo_hostname_from_url	(	url	)	:	\\n	    	if	not	isinstance	(	url	,	string_typ/;"	f
libvlc_media_get_stats	data/bpe_corpus_raw/valid.py	/^utf-8	def	libvlc_media_get_stats	(	p_md	,	p_stats	)	:	\\n	    	f	=	_Cfunctions	.	get	(	'libvlc_m/;"	f
libvlc_media_get_stats	data/data_raw/valid.py	/^utf-8	def	libvlc_media_get_stats	(	p_md	,	p_stats	)	:	\\n	    	f	=	_Cfunctions	.	get	(	'libvlc_m/;"	f
libvlc_media_player_get_title	data/bpe_corpus_raw/valid.py	/^utf-8	def	libvlc_media_player_get_title	(	p_mi	)	:	\\n	    	f	=	_Cfunctions	.	get	(	'libvlc_medi/;"	f
libvlc_media_player_get_title	data/data_raw/valid.py	/^utf-8	def	libvlc_media_player_get_title	(	p_mi	)	:	\\n	    	f	=	_Cfunctions	.	get	(	'libvlc_medi/;"	f
libvlc_media_player_set_equalizer	data/bpe_corpus_raw/valid.py	/^utf-8	def	libvlc_media_player_set_equalizer	(	p_mi	,	p_equalizer	)	:	\\n	    	f	=	_Cfunctions	.	/;"	f
libvlc_media_player_set_equalizer	data/data_raw/valid.py	/^utf-8	def	libvlc_media_player_set_equalizer	(	p_mi	,	p_equalizer	)	:	\\n	    	f	=	_Cfunctions	.	/;"	f
lidSurface_create	data/bpe_corpus_raw/valid.py	/^utf-8	def	lidSurface_create	(	curveList	,	spans	=	4	,	attributeObject	=	''	,	\\n	collisionObject/;"	f
lidSurface_create	data/data_raw/valid.py	/^utf-8	def	lidSurface_create	(	curveList	,	spans	=	4	,	attributeObject	=	''	,	\\n	collisionObject/;"	f
limit	data/bpe_corpus_raw/valid.py	/^utf-8	def	limit	(	self	,	n	)	:	\\n	    	return	self	.	__class__	(	itertools	.	islice	(	self	,	n	/;"	f
limit	data/data_raw/valid.py	/^utf-8	def	limit	(	self	,	n	)	:	\\n	    	return	self	.	__class__	(	itertools	.	islice	(	self	,	n	/;"	f
limit_es	data/bpe_corpus_raw/valid.py	/^utf-8	def	limit_es	(	expectedsizeinMB	)	:	\\n	    	if	expectedsizeinMB	<	0.0001	:	\\n	        	e/;"	f
limit_es	data/data_raw/valid.py	/^utf-8	def	limit_es	(	expectedsizeinMB	)	:	\\n	    	if	expectedsizeinMB	<	0.0001	:	\\n	        	e/;"	f
line	data/bpe_corpus_raw/valid.py	/^utf-8	def	line	(	self	,	*	args	)	:	\\n	    	if	len	(	args	)	==	1	:	\\n	        	sock	,	line	=	No/;"	f
line	data/data_raw/valid.py	/^utf-8	def	line	(	self	,	*	args	)	:	\\n	    	if	len	(	args	)	==	1	:	\\n	        	sock	,	line	=	No/;"	f
line2d	data/bpe_corpus_raw/valid.py	/^utf-8	def	line2d	(	p0	,	p1	)	:	\\n	    	x0	,	y0	=	p0	[	:	2	]	\\n	x1	,	y1	=	p1	[	:	2	]	\\n	if	x0	/;"	f
line2d	data/data_raw/valid.py	/^utf-8	def	line2d	(	p0	,	p1	)	:	\\n	    	x0	,	y0	=	p0	[	:	2	]	\\n	x1	,	y1	=	p1	[	:	2	]	\\n	if	x0	/;"	f
lines	data/bpe_corpus_raw/test.py	/^utf-8	def	write_object_diff	(	f	,	store	,	old_file	,	new_file	,	diff_binary	=	False	)	:	\\n	    /;"	f	function:write_object_diff.shortid.content	file:
lines	data/data_raw/test.py	/^utf-8	def	write_object_diff	(	f	,	store	,	old_file	,	new_file	,	diff_binary	=	False	)	:	\\n	    /;"	f	function:write_object_diff.shortid.content	file:
link	data/bpe_corpus_raw/valid.py	/^utf-8	def	link	(	self	,	obj	)	:	\\n	    	return	reverse	(	'objectapp_tag_detail'	,	args	=	[	obj	/;"	f
link	data/data_raw/valid.py	/^utf-8	def	link	(	self	,	obj	)	:	\\n	    	return	reverse	(	'objectapp_tag_detail'	,	args	=	[	obj	/;"	f
link_file_load	data/bpe_corpus_raw/valid.py	/^utf-8	def	link_file_load	(	src	,	dst	,	dry_run	=	False	)	:	\\n	    	dst_dir	=	op	.	dirname	(	dst/;"	f
link_file_load	data/data_raw/valid.py	/^utf-8	def	link_file_load	(	src	,	dst	,	dry_run	=	False	)	:	\\n	    	dst_dir	=	op	.	dirname	(	dst/;"	f
link_in_col	data/bpe_corpus_raw/valid.py	/^utf-8	def	items_for_result	(	cl	,	result	,	form	)	:	\\n	\\n	    	def	link_in_col	(	is_first	,	fi/;"	f	function:items_for_result	file:
link_in_col	data/data_raw/valid.py	/^utf-8	def	items_for_result	(	cl	,	result	,	form	)	:	\\n	\\n	    	def	link_in_col	(	is_first	,	fi/;"	f	function:items_for_result	file:
lint_app	data/bpe_corpus_raw/valid.py	/^utf-8	def	validator	(	application	)	:	\\n	\\n	    	def	lint_app	(	*	args	,	**	kw	)	:	\\n	       /;"	f	function:validator	file:
lint_app	data/data_raw/valid.py	/^utf-8	def	validator	(	application	)	:	\\n	\\n	    	def	lint_app	(	*	args	,	**	kw	)	:	\\n	       /;"	f	function:validator	file:
list	data/bpe_corpus_raw/test.py	/^utf-8	def	list	(	self	,	verbose	=	True	)	:	\\n	    	self	.	_check	(	)	\\n	for	tarinfo	in	self	:	/;"	f
list	data/bpe_corpus_raw/train.py	/^utf-8	def	list	(	)	:	\\n	    	with	db_session	(	)	as	db	:	\\n	        	users	=	db	.	query	(	User/;"	f
list	data/bpe_corpus_raw/train.py	/^utf-8	def	list	(	self	)	:	\\n	    	return	[	dict	.	__getitem__	(	self	,	key	)	for	key	in	self	.	/;"	f
list	data/bpe_corpus_raw/train.py	/^utf-8	def	list	(	self	,	limit	=	None	,	page_size	=	None	)	:	\\n	    	return	list	(	self	.	stream/;"	f
list	data/bpe_corpus_raw/train.py	/^utf-8	def	list	(	self	,	log_level	=	values	.	unset	,	start_date	=	values	.	unset	,	end_date	=	\\/;"	f
list	data/bpe_corpus_raw/train.py	/^utf-8	def	list	(	self	,	resource_group_name	,	circuit_name	,	custom_headers	=	None	,	raw	=	\\n	F/;"	f
list	data/bpe_corpus_raw/train.py	/^utf-8	def	list	(	self	,	type	=	values	.	unset	,	limit	=	None	,	page_size	=	None	)	:	\\n	    	ret/;"	f
list	data/bpe_corpus_raw/valid.py	/^utf-8	def	list	(	self	,	**	kwargs	)	:	\\n	    	path	=	self	.	_get_path	(	'list'	)	\\n	response	=/;"	f
list	data/bpe_corpus_raw/valid.py	/^utf-8	def	list	(	self	,	custom_headers	=	None	,	raw	=	False	,	**	operation_config	)	:	\\n	\\n	  /;"	f
list	data/bpe_corpus_raw/valid.py	/^utf-8	def	list	(	self	,	limit	=	None	,	marker	=	None	,	name	=	None	,	visibility	=	None	,	\\n	mem/;"	f
list	data/data_raw/test.py	/^utf-8	def	list	(	self	,	verbose	=	True	)	:	\\n	    	self	.	_check	(	)	\\n	for	tarinfo	in	self	:	/;"	f
list	data/data_raw/train.py	/^utf-8	def	list	(	)	:	\\n	    	with	db_session	(	)	as	db	:	\\n	        	users	=	db	.	query	(	User/;"	f
list	data/data_raw/train.py	/^utf-8	def	list	(	self	)	:	\\n	    	return	[	dict	.	__getitem__	(	self	,	key	)	for	key	in	self	.	/;"	f
list	data/data_raw/train.py	/^utf-8	def	list	(	self	,	limit	=	None	,	page_size	=	None	)	:	\\n	    	return	list	(	self	.	stream/;"	f
list	data/data_raw/train.py	/^utf-8	def	list	(	self	,	log_level	=	values	.	unset	,	start_date	=	values	.	unset	,	end_date	=	\\/;"	f
list	data/data_raw/train.py	/^utf-8	def	list	(	self	,	resource_group_name	,	circuit_name	,	custom_headers	=	None	,	raw	=	\\n	F/;"	f
list	data/data_raw/train.py	/^utf-8	def	list	(	self	,	type	=	values	.	unset	,	limit	=	None	,	page_size	=	None	)	:	\\n	    	ret/;"	f
list	data/data_raw/valid.py	/^utf-8	def	list	(	self	,	**	kwargs	)	:	\\n	    	path	=	self	.	_get_path	(	'list'	)	\\n	response	=/;"	f
list	data/data_raw/valid.py	/^utf-8	def	list	(	self	,	custom_headers	=	None	,	raw	=	False	,	**	operation_config	)	:	\\n	\\n	  /;"	f
list	data/data_raw/valid.py	/^utf-8	def	list	(	self	,	limit	=	None	,	marker	=	None	,	name	=	None	,	visibility	=	None	,	\\n	mem/;"	f
list2string	data/bpe_corpus_raw/valid.py	/^utf-8	def	list2string	(	wordlist	,	lim	=	' '	,	newline	=	False	)	:	\\n	    	strout	=	''	\\n	for	/;"	f
list2string	data/data_raw/valid.py	/^utf-8	def	list2string	(	wordlist	,	lim	=	' '	,	newline	=	False	)	:	\\n	    	strout	=	''	\\n	for	/;"	f
list_available_ssl_predefined_policies	data/bpe_corpus_raw/train.py	/^utf-8	def	list_available_ssl_predefined_policies	(	self	,	custom_headers	=	None	,	raw	=	\\n	Fals/;"	f
list_available_ssl_predefined_policies	data/data_raw/train.py	/^utf-8	def	list_available_ssl_predefined_policies	(	self	,	custom_headers	=	None	,	raw	=	\\n	Fals/;"	f
list_by_automation_account	data/bpe_corpus_raw/train.py	/^utf-8	def	list_by_automation_account	(	self	,	resource_group_name	,	\\n	automation_account_name	/;"	f
list_by_automation_account	data/data_raw/train.py	/^utf-8	def	list_by_automation_account	(	self	,	resource_group_name	,	\\n	automation_account_name	/;"	f
list_fields	data/bpe_corpus_raw/train.py	/^utf-8	def	__getattribute__	(	self	,	attr	)	:	\\n	    	proxy	=	object	.	__getattribute__	(	self	,/;"	f	function:__getattribute__	file:
list_fields	data/data_raw/train.py	/^utf-8	def	__getattribute__	(	self	,	attr	)	:	\\n	    	proxy	=	object	.	__getattribute__	(	self	,/;"	f	function:__getattribute__	file:
list_installed_files	data/bpe_corpus_raw/train.py	/^utf-8	def	list_installed_files	(	self	)	:	\\n	    	for	result	in	self	.	_get_records	(	)	:	\\n	 /;"	f
list_installed_files	data/data_raw/train.py	/^utf-8	def	list_installed_files	(	self	)	:	\\n	    	for	result	in	self	.	_get_records	(	)	:	\\n	 /;"	f
list_items	data/bpe_corpus_raw/valid.py	/^utf-8	@	abc	.	abstractmethod	\\n	def	list_items	(	self	)	:	\\n	    	pass	\\n		$/;"	f
list_items	data/data_raw/valid.py	/^utf-8	@	abc	.	abstractmethod	\\n	def	list_items	(	self	)	:	\\n	    	pass	\\n		$/;"	f
list_keys	data/bpe_corpus_raw/valid.py	/^utf-8	def	list_keys	(	self	,	resource_group_name	,	account_name	,	custom_headers	=	None	,	\\n	ra/;"	f
list_keys	data/data_raw/valid.py	/^utf-8	def	list_keys	(	self	,	resource_group_name	,	account_name	,	custom_headers	=	None	,	\\n	ra/;"	f
list_known_checks	data/bpe_corpus_raw/valid.py	/^utf-8	def	list_known_checks	(	known_checks	)	:	\\n	    	msg	=	(	\\n	"""This playbook is meant to/;"	f
list_known_checks	data/data_raw/valid.py	/^utf-8	def	list_known_checks	(	known_checks	)	:	\\n	    	msg	=	(	\\n	"""This playbook is meant to/;"	f
list_nbextensions	data/bpe_corpus_raw/test.py	/^utf-8	def	list_nbextensions	(	self	)	:	\\n	    	config_dirs	=	[	os	.	path	.	join	(	p	,	'nbconfig/;"	f
list_nbextensions	data/data_raw/test.py	/^utf-8	def	list_nbextensions	(	self	)	:	\\n	    	config_dirs	=	[	os	.	path	.	join	(	p	,	'nbconfig/;"	f
list_nodes	data/bpe_corpus_raw/train.py	/^utf-8	def	list_nodes	(	self	)	:	\\n	    	params	=	{	'api_action'	:	'linode.list'	}	\\n	data	=	se/;"	f
list_nodes	data/data_raw/train.py	/^utf-8	def	list_nodes	(	self	)	:	\\n	    	params	=	{	'api_action'	:	'linode.list'	}	\\n	data	=	se/;"	f
list_public_methods	data/bpe_corpus_raw/train.py	/^utf-8	def	list_public_methods	(	obj	)	:	\\n	    	return	[	member	for	member	in	dir	(	obj	)	if	no/;"	f
list_public_methods	data/data_raw/train.py	/^utf-8	def	list_public_methods	(	obj	)	:	\\n	    	return	[	member	for	member	in	dir	(	obj	)	if	no/;"	f
list_sort	data/bpe_corpus_raw/valid.py	/^utf-8	def	task_sort	(	)	:	\\n	\\n	    	def	list_sort	(	l	)	:	\\n	        	l	=	l	[	:	:	-	1	]	\\n	/;"	f	function:task_sort	file:
list_sort	data/data_raw/valid.py	/^utf-8	def	task_sort	(	)	:	\\n	\\n	    	def	list_sort	(	l	)	:	\\n	        	l	=	l	[	:	:	-	1	]	\\n	/;"	f	function:task_sort	file:
list_symbols	data/bpe_corpus_raw/train.py	/^utf-8	def	get_block_symbol_data	(	editor	,	block	)	:	\\n	\\n	    	def	list_symbols	(	editor	,	bl/;"	f	function:get_block_symbol_data	file:
list_symbols	data/data_raw/train.py	/^utf-8	def	get_block_symbol_data	(	editor	,	block	)	:	\\n	\\n	    	def	list_symbols	(	editor	,	bl/;"	f	function:get_block_symbol_data	file:
list_type_printers	data/bpe_corpus_raw/train.py	/^utf-8	def	list_type_printers	(	self	,	type_printers	)	:	\\n	    	sorted_type_printers	=	sorted	(/;"	f
list_type_printers	data/data_raw/train.py	/^utf-8	def	list_type_printers	(	self	,	type_printers	)	:	\\n	    	sorted_type_printers	=	sorted	(/;"	f
listenUNIX	data/bpe_corpus_raw/test.py	/^utf-8	def	listenUNIX	(	address	,	factory	,	backlog	=	50	,	mode	=	438	,	wantPID	=	0	)	:	\\n	$/;"	f
listenUNIX	data/data_raw/test.py	/^utf-8	def	listenUNIX	(	address	,	factory	,	backlog	=	50	,	mode	=	438	,	wantPID	=	0	)	:	\\n	$/;"	f
listify	data/bpe_corpus_raw/valid.py	/^utf-8	def	listify	(	value	)	:	\\n	    	if	isinstance	(	value	,	(	list	,	tuple	)	)	:	\\n	        /;"	f
listify	data/data_raw/valid.py	/^utf-8	def	listify	(	value	)	:	\\n	    	if	isinstance	(	value	,	(	list	,	tuple	)	)	:	\\n	        /;"	f
literal_eval	data/bpe_corpus_raw/valid.py	/^utf-8	def	literal_eval	(	node_or_string	)	:	\\n	    	_safe_names	=	{	'None'	:	None	,	'True'	:	Tr/;"	f
literal_eval	data/data_raw/valid.py	/^utf-8	def	literal_eval	(	node_or_string	)	:	\\n	    	_safe_names	=	{	'None'	:	None	,	'True'	:	Tr/;"	f
load	data/bpe_corpus_raw/train.py	/^utf-8	def	load	(	file	,	mmap_mode	=	None	,	allow_pickle	=	True	,	fix_imports	=	True	,	\\n	encodi/;"	f
load	data/bpe_corpus_raw/train.py	/^utf-8	def	load	(	self	,	PATH	)	:	\\n	    	try	:	\\n	        	with	open	(	PATH	,	'rb'	)	as	f	:	\\/;"	f
load	data/bpe_corpus_raw/valid.py	/^utf-8	def	load	(	fp	,	encoding	=	None	,	cls	=	None	,	object_hook	=	None	,	parse_float	=	None	,	\\/;"	f
load	data/bpe_corpus_raw/valid.py	/^utf-8	def	load	(	self	,	*	args	)	:	\\n	    	return	\\n		$/;"	f
load	data/data_raw/train.py	/^utf-8	def	load	(	file	,	mmap_mode	=	None	,	allow_pickle	=	True	,	fix_imports	=	True	,	\\n	encodi/;"	f
load	data/data_raw/train.py	/^utf-8	def	load	(	self	,	PATH	)	:	\\n	    	try	:	\\n	        	with	open	(	PATH	,	'rb'	)	as	f	:	\\/;"	f
load	data/data_raw/valid.py	/^utf-8	def	load	(	fp	,	encoding	=	None	,	cls	=	None	,	object_hook	=	None	,	parse_float	=	None	,	\\/;"	f
load	data/data_raw/valid.py	/^utf-8	def	load	(	self	,	*	args	)	:	\\n	    	return	\\n		$/;"	f
loadPEM	data/bpe_corpus_raw/valid.py	/^utf-8	def	loadPEM	(	Class	,	data	)	:	\\n	    	return	Class	.	load	(	data	,	KeyPair	.	load	(	data/;"	f
loadPEM	data/data_raw/valid.py	/^utf-8	def	loadPEM	(	Class	,	data	)	:	\\n	    	return	Class	.	load	(	data	,	KeyPair	.	load	(	data/;"	f
load_all	data/bpe_corpus_raw/train.py	/^utf-8	def	load_all	(	stream	,	Loader	=	Loader	)	:	\\n	    	loader	=	Loader	(	stream	)	\\n	try	:	/;"	f
load_all	data/data_raw/train.py	/^utf-8	def	load_all	(	stream	,	Loader	=	Loader	)	:	\\n	    	loader	=	Loader	(	stream	)	\\n	try	:	/;"	f
load_and_crop_data	data/bpe_corpus_raw/valid.py	/^utf-8	def	load_and_crop_data	(	runs	,	spectra	,	ip_file	,	diff_mode	=	'single'	,	fit_mode	\\n	=	/;"	f
load_and_crop_data	data/data_raw/valid.py	/^utf-8	def	load_and_crop_data	(	runs	,	spectra	,	ip_file	,	diff_mode	=	'single'	,	fit_mode	\\n	=	/;"	f
load_bytecode	data/bpe_corpus_raw/train.py	/^utf-8	def	load_bytecode	(	self	,	bucket	)	:	\\n	    	raise	NotImplementedError	(	)	\\n		$/;"	f
load_bytecode	data/bpe_corpus_raw/valid.py	/^utf-8	def	load_bytecode	(	self	,	bucket	)	:	\\n	    	raise	NotImplementedError	(	)	\\n		$/;"	f
load_bytecode	data/data_raw/train.py	/^utf-8	def	load_bytecode	(	self	,	bucket	)	:	\\n	    	raise	NotImplementedError	(	)	\\n		$/;"	f
load_bytecode	data/data_raw/valid.py	/^utf-8	def	load_bytecode	(	self	,	bucket	)	:	\\n	    	raise	NotImplementedError	(	)	\\n		$/;"	f
load_data	data/bpe_corpus_raw/train.py	/^utf-8	def	load_data	(	mode	=	'fold-1'	,	image_dim_ordering	=	'tf'	)	:	\\n	    	fname	=	'HASYv2.t/;"	f
load_data	data/data_raw/train.py	/^utf-8	def	load_data	(	mode	=	'fold-1'	,	image_dim_ordering	=	'tf'	)	:	\\n	    	fname	=	'HASYv2.t/;"	f
load_expected_results	data/bpe_corpus_raw/valid.py	/^utf-8	def	load_expected_results	(	file	,	pattern	)	:	\\n	    	expected	=	{	}	\\n	compiled_patter/;"	f
load_expected_results	data/data_raw/valid.py	/^utf-8	def	load_expected_results	(	file	,	pattern	)	:	\\n	    	expected	=	{	}	\\n	compiled_patter/;"	f
load_extensions	data/bpe_corpus_raw/train.py	/^utf-8	def	load_extensions	(	environment	,	extensions	)	:	\\n	    	result	=	{	}	\\n	for	extension/;"	f
load_extensions	data/data_raw/train.py	/^utf-8	def	load_extensions	(	environment	,	extensions	)	:	\\n	    	result	=	{	}	\\n	for	extension/;"	f
load_image	data/bpe_corpus_raw/train.py	/^utf-8	def	load_image	(	filename	,	color	=	True	)	:	\\n	    	img	=	skimage	.	img_as_float	(	skima/;"	f
load_image	data/data_raw/train.py	/^utf-8	def	load_image	(	filename	,	color	=	True	)	:	\\n	    	img	=	skimage	.	img_as_float	(	skima/;"	f
load_keyword_parser_lit_tests	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	load_keyword_parser_lit_tests	(	)	:	\\n	    	lit_config	=	lit	.	Lit/;"	f
load_keyword_parser_lit_tests	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	load_keyword_parser_lit_tests	(	)	:	\\n	    	lit_config	=	lit	.	Lit/;"	f
load_kmf	data/bpe_corpus_raw/valid.py	/^utf-8	def	load_kmf	(	chkfile	)	:	\\n	    	from	pyscf	.	lib	.	chkfile	import	load	\\n	kmf	=	load	/;"	f
load_kmf	data/data_raw/valid.py	/^utf-8	def	load_kmf	(	chkfile	)	:	\\n	    	from	pyscf	.	lib	.	chkfile	import	load	\\n	kmf	=	load	/;"	f
load_kubernetes_service_config_no_cache	data/bpe_corpus_raw/train.py	/^utf-8	def	load_kubernetes_service_config_no_cache	(	service	:	str	,	instance	:	str	,	\\n	cluster/;"	f
load_kubernetes_service_config_no_cache	data/data_raw/train.py	/^utf-8	def	load_kubernetes_service_config_no_cache	(	service	:	str	,	instance	:	str	,	\\n	cluster/;"	f
load_labels_as_index	data/bpe_corpus_raw/valid.py	/^utf-8	def	load_labels_as_index	(	label_filename	)	:	\\n	    	labels	=	[	line	.	rstrip	(	'\\\\n'	/;"	f
load_labels_as_index	data/data_raw/valid.py	/^utf-8	def	load_labels_as_index	(	label_filename	)	:	\\n	    	labels	=	[	line	.	rstrip	(	'\\\\n'	/;"	f
load_or_create_metadata	data/bpe_corpus_raw/valid.py	/^utf-8	def	load_or_create_metadata	(	args	)	:	\\n	    	if	not	args	.	load_network	:	\\n	        	/;"	f
load_or_create_metadata	data/data_raw/valid.py	/^utf-8	def	load_or_create_metadata	(	args	)	:	\\n	    	if	not	args	.	load_network	:	\\n	        	/;"	f
load_params	data/bpe_corpus_raw/train.py	/^utf-8	def	load_params	(	self	,	f	=	None	,	f_params	=	None	,	f_optimizer	=	None	,	f_history	=	\\n/;"	f
load_params	data/data_raw/train.py	/^utf-8	def	load_params	(	self	,	f	=	None	,	f_params	=	None	,	f_optimizer	=	None	,	f_history	=	\\n/;"	f
load_path	data/bpe_corpus_raw/train.py	/^utf-8	def	load_path	(	filename	)	:	\\n	    	for	directory	in	sys	.	path	:	\\n	        	if	isDire/;"	f
load_path	data/data_raw/train.py	/^utf-8	def	load_path	(	filename	)	:	\\n	    	for	directory	in	sys	.	path	:	\\n	        	if	isDire/;"	f
load_performance_cryengine_settings	data/bpe_corpus_raw/train.py	/^utf-8	@	conf	\\n	def	load_performance_cryengine_settings	(	conf	)	:	\\n	    	v	=	conf	.	env	\\n	/;"	f
load_performance_cryengine_settings	data/data_raw/train.py	/^utf-8	@	conf	\\n	def	load_performance_cryengine_settings	(	conf	)	:	\\n	    	v	=	conf	.	env	\\n	/;"	f
load_previous	data/bpe_corpus_raw/valid.py	/^utf-8	def	load_previous	(	self	)	:	\\n	    	self	.	load_next	(	mode	=	'prev'	)	\\n		$/;"	f
load_previous	data/data_raw/valid.py	/^utf-8	def	load_previous	(	self	)	:	\\n	    	self	.	load_next	(	mode	=	'prev'	)	\\n		$/;"	f
load_public_key	data/bpe_corpus_raw/valid.py	/^utf-8	def	load_public_key	(	source	)	:	\\n	    	if	isinstance	(	source	,	keys	.	PublicKeyInfo	)	/;"	f
load_public_key	data/data_raw/valid.py	/^utf-8	def	load_public_key	(	source	)	:	\\n	    	if	isinstance	(	source	,	keys	.	PublicKeyInfo	)	/;"	f
load_segmentations	data/bpe_corpus_raw/train.py	/^utf-8	def	load_segmentations	(	self	,	segmentations	)	:	\\n	    	self	.	_check_segment_only	(	)	/;"	f
load_segmentations	data/data_raw/train.py	/^utf-8	def	load_segmentations	(	self	,	segmentations	)	:	\\n	    	self	.	_check_segment_only	(	)	/;"	f
load_settings	data/bpe_corpus_raw/valid.py	/^utf-8	def	load_settings	(	self	,	config	=	None	)	:	\\n	    	self	.	settings	=	Settings	(	self	,	/;"	f
load_settings	data/data_raw/valid.py	/^utf-8	def	load_settings	(	self	,	config	=	None	)	:	\\n	    	self	.	settings	=	Settings	(	self	,	/;"	f
load_style	data/bpe_corpus_raw/valid.py	/^utf-8	def	load_style	(	s	)	:	\\n	    	if	s	.	startswith	(	'http'	)	:	\\n	        	r	=	requests	./;"	f
load_style	data/data_raw/valid.py	/^utf-8	def	load_style	(	s	)	:	\\n	    	if	s	.	startswith	(	'http'	)	:	\\n	        	r	=	requests	./;"	f
load_tabs	data/bpe_corpus_raw/valid.py	/^utf-8	def	load_tabs	(	self	)	:	\\n	    	tab_group	=	self	.	get_tabs	(	self	.	request	,	**	self	./;"	f
load_tabs	data/data_raw/valid.py	/^utf-8	def	load_tabs	(	self	)	:	\\n	    	tab_group	=	self	.	get_tabs	(	self	.	request	,	**	self	./;"	f
load_ugrid3d_geometry	data/bpe_corpus_raw/valid.py	/^utf-8	def	load_ugrid3d_geometry	(	self	,	ugrid_filename	,	name	=	'main'	,	plot	=	True	)	:	\\n	  /;"	f
load_ugrid3d_geometry	data/data_raw/valid.py	/^utf-8	def	load_ugrid3d_geometry	(	self	,	ugrid_filename	,	name	=	'main'	,	plot	=	True	)	:	\\n	  /;"	f
load_user	data/bpe_corpus_raw/valid.py	/^utf-8	@	lm	.	user_loader	\\n	def	load_user	(	id	)	:	\\n	    	return	User	.	query	.	get	(	int	(	i/;"	f
load_user	data/data_raw/valid.py	/^utf-8	@	lm	.	user_loader	\\n	def	load_user	(	id	)	:	\\n	    	return	User	.	query	.	get	(	int	(	i/;"	f
load_win32api	data/bpe_corpus_raw/valid.py	/^utf-8	def	load_win32api	(	finder	,	module	)	:	\\n	    	finder	.	IncludeModule	(	'pywintypes'	)	\\/;"	f
load_win32api	data/data_raw/valid.py	/^utf-8	def	load_win32api	(	finder	,	module	)	:	\\n	    	finder	.	IncludeModule	(	'pywintypes'	)	\\/;"	f
load_win_x64_win_x64_common_settings	data/bpe_corpus_raw/valid.py	/^utf-8	@	conf	\\n	def	load_win_x64_win_x64_common_settings	(	conf	)	:	\\n	    	v	=	conf	.	env	\\n/;"	f
load_win_x64_win_x64_common_settings	data/data_raw/valid.py	/^utf-8	@	conf	\\n	def	load_win_x64_win_x64_common_settings	(	conf	)	:	\\n	    	v	=	conf	.	env	\\n/;"	f
load_yaml	data/bpe_corpus_raw/train.py	/^utf-8	def	load_yaml	(	doc	)	:	\\n	    	data	=	_load_yaml	(	doc	)	\\n	if	type	(	data	)	is	not	dic/;"	f
load_yaml	data/data_raw/train.py	/^utf-8	def	load_yaml	(	doc	)	:	\\n	    	data	=	_load_yaml	(	doc	)	\\n	if	type	(	data	)	is	not	dic/;"	f
loads	data/bpe_corpus_raw/train.py	/^utf-8	def	loads	(	data	)	:	\\n	    	if	data	==	''	:	\\n	        	return	None	\\n		result	=	jload/;"	f
loads	data/bpe_corpus_raw/valid.py	/^utf-8	def	loads	(	self	,	s	,	salt	=	None	,	return_header	=	False	)	:	\\n	    	payload	,	header	=/;"	f
loads	data/bpe_corpus_raw/valid.py	/^utf-8	def	loads	(	strg	)	:	\\n	    	_pickle_warn	(	'loads'	)	\\n	return	pickle	.	loads	(	strg	)	/;"	f
loads	data/data_raw/train.py	/^utf-8	def	loads	(	data	)	:	\\n	    	if	data	==	''	:	\\n	        	return	None	\\n		result	=	jload/;"	f
loads	data/data_raw/valid.py	/^utf-8	def	loads	(	self	,	s	,	salt	=	None	,	return_header	=	False	)	:	\\n	    	payload	,	header	=/;"	f
loads	data/data_raw/valid.py	/^utf-8	def	loads	(	strg	)	:	\\n	    	_pickle_warn	(	'loads'	)	\\n	return	pickle	.	loads	(	strg	)	/;"	f
loadyaml	data/bpe_corpus_raw/train.py	/^utf-8	def	loadyaml	(	path	)	:	\\n	    	if	os	.	path	.	splitext	(	path	)	[	1	]	==	''	:	\\n	      /;"	f
loadyaml	data/data_raw/train.py	/^utf-8	def	loadyaml	(	path	)	:	\\n	    	if	os	.	path	.	splitext	(	path	)	[	1	]	==	''	:	\\n	      /;"	f
local_path	data/bpe_corpus_raw/valid.py	/^utf-8	def	local_path	(	self	,	volume	)	:	\\n	    	raise	NotImplementedError	(	)	\\n		$/;"	f
local_path	data/data_raw/valid.py	/^utf-8	def	local_path	(	self	,	volume	)	:	\\n	    	raise	NotImplementedError	(	)	\\n		$/;"	f
locality	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	locality	(	self	)	:	\\n	    	return	self	.	_properties	[	'locality'	]	\\/;"	f
locality	data/data_raw/train.py	/^utf-8	@	property	\\n	def	locality	(	self	)	:	\\n	    	return	self	.	_properties	[	'locality'	]	\\/;"	f
locate_oc_binary	data/bpe_corpus_raw/train.py	/^utf-8	def	locate_oc_binary	(	)	:	\\n	    	paths	=	os	.	environ	.	get	(	'PATH'	,	os	.	defpath	)	./;"	f
locate_oc_binary	data/bpe_corpus_raw/valid.py	/^utf-8	def	locate_oc_binary	(	)	:	\\n	    	paths	=	os	.	environ	.	get	(	'PATH'	,	os	.	defpath	)	./;"	f
locate_oc_binary	data/data_raw/train.py	/^utf-8	def	locate_oc_binary	(	)	:	\\n	    	paths	=	os	.	environ	.	get	(	'PATH'	,	os	.	defpath	)	./;"	f
locate_oc_binary	data/data_raw/valid.py	/^utf-8	def	locate_oc_binary	(	)	:	\\n	    	paths	=	os	.	environ	.	get	(	'PATH'	,	os	.	defpath	)	./;"	f
locatedExpr	data/bpe_corpus_raw/valid.py	/^utf-8	def	locatedExpr	(	expr	)	:	\\n	    	locator	=	Empty	(	)	.	setParseAction	(	lambda	s	,	l	,	/;"	f
locatedExpr	data/data_raw/valid.py	/^utf-8	def	locatedExpr	(	expr	)	:	\\n	    	locator	=	Empty	(	)	.	setParseAction	(	lambda	s	,	l	,	/;"	f
locatorProperties	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	locatorProperties	(	self	)	:	\\n	    	if	self	.	_locatorProperties	is	N/;"	f
locatorProperties	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	locatorProperties	(	self	)	:	\\n	    	if	self	.	_locatorProperties	is	N/;"	f
lock	data/bpe_corpus_raw/test.py	/^utf-8	def	lock	(	self	,	**	kwargs	)	:	\\n	    	self	.	values	.	primary	.	data	=	True	\\n		$/;"	f
lock	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	lock	(	cls	,	connection	,	table	)	:	\\n	    	raise	NotImplementedErr/;"	f
lock	data/data_raw/test.py	/^utf-8	def	lock	(	self	,	**	kwargs	)	:	\\n	    	self	.	values	.	primary	.	data	=	True	\\n		$/;"	f
lock	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	lock	(	cls	,	connection	,	table	)	:	\\n	    	raise	NotImplementedErr/;"	f
lockData	data/bpe_corpus_raw/valid.py	/^utf-8	def	lockData	(	self	)	:	\\n	    	super	(	)	.	__setattr__	(	'_lock'	,	True	)	\\n		$/;"	f
lockData	data/data_raw/valid.py	/^utf-8	def	lockData	(	self	)	:	\\n	    	super	(	)	.	__setattr__	(	'_lock'	,	True	)	\\n		$/;"	f
lockEvents	data/bpe_corpus_raw/train.py	/^utf-8	@	_validContext	\\n	def	lockEvents	(	self	)	:	\\n	    	libusb1	.	libusb_lock_events	(	self/;"	f
lockEvents	data/data_raw/train.py	/^utf-8	@	_validContext	\\n	def	lockEvents	(	self	)	:	\\n	    	libusb1	.	libusb_lock_events	(	self/;"	f
locked_get	data/bpe_corpus_raw/valid.py	/^utf-8	def	locked_get	(	self	)	:	\\n	    	credential	=	None	\\n	query	=	{	self	.	key_name	:	self	/;"	f
locked_get	data/data_raw/valid.py	/^utf-8	def	locked_get	(	self	)	:	\\n	    	credential	=	None	\\n	query	=	{	self	.	key_name	:	self	/;"	f
log	data/bpe_corpus_raw/test.py	/^utf-8	def	log	(	self	,	msg	=	''	,	level	=	20	,	traceback	=	False	)	:	\\n	    	if	traceback	:	\\n/;"	f
log	data/bpe_corpus_raw/valid.py	/^utf-8	def	log	(	self	)	:	\\n	    	return	self	.	_unop	(	'log'	)	\\n		$/;"	f
log	data/bpe_corpus_raw/valid.py	/^utf-8	def	log	(	self	,	settings	)	:	\\n	    	ret	=	{	}	\\n	for	i	in	self	.	logattrs	:	\\n	      /;"	f
log	data/bpe_corpus_raw/valid.py	/^utf-8	def	log	(	x	,	name	=	None	)	:	\\n	    	helper	=	LayerHelper	(	'log'	,	**	locals	(	)	)	\\n	/;"	f
log	data/data_raw/test.py	/^utf-8	def	log	(	self	,	msg	=	''	,	level	=	20	,	traceback	=	False	)	:	\\n	    	if	traceback	:	\\n/;"	f
log	data/data_raw/valid.py	/^utf-8	def	log	(	self	)	:	\\n	    	return	self	.	_unop	(	'log'	)	\\n		$/;"	f
log	data/data_raw/valid.py	/^utf-8	def	log	(	self	,	settings	)	:	\\n	    	ret	=	{	}	\\n	for	i	in	self	.	logattrs	:	\\n	      /;"	f
log	data/data_raw/valid.py	/^utf-8	def	log	(	x	,	name	=	None	)	:	\\n	    	helper	=	LayerHelper	(	'log'	,	**	locals	(	)	)	\\n	/;"	f
log10	data/bpe_corpus_raw/valid.py	/^utf-8	def	log10	(	x	)	:	\\n	    	x	=	_fix_real_lt_zero	(	x	)	\\n	return	nx	.	log10	(	x	)	\\n		$/;"	f
log10	data/data_raw/valid.py	/^utf-8	def	log10	(	x	)	:	\\n	    	x	=	_fix_real_lt_zero	(	x	)	\\n	return	nx	.	log10	(	x	)	\\n		$/;"	f
log_cdf	data/bpe_corpus_raw/test.py	/^utf-8	def	log_cdf	(	self	,	value	,	name	=	'log_cdf'	)	:	\\n	    	value	-=	self	.	_shift	\\n	retu/;"	f
log_cdf	data/data_raw/test.py	/^utf-8	def	log_cdf	(	self	,	value	,	name	=	'log_cdf'	)	:	\\n	    	value	-=	self	.	_shift	\\n	retu/;"	f
logger_delete	data/bpe_corpus_raw/train.py	/^utf-8	def	logger_delete	(	self	,	project	,	logger_name	)	:	\\n	    	path	=	'\/projects\/%s\/logs/;"	f
logger_delete	data/data_raw/train.py	/^utf-8	def	logger_delete	(	self	,	project	,	logger_name	)	:	\\n	    	path	=	'\/projects\/%s\/logs/;"	f
logger_file	data/bpe_corpus_raw/train.py	/^utf-8	@	logger_file	.	setter	\\n	def	logger_file	(	self	,	value	)	:	\\n	    	self	.	__logger_fil/;"	f
logger_file	data/data_raw/train.py	/^utf-8	@	logger_file	.	setter	\\n	def	logger_file	(	self	,	value	)	:	\\n	    	self	.	__logger_fil/;"	f
login	data/bpe_corpus_raw/train.py	/^utf-8	def	login	(	self	,	server	,	username	,	password	=	''	,	terminal_type	=	'ansi'	,	\\n	origin/;"	f
login	data/bpe_corpus_raw/valid.py	/^utf-8	def	login	(	self	,	client_id	,	username	,	password	,	connection	,	id_token	=	None	,	\\n	gr/;"	f
login	data/bpe_corpus_raw/valid.py	/^utf-8	def	login	(	self	,	credentials	,	mind	,	*	interfaces	)	:	\\n	    	for	i	in	self	.	checkers/;"	f
login	data/data_raw/train.py	/^utf-8	def	login	(	self	,	server	,	username	,	password	=	''	,	terminal_type	=	'ansi'	,	\\n	origin/;"	f
login	data/data_raw/valid.py	/^utf-8	def	login	(	self	,	client_id	,	username	,	password	,	connection	,	id_token	=	None	,	\\n	gr/;"	f
login	data/data_raw/valid.py	/^utf-8	def	login	(	self	,	credentials	,	mind	,	*	interfaces	)	:	\\n	    	for	i	in	self	.	checkers/;"	f
login_failure	data/bpe_corpus_raw/valid.py	/^utf-8	def	login_failure	(	self	)	:	\\n	    	messages	.	error	(	self	.	request	,	\\n	'Unable to s/;"	f
login_failure	data/data_raw/valid.py	/^utf-8	def	login_failure	(	self	)	:	\\n	    	messages	.	error	(	self	.	request	,	\\n	'Unable to s/;"	f
login_protected_redirect_view	data/bpe_corpus_raw/valid.py	/^utf-8	def	login_protected_redirect_view	(	request	)	:	\\n	    	return	HttpResponseRedirect	(	'\//;"	f
login_protected_redirect_view	data/data_raw/valid.py	/^utf-8	def	login_protected_redirect_view	(	request	)	:	\\n	    	return	HttpResponseRedirect	(	'\//;"	f
logistic	data/bpe_corpus_raw/train.py	/^utf-8	def	logistic	(	loc	=	0.0	,	scale	=	1.0	,	size	=	None	,	dtype	=	float	)	:	\\n	    	rs	=	gen/;"	f
logistic	data/data_raw/train.py	/^utf-8	def	logistic	(	loc	=	0.0	,	scale	=	1.0	,	size	=	None	,	dtype	=	float	)	:	\\n	    	rs	=	gen/;"	f
loglike_obs	data/bpe_corpus_raw/valid.py	/^utf-8	def	loglike_obs	(	self	,	endog	,	mu	,	var_weights	=	1.0	,	scale	=	1.0	)	:	\\n	    	n	=	sel/;"	f
loglike_obs	data/data_raw/valid.py	/^utf-8	def	loglike_obs	(	self	,	endog	,	mu	,	var_weights	=	1.0	,	scale	=	1.0	)	:	\\n	    	n	=	sel/;"	f
loglikelihood	data/bpe_corpus_raw/train.py	/^utf-8	def	loglikelihood	(	self	,	parameters	,	resids	,	sigma2	,	individual	=	False	)	:	\\n	    	/;"	f
loglikelihood	data/data_raw/train.py	/^utf-8	def	loglikelihood	(	self	,	parameters	,	resids	,	sigma2	,	individual	=	False	)	:	\\n	    	/;"	f
loglikeobs	data/bpe_corpus_raw/valid.py	/^utf-8	def	loglikeobs	(	self	,	params	)	:	\\n	    	q	=	2	*	self	.	endog	-	1	\\n	X	=	self	.	exog	\\/;"	f
loglikeobs	data/data_raw/valid.py	/^utf-8	def	loglikeobs	(	self	,	params	)	:	\\n	    	q	=	2	*	self	.	endog	-	1	\\n	X	=	self	.	exog	\\/;"	f
logn	data/bpe_corpus_raw/train.py	/^utf-8	def	logn	(	n	,	x	)	:	\\n	    	x	=	_fix_real_lt_zero	(	x	)	\\n	n	=	_fix_real_lt_zero	(	n	)	/;"	f
logn	data/data_raw/train.py	/^utf-8	def	logn	(	n	,	x	)	:	\\n	    	x	=	_fix_real_lt_zero	(	x	)	\\n	n	=	_fix_real_lt_zero	(	n	)	/;"	f
logout	data/bpe_corpus_raw/train.py	/^utf-8	@	utils	.	requires_login	\\n	def	logout	(	self	)	:	\\n	    	self	.	make_auth_request	(	'lo/;"	f
logout	data/data_raw/train.py	/^utf-8	@	utils	.	requires_login	\\n	def	logout	(	self	)	:	\\n	    	self	.	make_auth_request	(	'lo/;"	f
logsigmoid	data/bpe_corpus_raw/valid.py	/^utf-8	def	logsigmoid	(	a	)	:	\\n	    	return	-	tf	.	nn	.	softplus	(	-	a	)	\\n		$/;"	f
logsigmoid	data/data_raw/valid.py	/^utf-8	def	logsigmoid	(	a	)	:	\\n	    	return	-	tf	.	nn	.	softplus	(	-	a	)	\\n		$/;"	f
longitude	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	longitude	(	self	)	:	\\n	    	return	self	.	_longitude	\\n		$/;"	f
longitude	data/data_raw/train.py	/^utf-8	@	property	\\n	def	longitude	(	self	)	:	\\n	    	return	self	.	_longitude	\\n		$/;"	f
lookahead	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	lookahead	(	self	)	:	\\n	    	return	self	.	_lookahead	\\n		$/;"	f
lookahead	data/data_raw/train.py	/^utf-8	@	property	\\n	def	lookahead	(	self	)	:	\\n	    	return	self	.	_lookahead	\\n		$/;"	f
lookup	data/bpe_corpus_raw/train.py	/^utf-8	def	lookup	(	self	,	keys	,	name	=	None	)	:	\\n	    	if	keys	.	dtype	!=	self	.	_key_dtype	:/;"	f
lookup	data/data_raw/train.py	/^utf-8	def	lookup	(	self	,	keys	,	name	=	None	)	:	\\n	    	if	keys	.	dtype	!=	self	.	_key_dtype	:/;"	f
lookupProcedure	data/bpe_corpus_raw/valid.py	/^utf-8	def	lookupProcedure	(	self	,	procedureName	)	:	\\n	    	if	procedureName	==	'echo'	:	\\n	 /;"	f
lookupProcedure	data/data_raw/valid.py	/^utf-8	def	lookupProcedure	(	self	,	procedureName	)	:	\\n	    	if	procedureName	==	'echo'	:	\\n	 /;"	f
lookup_by_attr	data/bpe_corpus_raw/train.py	/^utf-8	def	_lookup_by_attr_factory	(	attr	,	unique	,	iterator	,	element_name	,	doc	)	:	\\n	\\n	  /;"	f	function:_lookup_by_attr_factory	file:
lookup_by_attr	data/data_raw/train.py	/^utf-8	def	_lookup_by_attr_factory	(	attr	,	unique	,	iterator	,	element_name	,	doc	)	:	\\n	\\n	  /;"	f	function:_lookup_by_attr_factory	file:
lookup_by_attr_unique	data/bpe_corpus_raw/train.py	/^utf-8	def	_lookup_by_attr_factory	(	attr	,	unique	,	iterator	,	element_name	,	doc	)	:	\\n	\\n	  /;"	f	function:_lookup_by_attr_factory.lookup_by_attr	file:
lookup_by_attr_unique	data/data_raw/train.py	/^utf-8	def	_lookup_by_attr_factory	(	attr	,	unique	,	iterator	,	element_name	,	doc	)	:	\\n	\\n	  /;"	f	function:_lookup_by_attr_factory.lookup_by_attr	file:
lookup_needs_distinct	data/bpe_corpus_raw/test.py	/^utf-8	def	lookup_needs_distinct	(	opts	,	lookup_path	)	:	\\n	    	field_name	=	lookup_path	.	spl/;"	f
lookup_needs_distinct	data/data_raw/test.py	/^utf-8	def	lookup_needs_distinct	(	opts	,	lookup_path	)	:	\\n	    	field_name	=	lookup_path	.	spl/;"	f
loop	data/bpe_corpus_raw/train.py	/^utf-8	def	loop	(	self	,	timeout	=	1.0	,	max_packets	=	1	)	:	\\n	    	if	timeout	<	0.0	:	\\n	    /;"	f
loop	data/bpe_corpus_raw/valid.py	/^utf-8	def	loop	(	self	)	:	\\n	    	while	True	:	\\n	        	self	.	run	(	)	\\n	self	.	ITERATION/;"	f
loop	data/data_raw/train.py	/^utf-8	def	loop	(	self	,	timeout	=	1.0	,	max_packets	=	1	)	:	\\n	    	if	timeout	<	0.0	:	\\n	    /;"	f
loop	data/data_raw/valid.py	/^utf-8	def	loop	(	self	)	:	\\n	    	while	True	:	\\n	        	self	.	run	(	)	\\n	self	.	ITERATION/;"	f
loop_continue_criterion	data/bpe_corpus_raw/valid.py	/^utf-8	def	loop_continue_criterion	(	self	,	*	args	)	->	tf	.	Tensor	:	\\n	    	loop_state	=	LoopS/;"	f
loop_continue_criterion	data/data_raw/valid.py	/^utf-8	def	loop_continue_criterion	(	self	,	*	args	)	->	tf	.	Tensor	:	\\n	    	loop_state	=	LoopS/;"	f
loop_enters	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	loop_enters	(	self	)	:	\\n	    	return	self	.	_loop_enters	\\n		$/;"	f
loop_enters	data/data_raw/train.py	/^utf-8	@	property	\\n	def	loop_enters	(	self	)	:	\\n	    	return	self	.	_loop_enters	\\n		$/;"	f
loop_misc	data/bpe_corpus_raw/train.py	/^utf-8	def	loop_misc	(	self	)	:	\\n	    	if	self	.	_sock	is	None	and	self	.	_ssl	is	None	:	\\n	  /;"	f
loop_misc	data/data_raw/train.py	/^utf-8	def	loop_misc	(	self	)	:	\\n	    	if	self	.	_sock	is	None	and	self	.	_ssl	is	None	:	\\n	  /;"	f
loop_until_closed	data/bpe_corpus_raw/valid.py	/^utf-8	def	loop_until_closed	(	self	)	:	\\n	    	if	isinstance	(	self	.	_state	,	NOT_YET_CONNECTE/;"	f
loop_until_closed	data/data_raw/valid.py	/^utf-8	def	loop_until_closed	(	self	)	:	\\n	    	if	isinstance	(	self	.	_state	,	NOT_YET_CONNECTE/;"	f
loseConnection	data/bpe_corpus_raw/valid.py	/^utf-8	def	loseConnection	(	)	:	\\n	$/;"	f
loseConnection	data/data_raw/valid.py	/^utf-8	def	loseConnection	(	)	:	\\n	$/;"	f
loss	data/bpe_corpus_raw/valid.py	/^utf-8	def	loss	(	self	,	prediction_dict	,	scope	=	None	)	:	\\n	    	with	tf	.	name_scope	(	scope/;"	f
loss	data/data_raw/valid.py	/^utf-8	def	loss	(	self	,	prediction_dict	,	scope	=	None	)	:	\\n	    	with	tf	.	name_scope	(	scope/;"	f
loss_only_head	data/bpe_corpus_raw/train.py	/^utf-8	@	deprecated	(	None	,	'Please switch to tf.contrib.estimator.*_head.'	)	\\n	def	loss_only_/;"	f
loss_only_head	data/data_raw/train.py	/^utf-8	@	deprecated	(	None	,	'Please switch to tf.contrib.estimator.*_head.'	)	\\n	def	loss_only_/;"	f
lp_loss	data/bpe_corpus_raw/test.py	/^utf-8	def	lp_loss	(	gen_frames	,	gt_frames	,	l_num	)	:	\\n	    	scale_losses	=	[	]	\\n	for	i	in	/;"	f
lp_loss	data/data_raw/test.py	/^utf-8	def	lp_loss	(	gen_frames	,	gt_frames	,	l_num	)	:	\\n	    	scale_losses	=	[	]	\\n	for	i	in	/;"	f
lt	data/bpe_corpus_raw/valid.py	/^utf-8	def	lt	(	self	,	value	)	:	\\n	    	return	LessThan	(	self	,	value	)	\\n		$/;"	f
lt	data/data_raw/valid.py	/^utf-8	def	lt	(	self	,	value	)	:	\\n	    	return	LessThan	(	self	,	value	)	\\n		$/;"	f
macro_dict_to_obj	data/bpe_corpus_raw/train.py	/^utf-8	def	macro_dict_to_obj	(	macro_dict	)	:	\\n	    	if	macro_dict	[	'type'	]	==	'MacroKey'	:	\\/;"	f
macro_dict_to_obj	data/data_raw/train.py	/^utf-8	def	macro_dict_to_obj	(	macro_dict	)	:	\\n	    	if	macro_dict	[	'type'	]	==	'MacroKey'	:	\\/;"	f
macro_tpm_sbs	data/bpe_corpus_raw/test.py	/^utf-8	def	macro_tpm_sbs	(	self	,	state_by_state_micro_tpm	)	:	\\n	    	validate	.	tpm	(	state_by/;"	f
macro_tpm_sbs	data/data_raw/test.py	/^utf-8	def	macro_tpm_sbs	(	self	,	state_by_state_micro_tpm	)	:	\\n	    	validate	.	tpm	(	state_by/;"	f
main	data/bpe_corpus_raw/train.py	/^utf-8	def	main	(	)	:	\\n	    	parser	=	argparse	.	ArgumentParser	(	description	=	__doc__	)	\\n	p/;"	f
main	data/bpe_corpus_raw/train.py	/^utf-8	def	main	(	argv	,	version	=	DEFAULT_VERSION	)	:	\\n	    	tarball	=	download_setuptools	(	)/;"	f
main	data/bpe_corpus_raw/train.py	/^utf-8	def	main	(	argv	=	None	)	:	\\n	    	parser	=	argparse	.	ArgumentParser	(	description	=	\\n/;"	f
main	data/bpe_corpus_raw/train.py	/^utf-8	def	main	(	self	,	args	=	None	)	:	\\n	    	if	args	is	None	:	\\n	        	args	=	sys	.	arg/;"	f
main	data/bpe_corpus_raw/valid.py	/^utf-8	def	main	(	)	:	\\n	    	argparser	=	ParlaiParser	(	False	,	False	)	\\n	argparser	.	add_par/;"	f
main	data/bpe_corpus_raw/valid.py	/^utf-8	def	main	(	)	:	\\n	    	module	=	AnsibleModule	(	argument_spec	=	dict	(	kubeconfig	=	dict	/;"	f
main	data/bpe_corpus_raw/valid.py	/^utf-8	def	main	(	)	:	\\n	    	runner	=	Runner	(	)	\\n	print	(	'Running {0} example.'	.	format	(	/;"	f
main	data/bpe_corpus_raw/valid.py	/^utf-8	def	main	(	)	:	\\n	    	sys	.	stdout	.	write	(	\\n	"""<?xml version="1.0" encoding="utf-8"/;"	f
main	data/bpe_corpus_raw/valid.py	/^utf-8	def	main	(	*	args	)	:	\\n	    	if	not	args	:	\\n	        	args	=	sys	.	argv	[	1	:	]	\\n		l/;"	f
main	data/bpe_corpus_raw/valid.py	/^utf-8	def	main	(	args	)	:	\\n	    	if	len	(	args	)	!=	1	:	\\n	        	print	(	'Usage: %s <funct/;"	f
main	data/data_raw/train.py	/^utf-8	def	main	(	)	:	\\n	    	parser	=	argparse	.	ArgumentParser	(	description	=	__doc__	)	\\n	p/;"	f
main	data/data_raw/train.py	/^utf-8	def	main	(	argv	,	version	=	DEFAULT_VERSION	)	:	\\n	    	tarball	=	download_setuptools	(	)/;"	f
main	data/data_raw/train.py	/^utf-8	def	main	(	argv	=	None	)	:	\\n	    	parser	=	argparse	.	ArgumentParser	(	description	=	\\n/;"	f
main	data/data_raw/train.py	/^utf-8	def	main	(	self	,	args	=	None	)	:	\\n	    	if	args	is	None	:	\\n	        	args	=	sys	.	arg/;"	f
main	data/data_raw/valid.py	/^utf-8	def	main	(	)	:	\\n	    	argparser	=	ParlaiParser	(	False	,	False	)	\\n	argparser	.	add_par/;"	f
main	data/data_raw/valid.py	/^utf-8	def	main	(	)	:	\\n	    	module	=	AnsibleModule	(	argument_spec	=	dict	(	kubeconfig	=	dict	/;"	f
main	data/data_raw/valid.py	/^utf-8	def	main	(	)	:	\\n	    	runner	=	Runner	(	)	\\n	print	(	'Running {0} example.'	.	format	(	/;"	f
main	data/data_raw/valid.py	/^utf-8	def	main	(	)	:	\\n	    	sys	.	stdout	.	write	(	\\n	"""<?xml version="1.0" encoding="utf-8"/;"	f
main	data/data_raw/valid.py	/^utf-8	def	main	(	*	args	)	:	\\n	    	if	not	args	:	\\n	        	args	=	sys	.	argv	[	1	:	]	\\n		l/;"	f
main	data/data_raw/valid.py	/^utf-8	def	main	(	args	)	:	\\n	    	if	len	(	args	)	!=	1	:	\\n	        	print	(	'Usage: %s <funct/;"	f
main	data_utils/build_dataset.py	/^def main(rootdir):$/;"	f
main	models/preprocess.py	/^def main(args):$/;"	f
majmin_targets_to_chord_labels	data/bpe_corpus_raw/valid.py	/^utf-8	def	majmin_targets_to_chord_labels	(	targets	,	fps	)	:	\\n	    	pitch_class_to_label	=	[	'/;"	f
majmin_targets_to_chord_labels	data/data_raw/valid.py	/^utf-8	def	majmin_targets_to_chord_labels	(	targets	,	fps	)	:	\\n	    	pitch_class_to_label	=	[	'/;"	f
major_version	data/bpe_corpus_raw/valid.py	/^utf-8	def	major_version	(	best	=	False	)	:	\\n	    	return	_distro	.	major_version	(	best	)	\\n	/;"	f
major_version	data/data_raw/valid.py	/^utf-8	def	major_version	(	best	=	False	)	:	\\n	    	return	_distro	.	major_version	(	best	)	\\n	/;"	f
makeHTMLTags	data/bpe_corpus_raw/train.py	/^utf-8	def	makeHTMLTags	(	tagStr	)	:	\\n	    	return	_makeTags	(	tagStr	,	False	)	\\n		$/;"	f
makeHTMLTags	data/data_raw/train.py	/^utf-8	def	makeHTMLTags	(	tagStr	)	:	\\n	    	return	_makeTags	(	tagStr	,	False	)	\\n		$/;"	f
makeNumeric	data/bpe_corpus_raw/valid.py	/^utf-8	def	makeNumeric	(	s	)	:	\\n	    	if	checkInt	(	s	)	:	\\n	        	return	int	(	s	)	\\n		el/;"	f
makeNumeric	data/data_raw/valid.py	/^utf-8	def	makeNumeric	(	s	)	:	\\n	    	if	checkInt	(	s	)	:	\\n	        	return	int	(	s	)	\\n		el/;"	f
makeRGBA	data/bpe_corpus_raw/valid.py	/^utf-8	def	makeRGBA	(	*	args	,	**	kwds	)	:	\\n	    	kwds	[	'useRGBA'	]	=	True	\\n	return	makeARGB/;"	f
makeRGBA	data/data_raw/valid.py	/^utf-8	def	makeRGBA	(	*	args	,	**	kwds	)	:	\\n	    	kwds	[	'useRGBA'	]	=	True	\\n	return	makeARGB/;"	f
makeSetup	data/bpe_corpus_raw/valid.py	/^utf-8	def	makeSetup	(	**	args	)	:	\\n	    	distutils	.	core	.	_setup_stop_after	=	'commandline'	/;"	f
makeSetup	data/data_raw/valid.py	/^utf-8	def	makeSetup	(	**	args	)	:	\\n	    	distutils	.	core	.	_setup_stop_after	=	'commandline'	/;"	f
make_all	models/preprocess.py	/^    def make_all(lang, vocab):$/;"	f	function:main	file:
make_axes	data/bpe_corpus_raw/test.py	/^utf-8	@	docstring	.	Substitution	(	make_axes_kw_doc	)	\\n	def	make_axes	(	parent	,	**	kw	)	:	\\n/;"	f
make_axes	data/data_raw/test.py	/^utf-8	@	docstring	.	Substitution	(	make_axes_kw_doc	)	\\n	def	make_axes	(	parent	,	**	kw	)	:	\\n/;"	f
make_binary_dataset	models/preprocess.py	/^    def make_binary_dataset(vocab, input_prefix, output_prefix, lang, num_workers):$/;"	f	function:main	file:
make_callback_controls	data/bpe_corpus_raw/valid.py	/^utf-8	def	make_callback_controls	(	self	,	v	,	control_name	,	control	)	:	\\n	    	assert	isinsta/;"	f
make_callback_controls	data/data_raw/valid.py	/^utf-8	def	make_callback_controls	(	self	,	v	,	control_name	,	control	)	:	\\n	    	assert	isinsta/;"	f
make_captions	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_automatic_captions	(	self	,	video_id	,	webpage	)	:	\\n	    	self	.	to_screen	(	'%/;"	f	function:_get_automatic_captions	file:
make_captions	data/data_raw/valid.py	/^utf-8	def	_get_automatic_captions	(	self	,	video_id	,	webpage	)	:	\\n	    	self	.	to_screen	(	'%/;"	f	function:_get_automatic_captions	file:
make_colormap	data/bpe_corpus_raw/train.py	/^utf-8	def	make_colormap	(	color	)	:	\\n	    	try	:	\\n	        	r	,	g	,	b	=	mc	.	colorConverter	/;"	f
make_colormap	data/data_raw/train.py	/^utf-8	def	make_colormap	(	color	)	:	\\n	    	try	:	\\n	        	r	,	g	,	b	=	mc	.	colorConverter	/;"	f
make_conditional	data/bpe_corpus_raw/train.py	/^utf-8	def	make_conditional	(	self	,	request_or_environ	,	accept_ranges	=	False	,	\\n	complete_le/;"	f
make_conditional	data/data_raw/train.py	/^utf-8	def	make_conditional	(	self	,	request_or_environ	,	accept_ranges	=	False	,	\\n	complete_le/;"	f
make_content_range	data/bpe_corpus_raw/valid.py	/^utf-8	def	make_content_range	(	self	,	length	)	:	\\n	    	rng	=	self	.	range_for_length	(	length/;"	f
make_content_range	data/data_raw/valid.py	/^utf-8	def	make_content_range	(	self	,	length	)	:	\\n	    	rng	=	self	.	range_for_length	(	length/;"	f
make_cookies	data/bpe_corpus_raw/valid.py	/^utf-8	def	make_cookies	(	self	,	response	,	request	)	:	\\n	    	headers	=	response	.	info	(	)	\\/;"	f
make_cookies	data/data_raw/valid.py	/^utf-8	def	make_cookies	(	self	,	response	,	request	)	:	\\n	    	headers	=	response	.	info	(	)	\\/;"	f
make_cylindrical	data/bpe_corpus_raw/valid.py	/^utf-8	def	make_cylindrical	(	self	,	grid	,	axis	=	'z'	)	:	\\n	    	if	grid	.	shape	!=	self	.	sha/;"	f
make_cylindrical	data/data_raw/valid.py	/^utf-8	def	make_cylindrical	(	self	,	grid	,	axis	=	'z'	)	:	\\n	    	if	grid	.	shape	!=	self	.	sha/;"	f
make_dataset	models/preprocess.py	/^    def make_dataset(vocab, input_prefix, output_prefix, lang, num_workers=1):$/;"	f	function:main	file:
make_env	data/bpe_corpus_raw/valid.py	/^utf-8	def	make_env	(	self	,	overrides	=	None	)	:	\\n	    	rv	=	dict	(	self	.	env	)	\\n	if	overri/;"	f
make_env	data/data_raw/valid.py	/^utf-8	def	make_env	(	self	,	overrides	=	None	)	:	\\n	    	rv	=	dict	(	self	.	env	)	\\n	if	overri/;"	f
make_filter_dict	data/bpe_corpus_raw/test.py	/^utf-8	def	make_filter_dict	(	filters	)	:	\\n	    	_filter	=	frappe	.	_dict	(	)	\\n	for	f	in	filt/;"	f
make_filter_dict	data/data_raw/test.py	/^utf-8	def	make_filter_dict	(	filters	)	:	\\n	    	_filter	=	frappe	.	_dict	(	)	\\n	for	f	in	filt/;"	f
make_finite	data/bpe_corpus_raw/valid.py	/^utf-8	def	make_finite	(	t	,	replacement	)	:	\\n	    	return	tf	.	where	(	tf	.	is_finite	(	t	)	,	/;"	f
make_finite	data/data_raw/valid.py	/^utf-8	def	make_finite	(	t	,	replacement	)	:	\\n	    	return	tf	.	where	(	tf	.	is_finite	(	t	)	,	/;"	f
make_graph	data/bpe_corpus_raw/valid.py	/^utf-8	def	make_graph	(	dists	,	scheme	=	'default'	)	:	\\n	    	scheme	=	get_scheme	(	scheme	)	\\/;"	f
make_graph	data/data_raw/valid.py	/^utf-8	def	make_graph	(	dists	,	scheme	=	'default'	)	:	\\n	    	scheme	=	get_scheme	(	scheme	)	\\/;"	f
make_help_text	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_options	(	)	:	\\n	    	program_options	=	[	(	'no-splash'	,	_	(	\\n	'do not present/;"	f	function:get_options	file:
make_help_text	data/data_raw/valid.py	/^utf-8	def	get_options	(	)	:	\\n	    	program_options	=	[	(	'no-splash'	,	_	(	\\n	'do not present/;"	f	function:get_options	file:
make_invalid_op	data/bpe_corpus_raw/valid.py	/^utf-8	def	make_invalid_op	(	name	)	:	\\n	\\n	    	def	invalid_op	(	self	,	other	=	None	)	:	\\n	 /;"	f
make_invalid_op	data/data_raw/valid.py	/^utf-8	def	make_invalid_op	(	name	)	:	\\n	\\n	    	def	invalid_op	(	self	,	other	=	None	)	:	\\n	 /;"	f
make_jar	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_cookie_not_expired_when_added_after_removal	(	self	)	->	None	:	\\n	    	timestamp/;"	f	function:test_cookie_not_expired_when_added_after_removal	file:
make_jar	data/data_raw/valid.py	/^utf-8	def	test_cookie_not_expired_when_added_after_removal	(	self	)	->	None	:	\\n	    	timestamp/;"	f	function:test_cookie_not_expired_when_added_after_removal	file:
make_markdown_widget	data/bpe_corpus_raw/valid.py	/^utf-8	def	make_markdown_widget	(	text	:	str	)	->	Gtk	.	Widget	:	\\n	    	html	=	MDX_CONTEXT	.	co/;"	f
make_markdown_widget	data/data_raw/valid.py	/^utf-8	def	make_markdown_widget	(	text	:	str	)	->	Gtk	.	Widget	:	\\n	    	html	=	MDX_CONTEXT	.	co/;"	f
make_node	data/bpe_corpus_raw/train.py	/^utf-8	def	make_node	(	self	,	Z_f	,	Z_b	,	V_f	,	V_b	,	c_f	,	c_b	,	i_f	,	i_b	)	:	\\n	    	Z_f	=	gp/;"	f
make_node	data/bpe_corpus_raw/valid.py	/^utf-8	def	make_node	(	self	,	coding_dist	,	true_one_of_n	)	:	\\n	    	_coding_dist	=	tensor	.	as/;"	f
make_node	data/bpe_corpus_raw/valid.py	/^utf-8	def	make_node	(	self	,	x	,	values	,	ilist	)	:	\\n	    	x_	=	theano	.	tensor	.	as_tensor_va/;"	f
make_node	data/data_raw/train.py	/^utf-8	def	make_node	(	self	,	Z_f	,	Z_b	,	V_f	,	V_b	,	c_f	,	c_b	,	i_f	,	i_b	)	:	\\n	    	Z_f	=	gp/;"	f
make_node	data/data_raw/valid.py	/^utf-8	def	make_node	(	self	,	coding_dist	,	true_one_of_n	)	:	\\n	    	_coding_dist	=	tensor	.	as/;"	f
make_node	data/data_raw/valid.py	/^utf-8	def	make_node	(	self	,	x	,	values	,	ilist	)	:	\\n	    	x_	=	theano	.	tensor	.	as_tensor_va/;"	f
make_null_session	data/bpe_corpus_raw/valid.py	/^utf-8	def	make_null_session	(	self	)	:	\\n	    	return	self	.	session_interface	.	make_null_sess/;"	f
make_null_session	data/data_raw/valid.py	/^utf-8	def	make_null_session	(	self	)	:	\\n	    	return	self	.	session_interface	.	make_null_sess/;"	f
make_overload_template	data/bpe_corpus_raw/valid.py	/^utf-8	def	make_overload_template	(	func	,	overload_func	,	jit_options	,	strict	)	:	\\n	    	func/;"	f
make_overload_template	data/data_raw/valid.py	/^utf-8	def	make_overload_template	(	func	,	overload_func	,	jit_options	,	strict	)	:	\\n	    	func/;"	f
make_password	data/bpe_corpus_raw/valid.py	/^utf-8	def	make_password	(	password	,	salt	=	None	,	hasher	=	'default'	)	:	\\n	    	if	password	i/;"	f
make_password	data/data_raw/valid.py	/^utf-8	def	make_password	(	password	,	salt	=	None	,	hasher	=	'default'	)	:	\\n	    	if	password	i/;"	f
make_path_relative	data/bpe_corpus_raw/train.py	/^utf-8	def	make_path_relative	(	path	,	rel_to	)	:	\\n	    	path_filename	=	os	.	path	.	basename	(/;"	f
make_path_relative	data/data_raw/train.py	/^utf-8	def	make_path_relative	(	path	,	rel_to	)	:	\\n	    	path_filename	=	os	.	path	.	basename	(/;"	f
make_path_to_file	data/bpe_corpus_raw/test.py	/^utf-8	def	make_path_to_file	(	f	)	:	\\n	    	dir	=	os	.	path	.	dirname	(	os	.	path	.	abspath	(	f/;"	f
make_path_to_file	data/data_raw/test.py	/^utf-8	def	make_path_to_file	(	f	)	:	\\n	    	dir	=	os	.	path	.	dirname	(	os	.	path	.	abspath	(	f/;"	f
make_plugin_list	data/bpe_corpus_raw/valid.py	/^utf-8	def	get_options	(	)	:	\\n	    	program_options	=	[	(	'no-splash'	,	_	(	\\n	'do not present/;"	f	function:get_options.make_help_text.format_options	file:
make_plugin_list	data/data_raw/valid.py	/^utf-8	def	get_options	(	)	:	\\n	    	program_options	=	[	(	'no-splash'	,	_	(	\\n	'do not present/;"	f	function:get_options.make_help_text.format_options	file:
make_pointer	data/bpe_corpus_raw/valid.py	/^utf-8	def	make_pointer	(	self	)	:	\\n	    	path	=	g	.	computeLeoDir	(	)	\\n	path	=	g	.	os_path_j/;"	f
make_pointer	data/data_raw/valid.py	/^utf-8	def	make_pointer	(	self	)	:	\\n	    	path	=	g	.	computeLeoDir	(	)	\\n	path	=	g	.	os_path_j/;"	f
make_release_tree	data/bpe_corpus_raw/train.py	/^utf-8	def	get_cmdclass	(	)	:	\\n	    	if	'versioneer'	in	sys	.	modules	:	\\n	        	del	sys	.	/;"	f	member:get_cmdclass.cmd_version.initialize_options.finalize_options.run.cmd_build_py.run.cmd_build_exe.run.cmd_sdist.run	file:
make_release_tree	data/data_raw/train.py	/^utf-8	def	get_cmdclass	(	)	:	\\n	    	if	'versioneer'	in	sys	.	modules	:	\\n	        	del	sys	.	/;"	f	member:get_cmdclass.cmd_version.initialize_options.finalize_options.run.cmd_build_py.run.cmd_build_exe.run.cmd_sdist.run	file:
make_signer	data/bpe_corpus_raw/valid.py	/^utf-8	def	make_signer	(	self	,	salt	=	None	)	:	\\n	    	if	salt	is	None	:	\\n	        	salt	=	se/;"	f
make_signer	data/data_raw/valid.py	/^utf-8	def	make_signer	(	self	,	salt	=	None	)	:	\\n	    	if	salt	is	None	:	\\n	        	salt	=	se/;"	f
make_table	data/bpe_corpus_raw/train.py	/^utf-8	def	make_table	(	self	,	*	args	,	**	kargs	)	:	\\n	    	return	make_table	(	self	.	res	,	*	/;"	f
make_table	data/data_raw/train.py	/^utf-8	def	make_table	(	self	,	*	args	,	**	kargs	)	:	\\n	    	return	make_table	(	self	.	res	,	*	/;"	f
make_tfrecords_from_arrs	data/bpe_corpus_raw/test.py	/^utf-8	@	staticmethod	\\n	def	make_tfrecords_from_arrs	(	data_records	,	save_path	,	dtype	=	np	.	/;"	f
make_tfrecords_from_arrs	data/data_raw/test.py	/^utf-8	@	staticmethod	\\n	def	make_tfrecords_from_arrs	(	data_records	,	save_path	,	dtype	=	np	.	/;"	f
make_uc	data/bpe_corpus_raw/valid.py	/^utf-8	def	make_uc	(	dic	,	data	,	dim	=	-	1	)	:	\\n	    	if	dim	==	-	1	:	\\n	        	dim	=	data	/;"	f
make_uc	data/data_raw/valid.py	/^utf-8	def	make_uc	(	dic	,	data	,	dim	=	-	1	)	:	\\n	    	if	dim	==	-	1	:	\\n	        	dim	=	data	/;"	f
makedev	data/bpe_corpus_raw/valid.py	/^utf-8	def	makedev	(	self	,	tarinfo	,	targetpath	)	:	\\n	    	if	not	hasattr	(	os	,	'mknod'	)	or	/;"	f
makedev	data/data_raw/valid.py	/^utf-8	def	makedev	(	self	,	tarinfo	,	targetpath	)	:	\\n	    	if	not	hasattr	(	os	,	'mknod'	)	or	/;"	f
makedir	data/bpe_corpus_raw/valid.py	/^utf-8	def	makedir	(	self	,	tarinfo	,	targetpath	)	:	\\n	    	try	:	\\n	        	os	.	mkdir	(	tar/;"	f
makedir	data/data_raw/valid.py	/^utf-8	def	makedir	(	self	,	tarinfo	,	targetpath	)	:	\\n	    	try	:	\\n	        	os	.	mkdir	(	tar/;"	f
management_url	data/bpe_corpus_raw/test.py	/^utf-8	@	property	\\n	def	management_url	(	self	)	:	\\n	    	warnings	.	warn	(	\\n	'management_ur/;"	f
management_url	data/data_raw/test.py	/^utf-8	@	property	\\n	def	management_url	(	self	)	:	\\n	    	warnings	.	warn	(	\\n	'management_ur/;"	f
manifest_rc	data/bpe_corpus_raw/valid.py	/^utf-8	def	manifest_rc	(	name	,	type	=	'dll'	)	:	\\n	    	if	type	==	'dll'	:	\\n	        	rctype	/;"	f
manifest_rc	data/data_raw/valid.py	/^utf-8	def	manifest_rc	(	name	,	type	=	'dll'	)	:	\\n	    	if	type	==	'dll'	:	\\n	        	rctype	/;"	f
manifests	data/bpe_corpus_raw/test.py	/^utf-8	def	manifests	(	self	,	tests	=	None	)	:	\\n	    	if	tests	is	None	:	\\n	        	return	se/;"	f
manifests	data/data_raw/test.py	/^utf-8	def	manifests	(	self	,	tests	=	None	)	:	\\n	    	if	tests	is	None	:	\\n	        	return	se/;"	f
map_centroidal_result	data/bpe_corpus_raw/valid.py	/^utf-8	def	build_map_centroidal_result	(	model	)	:	\\n	    	if	hasattr	(	model	,	'map_centroidal_/;"	f	function:build_map_centroidal_result	file:
map_centroidal_result	data/data_raw/valid.py	/^utf-8	def	build_map_centroidal_result	(	model	)	:	\\n	    	if	hasattr	(	model	,	'map_centroidal_/;"	f	function:build_map_centroidal_result	file:
map_fn	data/bpe_corpus_raw/valid.py	/^utf-8	def	map_fn	(	fn	,	elems	,	dtype	=	None	,	parallel_iterations	=	10	,	back_prop	=	True	,	\\n/;"	f
map_fn	data/data_raw/valid.py	/^utf-8	def	map_fn	(	fn	,	elems	,	dtype	=	None	,	parallel_iterations	=	10	,	back_prop	=	True	,	\\n/;"	f
map_userid_to_1	data/bpe_corpus_raw/valid.py	/^utf-8	def	map_userid_to_1	(	self	,	unused_key	,	value	)	:	\\n	    	json	=	self	.	json_parse	(	va/;"	f
map_userid_to_1	data/data_raw/valid.py	/^utf-8	def	map_userid_to_1	(	self	,	unused_key	,	value	)	:	\\n	    	json	=	self	.	json_parse	(	va/;"	f
mapper	data/bpe_corpus_raw/valid.py	/^utf-8	@	util	.	memoized_property	\\n	def	mapper	(	self	)	:	\\n	    	if	util	.	callable	(	self	.	/;"	f
mapper	data/data_raw/valid.py	/^utf-8	@	util	.	memoized_property	\\n	def	mapper	(	self	)	:	\\n	    	if	util	.	callable	(	self	.	/;"	f
mark_rule	data/bpe_corpus_raw/valid.py	/^utf-8	@	utils	.	use_signature	(	core	.	MarkConfig	)	\\n	def	mark_rule	(	self	,	**	kwargs	)	:	\\n/;"	f
mark_rule	data/data_raw/valid.py	/^utf-8	@	utils	.	use_signature	(	core	.	MarkConfig	)	\\n	def	mark_rule	(	self	,	**	kwargs	)	:	\\n/;"	f
match	data/bpe_corpus_raw/valid.py	/^utf-8	def	match	(	pattern	,	data	,	vars	=	None	)	:	\\n	    	if	vars	is	None	:	\\n	        	vars	/;"	f
match	data/bpe_corpus_raw/valid.py	/^utf-8	def	match	(	self	,	fpath	)	:	\\n	    	for	pat	in	self	.	pats	:	\\n	        	if	fnmatch	.	f/;"	f
match	data/bpe_corpus_raw/valid.py	/^utf-8	def	match	(	self	,	node	,	results	=	None	)	:	\\n	    	return	self	.	match_seq	(	[	node	]	,/;"	f
match	data/bpe_corpus_raw/valid.py	/^utf-8	def	match	(	self	,	path	)	:	\\n	    	path	=	path	.	split	(	'.'	)	\\n	return	self	.	match_s/;"	f
match	data/data_raw/valid.py	/^utf-8	def	match	(	pattern	,	data	,	vars	=	None	)	:	\\n	    	if	vars	is	None	:	\\n	        	vars	/;"	f
match	data/data_raw/valid.py	/^utf-8	def	match	(	self	,	fpath	)	:	\\n	    	for	pat	in	self	.	pats	:	\\n	        	if	fnmatch	.	f/;"	f
match	data/data_raw/valid.py	/^utf-8	def	match	(	self	,	node	,	results	=	None	)	:	\\n	    	return	self	.	match_seq	(	[	node	]	,/;"	f
match	data/data_raw/valid.py	/^utf-8	def	match	(	self	,	path	)	:	\\n	    	path	=	path	.	split	(	'.'	)	\\n	return	self	.	match_s/;"	f
matchDOI	data/bpe_corpus_raw/train.py	/^utf-8	def	matchDOI	(	db	)	:	\\n	    	query	=	"""SELECT Documents.note\\n            FROM Documen/;"	f
matchDOI	data/data_raw/train.py	/^utf-8	def	matchDOI	(	db	)	:	\\n	    	query	=	"""SELECT Documents.note\\n            FROM Documen/;"	f
matchPreviousLiteral	data/bpe_corpus_raw/train.py	/^utf-8	def	matchPreviousLiteral	(	expr	)	:	\\n	    	rep	=	Forward	(	)	\\n	\\n	def	copyTokenToRepe/;"	f
matchPreviousLiteral	data/data_raw/train.py	/^utf-8	def	matchPreviousLiteral	(	expr	)	:	\\n	    	rep	=	Forward	(	)	\\n	\\n	def	copyTokenToRepe/;"	f
matches	data/bpe_corpus_raw/train.py	/^utf-8	def	matches	(	self	,	ver	)	:	\\n	    	if	not	isinstance	(	ver	,	SemVer	)	:	\\n	        	ra/;"	f
matches	data/data_raw/train.py	/^utf-8	def	matches	(	self	,	ver	)	:	\\n	    	if	not	isinstance	(	ver	,	SemVer	)	:	\\n	        	ra/;"	f
matches_tags	data/bpe_corpus_raw/test.py	/^utf-8	def	matches_tags	(	self	,	tags	)	:	\\n	    	for	key	,	value	in	tags	.	items	(	)	:	\\n	    /;"	f
matches_tags	data/data_raw/test.py	/^utf-8	def	matches_tags	(	self	,	tags	)	:	\\n	    	for	key	,	value	in	tags	.	items	(	)	:	\\n	    /;"	f
matrix33	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	matrix33	(	self	)	:	\\n	    	return	Matrix33	.	from_quaternion	(	self	)/;"	f
matrix33	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	matrix33	(	self	)	:	\\n	    	return	Matrix33	.	from_quaternion	(	self	)/;"	f
matrix_solve_ls	data/bpe_corpus_raw/valid.py	/^utf-8	def	matrix_solve_ls	(	matrix	,	rhs	,	l2_regularizer	,	fast	=	True	,	name	=	None	)	:	\\n	  /;"	f
matrix_solve_ls	data/data_raw/valid.py	/^utf-8	def	matrix_solve_ls	(	matrix	,	rhs	,	l2_regularizer	,	fast	=	True	,	name	=	None	)	:	\\n	  /;"	f
max	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	max	(	self	)	:	\\n	    	try	:	\\n	        	val	=	iinfo	.	_max_vals	[	se/;"	f
max	data/data_raw/train.py	/^utf-8	@	property	\\n	def	max	(	self	)	:	\\n	    	try	:	\\n	        	val	=	iinfo	.	_max_vals	[	se/;"	f
max_lags	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	max_lags	(	self	)	:	\\n	    	return	self	.	_max_lags	\\n		$/;"	f
max_lags	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	max_lags	(	self	)	:	\\n	    	return	self	.	_max_lags	\\n		$/;"	f
maximum_line_length	data/bpe_corpus_raw/test.py	/^utf-8	def	maximum_line_length	(	physical_line	,	max_line_length	,	multiline	)	:	\\n	    	line	=	/;"	f
maximum_line_length	data/bpe_corpus_raw/valid.py	/^utf-8	@	register_check	\\n	def	maximum_line_length	(	physical_line	,	max_line_length	,	multiline/;"	f
maximum_line_length	data/data_raw/test.py	/^utf-8	def	maximum_line_length	(	physical_line	,	max_line_length	,	multiline	)	:	\\n	    	line	=	/;"	f
maximum_line_length	data/data_raw/valid.py	/^utf-8	@	register_check	\\n	def	maximum_line_length	(	physical_line	,	max_line_length	,	multiline/;"	f
maxnomlen	data/bpe_corpus_raw/valid.py	/^utf-8	def	maxnomlen	(	atrv	)	:	\\n	    	nomtp	=	get_nom_val	(	atrv	)	\\n	return	max	(	len	(	i	)	/;"	f
maxnomlen	data/data_raw/valid.py	/^utf-8	def	maxnomlen	(	atrv	)	:	\\n	    	nomtp	=	get_nom_val	(	atrv	)	\\n	return	max	(	len	(	i	)	/;"	f
maybe_award_badge	data/bpe_corpus_raw/train.py	/^utf-8	@	task	(	)	\\n	@	timeit	\\n	def	maybe_award_badge	(	badge_template	,	year	,	user	)	:	\\n	 /;"	f
maybe_award_badge	data/data_raw/train.py	/^utf-8	@	task	(	)	\\n	@	timeit	\\n	def	maybe_award_badge	(	badge_template	,	year	,	user	)	:	\\n	 /;"	f
maybe_wrap	data/bpe_corpus_raw/train.py	/^utf-8	def	maybe_wrap	(	wrapper	,	func	)	:	\\n	    	if	functools	is	not	None	:	\\n	        	wrapp/;"	f
maybe_wrap	data/data_raw/train.py	/^utf-8	def	maybe_wrap	(	wrapper	,	func	)	:	\\n	    	if	functools	is	not	None	:	\\n	        	wrapp/;"	f
mean	data/bpe_corpus_raw/train.py	/^utf-8	def	mean	(	array	,	axis	=	None	,	skipna	=	None	,	**	kwargs	)	:	\\n	    	from	.	common	impo/;"	f
mean	data/bpe_corpus_raw/valid.py	/^utf-8	@	array_function_dispatch	(	_mean_dispatcher	)	\\n	def	mean	(	a	,	axis	=	None	,	dtype	=	No/;"	f
mean	data/data_raw/train.py	/^utf-8	def	mean	(	array	,	axis	=	None	,	skipna	=	None	,	**	kwargs	)	:	\\n	    	from	.	common	impo/;"	f
mean	data/data_raw/valid.py	/^utf-8	@	array_function_dispatch	(	_mean_dispatcher	)	\\n	def	mean	(	a	,	axis	=	None	,	dtype	=	No/;"	f
mean_and_list	data/bpe_corpus_raw/train.py	/^utf-8	def	mean_and_list	(	x	)	:	\\n	    	return	mean	(	x	)	,	x	\\n		$/;"	f
mean_and_list	data/data_raw/train.py	/^utf-8	def	mean_and_list	(	x	)	:	\\n	    	return	mean	(	x	)	,	x	\\n		$/;"	f
mean_squared_error	data/bpe_corpus_raw/train.py	/^utf-8	@	on_array	(	0	)	\\n	def	mean_squared_error	(	a	,	initial	=	None	)	:	\\n	    	if	initial	i/;"	f
mean_squared_error	data/data_raw/train.py	/^utf-8	@	on_array	(	0	)	\\n	def	mean_squared_error	(	a	,	initial	=	None	)	:	\\n	    	if	initial	i/;"	f
mean_tri_area	data/bpe_corpus_raw/train.py	/^utf-8	def	mean_tri_area	(	self	)	:	\\n	    	return	np	.	mean	(	self	.	tri_areas	(	)	)	\\n		$/;"	f
mean_tri_area	data/data_raw/train.py	/^utf-8	def	mean_tri_area	(	self	)	:	\\n	    	return	np	.	mean	(	self	.	tri_areas	(	)	)	\\n		$/;"	f
media_list	data/bpe_corpus_raw/train.py	/^utf-8	def	media_list	(	self	)	:	\\n	    	return	libvlc_media_discoverer_media_list	(	self	)	\\n	/;"	f
media_list	data/data_raw/train.py	/^utf-8	def	media_list	(	self	)	:	\\n	    	return	libvlc_media_discoverer_media_list	(	self	)	\\n	/;"	f
median	data/bpe_corpus_raw/valid.py	/^utf-8	def	median	(	y	)	:	\\n	    	return	linkage	(	y	,	method	=	'median'	,	metric	=	'euclidean'	/;"	f
median	data/data_raw/valid.py	/^utf-8	def	median	(	y	)	:	\\n	    	return	linkage	(	y	,	method	=	'median'	,	metric	=	'euclidean'	/;"	f
memberJoined	data/bpe_corpus_raw/valid.py	/^utf-8	def	memberJoined	(	self	,	member	)	:	\\n	    	if	not	member	in	self	.	members	:	\\n	      /;"	f
memberJoined	data/data_raw/valid.py	/^utf-8	def	memberJoined	(	self	,	member	)	:	\\n	    	if	not	member	in	self	.	members	:	\\n	      /;"	f
memoize_when_activated	data/bpe_corpus_raw/test.py	/^utf-8	def	memoize_when_activated	(	fun	)	:	\\n	\\n	    	@	functools	.	wraps	(	fun	)	\\n	def	wrap/;"	f
memoize_when_activated	data/data_raw/test.py	/^utf-8	def	memoize_when_activated	(	fun	)	:	\\n	\\n	    	@	functools	.	wraps	(	fun	)	\\n	def	wrap/;"	f
merge_arrays	data/bpe_corpus_raw/valid.py	/^utf-8	def	merge_arrays	(	seqarrays	,	fill_value	=	-	1	,	flatten	=	False	,	usemask	=	False	,	\\n	/;"	f
merge_arrays	data/data_raw/valid.py	/^utf-8	def	merge_arrays	(	seqarrays	,	fill_value	=	-	1	,	flatten	=	False	,	usemask	=	False	,	\\n	/;"	f
merge_configuration_from_path	data/bpe_corpus_raw/train.py	/^utf-8	def	merge_configuration_from_path	(	path	,	configuration	)	:	\\n	    	if	not	os	.	path	.	e/;"	f
merge_configuration_from_path	data/data_raw/train.py	/^utf-8	def	merge_configuration_from_path	(	path	,	configuration	)	:	\\n	    	if	not	os	.	path	.	e/;"	f
merge_dicts_to_table	data_utils/count_filesize_by_ext.py	/^def merge_dicts_to_table(dict1, dict2):$/;"	f
merge_hooks	data/bpe_corpus_raw/valid.py	/^utf-8	def	merge_hooks	(	request_hooks	,	session_hooks	,	dict_class	=	OrderedDict	)	:	\\n	    	if/;"	f
merge_hooks	data/data_raw/valid.py	/^utf-8	def	merge_hooks	(	request_hooks	,	session_hooks	,	dict_class	=	OrderedDict	)	:	\\n	    	if/;"	f
merge_result	models/preprocess.py	/^        def merge_result(worker_result):$/;"	f	function:main.make_binary_dataset	file:
metadata_isdir	data/bpe_corpus_raw/valid.py	/^utf-8	def	metadata_isdir	(	name	)	:	\\n	$/;"	f
metadata_isdir	data/data_raw/valid.py	/^utf-8	def	metadata_isdir	(	name	)	:	\\n	$/;"	f
method	data/bpe_corpus_raw/valid.py	/^utf-8	def	_get_method	(	name	,	func	)	:	\\n	\\n	    	def	method	(	self	,	*	args	,	**	kw	)	:	\\n	/;"	f	function:_get_method	file:
method	data/data_raw/valid.py	/^utf-8	def	_get_method	(	name	,	func	)	:	\\n	\\n	    	def	method	(	self	,	*	args	,	**	kw	)	:	\\n	/;"	f	function:_get_method	file:
methodURI	data/bpe_corpus_raw/train.py	/^utf-8	def	methodURI	(	self	)	:	\\n	    	ret	=	libxsltmod	.	xsltStylesheetGetMethodURI	(	self	.	_/;"	f
methodURI	data/data_raw/train.py	/^utf-8	def	methodURI	(	self	)	:	\\n	    	ret	=	libxsltmod	.	xsltStylesheetGetMethodURI	(	self	.	_/;"	f
method_handlers_generic_handler	data/bpe_corpus_raw/valid.py	/^utf-8	def	method_handlers_generic_handler	(	service	,	method_handlers	)	:	\\n	    	from	grpc	imp/;"	f
method_handlers_generic_handler	data/data_raw/valid.py	/^utf-8	def	method_handlers_generic_handler	(	service	,	method_handlers	)	:	\\n	    	from	grpc	imp/;"	f
metric_from_binarized	data/bpe_corpus_raw/test.py	/^utf-8	def	metric_from_binarized	(	self	,	seg	,	ref	)	:	\\n	$/;"	f
metric_from_binarized	data/data_raw/test.py	/^utf-8	def	metric_from_binarized	(	self	,	seg	,	ref	)	:	\\n	$/;"	f
midl	data/bpe_corpus_raw/valid.py	/^utf-8	def	GetIdlBuildData	(	self	,	source	,	config	)	:	\\n	    	config	=	self	.	_TargetConfig	(	/;"	f	function:GetIdlBuildData	file:
midl	data/data_raw/valid.py	/^utf-8	def	GetIdlBuildData	(	self	,	source	,	config	)	:	\\n	    	config	=	self	.	_TargetConfig	(	/;"	f	function:GetIdlBuildData	file:
migrate	data/bpe_corpus_raw/test.py	/^utf-8	def	migrate	(	*	args	,	**	kwargs	)	:	\\n	    	db	=	connection	.	get_database	(	)	\\n	if	'r/;"	f
migrate	data/data_raw/test.py	/^utf-8	def	migrate	(	*	args	,	**	kwargs	)	:	\\n	    	db	=	connection	.	get_database	(	)	\\n	if	'r/;"	f
min	data/bpe_corpus_raw/valid.py	/^utf-8	def	min	(	self	)	:	\\n	    	if	self	.	kind	==	'u'	:	\\n	        	return	0	\\n		else	:	\\n	/;"	f
min	data/data_raw/valid.py	/^utf-8	def	min	(	self	)	:	\\n	    	if	self	.	kind	==	'u'	:	\\n	        	return	0	\\n		else	:	\\n	/;"	f
min_bound	data/bpe_corpus_raw/train.py	/^utf-8	def	min_bound	(	self	)	:	\\n	    	limits	=	self	.	__get_joint_limits	(	)	\\n	if	len	(	limi/;"	f
min_bound	data/data_raw/train.py	/^utf-8	def	min_bound	(	self	)	:	\\n	    	limits	=	self	.	__get_joint_limits	(	)	\\n	if	len	(	limi/;"	f
min_date	data/bpe_corpus_raw/valid.py	/^utf-8	def	min_date	(	self	,	rows	:	List	[	Row	]	,	column	:	DateColumn	)	->	Date	:	\\n	    	cell_/;"	f
min_date	data/data_raw/valid.py	/^utf-8	def	min_date	(	self	,	rows	:	List	[	Row	]	,	column	:	DateColumn	)	->	Date	:	\\n	    	cell_/;"	f
minimize_floats	data/bpe_corpus_raw/train.py	/^utf-8	@	defines_shrink_pass	(	lambda	self	:	self	.	stable_identifier_arguments	)	\\n	def	minimiz/;"	f
minimize_floats	data/data_raw/train.py	/^utf-8	@	defines_shrink_pass	(	lambda	self	:	self	.	stable_identifier_arguments	)	\\n	def	minimiz/;"	f
mirr	data/bpe_corpus_raw/valid.py	/^utf-8	@	array_function_dispatch	(	_mirr_dispatcher	)	\\n	def	mirr	(	values	,	finance_rate	,	rein/;"	f
mirr	data/data_raw/valid.py	/^utf-8	@	array_function_dispatch	(	_mirr_dispatcher	)	\\n	def	mirr	(	values	,	finance_rate	,	rein/;"	f
mkdir	data/bpe_corpus_raw/train.py	/^utf-8	def	mkdir	(	self	,	path	,	attr	)	:	\\n	    	return	SFTP_OP_UNSUPPORTED	\\n		$/;"	f
mkdir	data/data_raw/train.py	/^utf-8	def	mkdir	(	self	,	path	,	attr	)	:	\\n	    	return	SFTP_OP_UNSUPPORTED	\\n		$/;"	f
mkpkt	data/bpe_corpus_raw/valid.py	/^utf-8	def	mkpkt	(	salt	,	usr	,	pwd	,	mac	)	:	\\n	    	data	=	b'\\\\x03\\\\x01\\\\x00'	+	bytes	(	/;"	f
mkpkt	data/data_raw/valid.py	/^utf-8	def	mkpkt	(	salt	,	usr	,	pwd	,	mac	)	:	\\n	    	data	=	b'\\\\x03\\\\x01\\\\x00'	+	bytes	(	/;"	f
mkpydir	data/bpe_corpus_raw/valid.py	/^utf-8	def	mkpydir	(	self	,	name	)	:	\\n	    	p	=	self	.	mkdir	(	name	)	\\n	p	.	ensure	(	'__init_/;"	f
mkpydir	data/data_raw/valid.py	/^utf-8	def	mkpydir	(	self	,	name	)	:	\\n	    	p	=	self	.	mkdir	(	name	)	\\n	p	.	ensure	(	'__init_/;"	f
mmGetTraceNumSegments	data/bpe_corpus_raw/valid.py	/^utf-8	def	mmGetTraceNumSegments	(	self	)	:	\\n	    	return	self	.	_mmTraces	[	'numSegments'	]	\\/;"	f
mmGetTraceNumSegments	data/data_raw/valid.py	/^utf-8	def	mmGetTraceNumSegments	(	self	)	:	\\n	    	return	self	.	_mmTraces	[	'numSegments'	]	\\/;"	f
mmapFile	data/bpe_corpus_raw/valid.py	/^utf-8	def	mmapFile	(	self	,	addr	,	size	,	perms	,	filename	,	offset	=	0	)	:	\\n	    	if	addr	==	/;"	f
mmapFile	data/data_raw/valid.py	/^utf-8	def	mmapFile	(	self	,	addr	,	size	,	perms	,	filename	,	offset	=	0	)	:	\\n	    	if	addr	==	/;"	f
mnist_extract_labels	data/bpe_corpus_raw/valid.py	/^utf-8	def	mnist_extract_labels	(	filename	,	num_images	)	:	\\n	    	print	(	'Extracting'	,	filen/;"	f
mnist_extract_labels	data/data_raw/valid.py	/^utf-8	def	mnist_extract_labels	(	filename	,	num_images	)	:	\\n	    	print	(	'Extracting'	,	filen/;"	f
mock_factory	data/bpe_corpus_raw/valid.py	/^utf-8	def	mock_factory	(	r	)	:	\\n	    	mocked	=	mock_obj_to_dict	(	r	)	\\n	mocked	.	configure_m/;"	f
mock_factory	data/data_raw/valid.py	/^utf-8	def	mock_factory	(	r	)	:	\\n	    	mocked	=	mock_obj_to_dict	(	r	)	\\n	mocked	.	configure_m/;"	f
mock_gcs	data/bpe_corpus_raw/test.py	/^utf-8	def	test_requires_guest	(	monkeypatch	)	:	\\n	\\n	    	@	staticmethod	\\n	def	mock_gcs	(	)/;"	f	function:test_requires_guest	file:
mock_gcs	data/data_raw/test.py	/^utf-8	def	test_requires_guest	(	monkeypatch	)	:	\\n	\\n	    	@	staticmethod	\\n	def	mock_gcs	(	)/;"	f	function:test_requires_guest	file:
mod_snmp_im_settings	data/bpe_corpus_raw/valid.py	/^utf-8	def	mod_snmp_im_settings	(	self	,	snmp_access	=	None	,	web_agent_ip_address	=	None	,	\\n	s/;"	f
mod_snmp_im_settings	data/data_raw/valid.py	/^utf-8	def	mod_snmp_im_settings	(	self	,	snmp_access	=	None	,	web_agent_ip_address	=	None	,	\\n	s/;"	f
mod_subdir	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	mod_subdir	(	self	)	:	\\n	    	return	self	.	cfg	.	mod_subdir	\\n		$/;"	f
mod_subdir	data/data_raw/train.py	/^utf-8	@	property	\\n	def	mod_subdir	(	self	)	:	\\n	    	return	self	.	cfg	.	mod_subdir	\\n		$/;"	f
model_fn	data/bpe_corpus_raw/valid.py	/^utf-8	def	model_fn	(	features	,	labels	,	mode	,	params	)	:	\\n	    	assert	len	(	params	[	'upsam/;"	f
model_fn	data/data_raw/valid.py	/^utf-8	def	model_fn	(	features	,	labels	,	mode	,	params	)	:	\\n	    	assert	len	(	params	[	'upsam/;"	f
model_name	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	model_name	(	self	)	:	\\n	    	return	self	.	_model_name	\\n		$/;"	f
model_name	data/data_raw/train.py	/^utf-8	@	property	\\n	def	model_name	(	self	)	:	\\n	    	return	self	.	_model_name	\\n		$/;"	f
model_permission	data/bpe_corpus_raw/test.py	/^utf-8	def	model_permission	(	permission	)	:	\\n	\\n	    	def	has_permission	(	request	,	view	,	o/;"	f
model_permission	data/data_raw/test.py	/^utf-8	def	model_permission	(	permission	)	:	\\n	\\n	    	def	has_permission	(	request	,	view	,	o/;"	f
modify	data/bpe_corpus_raw/train.py	/^utf-8	def	modify	(	self	,	**	patch	)	:	\\n	    	if	'monitor'	in	patch	:	\\n	        	value	=	sel/;"	f
modify	data/data_raw/train.py	/^utf-8	def	modify	(	self	,	**	patch	)	:	\\n	    	if	'monitor'	in	patch	:	\\n	        	value	=	sel/;"	f
modpkglink	data/bpe_corpus_raw/train.py	/^utf-8	def	modpkglink	(	self	,	modpkginfo	)	:	\\n	    	name	,	path	,	ispackage	,	shadowed	=	modpk/;"	f
modpkglink	data/data_raw/train.py	/^utf-8	def	modpkglink	(	self	,	modpkginfo	)	:	\\n	    	name	,	path	,	ispackage	,	shadowed	=	modpk/;"	f
module_settings_cancel	data/bpe_corpus_raw/train.py	/^utf-8	@	app	.	route	(	'\/xhr\/module_settings_cancel\/<name>'	)	\\n	@	requires_auth	\\n	def	modu/;"	f
module_settings_cancel	data/data_raw/train.py	/^utf-8	@	app	.	route	(	'\/xhr\/module_settings_cancel\/<name>'	)	\\n	@	requires_auth	\\n	def	modu/;"	f
module_to_dict	data/bpe_corpus_raw/valid.py	/^utf-8	def	module_to_dict	(	module	,	omittable	=	lambda	k	:	k	.	startswith	(	'_'	)	)	:	\\n	    	r/;"	f
module_to_dict	data/data_raw/valid.py	/^utf-8	def	module_to_dict	(	module	,	omittable	=	lambda	k	:	k	.	startswith	(	'_'	)	)	:	\\n	    	r/;"	f
monitor_mongo_status	data/bpe_corpus_raw/train.py	/^utf-8	@	tornado	.	gen	.	coroutine	\\n	def	monitor_mongo_status	(	self	)	:	\\n	    	if	self	.	mon/;"	f
monitor_mongo_status	data/data_raw/train.py	/^utf-8	@	tornado	.	gen	.	coroutine	\\n	def	monitor_mongo_status	(	self	)	:	\\n	    	if	self	.	mon/;"	f
monkey_patch_username_validator	data/bpe_corpus_raw/valid.py	/^utf-8	def	monkey_patch_username_validator	(	)	:	\\n	    	username	=	User	.	_meta	.	get_field	(	'/;"	f
monkey_patch_username_validator	data/data_raw/valid.py	/^utf-8	def	monkey_patch_username_validator	(	)	:	\\n	    	username	=	User	.	_meta	.	get_field	(	'/;"	f
month	data/bpe_corpus_raw/valid.py	/^utf-8	def	month	(	self	,	abbr	:	bool	=	False	)	->	str	:	\\n	    	key	=	'abbr'	if	abbr	else	'name/;"	f
month	data/data_raw/valid.py	/^utf-8	def	month	(	self	,	abbr	:	bool	=	False	)	->	str	:	\\n	    	key	=	'abbr'	if	abbr	else	'name/;"	f
morsel_to_cookie	data/bpe_corpus_raw/train.py	/^utf-8	def	morsel_to_cookie	(	morsel	)	:	\\n	    	expires	=	None	\\n	if	morsel	[	'max-age'	]	:	\\/;"	f
morsel_to_cookie	data/bpe_corpus_raw/valid.py	/^utf-8	def	morsel_to_cookie	(	morsel	)	:	\\n	    	expires	=	None	\\n	if	morsel	[	'max-age'	]	:	\\/;"	f
morsel_to_cookie	data/data_raw/train.py	/^utf-8	def	morsel_to_cookie	(	morsel	)	:	\\n	    	expires	=	None	\\n	if	morsel	[	'max-age'	]	:	\\/;"	f
morsel_to_cookie	data/data_raw/valid.py	/^utf-8	def	morsel_to_cookie	(	morsel	)	:	\\n	    	expires	=	None	\\n	if	morsel	[	'max-age'	]	:	\\/;"	f
most_similar_cosmul	data/bpe_corpus_raw/train.py	/^utf-8	def	most_similar_cosmul	(	positive	:	List	[	str	]	,	negative	:	List	[	str	]	)	:	\\n	    	r/;"	f
most_similar_cosmul	data/data_raw/train.py	/^utf-8	def	most_similar_cosmul	(	positive	:	List	[	str	]	,	negative	:	List	[	str	]	)	:	\\n	    	r/;"	f
most_specific_compatible_shape	data/bpe_corpus_raw/valid.py	/^utf-8	def	most_specific_compatible_shape	(	self	,	other	)	:	\\n	    	other	=	as_shape	(	other	)	/;"	f
most_specific_compatible_shape	data/data_raw/valid.py	/^utf-8	def	most_specific_compatible_shape	(	self	,	other	)	:	\\n	    	other	=	as_shape	(	other	)	/;"	f
motion_t	data/bpe_corpus_raw/test.py	/^utf-8	def	motion_t	(	input_line	,	cur	,	count	)	:	\\n	    	return	start_catching_keys	(	1	,	'cb_/;"	f
motion_t	data/data_raw/test.py	/^utf-8	def	motion_t	(	input_line	,	cur	,	count	)	:	\\n	    	return	start_catching_keys	(	1	,	'cb_/;"	f
mount	data/bpe_corpus_raw/valid.py	/^utf-8	def	mount	(	self	,	root	,	script_name	=	''	,	config	=	None	)	:	\\n	    	if	script_name	is	/;"	f
mount	data/data_raw/valid.py	/^utf-8	def	mount	(	self	,	root	,	script_name	=	''	,	config	=	None	)	:	\\n	    	if	script_name	is	/;"	f
move	data/bpe_corpus_raw/train.py	/^utf-8	@	response_or_error	\\n	def	move	(	self	,	newProject	)	:	\\n	    	return	self	.	_client	.	/;"	f
move	data/bpe_corpus_raw/valid.py	/^utf-8	def	move	(	self	,	args	)	:	\\n	    	self	.	px	=	self	.	x	\\n	self	.	py	=	self	.	y	\\n	self/;"	f
move	data/data_raw/train.py	/^utf-8	@	response_or_error	\\n	def	move	(	self	,	newProject	)	:	\\n	    	return	self	.	_client	.	/;"	f
move	data/data_raw/valid.py	/^utf-8	def	move	(	self	,	args	)	:	\\n	    	self	.	px	=	self	.	x	\\n	self	.	py	=	self	.	y	\\n	self/;"	f
moveFilesToDerivedTransformation	data/bpe_corpus_raw/train.py	/^utf-8	def	moveFilesToDerivedTransformation	(	self	,	transDict	,	resetUnused	=	True	)	:	\\n	    	/;"	f
moveFilesToDerivedTransformation	data/data_raw/train.py	/^utf-8	def	moveFilesToDerivedTransformation	(	self	,	transDict	,	resetUnused	=	True	)	:	\\n	    	/;"	f
move_complete_channel	data/bpe_corpus_raw/test.py	/^utf-8	def	move_complete_channel	(	self	)	:	\\n	    	to_channel	=	Channel	.	objects	.	get	(	self	/;"	f
move_complete_channel	data/data_raw/test.py	/^utf-8	def	move_complete_channel	(	self	)	:	\\n	    	to_channel	=	Channel	.	objects	.	get	(	self	/;"	f
move_file	data/bpe_corpus_raw/valid.py	/^utf-8	def	move_file	(	self	,	items_output	)	:	\\n	    	now	=	datetime	.	now	(	)	.	strftime	(	'%Y/;"	f
move_file	data/data_raw/valid.py	/^utf-8	def	move_file	(	self	,	items_output	)	:	\\n	    	now	=	datetime	.	now	(	)	.	strftime	(	'%Y/;"	f
mp	data_utils/build_dataset.py	/^import multiprocessing as mp$/;"	I
mp	data_utils/downloaded_repos.py	/^import multiprocessing as mp$/;"	I
mp	data_utils/get_file_contents.py	/^import multiprocessing as mp$/;"	I
mpf_cbrt	data/bpe_corpus_raw/valid.py	/^utf-8	def	mpf_cbrt	(	s	,	prec	,	rnd	=	round_fast	)	:	\\n	    	return	mpf_nthroot	(	s	,	3	,	prec	/;"	f
mpf_cbrt	data/data_raw/valid.py	/^utf-8	def	mpf_cbrt	(	s	,	prec	,	rnd	=	round_fast	)	:	\\n	    	return	mpf_nthroot	(	s	,	3	,	prec	/;"	f
msnplus_strip	data/bpe_corpus_raw/valid.py	/^utf-8	def	msnplus_strip	(	text	,	useless_arg	=	None	)	:	\\n	    	text	=	_escape_special_chars	(	/;"	f
msnplus_strip	data/data_raw/valid.py	/^utf-8	def	msnplus_strip	(	text	,	useless_arg	=	None	)	:	\\n	    	text	=	_escape_special_chars	(	/;"	f
msql	data/bpe_corpus_raw/valid.py	/^utf-8	@	check_precondition	\\n	@	validate_request	\\n	def	msql	(	self	,	gid	,	sid	,	did	,	scid	,/;"	f
msql	data/data_raw/valid.py	/^utf-8	@	check_precondition	\\n	@	validate_request	\\n	def	msql	(	self	,	gid	,	sid	,	did	,	scid	,/;"	f
multi_states_query	data/bpe_corpus_raw/valid.py	/^utf-8	def	multi_states_query	(	addresses	)	:	\\n	    	responses	=	{	}	\\n	for	name	,	addr	in	add/;"	f
multi_states_query	data/data_raw/valid.py	/^utf-8	def	multi_states_query	(	addresses	)	:	\\n	    	responses	=	{	}	\\n	for	name	,	addr	in	add/;"	f
multiply	data/bpe_corpus_raw/train.py	/^utf-8	def	multiply	(	self	,	other	)	:	\\n	    	if	not	isinstance	(	other	,	Number	)	:	\\n	      /;"	f
multiply	data/data_raw/train.py	/^utf-8	def	multiply	(	self	,	other	)	:	\\n	    	if	not	isinstance	(	other	,	Number	)	:	\\n	      /;"	f
must_welcome	data/bpe_corpus_raw/test.py	/^utf-8	def	must_welcome	(	self	,	client	)	:	\\n	    	if	(	self	.	_welcomeFlags	<=	0	or	not	client/;"	f
must_welcome	data/data_raw/test.py	/^utf-8	def	must_welcome	(	self	,	client	)	:	\\n	    	if	(	self	.	_welcomeFlags	<=	0	or	not	client/;"	f
mutate	data/bpe_corpus_raw/valid.py	/^utf-8	def	mutate	(	self	,	context	,	handler	,	bound	,	args	,	kw	)	:	\\n	    	pass	\\n		$/;"	f
mutate	data/data_raw/valid.py	/^utf-8	def	mutate	(	self	,	context	,	handler	,	bound	,	args	,	kw	)	:	\\n	    	pass	\\n		$/;"	f
mv	data/bpe_corpus_raw/train.py	/^utf-8	def	mv	(	src	,	dest	)	:	\\n	    	if	src	==	dest	:	\\n	        	return	\\n		if	os	.	path	.	/;"	f
mv	data/data_raw/train.py	/^utf-8	def	mv	(	src	,	dest	)	:	\\n	    	if	src	==	dest	:	\\n	        	return	\\n		if	os	.	path	.	/;"	f
mv84consensus	data/bpe_corpus_raw/valid.py	/^utf-8	def	mv84consensus	(	pid	,	N	,	t	,	vi	,	broadcast	,	receive	)	:	\\n	    	mv84v	=	defaultdic/;"	f
mv84consensus	data/data_raw/valid.py	/^utf-8	def	mv84consensus	(	pid	,	N	,	t	,	vi	,	broadcast	,	receive	)	:	\\n	    	mv84v	=	defaultdic/;"	f
my_bdist_wheel	data/bpe_corpus_raw/train.py	/^utf-8	def	setup	(	pkg	,	setup_py	,	cmake_shared_library_prefix	,	\\n	cmake_shared_library_suffix/;"	c	member:setup.my_build_py.run.my_clean.run	file:
my_bdist_wheel	data/data_raw/train.py	/^utf-8	def	setup	(	pkg	,	setup_py	,	cmake_shared_library_prefix	,	\\n	cmake_shared_library_suffix/;"	c	member:setup.my_build_py.run.my_clean.run	file:
my_build_py	data/bpe_corpus_raw/train.py	/^utf-8	def	setup	(	pkg	,	setup_py	,	cmake_shared_library_prefix	,	\\n	cmake_shared_library_suffix/;"	c	function:setup	file:
my_build_py	data/data_raw/train.py	/^utf-8	def	setup	(	pkg	,	setup_py	,	cmake_shared_library_prefix	,	\\n	cmake_shared_library_suffix/;"	c	function:setup	file:
my_clean	data/bpe_corpus_raw/train.py	/^utf-8	def	setup	(	pkg	,	setup_py	,	cmake_shared_library_prefix	,	\\n	cmake_shared_library_suffix/;"	c	member:setup.my_build_py.run	file:
my_clean	data/data_raw/train.py	/^utf-8	def	setup	(	pkg	,	setup_py	,	cmake_shared_library_prefix	,	\\n	cmake_shared_library_suffix/;"	c	member:setup.my_build_py.run	file:
my_input	data/bpe_corpus_raw/valid.py	/^utf-8	def	my_input	(	msg	)	:	\\n	    	try	:	\\n	        	return	input	(	msg	)	\\n		except	(	Keyb/;"	f
my_input	data/data_raw/valid.py	/^utf-8	def	my_input	(	msg	)	:	\\n	    	try	:	\\n	        	return	input	(	msg	)	\\n		except	(	Keyb/;"	f
my_seq2seq	models/seq2seq.py	/^def my_seq2seq(args):$/;"	f
n_speeches	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	n_speeches	(	self	)	:	\\n	    	return	self	.	speeches	.	count	(	)	\\n		$/;"	f
n_speeches	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	n_speeches	(	self	)	:	\\n	    	return	self	.	speeches	.	count	(	)	\\n		$/;"	f
name	data/bpe_corpus_raw/test.py	/^utf-8	@	name	.	setter	\\n	def	name	(	self	,	name	)	:	\\n	    	if	name	is	None	:	\\n	        	rai/;"	f
name	data/bpe_corpus_raw/train.py	/^utf-8	@	name	.	setter	\\n	def	name	(	self	,	name	)	:	\\n	    	if	name	is	None	:	\\n	        	rai/;"	f
name	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	name	(	self	)	:	\\n	    	return	self	.	_name	\\n		$/;"	f
name	data/bpe_corpus_raw/valid.py	/^utf-8	@	abc	.	abstractproperty	\\n	def	name	(	self	)	:	\\n	    	return	self	.	_name	\\n		$/;"	f
name	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	name	(	self	)	:	\\n	    	if	not	self	.	_name	:	\\n	        	if	self	.	a/;"	f
name	data/bpe_corpus_raw/valid.py	/^utf-8	def	name	(	self	,	pretty	=	False	)	:	\\n	    	name	=	self	.	os_release_attr	(	'name'	)	or	/;"	f
name	data/bpe_corpus_raw/valid.py	/^utf-8	def	name	(	self	,	x	)	:	\\n	    	return	self	.	labeler	.	name	(	x	,	force	=	True	)	\\n		$/;"	f
name	data/data_raw/test.py	/^utf-8	@	name	.	setter	\\n	def	name	(	self	,	name	)	:	\\n	    	if	name	is	None	:	\\n	        	rai/;"	f
name	data/data_raw/train.py	/^utf-8	@	name	.	setter	\\n	def	name	(	self	,	name	)	:	\\n	    	if	name	is	None	:	\\n	        	rai/;"	f
name	data/data_raw/train.py	/^utf-8	@	property	\\n	def	name	(	self	)	:	\\n	    	return	self	.	_name	\\n		$/;"	f
name	data/data_raw/valid.py	/^utf-8	@	abc	.	abstractproperty	\\n	def	name	(	self	)	:	\\n	    	return	self	.	_name	\\n		$/;"	f
name	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	name	(	self	)	:	\\n	    	if	not	self	.	_name	:	\\n	        	if	self	.	a/;"	f
name	data/data_raw/valid.py	/^utf-8	def	name	(	self	,	pretty	=	False	)	:	\\n	    	name	=	self	.	os_release_attr	(	'name'	)	or	/;"	f
name	data/data_raw/valid.py	/^utf-8	def	name	(	self	,	x	)	:	\\n	    	return	self	.	labeler	.	name	(	x	,	force	=	True	)	\\n		$/;"	f
named_value_int_encode	data/bpe_corpus_raw/valid.py	/^utf-8	def	named_value_int_encode	(	self	,	time_boot_ms	,	name	,	value	)	:	\\n	    	return	MAVLin/;"	f
named_value_int_encode	data/data_raw/valid.py	/^utf-8	def	named_value_int_encode	(	self	,	time_boot_ms	,	name	,	value	)	:	\\n	    	return	MAVLin/;"	f
names_from_files	data/bpe_corpus_raw/valid.py	/^utf-8	def	names_from_files	(	release	)	:	\\n	    	potential_names	=	[	]	\\n	for	file	in	release	/;"	f
names_from_files	data/data_raw/valid.py	/^utf-8	def	names_from_files	(	release	)	:	\\n	    	potential_names	=	[	]	\\n	for	file	in	release	/;"	f
native_type_range	data/bpe_corpus_raw/test.py	/^utf-8	def	native_type_range	(	fmt	)	:	\\n	    	if	fmt	==	'c'	:	\\n	        	lh	=	0	,	256	\\n		el/;"	f
native_type_range	data/data_raw/test.py	/^utf-8	def	native_type_range	(	fmt	)	:	\\n	    	if	fmt	==	'c'	:	\\n	        	lh	=	0	,	256	\\n		el/;"	f
navigateKeyRecordTimestr	data/bpe_corpus_raw/valid.py	/^utf-8	def	navigateKeyRecordTimestr	(	self	,	key	,	record	,	timestamp	,	creds	,	\\n	transaction	,/;"	f
navigateKeyRecordTimestr	data/data_raw/valid.py	/^utf-8	def	navigateKeyRecordTimestr	(	self	,	key	,	record	,	timestamp	,	creds	,	\\n	transaction	,/;"	f
navigator	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	navigator	(	self	)	:	\\n	    	return	self	.	_navigator	\\n		$/;"	f
navigator	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	navigator	(	self	)	:	\\n	    	return	self	.	_navigator	\\n		$/;"	f
ndfromtxt	data/bpe_corpus_raw/valid.py	/^utf-8	def	ndfromtxt	(	fname	,	**	kwargs	)	:	\\n	    	kwargs	[	'usemask'	]	=	False	\\n	return	gen/;"	f
ndfromtxt	data/data_raw/valid.py	/^utf-8	def	ndfromtxt	(	fname	,	**	kwargs	)	:	\\n	    	kwargs	[	'usemask'	]	=	False	\\n	return	gen/;"	f
negative	data/bpe_corpus_raw/train.py	/^utf-8	def	negative	(	x	,	name	=	None	)	:	\\n	    	with	ops	.	name_scope	(	name	,	'Neg'	,	[	x	]	)/;"	f
negative	data/data_raw/train.py	/^utf-8	def	negative	(	x	,	name	=	None	)	:	\\n	    	with	ops	.	name_scope	(	name	,	'Neg'	,	[	x	]	)/;"	f
negotiate	data/bpe_corpus_raw/train.py	/^utf-8	@	classmethod	\\n	def	negotiate	(	cls	,	preferred	,	available	,	sep	=	'_'	,	aliases	=	LOCA/;"	f
negotiate	data/data_raw/train.py	/^utf-8	@	classmethod	\\n	def	negotiate	(	cls	,	preferred	,	available	,	sep	=	'_'	,	aliases	=	LOCA/;"	f
net	data/bpe_corpus_raw/train.py	/^utf-8	def	net	(	self	)	:	\\n	    	return	IP	(	IPint	.	net	(	self	)	)	\\n		$/;"	f
net	data/data_raw/train.py	/^utf-8	def	net	(	self	)	:	\\n	    	return	IP	(	IPint	.	net	(	self	)	)	\\n		$/;"	f
netloc	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	netloc	(	self	)	:	\\n	    	if	self	.	port	:	\\n	        	return	'%s:%d'/;"	f
netloc	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	netloc	(	self	)	:	\\n	    	if	self	.	port	:	\\n	        	return	'%s:%d'/;"	f
new	data/bpe_corpus_raw/test.py	/^utf-8	def	new	(	key	,	msg	=	None	,	digestmod	=	None	)	:	\\n	    	return	HMAC	(	key	,	msg	,	diges/;"	f
new	data/bpe_corpus_raw/valid.py	/^utf-8	def	new	(	key	,	*	args	,	**	kwargs	)	:	\\n	    	return	XORCipher	(	key	,	*	args	,	**	kwarg/;"	f
new	data/data_raw/test.py	/^utf-8	def	new	(	key	,	msg	=	None	,	digestmod	=	None	)	:	\\n	    	return	HMAC	(	key	,	msg	,	diges/;"	f
new	data/data_raw/valid.py	/^utf-8	def	new	(	key	,	*	args	,	**	kwargs	)	:	\\n	    	return	XORCipher	(	key	,	*	args	,	**	kwarg/;"	f
newTextChild	data/bpe_corpus_raw/train.py	/^utf-8	def	newTextChild	(	self	,	parent	,	name	,	content	)	:	\\n	    	if	parent	is	None	:	\\n	   /;"	f
newTextChild	data/data_raw/train.py	/^utf-8	def	newTextChild	(	self	,	parent	,	name	,	content	)	:	\\n	    	if	parent	is	None	:	\\n	   /;"	f
new_autoshape_sp	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	new_autoshape_sp	(	id_	,	name	,	prst	,	left	,	top	,	width	,	height	/;"	f
new_autoshape_sp	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	new_autoshape_sp	(	id_	,	name	,	prst	,	left	,	top	,	width	,	height	/;"	f
new_media_status	data/bpe_corpus_raw/train.py	/^utf-8	def	new_media_status	(	self	,	status	)	:	\\n	    	_LOGGER	.	debug	(	'new media_status arri/;"	f
new_media_status	data/data_raw/train.py	/^utf-8	def	new_media_status	(	self	,	status	)	:	\\n	    	_LOGGER	.	debug	(	'new media_status arri/;"	f
new_message	data/bpe_corpus_raw/valid.py	/^utf-8	def	new_message	(	self	,	thread_id	,	content	=	None	,	**	kwargs	)	:	\\n	    	args	=	{	'thr/;"	f
new_message	data/data_raw/valid.py	/^utf-8	def	new_message	(	self	,	thread_id	,	content	=	None	,	**	kwargs	)	:	\\n	    	args	=	{	'thr/;"	f
new_pub	data/bpe_corpus_raw/train.py	/^utf-8	@	staticmethod	\\n	def	new_pub	(	endpoint	)	:	\\n	    	return	Zsock	(	lib	.	zsock_new_pub	/;"	f
new_pub	data/data_raw/train.py	/^utf-8	@	staticmethod	\\n	def	new_pub	(	endpoint	)	:	\\n	    	return	Zsock	(	lib	.	zsock_new_pub	/;"	f
new_raw_data_type	data/bpe_corpus_raw/valid.py	/^utf-8	@	user_passes_test	(	user_can_view_data	)	\\n	def	new_raw_data_type	(	request	)	:	\\n	    /;"	f
new_raw_data_type	data/data_raw/valid.py	/^utf-8	@	user_passes_test	(	user_can_view_data	)	\\n	def	new_raw_data_type	(	request	)	:	\\n	    /;"	f
new_request	data/bpe_corpus_raw/train.py	/^utf-8	def	tunnel_patch	(	http	)	:	\\n	    	request_orig	=	http	.	request	\\n	\\n	def	new_request/;"	f	function:tunnel_patch	file:
new_request	data/data_raw/train.py	/^utf-8	def	tunnel_patch	(	http	)	:	\\n	    	request_orig	=	http	.	request	\\n	\\n	def	new_request/;"	f	function:tunnel_patch	file:
new_topic	data/bpe_corpus_raw/valid.py	/^utf-8	@	login_required	\\n	def	new_topic	(	request	)	:	\\n	    	if	request	.	method	!=	'POST'	:	/;"	f
new_topic	data/data_raw/valid.py	/^utf-8	@	login_required	\\n	def	new_topic	(	request	)	:	\\n	    	if	request	.	method	!=	'POST'	:	/;"	f
new_year_vars	data/bpe_corpus_raw/train.py	/^utf-8	def	new_year_vars	(	user	:	user_pb2	.	User	,	**	unused_kwargs	:	typing	.	Any	\\n	)	->	typi/;"	f
new_year_vars	data/data_raw/train.py	/^utf-8	def	new_year_vars	(	user	:	user_pb2	.	User	,	**	unused_kwargs	:	typing	.	Any	\\n	)	->	typi/;"	f
newline	data/bpe_corpus_raw/valid.py	/^utf-8	def	newline	(	logger	,	nb_blank_lines	=	1	)	:	\\n	    	formatter	=	logging	.	Formatter	(	f/;"	f
newline	data/data_raw/valid.py	/^utf-8	def	newline	(	logger	,	nb_blank_lines	=	1	)	:	\\n	    	formatter	=	logging	.	Formatter	(	f/;"	f
newlines	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	newlines	(	self	)	:	\\n	    	return	None	\\n		$/;"	f
newlines	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	newlines	(	self	)	:	\\n	    	return	None	\\n		$/;"	f
news	data/bpe_corpus_raw/valid.py	/^utf-8	@	internationalizeDocstring	\\n	def	news	(	self	,	irc	,	msg	,	args	,	channel	,	id	)	:	\\n	/;"	f
news	data/data_raw/valid.py	/^utf-8	@	internationalizeDocstring	\\n	def	news	(	self	,	irc	,	msg	,	args	,	channel	,	id	)	:	\\n	/;"	f
next	data/bpe_corpus_raw/train.py	/^utf-8	def	next	(	self	)	:	\\n	    	self	.	_check	(	'ra'	)	\\n	if	self	.	firstmember	is	not	None	/;"	f
next	data/bpe_corpus_raw/train.py	/^utf-8	def	next	(	self	,	item	)	:	\\n	    	return	self	.	tk	.	call	(	self	.	_w	,	'next'	,	item	)	/;"	f
next	data/bpe_corpus_raw/valid.py	/^utf-8	def	next	(	self	)	:	\\n	    	if	self	.	curr_idx	==	len	(	self	.	idx	)	:	\\n	        	raise/;"	f
next	data/data_raw/train.py	/^utf-8	def	next	(	self	)	:	\\n	    	self	.	_check	(	'ra'	)	\\n	if	self	.	firstmember	is	not	None	/;"	f
next	data/data_raw/train.py	/^utf-8	def	next	(	self	,	item	)	:	\\n	    	return	self	.	tk	.	call	(	self	.	_w	,	'next'	,	item	)	/;"	f
next	data/data_raw/valid.py	/^utf-8	def	next	(	self	)	:	\\n	    	if	self	.	curr_idx	==	len	(	self	.	idx	)	:	\\n	        	raise/;"	f
nextChainLink	data/bpe_corpus_raw/valid.py	/^utf-8	def	nextChainLink	(	self	,	link	,	passVar	=	None	)	:	\\n	    	if	link	is	None	:	\\n	      /;"	f
nextChainLink	data/data_raw/valid.py	/^utf-8	def	nextChainLink	(	self	,	link	,	passVar	=	None	)	:	\\n	    	if	link	is	None	:	\\n	      /;"	f
next_change	data/bpe_corpus_raw/valid.py	/^utf-8	def	next_change	(	git_gutter	,	**	kwargs	)	:	\\n	    	_goto_change	(	git_gutter	,	_find_ne/;"	f
next_change	data/data_raw/valid.py	/^utf-8	def	next_change	(	git_gutter	,	**	kwargs	)	:	\\n	    	_goto_change	(	git_gutter	,	_find_ne/;"	f
next_state	data/bpe_corpus_raw/train.py	/^utf-8	def	next_state	(	self	,	val	)	:	\\n	\\n	    	def	find_singular_string	(	p	,	max_width	)	:	/;"	f
next_state	data/data_raw/train.py	/^utf-8	def	next_state	(	self	,	val	)	:	\\n	\\n	    	def	find_singular_string	(	p	,	max_width	)	:	/;"	f
nextday_week	data/bpe_corpus_raw/valid.py	/^utf-8	def	nextday_week	(	self	,	day	)	:	\\n	    	self	.	_nextday	(	day	)	[	1	]	[	1	]	\\n		$/;"	f
nextday_week	data/data_raw/valid.py	/^utf-8	def	nextday_week	(	self	,	day	)	:	\\n	    	self	.	_nextday	(	day	)	[	1	]	[	1	]	\\n		$/;"	f
nextfile	data/bpe_corpus_raw/valid.py	/^utf-8	def	nextfile	(	)	:	\\n	    	if	not	_state	:	\\n	        	raise	RuntimeError	(	'no active i/;"	f
nextfile	data/data_raw/valid.py	/^utf-8	def	nextfile	(	)	:	\\n	    	if	not	_state	:	\\n	        	raise	RuntimeError	(	'no active i/;"	f
nlp	data_utils/data_to_text.py	/^nlp = spacy.load("en_core_web_sm", disable=["parser", "tagger", "ner"])$/;"	v
nn	models/seq2seq.py	/^import torch.nn as nn$/;"	I
no_matching_rfc2965	data/bpe_corpus_raw/valid.py	/^utf-8	def	make_cookies	(	self	,	response	,	request	)	:	\\n	    	headers	=	response	.	info	(	)	\\/;"	f	function:make_cookies	file:
no_matching_rfc2965	data/data_raw/valid.py	/^utf-8	def	make_cookies	(	self	,	response	,	request	)	:	\\n	    	headers	=	response	.	info	(	)	\\/;"	f	function:make_cookies	file:
no_transact_batch	data/bpe_corpus_raw/valid.py	/^utf-8	def	no_transact_batch	(	self	)	:	\\n	    	return	NoTransactionBatch	(	self	.	_client	)	\\n/;"	f
no_transact_batch	data/data_raw/valid.py	/^utf-8	def	no_transact_batch	(	self	)	:	\\n	    	return	NoTransactionBatch	(	self	.	_client	)	\\n/;"	f
nodefaults	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	nodefaults	(	self	)	:	\\n	    	return	ParameterList	(	[	x	for	x	in	self/;"	f
nodefaults	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	nodefaults	(	self	)	:	\\n	    	return	ParameterList	(	[	x	for	x	in	self/;"	f
noise	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	noise	(	self	)	:	\\n	    	return	self	.	_gp	.	Gaussian_noise	.	variance/;"	f
noise	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	noise	(	self	)	:	\\n	    	return	self	.	_gp	.	Gaussian_noise	.	variance/;"	f
norm_package_version	data/bpe_corpus_raw/valid.py	/^utf-8	def	norm_package_version	(	version	)	:	\\n	    	if	version	:	\\n	        	version	=	','	.	/;"	f
norm_package_version	data/data_raw/valid.py	/^utf-8	def	norm_package_version	(	version	)	:	\\n	    	if	version	:	\\n	        	version	=	','	.	/;"	f
normalize	data/bpe_corpus_raw/test.py	/^utf-8	@	classmethod	\\n	def	normalize	(	cls	,	url	)	:	\\n	    	scheme	,	netloc	,	path	,	query	,	/;"	f
normalize	data/data_raw/test.py	/^utf-8	@	classmethod	\\n	def	normalize	(	cls	,	url	)	:	\\n	    	scheme	,	netloc	,	path	,	query	,	/;"	f
normalize_and_split	data/bpe_corpus_raw/train.py	/^utf-8	def	normalize_and_split	(	self	,	statement	)	:	\\n	    	statement	=	' '	.	join	(	str	.	spl/;"	f
normalize_and_split	data/data_raw/train.py	/^utf-8	def	normalize_and_split	(	self	,	statement	)	:	\\n	    	statement	=	' '	.	join	(	str	.	spl/;"	f
normalize_feed_url	data/bpe_corpus_raw/train.py	/^utf-8	def	normalize_feed_url	(	url	)	:	\\n	    	if	not	url	or	len	(	url	)	<	8	:	\\n	        	ret/;"	f
normalize_feed_url	data/data_raw/train.py	/^utf-8	def	normalize_feed_url	(	url	)	:	\\n	    	if	not	url	or	len	(	url	)	<	8	:	\\n	        	ret/;"	f
normalize_snippet	data/bpe_corpus_raw/train.py	/^utf-8	@	functools	.	lru_cache	(	)	\\n	def	normalize_snippet	(	s	,	*	,	indent	=	0	)	:	\\n	    	s	/;"	f
normalize_snippet	data/data_raw/train.py	/^utf-8	@	functools	.	lru_cache	(	)	\\n	def	normalize_snippet	(	s	,	*	,	indent	=	0	)	:	\\n	    	s	/;"	f
normalized_log_c_to_linear	data/bpe_corpus_raw/train.py	/^utf-8	def	create_log_c	(	gamut	,	transfer_function	,	exposure_index	,	lut_directory	,	\\n	lut_re/;"	f	function:create_log_c.gain_for_EI.hermite_weights.normalized_sensor_to_relative_exposure	file:
normalized_log_c_to_linear	data/data_raw/train.py	/^utf-8	def	create_log_c	(	gamut	,	transfer_function	,	exposure_index	,	lut_directory	,	\\n	lut_re/;"	f	function:create_log_c.gain_for_EI.hermite_weights.normalized_sensor_to_relative_exposure	file:
normalized_sensor_to_relative_exposure	data/bpe_corpus_raw/train.py	/^utf-8	def	create_log_c	(	gamut	,	transfer_function	,	exposure_index	,	lut_directory	,	\\n	lut_re/;"	f	function:create_log_c.gain_for_EI.hermite_weights	file:
normalized_sensor_to_relative_exposure	data/data_raw/train.py	/^utf-8	def	create_log_c	(	gamut	,	transfer_function	,	exposure_index	,	lut_directory	,	\\n	lut_re/;"	f	function:create_log_c.gain_for_EI.hermite_weights	file:
normcase	data/bpe_corpus_raw/test.py	/^utf-8	def	normcase	(	s	)	:	\\n	    	return	s	.	replace	(	'\\\\\\\\'	,	'\/'	)	.	lower	(	)	\\n		$/;"	f
normcase	data/data_raw/test.py	/^utf-8	def	normcase	(	s	)	:	\\n	    	return	s	.	replace	(	'\\\\\\\\'	,	'\/'	)	.	lower	(	)	\\n		$/;"	f
not_exists	data/bpe_corpus_raw/valid.py	/^utf-8	def	not_exists	(	self	)	:	\\n	    	return	AttributeNotExists	(	self	)	\\n		$/;"	f
not_exists	data/data_raw/valid.py	/^utf-8	def	not_exists	(	self	)	:	\\n	    	return	AttributeNotExists	(	self	)	\\n		$/;"	f
note2freq	data/bpe_corpus_raw/valid.py	/^utf-8	def	note2freq	(	note	)	:	\\n	    	midi	=	note2midi	(	note	)	\\n	return	miditofreq	(	midi	)/;"	f
note2freq	data/data_raw/valid.py	/^utf-8	def	note2freq	(	note	)	:	\\n	    	midi	=	note2midi	(	note	)	\\n	return	miditofreq	(	midi	)/;"	f
notify	data/bpe_corpus_raw/train.py	/^utf-8	def	notify	(	self	,	title	,	message	,	config	)	:	\\n	    	notification	=	{	'token'	:	confi/;"	f
notify	data/bpe_corpus_raw/valid.py	/^utf-8	def	notify	(	_context	,	message	)	:	\\n	    	priority	=	message	.	get	(	'priority'	,	CONF	/;"	f
notify	data/bpe_corpus_raw/valid.py	/^utf-8	def	notify	(	context	,	message	)	:	\\n	    	if	not	context	:	\\n	        	context	=	req_co/;"	f
notify	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_mime_meta_characters_in_from_header	(	self	)	:	\\n	    	self	.	env	.	config	.	set/;"	f	function:test_mime_meta_characters_in_from_header	file:
notify	data/data_raw/train.py	/^utf-8	def	notify	(	self	,	title	,	message	,	config	)	:	\\n	    	notification	=	{	'token'	:	confi/;"	f
notify	data/data_raw/valid.py	/^utf-8	def	notify	(	_context	,	message	)	:	\\n	    	priority	=	message	.	get	(	'priority'	,	CONF	/;"	f
notify	data/data_raw/valid.py	/^utf-8	def	notify	(	context	,	message	)	:	\\n	    	if	not	context	:	\\n	        	context	=	req_co/;"	f
notify	data/data_raw/valid.py	/^utf-8	def	test_mime_meta_characters_in_from_header	(	self	)	:	\\n	    	self	.	env	.	config	.	set/;"	f	function:test_mime_meta_characters_in_from_header	file:
np	data/bpe_corpus_raw/train.py	/^utf-8	def	integer_repr	(	x	)	:	\\n	    	import	numpy	as	np	\\n	if	x	.	dtype	==	np	.	float32	:	\\/;"	I	function:integer_repr	file:
np	data/data_raw/train.py	/^utf-8	def	integer_repr	(	x	)	:	\\n	    	import	numpy	as	np	\\n	if	x	.	dtype	==	np	.	float32	:	\\/;"	I	function:integer_repr	file:
np_datetime64_compat	data/bpe_corpus_raw/valid.py	/^utf-8	def	np_datetime64_compat	(	s	,	*	args	,	**	kwargs	)	:	\\n	    	if	not	_np_version_under1p1/;"	f
np_datetime64_compat	data/data_raw/valid.py	/^utf-8	def	np_datetime64_compat	(	s	,	*	args	,	**	kwargs	)	:	\\n	    	if	not	_np_version_under1p1/;"	f
nt_quote_arg	data/bpe_corpus_raw/valid.py	/^utf-8	def	nt_quote_arg	(	arg	)	:	\\n	    	return	subprocess	.	list2cmdline	(	[	arg	]	)	\\n		$/;"	f
nt_quote_arg	data/data_raw/valid.py	/^utf-8	def	nt_quote_arg	(	arg	)	:	\\n	    	return	subprocess	.	list2cmdline	(	[	arg	]	)	\\n		$/;"	f
num_addresses	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	num_addresses	(	self	)	:	\\n	    	return	int	(	self	.	broadcast_address/;"	f
num_addresses	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	num_addresses	(	self	)	:	\\n	    	return	int	(	self	.	broadcast_address/;"	f
num_lines	data_utils/data_to_text.py	/^num_lines = len(tokenized_python)$/;"	v
num_users	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	num_users	(	self	)	:	\\n	    	return	len	(	self	.	users_needed	)	+	len	/;"	f
num_users	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	num_users	(	self	)	:	\\n	    	return	len	(	self	.	users_needed	)	+	len	/;"	f
num_work_units_completed	data/bpe_corpus_raw/train.py	/^utf-8	def	num_work_units_completed	(	self	,	name	=	None	)	:	\\n	    	num_work_units	=	[	r	.	num_/;"	f
num_work_units_completed	data/data_raw/train.py	/^utf-8	def	num_work_units_completed	(	self	,	name	=	None	)	:	\\n	    	num_work_units	=	[	r	.	num_/;"	f
numeric_assortativity_coefficient	data/bpe_corpus_raw/valid.py	/^utf-8	def	numeric_assortativity_coefficient	(	G	,	attribute	,	nodes	=	None	)	:	\\n	    	a	=	nume/;"	f
numeric_assortativity_coefficient	data/data_raw/valid.py	/^utf-8	def	numeric_assortativity_coefficient	(	G	,	attribute	,	nodes	=	None	)	:	\\n	    	a	=	nume/;"	f
nutch_crawl	data/bpe_corpus_raw/valid.py	/^utf-8	def	nutch_crawl	(	crawl_model	,	rest_crawl	,	url_trails	)	:	\\n	    	while	crawl_model	.	r/;"	f
nutch_crawl	data/data_raw/valid.py	/^utf-8	def	nutch_crawl	(	crawl_model	,	rest_crawl	,	url_trails	)	:	\\n	    	while	crawl_model	.	r/;"	f
nwalkers	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	nwalkers	(	self	)	:	\\n	    	if	self	.	_nwalkers	is	None	:	\\n	        /;"	f
nwalkers	data/data_raw/train.py	/^utf-8	@	property	\\n	def	nwalkers	(	self	)	:	\\n	    	if	self	.	_nwalkers	is	None	:	\\n	        /;"	f
nzeros	data/bpe_corpus_raw/train.py	/^utf-8	@	defun	\\n	def	nzeros	(	ctx	,	t	)	:	\\n	    	if	t	<	14.1347251417347	:	\\n	        	retur/;"	f
nzeros	data/data_raw/train.py	/^utf-8	@	defun	\\n	def	nzeros	(	ctx	,	t	)	:	\\n	    	if	t	<	14.1347251417347	:	\\n	        	retur/;"	f
obey_config_change	data/bpe_corpus_raw/valid.py	/^utf-8	def	obey_config_change	(	log	,	transaction_id	,	config	,	scaling_group	,	state	,	\\n	launc/;"	f
obey_config_change	data/data_raw/valid.py	/^utf-8	def	obey_config_change	(	log	,	transaction_id	,	config	,	scaling_group	,	state	,	\\n	launc/;"	f
observe	data/bpe_corpus_raw/valid.py	/^utf-8	def	observe	(	self	,	amount	)	:	\\n	    	self	.	_sum	.	inc	(	amount	)	\\n	for	i	,	bound	in/;"	f
observe	data/data_raw/valid.py	/^utf-8	def	observe	(	self	,	amount	)	:	\\n	    	self	.	_sum	.	inc	(	amount	)	\\n	for	i	,	bound	in/;"	f
observe_proposal	data/bpe_corpus_raw/valid.py	/^utf-8	def	observe_proposal	(	self	,	proposal_id	)	:	\\n	    	if	proposal_id	>	self	.	highest_pro/;"	f
observe_proposal	data/data_raw/valid.py	/^utf-8	def	observe_proposal	(	self	,	proposal_id	)	:	\\n	    	if	proposal_id	>	self	.	highest_pro/;"	f
obtain	data/bpe_corpus_raw/valid.py	/^utf-8	def	obtain	(	self	,	requirement	,	installer	=	None	)	:	\\n	    	if	installer	is	not	None	:/;"	f
obtain	data/data_raw/valid.py	/^utf-8	def	obtain	(	self	,	requirement	,	installer	=	None	)	:	\\n	    	if	installer	is	not	None	:/;"	f
ofdpaBcmCommand	data/bpe_corpus_raw/train.py	/^utf-8	def	ofdpaBcmCommand	(	*	args	)	:	\\n	    	return	_OFDPA_python	.	ofdpaBcmCommand	(	*	args	/;"	f
ofdpaBcmCommand	data/data_raw/train.py	/^utf-8	def	ofdpaBcmCommand	(	*	args	)	:	\\n	    	return	_OFDPA_python	.	ofdpaBcmCommand	(	*	args	/;"	f
ofdpaGroupOverlaySubTypeGet	data/bpe_corpus_raw/valid.py	/^utf-8	def	ofdpaGroupOverlaySubTypeGet	(	*	args	)	:	\\n	    	return	_OFDPA_python	.	ofdpaGroupOve/;"	f
ofdpaGroupOverlaySubTypeGet	data/data_raw/valid.py	/^utf-8	def	ofdpaGroupOverlaySubTypeGet	(	*	args	)	:	\\n	    	return	_OFDPA_python	.	ofdpaGroupOve/;"	f
ofdpaOamMipGet	data/bpe_corpus_raw/valid.py	/^utf-8	def	ofdpaOamMipGet	(	*	args	)	:	\\n	    	return	_OFDPA_python	.	ofdpaOamMipGet	(	*	args	)	/;"	f
ofdpaOamMipGet	data/data_raw/valid.py	/^utf-8	def	ofdpaOamMipGet	(	*	args	)	:	\\n	    	return	_OFDPA_python	.	ofdpaOamMipGet	(	*	args	)	/;"	f
offset	data/bpe_corpus_raw/train.py	/^utf-8	def	offset	(	point	)	:	\\n	    	x	=	(	floor	(	point	.	x	,	20	)	+	200	)	\/	20	\\n	y	=	(	180/;"	f
offset	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	@	serialized	\\n	def	offset	(	self	)	:	\\n	    	return	self	.	_offset	\\n		$/;"	f
offset	data/data_raw/train.py	/^utf-8	def	offset	(	point	)	:	\\n	    	x	=	(	floor	(	point	.	x	,	20	)	+	200	)	\/	20	\\n	y	=	(	180/;"	f
offset	data/data_raw/valid.py	/^utf-8	@	property	\\n	@	serialized	\\n	def	offset	(	self	)	:	\\n	    	return	self	.	_offset	\\n		$/;"	f
ogrinspect	data/bpe_corpus_raw/train.py	/^utf-8	def	ogrinspect	(	*	args	,	**	kwargs	)	:	\\n	    	return	'\\\\n'	.	join	(	s	for	s	in	_ogrin/;"	f
ogrinspect	data/data_raw/train.py	/^utf-8	def	ogrinspect	(	*	args	,	**	kwargs	)	:	\\n	    	return	'\\\\n'	.	join	(	s	for	s	in	_ogrin/;"	f
omit_exception	data/bpe_corpus_raw/valid.py	/^utf-8	def	omit_exception	(	method	=	None	,	return_value	=	None	)	:	\\n	    	if	method	is	None	:	/;"	f
omit_exception	data/data_raw/valid.py	/^utf-8	def	omit_exception	(	method	=	None	,	return_value	=	None	)	:	\\n	    	if	method	is	None	:	/;"	f
on_basis	data/bpe_corpus_raw/valid.py	/^utf-8	def	expand	(	self	,	n	,	alphabet	=	'x'	)	:	\\n	    	from	sage	.	algebras	.	free_algebra	im/;"	f	function:expand	file:
on_basis	data/data_raw/valid.py	/^utf-8	def	expand	(	self	,	n	,	alphabet	=	'x'	)	:	\\n	    	from	sage	.	algebras	.	free_algebra	im/;"	f	function:expand	file:
on_broker_msg_OUTGOING_SAP_DELETE	data/bpe_corpus_raw/train.py	/^utf-8	def	on_broker_msg_OUTGOING_SAP_DELETE	(	self	,	msg	,	*	args	)	:	\\n	    	self	.	_delete_co/;"	f
on_broker_msg_OUTGOING_SAP_DELETE	data/data_raw/train.py	/^utf-8	def	on_broker_msg_OUTGOING_SAP_DELETE	(	self	,	msg	,	*	args	)	:	\\n	    	self	.	_delete_co/;"	f
on_change_checkout	data/bpe_corpus_raw/train.py	/^utf-8	@	api	.	onchange	(	'checkout'	,	'checkin'	)	\\n	def	on_change_checkout	(	self	)	:	\\n	    /;"	f
on_change_checkout	data/data_raw/train.py	/^utf-8	@	api	.	onchange	(	'checkout'	,	'checkin'	)	\\n	def	on_change_checkout	(	self	)	:	\\n	    /;"	f
on_config_changed	data/bpe_corpus_raw/valid.py	/^utf-8	def	on_config_changed	(	*	args	,	**	kwargs	)	:	\\n	    	config	.	reload	(	)	\\n	for	hook	i/;"	f
on_config_changed	data/data_raw/valid.py	/^utf-8	def	on_config_changed	(	*	args	,	**	kwargs	)	:	\\n	    	config	.	reload	(	)	\\n	for	hook	i/;"	f
on_connect	data/bpe_corpus_raw/valid.py	/^utf-8	def	on_connect	(	self	,	*	arguments	)	:	\\n	    	pass	\\n		$/;"	f
on_connect	data/data_raw/valid.py	/^utf-8	def	on_connect	(	self	,	*	arguments	)	:	\\n	    	pass	\\n		$/;"	f
on_connection_open_error	data/bpe_corpus_raw/valid.py	/^utf-8	def	on_connection_open_error	(	self	,	_unused_connection	,	err	)	:	\\n	    	LOGGER	.	error/;"	f
on_connection_open_error	data/data_raw/valid.py	/^utf-8	def	on_connection_open_error	(	self	,	_unused_connection	,	err	)	:	\\n	    	LOGGER	.	error/;"	f
on_delete	data/bpe_corpus_raw/train.py	/^utf-8	def	on_delete	(	self	,	forced	)	:	\\n	    	pass	\\n		$/;"	f
on_delete	data/data_raw/train.py	/^utf-8	def	on_delete	(	self	,	forced	)	:	\\n	    	pass	\\n		$/;"	f
on_dtmf	data/bpe_corpus_raw/valid.py	/^utf-8	def	on_dtmf	(	channel	,	event	)	:	\\n	    	digit	=	event	[	'digit'	]	\\n	if	digit	==	'#'	:/;"	f
on_dtmf	data/data_raw/valid.py	/^utf-8	def	on_dtmf	(	channel	,	event	)	:	\\n	    	digit	=	event	[	'digit'	]	\\n	if	digit	==	'#'	:/;"	f
on_epoch_begin	data/bpe_corpus_raw/valid.py	/^utf-8	def	on_epoch_begin	(	self	,	epoch	,	logs	=	None	)	:	\\n	    	logs	=	logs	or	{	}	\\n	for	ca/;"	f
on_epoch_begin	data/data_raw/valid.py	/^utf-8	def	on_epoch_begin	(	self	,	epoch	,	logs	=	None	)	:	\\n	    	logs	=	logs	or	{	}	\\n	for	ca/;"	f
on_error	data/bpe_corpus_raw/train.py	/^utf-8	def	on_error	(	self	,	error_text	)	:	\\n	    	raise	Exception	(	'on_error: not implemented/;"	f
on_error	data/data_raw/train.py	/^utf-8	def	on_error	(	self	,	error_text	)	:	\\n	    	raise	Exception	(	'on_error: not implemented/;"	f
on_harvest	data/bpe_corpus_raw/valid.py	/^utf-8	def	on_harvest	(	self	)	:	\\n	    	pass	\\n		$/;"	f
on_harvest	data/data_raw/valid.py	/^utf-8	def	on_harvest	(	self	)	:	\\n	    	pass	\\n		$/;"	f
on_header_click	data/bpe_corpus_raw/test.py	/^utf-8	def	on_header_click	(	self	,	eventbox	,	event	)	:	\\n	    	if	event	.	button	==	1	:	\\n	  /;"	f
on_header_click	data/data_raw/test.py	/^utf-8	def	on_header_click	(	self	,	eventbox	,	event	)	:	\\n	    	if	event	.	button	==	1	:	\\n	  /;"	f
on_launch	data/bpe_corpus_raw/train.py	/^utf-8	def	on_launch	(	launch_request	,	session	)	:	\\n	    	print	(	'on_launch requestId='	+	lau/;"	f
on_launch	data/data_raw/train.py	/^utf-8	def	on_launch	(	launch_request	,	session	)	:	\\n	    	print	(	'on_launch requestId='	+	lau/;"	f
on_marker_menu_deactivate	data/bpe_corpus_raw/valid.py	/^utf-8	def	on_marker_menu_deactivate	(	self	,	menu	)	:	\\n	    	for	marker	in	self	.	_points	:	\\/;"	f
on_marker_menu_deactivate	data/data_raw/valid.py	/^utf-8	def	on_marker_menu_deactivate	(	self	,	menu	)	:	\\n	    	for	marker	in	self	.	_points	:	\\/;"	f
on_navigate_unmatched	data/bpe_corpus_raw/train.py	/^utf-8	def	on_navigate_unmatched	(	self	,	href	)	:	\\n	    	if	HOVER_SUPPORT	:	\\n	        	pt	=	/;"	f
on_navigate_unmatched	data/data_raw/train.py	/^utf-8	def	on_navigate_unmatched	(	self	,	href	)	:	\\n	    	if	HOVER_SUPPORT	:	\\n	        	pt	=	/;"	f
on_network_adapter_change	data/bpe_corpus_raw/valid.py	/^utf-8	def	on_network_adapter_change	(	self	,	network_adapter	,	change_adapter	)	:	\\n	    	if	no/;"	f
on_network_adapter_change	data/data_raw/valid.py	/^utf-8	def	on_network_adapter_change	(	self	,	network_adapter	,	change_adapter	)	:	\\n	    	if	no/;"	f
on_page_row_changed	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	cache_dir	,	config	,	folder	,	layout	,	index	)	:	\\n	    	self	.	fol/;"	f	function:__init__	file:
on_page_row_changed	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	cache_dir	,	config	,	folder	,	layout	,	index	)	:	\\n	    	self	.	fol/;"	f	function:__init__	file:
on_page_row_deleted	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	cache_dir	,	config	,	folder	,	layout	,	index	)	:	\\n	    	self	.	fol/;"	f	function:__init__.on_page_row_changed	file:
on_page_row_deleted	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	cache_dir	,	config	,	folder	,	layout	,	index	)	:	\\n	    	self	.	fol/;"	f	function:__init__.on_page_row_changed	file:
on_powerpc	data/bpe_corpus_raw/valid.py	/^utf-8	def	on_powerpc	(	)	:	\\n	    	return	platform	.	processor	(	)	==	'powerpc'	or	platform	.	m/;"	f
on_powerpc	data/data_raw/valid.py	/^utf-8	def	on_powerpc	(	)	:	\\n	    	return	platform	.	processor	(	)	==	'powerpc'	or	platform	.	m/;"	f
on_provider_removed	data/bpe_corpus_raw/train.py	/^utf-8	def	on_provider_removed	(	self	,	marker	)	:	\\n	    	notify_id	=	getattr	(	marker	,	'%s_no/;"	f
on_provider_removed	data/data_raw/train.py	/^utf-8	def	on_provider_removed	(	self	,	marker	)	:	\\n	    	notify_id	=	getattr	(	marker	,	'%s_no/;"	f
on_response	data/bpe_corpus_raw/valid.py	/^utf-8	@	cached_property	\\n	def	on_response	(	self	)	:	\\n	    	return	blinker	.	Signal	(	doc	=	/;"	f
on_response	data/data_raw/valid.py	/^utf-8	@	cached_property	\\n	def	on_response	(	self	)	:	\\n	    	return	blinker	.	Signal	(	doc	=	/;"	f
on_run_start	data/bpe_corpus_raw/train.py	/^utf-8	@	abc	.	abstractmethod	\\n	def	on_run_start	(	self	,	request	)	:	\\n	$/;"	f
on_run_start	data/data_raw/train.py	/^utf-8	@	abc	.	abstractmethod	\\n	def	on_run_start	(	self	,	request	)	:	\\n	$/;"	f
on_session_destroyed	data/bpe_corpus_raw/valid.py	/^utf-8	def	on_session_destroyed	(	self	,	session_context	)	:	\\n	    	return	self	.	_on_session_d/;"	f
on_session_destroyed	data/data_raw/valid.py	/^utf-8	def	on_session_destroyed	(	self	,	session_context	)	:	\\n	    	return	self	.	_on_session_d/;"	f
on_text	data/bpe_corpus_raw/valid.py	/^utf-8	def	on_text	(	self	,	messages	)	:	\\n	    	meta	=	messages	[	0	]	.	meta	\\n	for	message	in/;"	f
on_text	data/data_raw/valid.py	/^utf-8	def	on_text	(	self	,	messages	)	:	\\n	    	meta	=	messages	[	0	]	.	meta	\\n	for	message	in/;"	f
on_touch	data/bpe_corpus_raw/train.py	/^utf-8	@	cached_property	\\n	def	on_touch	(	self	)	:	\\n	    	return	blinker	.	Signal	(	doc	=	'Em/;"	f
on_touch	data/data_raw/train.py	/^utf-8	@	cached_property	\\n	def	on_touch	(	self	)	:	\\n	    	return	blinker	.	Signal	(	doc	=	'Em/;"	f
on_user_ip	data/bpe_corpus_raw/train.py	/^utf-8	def	on_user_ip	(	self	,	user_id	)	:	\\n	    	raise	AssertionError	(	'on_user_ip unexpected/;"	f
on_user_ip	data/data_raw/train.py	/^utf-8	def	on_user_ip	(	self	,	user_id	)	:	\\n	    	raise	AssertionError	(	'on_user_ip unexpected/;"	f
on_window_resize	data/bpe_corpus_raw/train.py	/^utf-8	def	on_window_resize	(	self	,	window	,	w	,	h	)	:	\\n	    	pass	\\n		$/;"	f
on_window_resize	data/data_raw/train.py	/^utf-8	def	on_window_resize	(	self	,	window	,	w	,	h	)	:	\\n	    	pass	\\n		$/;"	f
one	data/bpe_corpus_raw/train.py	/^utf-8	@	cached_method	\\n	def	one	(	self	)	:	\\n	    	R	=	self	.	realization_of	(	)	.	a_realizat/;"	f
one	data/bpe_corpus_raw/train.py	/^utf-8	@	cached_method	\\n	def	one	(	self	)	:	\\n	    	return	self	.	sum_of_monomials	(	(	x	,	x	)/;"	f
one	data/data_raw/train.py	/^utf-8	@	cached_method	\\n	def	one	(	self	)	:	\\n	    	R	=	self	.	realization_of	(	)	.	a_realizat/;"	f
one	data/data_raw/train.py	/^utf-8	@	cached_method	\\n	def	one	(	self	)	:	\\n	    	return	self	.	sum_of_monomials	(	(	x	,	x	)/;"	f
one_hop	data/bpe_corpus_raw/valid.py	/^utf-8	def	one_hop	(	self	,	Gx	,	Gx_node	,	core_x	,	pred	,	succ	)	:	\\n	    	pred_dates	=	self	.	/;"	f
one_hop	data/data_raw/valid.py	/^utf-8	def	one_hop	(	self	,	Gx	,	Gx_node	,	core_x	,	pred	,	succ	)	:	\\n	    	pred_dates	=	self	.	/;"	f
oo_31_rpm_rename_conversion	data/bpe_corpus_raw/train.py	/^utf-8	@	staticmethod	\\n	def	oo_31_rpm_rename_conversion	(	rpms	,	openshift_version	=	None	)	:	\\/;"	f
oo_31_rpm_rename_conversion	data/data_raw/train.py	/^utf-8	@	staticmethod	\\n	def	oo_31_rpm_rename_conversion	(	rpms	,	openshift_version	=	None	)	:	\\/;"	f
oo_collect	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	oo_collect	(	data	,	attribute	=	None	,	filters	=	None	)	:	\\n	    	/;"	f
oo_collect	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	oo_collect	(	data	,	attribute	=	None	,	filters	=	None	)	:	\\n	    	/;"	f
oo_dict_to_list_of_dict	data/bpe_corpus_raw/valid.py	/^utf-8	def	oo_dict_to_list_of_dict	(	data	,	key_title	=	'key'	,	value_title	=	'value'	)	:	\\n	   /;"	f
oo_dict_to_list_of_dict	data/data_raw/valid.py	/^utf-8	def	oo_dict_to_list_of_dict	(	data	,	key_title	=	'key'	,	value_title	=	'value'	)	:	\\n	   /;"	f
oo_filter_list	data/bpe_corpus_raw/train.py	/^utf-8	def	oo_filter_list	(	data	,	filter_attr	=	None	)	:	\\n	    	if	not	isinstance	(	data	,	lis/;"	f
oo_filter_list	data/data_raw/train.py	/^utf-8	def	oo_filter_list	(	data	,	filter_attr	=	None	)	:	\\n	    	if	not	isinstance	(	data	,	lis/;"	f
oo_select_keys_from_list	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	oo_select_keys_from_list	(	data	,	keys	)	:	\\n	    	if	not	isinstan/;"	f
oo_select_keys_from_list	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	oo_select_keys_from_list	(	data	,	keys	)	:	\\n	    	if	not	isinstan/;"	f
op_FOR_ITER	data/bpe_corpus_raw/valid.py	/^utf-8	def	op_FOR_ITER	(	self	,	inst	,	iterator	,	pair	,	indval	,	pred	)	:	\\n	    	assert	inst	./;"	f
op_FOR_ITER	data/data_raw/valid.py	/^utf-8	def	op_FOR_ITER	(	self	,	inst	,	iterator	,	pair	,	indval	,	pred	)	:	\\n	    	assert	inst	./;"	f
opaque_paint	data/bpe_corpus_raw/test.py	/^utf-8	@	manipulative	\\n	@	trap_exception	\\n	def	opaque_paint	(	self	,	target	=	None	,	fill	=	N/;"	f
opaque_paint	data/data_raw/test.py	/^utf-8	@	manipulative	\\n	@	trap_exception	\\n	def	opaque_paint	(	self	,	target	=	None	,	fill	=	N/;"	f
open	data/bpe_corpus_raw/train.py	/^utf-8	def	open	(	fp	,	mode	=	'r'	)	:	\\n	    	if	mode	!=	'r'	:	\\n	        	raise	ValueError	(	'/;"	f
open	data/bpe_corpus_raw/train.py	/^utf-8	def	open	(	self	)	:	\\n	    	if	self	.	_mode	==	'r'	or	self	.	_mode	==	'rb'	:	\\n	        /;"	f
open	data/bpe_corpus_raw/train.py	/^utf-8	def	open	(	self	,	filename	)	:	\\n	    	return	utils	.	load_txt	(	self	.	abspath	(	filenam/;"	f
open	data/bpe_corpus_raw/valid.py	/^utf-8	def	open	(	path	,	mode	=	'r'	,	destpath	=	os	.	curdir	,	encoding	=	None	,	newline	=	None	)/;"	f
open	data/bpe_corpus_raw/valid.py	/^utf-8	def	open	(	self	,	handle	=	None	)	:	\\n	    	if	handle	:	\\n	        	handle	=	handle	\\n	/;"	f
open	data/data_raw/train.py	/^utf-8	def	open	(	fp	,	mode	=	'r'	)	:	\\n	    	if	mode	!=	'r'	:	\\n	        	raise	ValueError	(	'/;"	f
open	data/data_raw/train.py	/^utf-8	def	open	(	self	)	:	\\n	    	if	self	.	_mode	==	'r'	or	self	.	_mode	==	'rb'	:	\\n	        /;"	f
open	data/data_raw/train.py	/^utf-8	def	open	(	self	,	filename	)	:	\\n	    	return	utils	.	load_txt	(	self	.	abspath	(	filenam/;"	f
open	data/data_raw/valid.py	/^utf-8	def	open	(	path	,	mode	=	'r'	,	destpath	=	os	.	curdir	,	encoding	=	None	,	newline	=	None	)/;"	f
open	data/data_raw/valid.py	/^utf-8	def	open	(	self	,	handle	=	None	)	:	\\n	    	if	handle	:	\\n	        	handle	=	handle	\\n	/;"	f
open_case_popup	data/bpe_corpus_raw/valid.py	/^utf-8	def	open_case_popup	(	self	,	case	)	:	\\n	    	self	.	case_popup	=	Tk	.	Toplevel	(	)	\\n	s/;"	f
open_case_popup	data/data_raw/valid.py	/^utf-8	def	open_case_popup	(	self	,	case	)	:	\\n	    	self	.	case_popup	=	Tk	.	Toplevel	(	)	\\n	s/;"	f
open_job	data/bpe_corpus_raw/train.py	/^utf-8	@	query_params	(	)	\\n	def	open_job	(	self	,	job_id	,	params	=	None	)	:	\\n	    	if	job_id/;"	f
open_job	data/data_raw/train.py	/^utf-8	@	query_params	(	)	\\n	def	open_job	(	self	,	job_id	,	params	=	None	)	:	\\n	    	if	job_id/;"	f
open_job_history	data/bpe_corpus_raw/valid.py	/^utf-8	def	open_job_history	(	history_file	)	:	\\n	    	if	not	history_file	:	\\n	        	histor/;"	f
open_job_history	data/data_raw/valid.py	/^utf-8	def	open_job_history	(	history_file	)	:	\\n	    	if	not	history_file	:	\\n	        	histor/;"	f
open_order_sell_cost	data/bpe_corpus_raw/train.py	/^utf-8	@	open_order_sell_cost	.	setter	\\n	def	open_order_sell_cost	(	self	,	open_order_sell_cost/;"	f
open_order_sell_cost	data/data_raw/train.py	/^utf-8	@	open_order_sell_cost	.	setter	\\n	def	open_order_sell_cost	(	self	,	open_order_sell_cost/;"	f
open_platform	data/bpe_corpus_raw/valid.py	/^utf-8	def	open_platform	(	alert	=	None	,	title	=	None	,	extra	=	None	,	summary	=	None	,	\\n	medi/;"	f
open_platform	data/data_raw/valid.py	/^utf-8	def	open_platform	(	alert	=	None	,	title	=	None	,	extra	=	None	,	summary	=	None	,	\\n	medi/;"	f
openshift_cmd	data/bpe_corpus_raw/valid.py	/^utf-8	def	openshift_cmd	(	self	,	cmd	,	oadm	=	False	,	output	=	False	,	output_type	=	'json'	,	\\/;"	f
openshift_cmd	data/data_raw/valid.py	/^utf-8	def	openshift_cmd	(	self	,	cmd	,	oadm	=	False	,	output	=	False	,	output_type	=	'json'	,	\\/;"	f
operation_list	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	operation_list	(	self	)	:	\\n	    	op_list	=	[	'off'	]	\\n	modes	=	self/;"	f
operation_list	data/data_raw/train.py	/^utf-8	@	property	\\n	def	operation_list	(	self	)	:	\\n	    	op_list	=	[	'off'	]	\\n	modes	=	self/;"	f
optionflags	data/bpe_corpus_raw/valid.py	/^utf-8	def	optionflags	(	)	:	\\n	$/;"	f
optionflags	data/data_raw/valid.py	/^utf-8	def	optionflags	(	)	:	\\n	$/;"	f
optwrap	data/bpe_corpus_raw/valid.py	/^utf-8	def	optwrap	(	self	,	text	)	:	\\n	    	if	not	self	.	body_width	:	\\n	        	return	text/;"	f
optwrap	data/data_raw/valid.py	/^utf-8	def	optwrap	(	self	,	text	)	:	\\n	    	if	not	self	.	body_width	:	\\n	        	return	text/;"	f
order_id	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	order_id	(	self	)	:	\\n	    	return	self	.	_order_id	\\n		$/;"	f
order_id	data/data_raw/train.py	/^utf-8	@	property	\\n	def	order_id	(	self	)	:	\\n	    	return	self	.	_order_id	\\n		$/;"	f
organization_inspect_template_path	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	organization_inspect_template_path	(	cls	,	organization	,	inspect_te/;"	f
organization_inspect_template_path	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	organization_inspect_template_path	(	cls	,	organization	,	inspect_te/;"	f
origin_type	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	origin_type	(	self	)	:	\\n	    	return	int	(	self	.	_data	.	get	(	b'key/;"	f
origin_type	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	origin_type	(	self	)	:	\\n	    	return	int	(	self	.	_data	.	get	(	b'key/;"	f
orphan	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	orphan	(	self	)	->	bool	:	\\n	    	return	self	.	parent	is	None	\\n		$/;"	f
orphan	data/data_raw/train.py	/^utf-8	@	property	\\n	def	orphan	(	self	)	->	bool	:	\\n	    	return	self	.	parent	is	None	\\n		$/;"	f
out_and_err	data/bpe_corpus_raw/train.py	/^utf-8	def	out_and_err	(	command	,	input	=	None	,	shell	=	False	,	env	=	None	)	:	\\n	    	process/;"	f
out_and_err	data/data_raw/train.py	/^utf-8	def	out_and_err	(	command	,	input	=	None	,	shell	=	False	,	env	=	None	)	:	\\n	    	process/;"	f
outer	data/bpe_corpus_raw/valid.py	/^utf-8	def	outer	(	a	,	b	)	:	\\n	    	fa	=	filled	(	a	,	0	)	.	ravel	(	)	\\n	fb	=	filled	(	b	,	0	)/;"	f
outer	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_catching_exception_from_subgen_and_returning	(	self	)	:	\\n	    	trace	=	[	]	\\n	/;"	f	function:test_catching_exception_from_subgen_and_returning.inner	file:
outer	data/data_raw/valid.py	/^utf-8	def	outer	(	a	,	b	)	:	\\n	    	fa	=	filled	(	a	,	0	)	.	ravel	(	)	\\n	fb	=	filled	(	b	,	0	)/;"	f
outer	data/data_raw/valid.py	/^utf-8	def	test_catching_exception_from_subgen_and_returning	(	self	)	:	\\n	    	trace	=	[	]	\\n	/;"	f	function:test_catching_exception_from_subgen_and_returning.inner	file:
output_overflow	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	output_overflow	(	self	)	:	\\n	    	return	self	.	_hasflag	(	_lib	.	paO/;"	f
output_overflow	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	output_overflow	(	self	)	:	\\n	    	return	self	.	_hasflag	(	_lib	.	paO/;"	f
output_shapes	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	output_shapes	(	self	)	:	\\n	    	return	self	.	_output_shapes	\\n		$/;"	f
output_shapes	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	output_shapes	(	self	)	:	\\n	    	return	self	.	_output_shapes	\\n		$/;"	f
output_var_names	data/bpe_corpus_raw/valid.py	/^utf-8	@	classproperty	\\n	@	classmethod	\\n	def	output_var_names	(	self	)	:	\\n	    	return	tupl/;"	f
output_var_names	data/data_raw/valid.py	/^utf-8	@	classproperty	\\n	@	classmethod	\\n	def	output_var_names	(	self	)	:	\\n	    	return	tupl/;"	f
outside_loop_2d	data/bpe_corpus_raw/valid.py	/^utf-8	def	outside_loop_2d	(	loop	)	:	\\n	    	xs	=	[	v	[	0	]	for	v	in	loop	]	\\n	ys	=	[	v	[	1	]	/;"	f
outside_loop_2d	data/data_raw/valid.py	/^utf-8	def	outside_loop_2d	(	loop	)	:	\\n	    	xs	=	[	v	[	0	]	for	v	in	loop	]	\\n	ys	=	[	v	[	1	]	/;"	f
overlap	data/bpe_corpus_raw/train.py	/^utf-8	def	overlap	(	ntwkA	,	ntwkB	)	:	\\n	    	new_freq	=	ntwkA	.	frequency	.	overlap	(	ntwkB	.	/;"	f
overlap	data/bpe_corpus_raw/valid.py	/^utf-8	def	overlap	(	range1	,	range2	)	:	\\n	    	assert	range1	[	0	]	<=	range1	[	1	]	,	(	range1	/;"	f
overlap	data/data_raw/train.py	/^utf-8	def	overlap	(	ntwkA	,	ntwkB	)	:	\\n	    	new_freq	=	ntwkA	.	frequency	.	overlap	(	ntwkB	.	/;"	f
overlap	data/data_raw/valid.py	/^utf-8	def	overlap	(	range1	,	range2	)	:	\\n	    	assert	range1	[	0	]	<=	range1	[	1	]	,	(	range1	/;"	f
override_from_dict	data/bpe_corpus_raw/valid.py	/^utf-8	def	override_from_dict	(	self	,	values_dict	)	:	\\n	    	for	name	,	value	in	values_dict	./;"	f
override_from_dict	data/data_raw/valid.py	/^utf-8	def	override_from_dict	(	self	,	values_dict	)	:	\\n	    	for	name	,	value	in	values_dict	./;"	f
override_temp	data/bpe_corpus_raw/train.py	/^utf-8	@	contextlib	.	contextmanager	\\n	def	override_temp	(	replacement	)	:	\\n	    	pkg_resourc/;"	f
override_temp	data/data_raw/train.py	/^utf-8	@	contextlib	.	contextmanager	\\n	def	override_temp	(	replacement	)	:	\\n	    	pkg_resourc/;"	f
pOparapar	data/bpe_corpus_raw/valid.py	/^utf-8	def	pOparapar	(	self	,	Opar	,	apar	,	tdisrupt	=	None	)	:	\\n	    	if	_APY_LOADED	and	isins/;"	f
pOparapar	data/data_raw/valid.py	/^utf-8	def	pOparapar	(	self	,	Opar	,	apar	,	tdisrupt	=	None	)	:	\\n	    	if	_APY_LOADED	and	isins/;"	f
p_AssignedIdentifier_2	data/bpe_corpus_raw/train.py	/^utf-8	def	p_AssignedIdentifier_2	(	t	)	:	\\n	    	t	[	0	]	=	t	[	1	]	\\n		$/;"	f
p_AssignedIdentifier_2	data/data_raw/train.py	/^utf-8	def	p_AssignedIdentifier_2	(	t	)	:	\\n	    	t	[	0	]	=	t	[	1	]	\\n		$/;"	f
p_conditional_expression	data/bpe_corpus_raw/valid.py	/^utf-8	def	p_conditional_expression	(	self	,	p	)	:	\\n	    	if	len	(	p	)	==	2	:	\\n	        	p	[	/;"	f
p_conditional_expression	data/data_raw/valid.py	/^utf-8	def	p_conditional_expression	(	self	,	p	)	:	\\n	    	if	len	(	p	)	==	2	:	\\n	        	p	[	/;"	f
p_declaration_specifiers_5	data/bpe_corpus_raw/train.py	/^utf-8	def	p_declaration_specifiers_5	(	self	,	p	)	:	\\n	    	p	[	0	]	=	self	.	_add_declaration_s/;"	f
p_declaration_specifiers_5	data/data_raw/train.py	/^utf-8	def	p_declaration_specifiers_5	(	self	,	p	)	:	\\n	    	p	[	0	]	=	self	.	_add_declaration_s/;"	f
p_function_definition_2	data/bpe_corpus_raw/valid.py	/^utf-8	def	p_function_definition_2	(	self	,	p	)	:	\\n	    	spec	=	p	[	1	]	\\n	p	[	0	]	=	self	.	_b/;"	f
p_function_definition_2	data/data_raw/valid.py	/^utf-8	def	p_function_definition_2	(	self	,	p	)	:	\\n	    	spec	=	p	[	1	]	\\n	p	[	0	]	=	self	.	_b/;"	f
p_objectreference	data/bpe_corpus_raw/valid.py	/^utf-8	def	p_objectreference	(	t	)	:	\\n	    	t	[	0	]	=	t	[	1	]	\\n		$/;"	f
p_objectreference	data/data_raw/valid.py	/^utf-8	def	p_objectreference	(	t	)	:	\\n	    	t	[	0	]	=	t	[	1	]	\\n		$/;"	f
pack255UShort	data/bpe_corpus_raw/valid.py	/^utf-8	def	pack255UShort	(	value	)	:	\\n	    	if	value	<	0	or	value	>	65535	:	\\n	        	raise	/;"	f
pack255UShort	data/data_raw/valid.py	/^utf-8	def	pack255UShort	(	value	)	:	\\n	    	if	value	<	0	or	value	>	65535	:	\\n	        	raise	/;"	f
packAssignedVarsIntoTuple	data/bpe_corpus_raw/valid.py	/^utf-8	def	packAssignedVarsIntoTuple	(	self	)	:	\\n	    	return	Expression	(	self	.	nativeExpress/;"	f
packAssignedVarsIntoTuple	data/data_raw/valid.py	/^utf-8	def	packAssignedVarsIntoTuple	(	self	)	:	\\n	    	return	Expression	(	self	.	nativeExpress/;"	f
package_to_requirement	data/bpe_corpus_raw/train.py	/^utf-8	def	package_to_requirement	(	package_name	)	:	\\n	    	match	=	re	.	search	(	'^(.*?)-(dev|/;"	f
package_to_requirement	data/data_raw/train.py	/^utf-8	def	package_to_requirement	(	package_name	)	:	\\n	    	match	=	re	.	search	(	'^(.*?)-(dev|/;"	f
padded_segment_reduce	data/bpe_corpus_raw/valid.py	/^utf-8	def	padded_segment_reduce	(	vecs	,	segment_inds	,	num_segments	,	reduction_mode	)	:	\\n	  /;"	f
padded_segment_reduce	data/data_raw/valid.py	/^utf-8	def	padded_segment_reduce	(	vecs	,	segment_inds	,	num_segments	,	reduction_mode	)	:	\\n	  /;"	f
padding	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	padding	(	self	)	:	\\n	    	return	self	.	_padding	\\n		$/;"	f
padding	data/data_raw/train.py	/^utf-8	@	property	\\n	def	padding	(	self	)	:	\\n	    	return	self	.	_padding	\\n		$/;"	f
pageChanged	data/bpe_corpus_raw/valid.py	/^utf-8	def	pageChanged	(	self	,	pageId	)	:	\\n	    	page	=	self	.	page	(	pageId	)	\\n	if	page	:	\\/;"	f
pageChanged	data/data_raw/valid.py	/^utf-8	def	pageChanged	(	self	,	pageId	)	:	\\n	    	page	=	self	.	page	(	pageId	)	\\n	if	page	:	\\/;"	f
paginate	data/bpe_corpus_raw/train.py	/^utf-8	def	paginate	(	context	,	window	=	DEFAULT_WINDOW	)	:	\\n	    	try	:	\\n	        	paginator/;"	f
paginate	data/data_raw/train.py	/^utf-8	def	paginate	(	context	,	window	=	DEFAULT_WINDOW	)	:	\\n	    	try	:	\\n	        	paginator/;"	f
pane_widget	data/bpe_corpus_raw/train.py	/^utf-8	def	pane_widget	(	self	,	pane	)	:	\\n	    	m	=	self	\\n	c	=	m	.	c	\\n	d	=	{	'all'	:	c	.	fr/;"	f
pane_widget	data/data_raw/train.py	/^utf-8	def	pane_widget	(	self	,	pane	)	:	\\n	    	m	=	self	\\n	c	=	m	.	c	\\n	d	=	{	'all'	:	c	.	fr/;"	f
param_name_dict	data/bpe_corpus_raw/train.py	/^utf-8	def	param_name_dict	(	)	:	\\n	    	layer	=	caffe_pb2	.	LayerParameter	(	)	\\n	param_names	/;"	f
param_name_dict	data/data_raw/train.py	/^utf-8	def	param_name_dict	(	)	:	\\n	    	layer	=	caffe_pb2	.	LayerParameter	(	)	\\n	param_names	/;"	f
parens_in_union_contained_select_wo_limit_offset	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	parens_in_union_contained_select_wo_limit_offset	(	self	)	:	\\n	    	re/;"	f
parens_in_union_contained_select_wo_limit_offset	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	parens_in_union_contained_select_wo_limit_offset	(	self	)	:	\\n	    	re/;"	f
parent_flow_exception	data/bpe_corpus_raw/train.py	/^utf-8	def	parent_flow_exception	(	self	,	flow_names	,	task_name	,	index	=	None	)	:	\\n	    	inde/;"	f
parent_flow_exception	data/data_raw/train.py	/^utf-8	def	parent_flow_exception	(	self	,	flow_names	,	task_name	,	index	=	None	)	:	\\n	    	inde/;"	f
parse	data/bpe_corpus_raw/train.py	/^utf-8	def	parse	(	self	,	timestr	,	default	=	None	,	ignoretz	=	False	,	tzinfos	=	None	,	**	kwarg/;"	f
parse	data/bpe_corpus_raw/train.py	/^utf-8	def	parse	(	stream	,	Loader	=	Loader	)	:	\\n	    	loader	=	Loader	(	stream	)	\\n	try	:	\\n/;"	f
parse	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	parse	(	cls	,	value	,	strong	=	True	)	:	\\n	    	if	value	==	'*'	:	\\/;"	f
parse	data/bpe_corpus_raw/valid.py	/^utf-8	def	parse	(	self	)	:	\\n	    	result	=	nodes	.	Template	(	self	.	subparse	(	)	,	lineno	=	1/;"	f
parse	data/bpe_corpus_raw/valid.py	/^utf-8	def	parse	(	self	,	sheetname	=	0	,	header	=	0	,	skiprows	=	None	,	skip_footer	=	0	,	names	/;"	f
parse	data/bpe_corpus_raw/valid.py	/^utf-8	def	parse	(	source	,	filename	=	'<unknown>'	,	mode	=	'exec'	)	:	\\n	    	return	compile	(	/;"	f
parse	data/data_raw/train.py	/^utf-8	def	parse	(	self	,	timestr	,	default	=	None	,	ignoretz	=	False	,	tzinfos	=	None	,	**	kwarg/;"	f
parse	data/data_raw/train.py	/^utf-8	def	parse	(	stream	,	Loader	=	Loader	)	:	\\n	    	loader	=	Loader	(	stream	)	\\n	try	:	\\n/;"	f
parse	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	parse	(	cls	,	value	,	strong	=	True	)	:	\\n	    	if	value	==	'*'	:	\\/;"	f
parse	data/data_raw/valid.py	/^utf-8	def	parse	(	self	)	:	\\n	    	result	=	nodes	.	Template	(	self	.	subparse	(	)	,	lineno	=	1/;"	f
parse	data/data_raw/valid.py	/^utf-8	def	parse	(	self	,	sheetname	=	0	,	header	=	0	,	skiprows	=	None	,	skip_footer	=	0	,	names	/;"	f
parse	data/data_raw/valid.py	/^utf-8	def	parse	(	source	,	filename	=	'<unknown>'	,	mode	=	'exec'	)	:	\\n	    	return	compile	(	/;"	f
parse227	data/bpe_corpus_raw/valid.py	/^utf-8	def	parse227	(	resp	)	:	\\n	    	if	resp	[	:	3	]	!=	'227'	:	\\n	        	raise	error_reply/;"	f
parse227	data/data_raw/valid.py	/^utf-8	def	parse227	(	resp	)	:	\\n	    	if	resp	[	:	3	]	!=	'227'	:	\\n	        	raise	error_reply/;"	f
parseFileNoPickle	data/bpe_corpus_raw/valid.py	/^utf-8	def	parseFileNoPickle	(	self	,	fp	,	number	=	None	,	format	=	None	,	forceSource	=	False	,	/;"	f
parseFileNoPickle	data/data_raw/valid.py	/^utf-8	def	parseFileNoPickle	(	self	,	fp	,	number	=	None	,	format	=	None	,	forceSource	=	False	,	/;"	f
parse_args	data/bpe_corpus_raw/valid.py	/^utf-8	def	parse_args	(	)	:	\\n	    	parser	=	ArgumentParser	(	description	=	__doc__	,	formatter_/;"	f
parse_args	data/bpe_corpus_raw/valid.py	/^utf-8	def	parse_args	(	self	,	args	=	None	)	:	\\n	    	if	args	is	None	:	\\n	        	args	=	sys/;"	f
parse_args	data/data_raw/valid.py	/^utf-8	def	parse_args	(	)	:	\\n	    	parser	=	ArgumentParser	(	description	=	__doc__	,	formatter_/;"	f
parse_args	data/data_raw/valid.py	/^utf-8	def	parse_args	(	self	,	args	=	None	)	:	\\n	    	if	args	is	None	:	\\n	        	args	=	sys/;"	f
parse_block_scalar_indent	data/bpe_corpus_raw/train.py	/^utf-8	def	parse_block_scalar_indent	(	token_class	)	:	\\n	\\n	    	def	callback	(	lexer	,	match	/;"	f
parse_block_scalar_indent	data/data_raw/train.py	/^utf-8	def	parse_block_scalar_indent	(	token_class	)	:	\\n	\\n	    	def	callback	(	lexer	,	match	/;"	f
parse_files	data/bpe_corpus_raw/train.py	/^utf-8	def	parse_files	(	self	,	req	,	name	,	field	)	:	\\n	    	return	core	.	get_value	(	req	.	F/;"	f
parse_files	data/data_raw/train.py	/^utf-8	def	parse_files	(	self	,	req	,	name	,	field	)	:	\\n	    	return	core	.	get_value	(	req	.	F/;"	f
parse_flags	data/bpe_corpus_raw/train.py	/^utf-8	def	parse_flags	(	line	)	:	\\n	    	d	=	{	'include_dirs'	:	[	]	,	'library_dirs'	:	[	]	,	'l/;"	f
parse_flags	data/data_raw/train.py	/^utf-8	def	parse_flags	(	line	)	:	\\n	    	d	=	{	'include_dirs'	:	[	]	,	'library_dirs'	:	[	]	,	'l/;"	f
parse_hosted_zones	data/bpe_corpus_raw/valid.py	/^utf-8	def	parse_hosted_zones	(	self	,	hosted_zone	,	params	)	:	\\n	    	hosted_zone_id	=	hosted_/;"	f
parse_hosted_zones	data/data_raw/valid.py	/^utf-8	def	parse_hosted_zones	(	self	,	hosted_zone	,	params	)	:	\\n	    	hosted_zone_id	=	hosted_/;"	f
parse_isotime	data/bpe_corpus_raw/valid.py	/^utf-8	def	parse_isotime	(	timestr	)	:	\\n	    	try	:	\\n	        	return	iso8601	.	parse_date	(	/;"	f
parse_isotime	data/data_raw/valid.py	/^utf-8	def	parse_isotime	(	timestr	)	:	\\n	    	try	:	\\n	        	return	iso8601	.	parse_date	(	/;"	f
parse_key	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	parse_key	(	key	,	sep	=	'.'	)	:	\\n	    	common_separators	=	list	(/;"	f
parse_key	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	parse_key	(	key	,	sep	=	'.'	)	:	\\n	    	common_separators	=	list	(/;"	f
parse_kv	data/bpe_corpus_raw/valid.py	/^utf-8	def	parse_kv	(	self	,	src	,	path	)	:	\\n	    	self	.	_clean_old_kv	(	path	)	\\n	root	=	Non/;"	f
parse_kv	data/data_raw/valid.py	/^utf-8	def	parse_kv	(	self	,	src	,	path	)	:	\\n	    	self	.	_clean_old_kv	(	path	)	\\n	root	=	Non/;"	f
parse_latest	data/bpe_corpus_raw/valid.py	/^utf-8	def	parse_latest	(	self	,	response	,	until	=	None	)	:	\\n	    	if	not	until	:	\\n	        /;"	f
parse_latest	data/data_raw/valid.py	/^utf-8	def	parse_latest	(	self	,	response	,	until	=	None	)	:	\\n	    	if	not	until	:	\\n	        /;"	f
parse_line	data/bpe_corpus_raw/train.py	/^utf-8	def	parse_line	(	self	,	line	)	:	\\n	    	if	line	[	0	]	.	isspace	(	)	:	\\n	        	new_p/;"	f
parse_line	data/data_raw/train.py	/^utf-8	def	parse_line	(	self	,	line	)	:	\\n	    	if	line	[	0	]	.	isspace	(	)	:	\\n	        	new_p/;"	f
parse_long	data/bpe_corpus_raw/train.py	/^utf-8	def	parse_long	(	tokens	,	options	)	:	\\n	    	long	,	eq	,	value	=	tokens	.	move	(	)	.	par/;"	f
parse_long	data/data_raw/train.py	/^utf-8	def	parse_long	(	tokens	,	options	)	:	\\n	    	long	,	eq	,	value	=	tokens	.	move	(	)	.	par/;"	f
parse_rate	data/bpe_corpus_raw/train.py	/^utf-8	def	parse_rate	(	self	,	rate	)	:	\\n	    	if	rate	is	None	:	\\n	        	return	None	,	Non/;"	f
parse_rate	data/data_raw/train.py	/^utf-8	def	parse_rate	(	self	,	rate	)	:	\\n	    	if	rate	is	None	:	\\n	        	return	None	,	Non/;"	f
parse_request	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	parse_request	(	request	)	:	\\n	    	if	len	(	request	)	%	4	==	1	:	/;"	f
parse_request	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	parse_request	(	request	)	:	\\n	    	if	len	(	request	)	%	4	==	1	:	/;"	f
parse_requirements	data/bpe_corpus_raw/test.py	/^utf-8	def	parse_requirements	(	strs	)	:	\\n	    	lines	=	iter	(	yield_lines	(	strs	)	)	\\n	for	l/;"	f
parse_requirements	data/data_raw/test.py	/^utf-8	def	parse_requirements	(	strs	)	:	\\n	    	lines	=	iter	(	yield_lines	(	strs	)	)	\\n	for	l/;"	f
parse_response	data/bpe_corpus_raw/valid.py	/^utf-8	def	parse_response	(	self	,	connection	,	command_name	,	**	options	)	:	\\n	    	response	=/;"	f
parse_response	data/data_raw/valid.py	/^utf-8	def	parse_response	(	self	,	connection	,	command_name	,	**	options	)	:	\\n	    	response	=/;"	f
parse_tags	data/bpe_corpus_raw/train.py	/^utf-8	def	parse_tags	(	tagstring	)	:	\\n	    	return	[	word	.	strip	(	)	for	word	in	RE_PARSE_TAG/;"	f
parse_tags	data/data_raw/train.py	/^utf-8	def	parse_tags	(	tagstring	)	:	\\n	    	return	[	word	.	strip	(	)	for	word	in	RE_PARSE_TAG/;"	f
parse_test_name	data/bpe_corpus_raw/train.py	/^utf-8	def	parse_test_name	(	test_name	)	:	\\n	    	test_set	=	set	(	)	\\n	for	test	in	RUN_TEST_S/;"	f
parse_test_name	data/data_raw/train.py	/^utf-8	def	parse_test_name	(	test_name	)	:	\\n	    	test_set	=	set	(	)	\\n	for	test	in	RUN_TEST_S/;"	f
parse_title_page	data/bpe_corpus_raw/train.py	/^utf-8	def	parse_title_page	(	lines	)	:	\\n	    	result	=	{	}	\\n	it	=	iter	(	lines	)	\\n	try	:	\\/;"	f
parse_title_page	data/data_raw/train.py	/^utf-8	def	parse_title_page	(	lines	)	:	\\n	    	result	=	{	}	\\n	it	=	iter	(	lines	)	\\n	try	:	\\/;"	f
parse_ynm	data/bpe_corpus_raw/test.py	/^utf-8	def	parse_ynm	(	val	)	:	\\n	    	val	=	val	.	strip	(	)	.	lower	(	)	\\n	if	not	val	:	\\n	  /;"	f
parse_ynm	data/data_raw/test.py	/^utf-8	def	parse_ynm	(	val	)	:	\\n	    	val	=	val	.	strip	(	)	.	lower	(	)	\\n	if	not	val	:	\\n	  /;"	f
parsebytes	data/bpe_corpus_raw/train.py	/^utf-8	def	parsebytes	(	self	,	text	,	headersonly	=	False	)	:	\\n	    	text	=	text	.	decode	(	'AS/;"	f
parsebytes	data/data_raw/train.py	/^utf-8	def	parsebytes	(	self	,	text	,	headersonly	=	False	)	:	\\n	    	text	=	text	.	decode	(	'AS/;"	f
parsecommandlineargs	data/bpe_corpus_raw/valid.py	/^utf-8	def	parsecommandlineargs	(	args	)	:	\\n	    	overrides	=	[	]	\\n	stmts	=	StatementList	(	)/;"	f
parsecommandlineargs	data/data_raw/valid.py	/^utf-8	def	parsecommandlineargs	(	args	)	:	\\n	    	overrides	=	[	]	\\n	stmts	=	StatementList	(	)/;"	f
parsedollar	data/bpe_corpus_raw/valid.py	/^utf-8	def	parsedollar	(	self	,	pos	)	:	\\n	    	pos	.	pushending	(	'$'	)	\\n	self	.	parsed	=	pos/;"	f
parsedollar	data/data_raw/valid.py	/^utf-8	def	parsedollar	(	self	,	pos	)	:	\\n	    	pos	.	pushending	(	'$'	)	\\n	self	.	parsed	=	pos/;"	f
parserHandlePEReference	data/bpe_corpus_raw/test.py	/^utf-8	def	parserHandlePEReference	(	self	)	:	\\n	    	libxml2mod	.	xmlParserHandlePEReference	(	/;"	f
parserHandlePEReference	data/data_raw/test.py	/^utf-8	def	parserHandlePEReference	(	self	)	:	\\n	    	libxml2mod	.	xmlParserHandlePEReference	(	/;"	f
parser_error	data/bpe_corpus_raw/valid.py	/^utf-8	def	parser_error	(	self	,	message	,	lineno	=	None	)	:	\\n	    	if	lineno	is	None	:	\\n	   /;"	f
parser_error	data/data_raw/valid.py	/^utf-8	def	parser_error	(	self	,	message	,	lineno	=	None	)	:	\\n	    	if	lineno	is	None	:	\\n	   /;"	f
patch	data/bpe_corpus_raw/train.py	/^utf-8	@	contextmanager	\\n	def	patch	(	ob	,	attr	,	value	)	:	\\n	    	noattr	=	object	(	)	\\n	ol/;"	f
patch	data/bpe_corpus_raw/valid.py	/^utf-8	def	patch	(	self	)	:	\\n	    	for	obj	,	name	,	value	in	self	.	_patches_to_apply	:	\\n	   /;"	f
patch	data/data_raw/train.py	/^utf-8	@	contextmanager	\\n	def	patch	(	ob	,	attr	,	value	)	:	\\n	    	noattr	=	object	(	)	\\n	ol/;"	f
patch	data/data_raw/valid.py	/^utf-8	def	patch	(	self	)	:	\\n	    	for	obj	,	name	,	value	in	self	.	_patches_to_apply	:	\\n	   /;"	f
patch_socket	data/bpe_corpus_raw/valid.py	/^utf-8	def	patch_socket	(	)	:	\\n	    	from	socket	import	socket	\\n	socket	.	recvbytes	=	network/;"	f
patch_socket	data/data_raw/valid.py	/^utf-8	def	patch_socket	(	)	:	\\n	    	from	socket	import	socket	\\n	socket	.	recvbytes	=	network/;"	f
path_info_pop	data/bpe_corpus_raw/valid.py	/^utf-8	def	path_info_pop	(	environ	)	:	\\n	    	path	=	environ	.	get	(	'PATH_INFO'	,	''	)	\\n	if	/;"	f
path_info_pop	data/data_raw/valid.py	/^utf-8	def	path_info_pop	(	environ	)	:	\\n	    	path	=	environ	.	get	(	'PATH_INFO'	,	''	)	\\n	if	/;"	f
path_segment	data/bpe_corpus_raw/train.py	/^utf-8	def	path_segment	(	self	,	index	,	value	=	None	,	default	=	None	)	:	\\n	    	if	value	is	n/;"	f
path_segment	data/data_raw/train.py	/^utf-8	def	path_segment	(	self	,	index	,	value	=	None	,	default	=	None	)	:	\\n	    	if	value	is	n/;"	f
path_to_cache_dir	data/bpe_corpus_raw/train.py	/^utf-8	def	path_to_cache_dir	(	path	)	:	\\n	    	d	,	p	=	os	.	path	.	splitdrive	(	os	.	path	.	abs/;"	f
path_to_cache_dir	data/bpe_corpus_raw/valid.py	/^utf-8	def	path_to_cache_dir	(	path	)	:	\\n	    	d	,	p	=	os	.	path	.	splitdrive	(	os	.	path	.	abs/;"	f
path_to_cache_dir	data/data_raw/train.py	/^utf-8	def	path_to_cache_dir	(	path	)	:	\\n	    	d	,	p	=	os	.	path	.	splitdrive	(	os	.	path	.	abs/;"	f
path_to_cache_dir	data/data_raw/valid.py	/^utf-8	def	path_to_cache_dir	(	path	)	:	\\n	    	d	,	p	=	os	.	path	.	splitdrive	(	os	.	path	.	abs/;"	f
paths_on_pythonpath	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	@	contextlib	.	contextmanager	\\n	def	paths_on_pythonpath	(	paths	)	:	\\/;"	f
paths_on_pythonpath	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	@	contextlib	.	contextmanager	\\n	def	paths_on_pythonpath	(	paths	)	:	\\/;"	f
pause	data/bpe_corpus_raw/train.py	/^utf-8	def	pause	(	)	:	\\n	    	check_mixer	(	)	\\n	sdl	.	Mix_Pause	(	-	1	)	\\n		$/;"	f
pause	data/data_raw/train.py	/^utf-8	def	pause	(	)	:	\\n	    	check_mixer	(	)	\\n	sdl	.	Mix_Pause	(	-	1	)	\\n		$/;"	f
pbar	data_utils/clean_dataset.py	/^pbar = ProgressBar()$/;"	v
pbar	data_utils/count_filesize_by_ext.py	/^    pbar = tqdm(unit="B", unit_scale=True)$/;"	v
pbar_update	data_utils/build_dataset.py	/^    pbar_update = lambda *a: progress_bar.update()$/;"	f	function:main	file:
pbar_update	data_utils/downloaded_repos.py	/^pbar_update = lambda *a: progress_bar.update()$/;"	f
pbar_update	data_utils/get_file_contents.py	/^    pbar_update = lambda *a: progress_bar.update()$/;"	f	function:walkdir_py	file:
pbs_for_set_no_merge	data/bpe_corpus_raw/valid.py	/^utf-8	def	pbs_for_set_no_merge	(	document_path	,	document_data	)	:	\\n	    	extractor	=	Document/;"	f
pbs_for_set_no_merge	data/data_raw/valid.py	/^utf-8	def	pbs_for_set_no_merge	(	document_path	,	document_data	)	:	\\n	    	extractor	=	Document/;"	f
pd	data/bpe_corpus_raw/train.py	/^utf-8	def	_access	(	data	,	iloc	)	:	\\n	    	if	HAS_PANDAS	:	\\n	        	import	pandas	as	pd	\\/;"	I	function:_access	file:
pd	data/data_raw/train.py	/^utf-8	def	_access	(	data	,	iloc	)	:	\\n	    	if	HAS_PANDAS	:	\\n	        	import	pandas	as	pd	\\/;"	I	function:_access	file:
pd	data_utils/build_dataset.py	/^import pandas as pd$/;"	I
pd	data_utils/clean_dataset.py	/^import pandas as pd$/;"	I
pd	data_utils/count_filesize_by_ext.py	/^import pandas as pd$/;"	I
pd	data_utils/data_to_text.py	/^import pandas as pd$/;"	I
pd	data_utils/downloaded_repos.py	/^import pandas as pd$/;"	I
pd	data_utils/get_repolist.py	/^import pandas as pd$/;"	I
pdfFromPOST	data/bpe_corpus_raw/train.py	/^utf-8	def	pdfFromPOST	(	self	)	:	\\n	    	html	=	self	.	request	.	form	.	get	(	'html'	)	\\n	styl/;"	f
pdfFromPOST	data/data_raw/train.py	/^utf-8	def	pdfFromPOST	(	self	)	:	\\n	    	html	=	self	.	request	.	form	.	get	(	'html'	)	\\n	styl/;"	f
pealing	data/bpe_corpus_raw/valid.py	/^utf-8	def	pealing	(	D	,	return_touches	=	False	)	:	\\n	    	n	=	D	.	semilength	(	)	\\n	area	=	D	/;"	f
pealing	data/data_raw/valid.py	/^utf-8	def	pealing	(	D	,	return_touches	=	False	)	:	\\n	    	n	=	D	.	semilength	(	)	\\n	area	=	D	/;"	f
people	data/bpe_corpus_raw/valid.py	/^utf-8	def	people	(	self	)	:	\\n	    	new_qs	=	self	.	copy	(	)	\\n	new_qs	.	request_type	=	self	./;"	f
people	data/data_raw/valid.py	/^utf-8	def	people	(	self	)	:	\\n	    	new_qs	=	self	.	copy	(	)	\\n	new_qs	.	request_type	=	self	./;"	f
perform_document_validation	data/bpe_corpus_raw/train.py	/^utf-8	def	perform_document_validation	(	self	,	default	=	True	)	:	\\n	    	return	self	.	_get_bo/;"	f
perform_document_validation	data/data_raw/train.py	/^utf-8	def	perform_document_validation	(	self	,	default	=	True	)	:	\\n	    	return	self	.	_get_bo/;"	f
perform_flag	data/bpe_corpus_raw/train.py	/^utf-8	def	perform_flag	(	request	,	comment	)	:	\\n	    	flag	,	created	=	comments	.	models	.	Com/;"	f
perform_flag	data/data_raw/train.py	/^utf-8	def	perform_flag	(	request	,	comment	)	:	\\n	    	flag	,	created	=	comments	.	models	.	Com/;"	f
permute_rows	data/bpe_corpus_raw/train.py	/^utf-8	def	permute_rows	(	self	)	:	\\n	    	for	perm	in	itertools	.	permutations	(	self	.	nesting/;"	f
permute_rows	data/data_raw/train.py	/^utf-8	def	permute_rows	(	self	)	:	\\n	    	for	perm	in	itertools	.	permutations	(	self	.	nesting/;"	f
persist_filename_for	data/bpe_corpus_raw/train.py	/^utf-8	def	persist_filename_for	(	self	,	data	,	regex	=	True	)	:	\\n	    	if	self	.	build_type	==/;"	f
persist_filename_for	data/data_raw/train.py	/^utf-8	def	persist_filename_for	(	self	,	data	,	regex	=	True	)	:	\\n	    	if	self	.	build_type	==/;"	f
pex	data/bpe_corpus_raw/train.py	/^utf-8	def	test_value_attribute_of_StopIteration_exception	(	self	)	:	\\n	    	trace	=	[	]	\\n	\\/;"	f	function:test_value_attribute_of_StopIteration_exception	file:
pex	data/data_raw/train.py	/^utf-8	def	test_value_attribute_of_StopIteration_exception	(	self	)	:	\\n	    	trace	=	[	]	\\n	\\/;"	f	function:test_value_attribute_of_StopIteration_exception	file:
pformat	data/bpe_corpus_raw/valid.py	/^utf-8	def	pformat	(	obj	,	verbose	=	False	)	:	\\n	    	try	:	\\n	        	from	pretty	import	pre/;"	f
pformat	data/data_raw/valid.py	/^utf-8	def	pformat	(	obj	,	verbose	=	False	)	:	\\n	    	try	:	\\n	        	from	pretty	import	pre/;"	f
phone	data/bpe_corpus_raw/valid.py	/^utf-8	@	phone	.	setter	\\n	def	phone	(	self	,	value	)	:	\\n	    	number	=	value	.	replace	(	'-'	/;"	f
phone	data/data_raw/valid.py	/^utf-8	@	phone	.	setter	\\n	def	phone	(	self	,	value	)	:	\\n	    	number	=	value	.	replace	(	'-'	/;"	f
pinv	data/bpe_corpus_raw/train.py	/^utf-8	def	pinv	(	a	,	rcond	=	1e-15	)	:	\\n	    	u	,	s	,	vt	=	decomposition	.	svd	(	a	,	full_matr/;"	f
pinv	data/data_raw/train.py	/^utf-8	def	pinv	(	a	,	rcond	=	1e-15	)	:	\\n	    	u	,	s	,	vt	=	decomposition	.	svd	(	a	,	full_matr/;"	f
pip	data/bpe_corpus_raw/valid.py	/^utf-8	def	pip	(	filename	)	:	\\n	    	requirements	=	[	]	\\n	for	line	in	open	(	os	.	path	.	join/;"	f
pip	data/data_raw/valid.py	/^utf-8	def	pip	(	filename	)	:	\\n	    	requirements	=	[	]	\\n	for	line	in	open	(	os	.	path	.	join/;"	f
pip_version_check	data/bpe_corpus_raw/valid.py	/^utf-8	def	pip_version_check	(	session	)	:	\\n	    	installed_version	=	get_installed_version	(	'/;"	f
pip_version_check	data/data_raw/valid.py	/^utf-8	def	pip_version_check	(	session	)	:	\\n	    	installed_version	=	get_installed_version	(	'/;"	f
pipe	data/bpe_corpus_raw/train.py	/^utf-8	def	pipe	(	self	,	func	,	*	args	,	**	kwargs	)	:	\\n	    	return	_pipe	(	self	,	func	,	*	ar/;"	f
pipe	data/data_raw/train.py	/^utf-8	def	pipe	(	self	,	func	,	*	args	,	**	kwargs	)	:	\\n	    	return	_pipe	(	self	,	func	,	*	ar/;"	f
pivots_of_hnf_matrix	data/bpe_corpus_raw/valid.py	/^utf-8	def	pivots_of_hnf_matrix	(	H	)	:	\\n	    	pivots	=	[	]	\\n	r	=	-	1	\\n	for	j	in	range	(	H	/;"	f
pivots_of_hnf_matrix	data/data_raw/valid.py	/^utf-8	def	pivots_of_hnf_matrix	(	H	)	:	\\n	    	pivots	=	[	]	\\n	r	=	-	1	\\n	for	j	in	range	(	H	/;"	f
pixel_scale	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	pixel_scale	(	self	)	:	\\n	    	return	self	.	physical_size	[	0	]	\/\/	/;"	f
pixel_scale	data/data_raw/train.py	/^utf-8	@	property	\\n	def	pixel_scale	(	self	)	:	\\n	    	return	self	.	physical_size	[	0	]	\/\/	/;"	f
platform_default	data/bpe_corpus_raw/train.py	/^utf-8	def	platform_default	(	)	:	\\n	    	osname	=	os	.	name	\\n	if	osname	==	'java'	:	\\n	     /;"	f
platform_default	data/data_raw/train.py	/^utf-8	def	platform_default	(	)	:	\\n	    	osname	=	os	.	name	\\n	if	osname	==	'java'	:	\\n	     /;"	f
playMedia	data/bpe_corpus_raw/train.py	/^utf-8	def	playMedia	(	self	,	media	,	offset	=	0	,	**	params	)	:	\\n	    	if	not	self	.	_server	:/;"	f
playMedia	data/data_raw/train.py	/^utf-8	def	playMedia	(	self	,	media	,	offset	=	0	,	**	params	)	:	\\n	    	if	not	self	.	_server	:/;"	f
play_item_at_index	data/bpe_corpus_raw/train.py	/^utf-8	def	play_item_at_index	(	self	,	i_index	)	:	\\n	    	return	libvlc_media_list_player_play_/;"	f
play_item_at_index	data/data_raw/train.py	/^utf-8	def	play_item_at_index	(	self	,	i_index	)	:	\\n	    	return	libvlc_media_list_player_play_/;"	f
plot	data/bpe_corpus_raw/test.py	/^utf-8	def	plot	(	msi	,	axes	=	None	,	color	=	None	)	:	\\n	    	if	axes	is	None	:	\\n	        	ax/;"	f
plot	data/bpe_corpus_raw/test.py	/^utf-8	def	plot	(	self	,	**	kwargs	)	:	\\n	    	self	.	as_signal	(	)	.	plot	(	**	kwargs	)	\\n		$/;"	f
plot	data/bpe_corpus_raw/valid.py	/^utf-8	def	plot	(	self	,	ax	)	:	\\n	    	self	.	draw_points	(	ax	)	\\n	self	.	annotate_axes	(	ax	/;"	f
plot	data/data_raw/test.py	/^utf-8	def	plot	(	msi	,	axes	=	None	,	color	=	None	)	:	\\n	    	if	axes	is	None	:	\\n	        	ax/;"	f
plot	data/data_raw/test.py	/^utf-8	def	plot	(	self	,	**	kwargs	)	:	\\n	    	self	.	as_signal	(	)	.	plot	(	**	kwargs	)	\\n		$/;"	f
plot	data/data_raw/valid.py	/^utf-8	def	plot	(	self	,	ax	)	:	\\n	    	self	.	draw_points	(	ax	)	\\n	self	.	annotate_axes	(	ax	/;"	f
plot_ks_statistic_with_cv	data/bpe_corpus_raw/valid.py	/^utf-8	def	plot_ks_statistic_with_cv	(	clf	,	X	,	y	,	title	=	'KS Statistic Plot'	,	do_cv	=	\\n	Tr/;"	f
plot_ks_statistic_with_cv	data/data_raw/valid.py	/^utf-8	def	plot_ks_statistic_with_cv	(	clf	,	X	,	y	,	title	=	'KS Statistic Plot'	,	do_cv	=	\\n	Tr/;"	f
plot_tasks	data/bpe_corpus_raw/valid.py	/^utf-8	def	plot_tasks	(	results	,	dsk	,	palette	=	'Viridis'	,	label_size	=	60	,	**	kwargs	)	:	\\n/;"	f
plot_tasks	data/data_raw/valid.py	/^utf-8	def	plot_tasks	(	results	,	dsk	,	palette	=	'Viridis'	,	label_size	=	60	,	**	kwargs	)	:	\\n/;"	f
plot_tree	data/bpe_corpus_raw/test.py	/^utf-8	def	plot_tree	(	decision_tree	,	max_depth	=	None	,	feature_names	=	None	,	\\n	class_names	/;"	f
plot_tree	data/data_raw/test.py	/^utf-8	def	plot_tree	(	decision_tree	,	max_depth	=	None	,	feature_names	=	None	,	\\n	class_names	/;"	f
plot_wireframe	data/bpe_corpus_raw/valid.py	/^utf-8	def	plot_wireframe	(	self	,	*	args	,	**	kwargs	)	:	\\n	    	if	helperfunctions	.	validate_/;"	f
plot_wireframe	data/data_raw/valid.py	/^utf-8	def	plot_wireframe	(	self	,	*	args	,	**	kwargs	)	:	\\n	    	if	helperfunctions	.	validate_/;"	f
plugin_id	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	plugin_id	(	self	)	:	\\n	    	return	self	.	__plugin_id	\\n		$/;"	f
plugin_id	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	plugin_id	(	self	)	:	\\n	    	return	self	.	__plugin_id	\\n		$/;"	f
plupload_file_upload	data/bpe_corpus_raw/train.py	/^utf-8	def	plupload_file_upload	(	request	,	dest_dir	,	request_filename_attr	=	'name'	,	\\n	reque/;"	f
plupload_file_upload	data/data_raw/train.py	/^utf-8	def	plupload_file_upload	(	request	,	dest_dir	,	request_filename_attr	=	'name'	,	\\n	reque/;"	f
plus_or_dot	data/bpe_corpus_raw/valid.py	/^utf-8	def	plus_or_dot	(	pieces	)	:	\\n	    	if	'+'	in	pieces	.	get	(	'closest-tag'	,	''	)	:	\\n	/;"	f
plus_or_dot	data/data_raw/valid.py	/^utf-8	def	plus_or_dot	(	pieces	)	:	\\n	    	if	'+'	in	pieces	.	get	(	'closest-tag'	,	''	)	:	\\n	/;"	f
pocketFeatures	data/bpe_corpus_raw/valid.py	/^utf-8	def	pocketFeatures	(	self	)	:	\\n	    	return	PathPocketBaseGui	.	FeatureFacing	\\n		$/;"	f
pocketFeatures	data/data_raw/valid.py	/^utf-8	def	pocketFeatures	(	self	)	:	\\n	    	return	PathPocketBaseGui	.	FeatureFacing	\\n		$/;"	f
pointer2bytes	data/bpe_corpus_raw/valid.py	/^utf-8	def	pointer2bytes	(	self	,	attr	,	nbElement	)	:	\\n	    	raise	NotImplementedError	(	'Plea/;"	f
pointer2bytes	data/data_raw/valid.py	/^utf-8	def	pointer2bytes	(	self	,	attr	,	nbElement	)	:	\\n	    	raise	NotImplementedError	(	'Plea/;"	f
points2moments	data/bpe_corpus_raw/train.py	/^utf-8	def	points2moments	(	points	,	sigma_noise	=	None	)	:	\\n	    	points	,	weights_mu	,	weight/;"	f
points2moments	data/data_raw/train.py	/^utf-8	def	points2moments	(	points	,	sigma_noise	=	None	)	:	\\n	    	points	,	weights_mu	,	weight/;"	f
policyEvaluation	data/bpe_corpus_raw/train.py	/^utf-8	@	staticmethod	\\n	def	policyEvaluation	(	policy	,	command	)	:	\\n	    	policy	.	setComman/;"	f
policyEvaluation	data/data_raw/train.py	/^utf-8	@	staticmethod	\\n	def	policyEvaluation	(	policy	,	command	)	:	\\n	    	policy	.	setComman/;"	f
poll_for_decision_task	data/bpe_corpus_raw/test.py	/^utf-8	def	poll_for_decision_task	(	self	,	domain	,	task_list	,	identity	=	None	,	\\n	maximum_pag/;"	f
poll_for_decision_task	data/data_raw/test.py	/^utf-8	def	poll_for_decision_task	(	self	,	domain	,	task_list	,	identity	=	None	,	\\n	maximum_pag/;"	f
polymorphic_iterator	data/bpe_corpus_raw/train.py	/^utf-8	def	polymorphic_iterator	(	self	)	:	\\n	    	return	iter	(	self	.	self_and_descendants	)	\\/;"	f
polymorphic_iterator	data/data_raw/train.py	/^utf-8	def	polymorphic_iterator	(	self	)	:	\\n	    	return	iter	(	self	.	self_and_descendants	)	\\/;"	f
pool	data/bpe_corpus_raw/valid.py	/^utf-8	@	cli	.	group	(	)	\\n	@	pass_cli_context	\\n	def	pool	(	ctx	)	:	\\n	    	pass	\\n		$/;"	f
pool	data/data_raw/valid.py	/^utf-8	@	cli	.	group	(	)	\\n	@	pass_cli_context	\\n	def	pool	(	ctx	)	:	\\n	    	pass	\\n		$/;"	f
pool	data_utils/downloaded_repos.py	/^pool = mp.Pool(12)$/;"	v
pool	data_utils/get_file_contents.py	/^pool = mp.Pool(12)$/;"	v
pop	data/bpe_corpus_raw/train.py	/^utf-8	def	pop	(	self	)	:	\\n	    	return	heappop	(	self	.	heap	)	.	item	\\n		$/;"	f
pop	data/bpe_corpus_raw/valid.py	/^utf-8	def	pop	(	self	)	:	\\n	    	it	=	iter	(	self	)	\\n	try	:	\\n	        	value	=	next	(	it	)	/;"	f
pop	data/data_raw/train.py	/^utf-8	def	pop	(	self	)	:	\\n	    	return	heappop	(	self	.	heap	)	.	item	\\n		$/;"	f
pop	data/data_raw/valid.py	/^utf-8	def	pop	(	self	)	:	\\n	    	it	=	iter	(	self	)	\\n	try	:	\\n	        	value	=	next	(	it	)	/;"	f
pop_scope	data/bpe_corpus_raw/valid.py	/^utf-8	def	pop_scope	(	self	,	aliases	,	frame	)	:	\\n	    	for	name	,	alias	in	iteritems	(	aliase/;"	f
pop_scope	data/data_raw/valid.py	/^utf-8	def	pop_scope	(	self	,	aliases	,	frame	)	:	\\n	    	for	name	,	alias	in	iteritems	(	aliase/;"	f
populate	data/bpe_corpus_raw/test.py	/^utf-8	@	classmethod	\\n	def	populate	(	cls	,	db	)	:	\\n	    	start_time	=	time	.	time	(	)	\\n	ba/;"	f
populate	data/data_raw/test.py	/^utf-8	@	classmethod	\\n	def	populate	(	cls	,	db	)	:	\\n	    	start_time	=	time	.	time	(	)	\\n	ba/;"	f
populate_requirement_set	data/bpe_corpus_raw/train.py	/^utf-8	@	staticmethod	\\n	def	populate_requirement_set	(	requirement_set	,	args	,	options	,	finde/;"	f
populate_requirement_set	data/data_raw/train.py	/^utf-8	@	staticmethod	\\n	def	populate_requirement_set	(	requirement_set	,	args	,	options	,	finde/;"	f
populate_xheaders	data/bpe_corpus_raw/valid.py	/^utf-8	def	populate_xheaders	(	request	,	response	,	model	,	object_id	)	:	\\n	    	from	django	.	/;"	f
populate_xheaders	data/data_raw/valid.py	/^utf-8	def	populate_xheaders	(	request	,	response	,	model	,	object_id	)	:	\\n	    	from	django	.	/;"	f
position	data/bpe_corpus_raw/train.py	/^utf-8	def	position	(	self	)	:	\\n	    	line	,	col	=	self	.	_position	(	self	.	chunkOffset	)	\\n	/;"	f
position	data/bpe_corpus_raw/train.py	/^utf-8	def	position	(	self	,	node	)	:	\\n	    	rv	=	'line %d'	%	node	.	lineno	\\n	if	self	.	name	/;"	f
position	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	position	(	self	)	:	\\n	    	return	self	.	_x	,	self	.	_y	\\n		$/;"	f
position	data/data_raw/train.py	/^utf-8	def	position	(	self	)	:	\\n	    	line	,	col	=	self	.	_position	(	self	.	chunkOffset	)	\\n	/;"	f
position	data/data_raw/train.py	/^utf-8	def	position	(	self	,	node	)	:	\\n	    	rv	=	'line %d'	%	node	.	lineno	\\n	if	self	.	name	/;"	f
position	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	position	(	self	)	:	\\n	    	return	self	.	_x	,	self	.	_y	\\n		$/;"	f
position_target_encode	data/bpe_corpus_raw/test.py	/^utf-8	def	position_target_encode	(	self	,	x	,	y	,	z	,	yaw	)	:	\\n	    	msg	=	MAVLink_position_ta/;"	f
position_target_encode	data/data_raw/test.py	/^utf-8	def	position_target_encode	(	self	,	x	,	y	,	z	,	yaw	)	:	\\n	    	msg	=	MAVLink_position_ta/;"	f
position_wrt	data/bpe_corpus_raw/train.py	/^utf-8	@	cacheit	\\n	def	position_wrt	(	self	,	other	)	:	\\n	    	return	self	.	origin	.	position/;"	f
position_wrt	data/data_raw/train.py	/^utf-8	@	cacheit	\\n	def	position_wrt	(	self	,	other	)	:	\\n	    	return	self	.	origin	.	position/;"	f
posix_pipe	data/bpe_corpus_raw/valid.py	/^utf-8	def	posix_pipe	(	fin	,	fout	,	delim	=	'\\\\n'	,	buf_size	=	256	,	callback	=	lambda	int	:	N/;"	f
posix_pipe	data/data_raw/valid.py	/^utf-8	def	posix_pipe	(	fin	,	fout	,	delim	=	'\\\\n'	,	buf_size	=	256	,	callback	=	lambda	int	:	N/;"	f
post	data/bpe_corpus_raw/test.py	/^utf-8	def	post	(	self	,	request	,	*	args	,	**	kwargs	)	:	\\n	    	self	.	object	=	self	.	get_obj/;"	f
post	data/bpe_corpus_raw/train.py	/^utf-8	def	post	(	self	,	*	args	,	**	kw	)	:	\\n	    	kw	[	'method'	]	=	'POST'	\\n	return	self	.	o/;"	f
post	data/bpe_corpus_raw/valid.py	/^utf-8	def	post	(	url	,	data	=	None	,	json	=	None	,	**	kwargs	)	:	\\n	    	return	request	(	'post/;"	f
post	data/data_raw/test.py	/^utf-8	def	post	(	self	,	request	,	*	args	,	**	kwargs	)	:	\\n	    	self	.	object	=	self	.	get_obj/;"	f
post	data/data_raw/train.py	/^utf-8	def	post	(	self	,	*	args	,	**	kw	)	:	\\n	    	kw	[	'method'	]	=	'POST'	\\n	return	self	.	o/;"	f
post	data/data_raw/valid.py	/^utf-8	def	post	(	url	,	data	=	None	,	json	=	None	,	**	kwargs	)	:	\\n	    	return	request	(	'post/;"	f
post_coroutine	data/bpe_corpus_raw/valid.py	/^utf-8	def	gen_test	(	func	=	None	,	timeout	=	None	)	:	\\n	    	if	timeout	is	None	:	\\n	        /;"	f	function:gen_test.wrap.pre_coroutine	file:
post_coroutine	data/data_raw/valid.py	/^utf-8	def	gen_test	(	func	=	None	,	timeout	=	None	)	:	\\n	    	if	timeout	is	None	:	\\n	        /;"	f	function:gen_test.wrap.pre_coroutine	file:
post_db_setup	data/bpe_corpus_raw/train.py	/^utf-8	@	pytest	.	fixture	(	scope	=	'session'	)	\\n	def	post_db_setup	(	translations_directory	,	/;"	f
post_db_setup	data/data_raw/train.py	/^utf-8	@	pytest	.	fixture	(	scope	=	'session'	)	\\n	def	post_db_setup	(	translations_directory	,	/;"	f
post_process	data/bpe_corpus_raw/valid.py	/^utf-8	def	post_process	(	out	,	pb	,	state	,	extend	=	False	)	:	\\n	    	from	sfepy	.	base	.	base/;"	f
post_process	data/data_raw/valid.py	/^utf-8	def	post_process	(	out	,	pb	,	state	,	extend	=	False	)	:	\\n	    	from	sfepy	.	base	.	base/;"	f
post_save_moderation	data/bpe_corpus_raw/train.py	/^utf-8	def	post_save_moderation	(	self	,	sender	,	comment	,	request	,	**	kwargs	)	:	\\n	    	mode/;"	f
post_save_moderation	data/data_raw/train.py	/^utf-8	def	post_save_moderation	(	self	,	sender	,	comment	,	request	,	**	kwargs	)	:	\\n	    	mode/;"	f
post_with_retries	data/bpe_corpus_raw/valid.py	/^utf-8	def	post_with_retries	(	self	,	request	,	data	=	None	)	:	\\n	    	for	_count	in	range	(	se/;"	f
post_with_retries	data/data_raw/valid.py	/^utf-8	def	post_with_retries	(	self	,	request	,	data	=	None	)	:	\\n	    	for	_count	in	range	(	se/;"	f
posteriors	data/bpe_corpus_raw/train.py	/^utf-8	def	posteriors	(	self	,	logits	,	blank_prior	=	1	)	:	\\n	    	logits	=	tf	.	transpose	(	lo/;"	f
posteriors	data/data_raw/train.py	/^utf-8	def	posteriors	(	self	,	logits	,	blank_prior	=	1	)	:	\\n	    	logits	=	tf	.	transpose	(	lo/;"	f
posterize	data/bpe_corpus_raw/valid.py	/^utf-8	def	posterize	(	image	,	bits	)	:	\\n	    	lut	=	[	]	\\n	mask	=	~	(	2	**	(	8	-	bits	)	-	1	)/;"	f
posterize	data/data_raw/valid.py	/^utf-8	def	posterize	(	image	,	bits	)	:	\\n	    	lut	=	[	]	\\n	mask	=	~	(	2	**	(	8	-	bits	)	-	1	)/;"	f
postprocess	data/bpe_corpus_raw/valid.py	/^utf-8	def	postprocess	(	self	,	prediction_dict	)	:	\\n	    	with	tf	.	name_scope	(	'FirstStagePo/;"	f
postprocess	data/data_raw/valid.py	/^utf-8	def	postprocess	(	self	,	prediction_dict	)	:	\\n	    	with	tf	.	name_scope	(	'FirstStagePo/;"	f
power	data/bpe_corpus_raw/valid.py	/^utf-8	def	power	(	self	,	n	,	dtype	=	None	)	:	\\n	    	if	not	isscalarlike	(	n	)	:	\\n	        	/;"	f
power	data/data_raw/valid.py	/^utf-8	def	power	(	self	,	n	,	dtype	=	None	)	:	\\n	    	if	not	isscalarlike	(	n	)	:	\\n	        	/;"	f
powerset	data/bpe_corpus_raw/valid.py	/^utf-8	def	powerset	(	self	)	:	\\n	    	return	self	.	_eval_powerset	(	)	\\n		$/;"	f
powerset	data/data_raw/valid.py	/^utf-8	def	powerset	(	self	)	:	\\n	    	return	self	.	_eval_powerset	(	)	\\n		$/;"	f
ppos	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	ppos	(	self	)	:	\\n	    	return	self	.	px	,	self	.	py	\\n		$/;"	f
ppos	data/data_raw/train.py	/^utf-8	@	property	\\n	def	ppos	(	self	)	:	\\n	    	return	self	.	px	,	self	.	py	\\n		$/;"	f
pprint	data/bpe_corpus_raw/valid.py	/^utf-8	def	pprint	(	object	:	object	,	stream	:	TextIO	=	None	,	indent	:	int	=	1	,	width	:	int	=	\\/;"	f
pprint	data/data_raw/valid.py	/^utf-8	def	pprint	(	object	:	object	,	stream	:	TextIO	=	None	,	indent	:	int	=	1	,	width	:	int	=	\\/;"	f
pre_coroutine	data/bpe_corpus_raw/valid.py	/^utf-8	def	gen_test	(	func	=	None	,	timeout	=	None	)	:	\\n	    	if	timeout	is	None	:	\\n	        /;"	f	function:gen_test.wrap	file:
pre_coroutine	data/data_raw/valid.py	/^utf-8	def	gen_test	(	func	=	None	,	timeout	=	None	)	:	\\n	    	if	timeout	is	None	:	\\n	        /;"	f	function:gen_test.wrap	file:
pred_to_cl	data/bpe_corpus_raw/valid.py	/^utf-8	def	majmin_targets_to_chord_labels	(	targets	,	fps	)	:	\\n	    	pitch_class_to_label	=	[	'/;"	f	function:majmin_targets_to_chord_labels	file:
pred_to_cl	data/data_raw/valid.py	/^utf-8	def	majmin_targets_to_chord_labels	(	targets	,	fps	)	:	\\n	    	pitch_class_to_label	=	[	'/;"	f	function:majmin_targets_to_chord_labels	file:
predict	data/bpe_corpus_raw/train.py	/^utf-8	def	predict	(	self	,	X	)	:	\\n	    	X_next	=	X	\\n	for	layer	in	self	.	layers	:	\\n	      /;"	f
predict	data/data_raw/train.py	/^utf-8	def	predict	(	self	,	X	)	:	\\n	    	X_next	=	X	\\n	for	layer	in	self	.	layers	:	\\n	      /;"	f
predict_mean_and_var	data/bpe_corpus_raw/train.py	/^utf-8	def	predict_mean_and_var	(	self	,	Fmu	,	Fvar	,	epsilon	=	None	)	:	\\n	    	integrand2	=	la/;"	f
predict_mean_and_var	data/data_raw/train.py	/^utf-8	def	predict_mean_and_var	(	self	,	Fmu	,	Fvar	,	epsilon	=	None	)	:	\\n	    	integrand2	=	la/;"	f
predict_proba	data/bpe_corpus_raw/valid.py	/^utf-8	def	predict_proba	(	self	,	dataset	,	transformers	=	[	]	,	n_classes	=	2	)	:	\\n	    	y_pre/;"	f
predict_proba	data/data_raw/valid.py	/^utf-8	def	predict_proba	(	self	,	dataset	,	transformers	=	[	]	,	n_classes	=	2	)	:	\\n	    	y_pre/;"	f
preexec_wrapper	data/bpe_corpus_raw/valid.py	/^utf-8	def	_spawn	(	self	,	command	,	args	=	[	]	,	preexec_fn	=	None	,	dimensions	=	None	)	:	\\n	 /;"	f	function:_spawn	file:
preexec_wrapper	data/data_raw/valid.py	/^utf-8	def	_spawn	(	self	,	command	,	args	=	[	]	,	preexec_fn	=	None	,	dimensions	=	None	)	:	\\n	 /;"	f	function:_spawn	file:
prefer_url	data/bpe_corpus_raw/train.py	/^utf-8	def	prefer_url	(	self	,	url1	,	url2	)	:	\\n	    	result	=	url2	\\n	if	url1	:	\\n	        	/;"	f
prefer_url	data/data_raw/train.py	/^utf-8	def	prefer_url	(	self	,	url1	,	url2	)	:	\\n	    	result	=	url2	\\n	if	url1	:	\\n	        	/;"	f
preferences	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	preferences	(	self	)	:	\\n	    	return	self	.	_preferences	\\n		$/;"	f
preferences	data/data_raw/train.py	/^utf-8	@	property	\\n	def	preferences	(	self	)	:	\\n	    	return	self	.	_preferences	\\n		$/;"	f
preferred_signature_algorithms_value	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	preferred_signature_algorithms_value	(	self	)	:	\\n	    	if	self	.	_pro/;"	f
preferred_signature_algorithms_value	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	preferred_signature_algorithms_value	(	self	)	:	\\n	    	if	self	.	_pro/;"	f
prepare	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	prepare	(	cls	,	engine	=	None	,	reflect	=	False	,	schema	=	None	,	\\/;"	f
prepare	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	prepare	(	cls	,	engine	=	None	,	reflect	=	False	,	schema	=	None	,	\\/;"	f
prepareTestResult	data/bpe_corpus_raw/valid.py	/^utf-8	def	prepareTestResult	(	self	,	result	)	:	\\n	    	pass	\\n		$/;"	f
prepareTestResult	data/data_raw/valid.py	/^utf-8	def	prepareTestResult	(	self	,	result	)	:	\\n	    	pass	\\n		$/;"	f
prepare_auth	data/bpe_corpus_raw/test.py	/^utf-8	def	prepare_auth	(	self	,	auth	,	url	=	''	)	:	\\n	    	if	auth	is	None	:	\\n	        	url_/;"	f
prepare_auth	data/data_raw/test.py	/^utf-8	def	prepare_auth	(	self	,	auth	,	url	=	''	)	:	\\n	    	if	auth	is	None	:	\\n	        	url_/;"	f
prepare_bearer_headers	data/bpe_corpus_raw/train.py	/^utf-8	def	prepare_bearer_headers	(	token	,	headers	=	None	)	:	\\n	    	headers	=	headers	or	{	}	/;"	f
prepare_bearer_headers	data/data_raw/train.py	/^utf-8	def	prepare_bearer_headers	(	token	,	headers	=	None	)	:	\\n	    	headers	=	headers	or	{	}	/;"	f
prepare_body	data/bpe_corpus_raw/train.py	/^utf-8	def	prepare_body	(	self	,	data	,	files	,	json	=	None	)	:	\\n	    	if	not	files	:	\\n	     /;"	f
prepare_body	data/data_raw/train.py	/^utf-8	def	prepare_body	(	self	,	data	,	files	,	json	=	None	)	:	\\n	    	if	not	files	:	\\n	     /;"	f
prepare_cookies	data/bpe_corpus_raw/valid.py	/^utf-8	def	prepare_cookies	(	self	,	cookies	)	:	\\n	    	if	isinstance	(	cookies	,	cookielib	.	Co/;"	f
prepare_cookies	data/data_raw/valid.py	/^utf-8	def	prepare_cookies	(	self	,	cookies	)	:	\\n	    	if	isinstance	(	cookies	,	cookielib	.	Co/;"	f
prepare_data	data/bpe_corpus_raw/valid.py	/^utf-8	def	prepare_data	(	file_dir	,	vocab_text_path	,	vocab_tag_path	,	batch_size	,	\\n	neg_size/;"	f
prepare_data	data/data_raw/valid.py	/^utf-8	def	prepare_data	(	file_dir	,	vocab_text_path	,	vocab_tag_path	,	batch_size	,	\\n	neg_size/;"	f
prepare_filter_condition	data/bpe_corpus_raw/valid.py	/^utf-8	def	prepare_filter_condition	(	self	,	f	)	:	\\n	    	f	=	get_filter	(	self	.	doctype	,	f	)/;"	f
prepare_filter_condition	data/data_raw/valid.py	/^utf-8	def	prepare_filter_condition	(	self	,	f	)	:	\\n	    	f	=	get_filter	(	self	.	doctype	,	f	)/;"	f
prepare_for_deployment	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	prepare_for_deployment	(	cls	,	cluster	,	nodes	)	:	\\n	    	super	(	/;"	f
prepare_for_deployment	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	prepare_for_deployment	(	cls	,	cluster	,	nodes	)	:	\\n	    	super	(	/;"	f
prepare_headers	data/bpe_corpus_raw/train.py	/^utf-8	def	prepare_headers	(	self	,	headers	)	:	\\n	    	if	headers	:	\\n	        	self	.	headers/;"	f
prepare_headers	data/data_raw/train.py	/^utf-8	def	prepare_headers	(	self	,	headers	)	:	\\n	    	if	headers	:	\\n	        	self	.	headers/;"	f
prepare_request_uri_query	data/bpe_corpus_raw/valid.py	/^utf-8	def	prepare_request_uri_query	(	oauth_params	,	uri	)	:	\\n	    	sch	,	net	,	path	,	par	,	q/;"	f
prepare_request_uri_query	data/data_raw/valid.py	/^utf-8	def	prepare_request_uri_query	(	oauth_params	,	uri	)	:	\\n	    	sch	,	net	,	path	,	par	,	q/;"	f
pretty_print_test_options	data/bpe_corpus_raw/valid.py	/^utf-8	def	pretty_print_test_options	(	options	=	None	)	:	\\n	    	if	options	is	None	:	\\n	     /;"	f
pretty_print_test_options	data/data_raw/valid.py	/^utf-8	def	pretty_print_test_options	(	options	=	None	)	:	\\n	    	if	options	is	None	:	\\n	     /;"	f
prev_this_next	data/bpe_corpus_raw/train.py	/^utf-8	def	prev_this_next	(	items	)	:	\\n	    	extend	=	itertools	.	chain	(	[	None	]	,	items	,	[	/;"	f
prev_this_next	data/data_raw/train.py	/^utf-8	def	prev_this_next	(	items	)	:	\\n	    	extend	=	itertools	.	chain	(	[	None	]	,	items	,	[	/;"	f
preview	data/bpe_corpus_raw/valid.py	/^utf-8	def	preview	(	self	,	**	kwargs	)	:	\\n	    	headers	=	self	.	client	.	credentials_headers	/;"	f
preview	data/data_raw/valid.py	/^utf-8	def	preview	(	self	,	**	kwargs	)	:	\\n	    	headers	=	self	.	client	.	credentials_headers	/;"	f
prime	data/bpe_corpus_raw/valid.py	/^utf-8	@	predicate_memo	\\n	def	prime	(	self	)	:	\\n	    	return	Predicate	(	'prime'	)	\\n		$/;"	f
prime	data/data_raw/valid.py	/^utf-8	@	predicate_memo	\\n	def	prime	(	self	)	:	\\n	    	return	Predicate	(	'prime'	)	\\n		$/;"	f
prime_ideal	data/bpe_corpus_raw/train.py	/^utf-8	def	prime_ideal	(	self	)	:	\\n	    	return	self	.	_prime	\\n		$/;"	f
prime_ideal	data/data_raw/train.py	/^utf-8	def	prime_ideal	(	self	)	:	\\n	    	return	self	.	_prime	\\n		$/;"	f
printDisabled	data/bpe_corpus_raw/train.py	/^utf-8	def	printDisabled	(	self	,	target	=	''	)	:	\\n	    	success	=	False	\\n	stdout	=	''	\\n	if/;"	f
printDisabled	data/data_raw/train.py	/^utf-8	def	printDisabled	(	self	,	target	=	''	)	:	\\n	    	success	=	False	\\n	stdout	=	''	\\n	if/;"	f
print_	data/bpe_corpus_raw/train.py	/^utf-8	def	print_	(	*	args	,	**	kwargs	)	:	\\n	    	fp	=	kwargs	.	pop	(	'file'	,	sys	.	stdout	)	\\/;"	f
print_	data/bpe_corpus_raw/valid.py	/^utf-8	def	print_	(	*	args	,	**	kwargs	)	:	\\n	    	fp	=	kwargs	.	pop	(	'file'	,	sys	.	stdout	)	\\/;"	f
print_	data/data_raw/train.py	/^utf-8	def	print_	(	*	args	,	**	kwargs	)	:	\\n	    	fp	=	kwargs	.	pop	(	'file'	,	sys	.	stdout	)	\\/;"	f
print_	data/data_raw/valid.py	/^utf-8	def	print_	(	*	args	,	**	kwargs	)	:	\\n	    	fp	=	kwargs	.	pop	(	'file'	,	sys	.	stdout	)	\\/;"	f
print_arguments	data/bpe_corpus_raw/valid.py	/^utf-8	def	print_arguments	(	args	)	:	\\n	    	print	(	'-----------  Configuration Arguments ----/;"	f
print_arguments	data/data_raw/valid.py	/^utf-8	def	print_arguments	(	args	)	:	\\n	    	print	(	'-----------  Configuration Arguments ----/;"	f
print_column_names	data/bpe_corpus_raw/train.py	/^utf-8	def	print_column_names	(	self	)	:	\\n	    	if	getattr	(	self	.	args	,	'no_header_row'	,	No/;"	f
print_column_names	data/data_raw/train.py	/^utf-8	def	print_column_names	(	self	)	:	\\n	    	if	getattr	(	self	.	args	,	'no_header_row'	,	No/;"	f
print_dict	data/bpe_corpus_raw/test.py	/^utf-8	def	print_dict	(	d	,	show_missing	=	True	)	:	\\n	    	for	k	,	v	in	sorted	(	d	.	items	(	)	/;"	f
print_dict	data/data_raw/test.py	/^utf-8	def	print_dict	(	d	,	show_missing	=	True	)	:	\\n	    	for	k	,	v	in	sorted	(	d	.	items	(	)	/;"	f
print_header	data/bpe_corpus_raw/train.py	/^utf-8	def	print_header	(	out	,	name	=	'System'	)	:	\\n	    	out	.	write	(	'digraph %s {graph [ra/;"	f
print_header	data/bpe_corpus_raw/valid.py	/^utf-8	def	print_header	(	text	)	:	\\n	    	print	(	)	\\n	print	(	'#'	*	(	len	(	text	)	+	4	)	)	\\/;"	f
print_header	data/data_raw/train.py	/^utf-8	def	print_header	(	out	,	name	=	'System'	)	:	\\n	    	out	.	write	(	'digraph %s {graph [ra/;"	f
print_header	data/data_raw/valid.py	/^utf-8	def	print_header	(	text	)	:	\\n	    	print	(	)	\\n	print	(	'#'	*	(	len	(	text	)	+	4	)	)	\\/;"	f
print_jpg	data/bpe_corpus_raw/train.py	/^utf-8	def	print_jpg	(	self	,	filename_or_obj	,	*	args	,	**	kwargs	)	:	\\n	    	from	backends	.	b/;"	f
print_jpg	data/data_raw/train.py	/^utf-8	def	print_jpg	(	self	,	filename_or_obj	,	*	args	,	**	kwargs	)	:	\\n	    	from	backends	.	b/;"	f
print_old_log_entries	data/bpe_corpus_raw/train.py	/^utf-8	def	print_old_log_entries	(	)	:	\\n	    	old_entries	=	list	(	DBLogEntry	.	notable_entries/;"	f
print_old_log_entries	data/data_raw/train.py	/^utf-8	def	print_old_log_entries	(	)	:	\\n	    	old_entries	=	list	(	DBLogEntry	.	notable_entries/;"	f
print_stats	data/bpe_corpus_raw/valid.py	/^utf-8	def	compare_stats	(	distarray_stats	,	numpy_stats	,	verbose	=	False	)	:	\\n	    	stat_keys/;"	f	function:compare_stats	file:
print_stats	data/data_raw/valid.py	/^utf-8	def	compare_stats	(	distarray_stats	,	numpy_stats	,	verbose	=	False	)	:	\\n	    	stat_keys/;"	f	function:compare_stats	file:
print_stats_sm	data/bpe_corpus_raw/valid.py	/^utf-8	@	arr_to_numpy	\\n	def	print_stats_sm	(	arr	)	:	\\n	    	log_func	=	logging	.	info	if	ABuE/;"	f
print_stats_sm	data/data_raw/valid.py	/^utf-8	@	arr_to_numpy	\\n	def	print_stats_sm	(	arr	)	:	\\n	    	log_func	=	logging	.	info	if	ABuE/;"	f
process	data/bpe_corpus_raw/valid.py	/^utf-8	def	process	(	self	,	trace	)	:	\\n	    	trace	.	filter	(	'bandpass'	,	freqmin	=	0.1	,	freq/;"	f
process	data/data_raw/valid.py	/^utf-8	def	process	(	self	,	trace	)	:	\\n	    	trace	.	filter	(	'bandpass'	,	freqmin	=	0.1	,	freq/;"	f
processElementNode	data/bpe_corpus_raw/test.py	/^utf-8	def	processElementNode	(	elementNode	)	:	\\n	    	functions	=	elementNode	.	getXMLProcesso/;"	f
processElementNode	data/data_raw/test.py	/^utf-8	def	processElementNode	(	elementNode	)	:	\\n	    	functions	=	elementNode	.	getXMLProcesso/;"	f
processEvents	data/bpe_corpus_raw/valid.py	/^utf-8	def	processEvents	(	self	,	now	=	None	)	:	\\n	    	if	now	is	None	:	\\n	        	now	=	tim/;"	f
processEvents	data/data_raw/valid.py	/^utf-8	def	processEvents	(	self	,	now	=	None	)	:	\\n	    	if	now	is	None	:	\\n	        	now	=	tim/;"	f
process_file_parameter	data/bpe_corpus_raw/valid.py	/^utf-8	def	process_file_parameter	(	f	)	:	\\n	\\n	    	def	processed_function	(	self	,	file_name	/;"	f
process_file_parameter	data/data_raw/valid.py	/^utf-8	def	process_file_parameter	(	f	)	:	\\n	\\n	    	def	processed_function	(	self	,	file_name	/;"	f
process_packet	data/bpe_corpus_raw/train.py	/^utf-8	def	process_packet	(	self	,	data	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
process_packet	data/data_raw/train.py	/^utf-8	def	process_packet	(	self	,	data	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
process_request	data/bpe_corpus_raw/train.py	/^utf-8	def	test_active_user_mocked	(	self	)	:	\\n	    	client	=	self	.	client	\\n	assertTrue	=	se/;"	m	class:test_active_user_mocked.ActiveUserMiddlewareMock
process_request	data/data_raw/train.py	/^utf-8	def	test_active_user_mocked	(	self	)	:	\\n	    	client	=	self	.	client	\\n	assertTrue	=	se/;"	m	class:test_active_user_mocked.ActiveUserMiddlewareMock
process_seeds	data/bpe_corpus_raw/valid.py	/^utf-8	def	process_seeds	(	self	,	seeds	)	:	\\n	    	robots_requests	=	set	(	)	\\n	scheduled	=	0	/;"	f
process_seeds	data/data_raw/valid.py	/^utf-8	def	process_seeds	(	self	,	seeds	)	:	\\n	    	robots_requests	=	set	(	)	\\n	scheduled	=	0	/;"	f
process_system_time	data/bpe_corpus_raw/valid.py	/^utf-8	def	process_system_time	(	system_time	)	:	\\n	    	show_system_time	=	textwrap	.	dedent	(	/;"	f
process_system_time	data/data_raw/valid.py	/^utf-8	def	process_system_time	(	system_time	)	:	\\n	    	show_system_time	=	textwrap	.	dedent	(	/;"	f
process_test_objects	data/bpe_corpus_raw/valid.py	/^utf-8	def	process_test_objects	(	kwargs	)	:	\\n	    	if	'test_objects'	in	kwargs	:	\\n	        	/;"	f
process_test_objects	data/data_raw/valid.py	/^utf-8	def	process_test_objects	(	kwargs	)	:	\\n	    	if	'test_objects'	in	kwargs	:	\\n	        	/;"	f
processed_function	data/bpe_corpus_raw/valid.py	/^utf-8	def	process_file_parameter	(	f	)	:	\\n	\\n	    	def	processed_function	(	self	,	file_name	/;"	f	function:process_file_parameter	file:
processed_function	data/data_raw/valid.py	/^utf-8	def	process_file_parameter	(	f	)	:	\\n	\\n	    	def	processed_function	(	self	,	file_name	/;"	f	function:process_file_parameter	file:
profile	data/bpe_corpus_raw/valid.py	/^utf-8	def	profile	(	self	,	uuid	:	str	)	->	dict	:	\\n	    	params	=	{	'profile_uuid'	:	uuid	}	if/;"	f
profile	data/data_raw/valid.py	/^utf-8	def	profile	(	self	,	uuid	:	str	)	->	dict	:	\\n	    	params	=	{	'profile_uuid'	:	uuid	}	if/;"	f
progress_bar	data_utils/downloaded_repos.py	/^progress_bar = tqdm(total=len(repo_df["url"]))$/;"	v
project_many	data/bpe_corpus_raw/train.py	/^utf-8	def	project_many	(	self	,	points	)	:	\\n	    	distortion	=	np	.	array	(	[	self	.	k1	,	self/;"	f
project_many	data/data_raw/train.py	/^utf-8	def	project_many	(	self	,	points	)	:	\\n	    	distortion	=	np	.	array	(	[	self	.	k1	,	self/;"	f
project_opened	.ropeproject/config.py	/^def project_opened(project):$/;"	f
project_opened	models/.vscode/.ropeproject/config.py	/^def project_opened(project):$/;"	f
project_sequence	data/bpe_corpus_raw/train.py	/^utf-8	def	project_sequence	(	s	,	permutation	=	None	)	:	\\n	    	xs	,	ys	=	unzip	(	[	project_poi/;"	f
project_sequence	data/data_raw/train.py	/^utf-8	def	project_sequence	(	s	,	permutation	=	None	)	:	\\n	    	xs	,	ys	=	unzip	(	[	project_poi/;"	f
protect_pip_from_modification_on_windows	data/bpe_corpus_raw/valid.py	/^utf-8	def	protect_pip_from_modification_on_windows	(	modifying_pip	)	:	\\n	    	pip_names	=	[	'p/;"	f
protect_pip_from_modification_on_windows	data/data_raw/valid.py	/^utf-8	def	protect_pip_from_modification_on_windows	(	modifying_pip	)	:	\\n	    	pip_names	=	[	'p/;"	f
prove	data/bpe_corpus_raw/train.py	/^utf-8	def	prove	(	self	,	statement	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
prove	data/data_raw/train.py	/^utf-8	def	prove	(	self	,	statement	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
proxify	data/bpe_corpus_raw/train.py	/^utf-8	def	proxify	(	self	,	requester	)	:	\\n	    	if	self	.	use_proxy	is	True	:	\\n	        	if	/;"	f
proxify	data/data_raw/train.py	/^utf-8	def	proxify	(	self	,	requester	)	:	\\n	    	if	self	.	use_proxy	is	True	:	\\n	        	if	/;"	f
proxy_headers	data/bpe_corpus_raw/valid.py	/^utf-8	def	proxy_headers	(	self	,	proxy	)	:	\\n	    	headers	=	{	}	\\n	username	,	password	=	get_/;"	f
proxy_headers	data/data_raw/valid.py	/^utf-8	def	proxy_headers	(	self	,	proxy	)	:	\\n	    	headers	=	{	}	\\n	username	,	password	=	get_/;"	f
prune_paths	data/bpe_corpus_raw/train.py	/^utf-8	def	prune_paths	(	original_paths	,	count_paths_to_touch	)	:	\\n	    	format_vars	=	{	'majo/;"	f
prune_paths	data/data_raw/train.py	/^utf-8	def	prune_paths	(	original_paths	,	count_paths_to_touch	)	:	\\n	    	format_vars	=	{	'majo/;"	f
ptb_raw_data	data/bpe_corpus_raw/valid.py	/^utf-8	def	ptb_raw_data	(	data_path	=	None	)	:	\\n	    	train_path	=	os	.	path	.	join	(	data_path/;"	f
ptb_raw_data	data/data_raw/valid.py	/^utf-8	def	ptb_raw_data	(	data_path	=	None	)	:	\\n	    	train_path	=	os	.	path	.	join	(	data_path/;"	f
purgeExpiredRecords	data/bpe_corpus_raw/valid.py	/^utf-8	def	purgeExpiredRecords	(	self	)	:	\\n	    	if	hasattr	(	self	,	'_test_time'	)	:	\\n	     /;"	f
purgeExpiredRecords	data/data_raw/valid.py	/^utf-8	def	purgeExpiredRecords	(	self	)	:	\\n	    	if	hasattr	(	self	,	'_test_time'	)	:	\\n	     /;"	f
push	data/bpe_corpus_raw/train.py	/^utf-8	def	push	(	self	,	index	)	:	\\n	    	self	.	calls	.	append	(	self	.	p	)	\\n	self	.	seek	(	/;"	f
push	data/bpe_corpus_raw/valid.py	/^utf-8	def	push	(	self	,	index	)	:	\\n	    	self	.	calls	.	append	(	self	.	p	)	\\n	self	.	seek	(	/;"	f
push	data/bpe_corpus_raw/valid.py	/^utf-8	def	push	(	self	,	obj	)	:	\\n	    	rv	=	getattr	(	self	.	_local	,	'stack'	,	None	)	\\n	if	/;"	f
push	data/bpe_corpus_raw/valid.py	/^utf-8	def	segment	(	self	,	tokens	,	style	,	renders	,	text_displayable	)	:	\\n	    	self	.	hyper/;"	f	function:segment	file:
push	data/data_raw/train.py	/^utf-8	def	push	(	self	,	index	)	:	\\n	    	self	.	calls	.	append	(	self	.	p	)	\\n	self	.	seek	(	/;"	f
push	data/data_raw/valid.py	/^utf-8	def	push	(	self	,	index	)	:	\\n	    	self	.	calls	.	append	(	self	.	p	)	\\n	self	.	seek	(	/;"	f
push	data/data_raw/valid.py	/^utf-8	def	push	(	self	,	obj	)	:	\\n	    	rv	=	getattr	(	self	.	_local	,	'stack'	,	None	)	\\n	if	/;"	f
push	data/data_raw/valid.py	/^utf-8	def	segment	(	self	,	tokens	,	style	,	renders	,	text_displayable	)	:	\\n	    	self	.	hyper/;"	f	function:segment	file:
push_results	data/bpe_corpus_raw/test.py	/^utf-8	def	push_results	(	self	)	:	\\n	    	for	scheduler_link_uuid	in	self	.	schedulers	:	\\n	  /;"	f
push_results	data/data_raw/test.py	/^utf-8	def	push_results	(	self	)	:	\\n	    	for	scheduler_link_uuid	in	self	.	schedulers	:	\\n	  /;"	f
put	data/bpe_corpus_raw/train.py	/^utf-8	def	put	(	self	,	as_id	)	:	\\n	    	self	.	reqparse	.	add_argument	(	'disabled'	,	type	=	b/;"	f
put	data/bpe_corpus_raw/valid.py	/^utf-8	def	put	(	self	,	variant	,	size	)	:	\\n	    	request	=	cherrypy	.	serving	.	request	\\n	re/;"	f
put	data/data_raw/train.py	/^utf-8	def	put	(	self	,	as_id	)	:	\\n	    	self	.	reqparse	.	add_argument	(	'disabled'	,	type	=	b/;"	f
put	data/data_raw/valid.py	/^utf-8	def	put	(	self	,	variant	,	size	)	:	\\n	    	request	=	cherrypy	.	serving	.	request	\\n	re/;"	f
put_annotation	data/bpe_corpus_raw/train.py	/^utf-8	def	put_annotation	(	msg	,	endpoint	=	None	)	:	\\n	    	if	is_sample	(	)	:	\\n	        	a	/;"	f
put_annotation	data/data_raw/train.py	/^utf-8	def	put_annotation	(	msg	,	endpoint	=	None	)	:	\\n	    	if	is_sample	(	)	:	\\n	        	a	/;"	f
put_circle	data/bpe_corpus_raw/valid.py	/^utf-8	def	put_circle	(	self	,	x0	,	y0	,	radius	,	char	=	None	,	color	=	None	,	background	=	None	/;"	f
put_circle	data/data_raw/valid.py	/^utf-8	def	put_circle	(	self	,	x0	,	y0	,	radius	,	char	=	None	,	color	=	None	,	background	=	None	/;"	f
put_item	data/bpe_corpus_raw/train.py	/^utf-8	def	put_item	(	self	,	data	,	overwrite	=	False	)	:	\\n	    	item	=	Item	(	self	,	data	=	da/;"	f
put_item	data/data_raw/train.py	/^utf-8	def	put_item	(	self	,	data	,	overwrite	=	False	)	:	\\n	    	item	=	Item	(	self	,	data	=	da/;"	f
put_metric_filter	data/bpe_corpus_raw/valid.py	/^utf-8	def	put_metric_filter	(	self	,	log_group_name	,	filter_name	,	filter_pattern	,	\\n	metric_/;"	f
put_metric_filter	data/data_raw/valid.py	/^utf-8	def	put_metric_filter	(	self	,	log_group_name	,	filter_name	,	filter_pattern	,	\\n	metric_/;"	f
put_nowait	data/bpe_corpus_raw/valid.py	/^utf-8	def	put_nowait	(	self	,	item	)	:	\\n	    	return	self	.	put	(	item	,	False	)	\\n		$/;"	f
put_nowait	data/data_raw/valid.py	/^utf-8	def	put_nowait	(	self	,	item	)	:	\\n	    	return	self	.	put	(	item	,	False	)	\\n		$/;"	f
put_object	data/bpe_corpus_raw/test.py	/^utf-8	def	put_object	(	self	,	parent_object	,	connection_name	,	**	data	)	:	\\n	    	assert	self/;"	f
put_object	data/data_raw/test.py	/^utf-8	def	put_object	(	self	,	parent_object	,	connection_name	,	**	data	)	:	\\n	    	assert	self/;"	f
pypi_source_urls	data/bpe_corpus_raw/valid.py	/^utf-8	def	pypi_source_urls	(	pkg_name	)	:	\\n	    	simple_url	=	'https:\/\/pypi.python.org\/simp/;"	f
pypi_source_urls	data/data_raw/valid.py	/^utf-8	def	pypi_source_urls	(	pkg_name	)	:	\\n	    	simple_url	=	'https:\/\/pypi.python.org\/simp/;"	f
pytest_configure	data/bpe_corpus_raw/train.py	/^utf-8	def	pytest_configure	(	config	)	:	\\n	    	sb_config	.	is_pytest	=	True	\\n	sb_config	.	br/;"	f
pytest_configure	data/data_raw/train.py	/^utf-8	def	pytest_configure	(	config	)	:	\\n	    	sb_config	.	is_pytest	=	True	\\n	sb_config	.	br/;"	f
pytest_runtest_setup	data/bpe_corpus_raw/valid.py	/^utf-8	def	pytest_runtest_setup	(	item	)	:	\\n	    	marker	=	item	.	get_marker	(	'long'	)	\\n	if	/;"	f
pytest_runtest_setup	data/data_raw/valid.py	/^utf-8	def	pytest_runtest_setup	(	item	)	:	\\n	    	marker	=	item	.	get_marker	(	'long'	)	\\n	if	/;"	f
python.pythonPath	.vscode/settings.json	/^    "python.pythonPath": "\/home\/rishi\/.local\/share\/virtualenvs\/project-3AdhVKA7\/bin\/pyth/;"	s
python_branch	data/bpe_corpus_raw/train.py	/^utf-8	def	python_branch	(	)	:	\\n	    	return	_sys_version	(	)	[	2	]	\\n		$/;"	f
python_branch	data/data_raw/train.py	/^utf-8	def	python_branch	(	)	:	\\n	    	return	_sys_version	(	)	[	2	]	\\n		$/;"	f
python_df	data_utils/get_repolist.py	/^python_df = python_df.loc[pd.to_numeric(python_df["langs_files_count_Python"], errors="coerce") /;"	v
python_df	data_utils/get_repolist.py	/^python_df = repo_list[["url", "langs_files_count_Python"]]$/;"	v
qp	data/bpe_corpus_raw/valid.py	/^utf-8	@	defun	\\n	def	qp	(	ctx	,	a	,	q	=	None	,	n	=	None	,	**	kwargs	)	:	\\n	    	a	=	ctx	.	conv/;"	f
qp	data/data_raw/valid.py	/^utf-8	@	defun	\\n	def	qp	(	ctx	,	a	,	q	=	None	,	n	=	None	,	**	kwargs	)	:	\\n	    	a	=	ctx	.	conv/;"	f
query	data/bpe_corpus_raw/valid.py	/^utf-8	@	provide_session	\\n	def	reset_state_for_orphaned_tasks	(	self	,	filter_by_dag_run	=	None/;"	f	function:reset_state_for_orphaned_tasks	file:
query	data/bpe_corpus_raw/valid.py	/^utf-8	def	query	(	self	,	where	=	'1=1'	,	out_fields	=	'*'	,	timeFilter	=	None	,	\\n	geometryFilt/;"	f
query	data/data_raw/valid.py	/^utf-8	@	provide_session	\\n	def	reset_state_for_orphaned_tasks	(	self	,	filter_by_dag_run	=	None/;"	f	function:reset_state_for_orphaned_tasks	file:
query	data/data_raw/valid.py	/^utf-8	def	query	(	self	,	where	=	'1=1'	,	out_fields	=	'*'	,	timeFilter	=	None	,	\\n	geometryFilt/;"	f
query_auth	data/bpe_corpus_raw/train.py	/^utf-8	@	defer	.	inlineCallbacks	\\n	def	query_auth	(	self	,	destination	,	room_id	,	event_id	,	l/;"	f
query_auth	data/data_raw/train.py	/^utf-8	@	defer	.	inlineCallbacks	\\n	def	query_auth	(	self	,	destination	,	room_id	,	event_id	,	l/;"	f
query_pager_by_slug	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	query_pager_by_slug	(	slug	,	current_page_num	=	1	,	tag	=	''	,	orde/;"	f
query_pager_by_slug	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	query_pager_by_slug	(	slug	,	current_page_num	=	1	,	tag	=	''	,	orde/;"	f
query_stock	data/bpe_corpus_raw/valid.py	/^utf-8	def	query_stock	(	self	,	stock_id	,	op_user_id	=	None	,	device_info	=	None	)	:	\\n	    	da/;"	f
query_stock	data/data_raw/valid.py	/^utf-8	def	query_stock	(	self	,	stock_id	,	op_user_id	=	None	,	device_info	=	None	)	:	\\n	    	da/;"	f
query_string	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	query_string	(	self	)	:	\\n	    	return	self	.	environ	.	get	(	'QUERY_S/;"	f
query_string	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	query_string	(	self	)	:	\\n	    	return	self	.	environ	.	get	(	'QUERY_S/;"	f
queue	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	queue	(	self	)	:	\\n	    	events	=	self	.	_queue	[	:	]	\\n	return	map	(/;"	f
queue	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	queue	(	self	)	:	\\n	    	events	=	self	.	_queue	[	:	]	\\n	return	map	(/;"	f
quote	data/bpe_corpus_raw/train.py	/^utf-8	def	quote	(	string	,	safe	=	'\/'	,	encoding	=	None	,	errors	=	None	)	:	\\n	    	if	isinsta/;"	f
quote	data/bpe_corpus_raw/valid.py	/^utf-8	def	quote	(	self	,	value	:	Union	[	bool	,	int	,	float	,	str	,	None	]	)	->	str	:	\\n	    	v/;"	f
quote	data/bpe_corpus_raw/valid.py	/^utf-8	def	quote	(	string	,	safe	=	'\/'	,	encoding	=	None	,	errors	=	None	)	:	\\n	    	if	isinsta/;"	f
quote	data/data_raw/train.py	/^utf-8	def	quote	(	string	,	safe	=	'\/'	,	encoding	=	None	,	errors	=	None	)	:	\\n	    	if	isinsta/;"	f
quote	data/data_raw/valid.py	/^utf-8	def	quote	(	self	,	value	:	Union	[	bool	,	int	,	float	,	str	,	None	]	)	->	str	:	\\n	    	v/;"	f
quote	data/data_raw/valid.py	/^utf-8	def	quote	(	string	,	safe	=	'\/'	,	encoding	=	None	,	errors	=	None	)	:	\\n	    	if	isinsta/;"	f
quoted_attribute_value	data/bpe_corpus_raw/train.py	/^utf-8	@	classmethod	\\n	def	quoted_attribute_value	(	self	,	value	)	:	\\n	    	quote_with	=	'"'	/;"	f
quoted_attribute_value	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	quoted_attribute_value	(	self	,	value	)	:	\\n	    	quote_with	=	'"'	/;"	f
quoted_attribute_value	data/data_raw/train.py	/^utf-8	@	classmethod	\\n	def	quoted_attribute_value	(	self	,	value	)	:	\\n	    	quote_with	=	'"'	/;"	f
quoted_attribute_value	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	quoted_attribute_value	(	self	,	value	)	:	\\n	    	quote_with	=	'"'	/;"	f
raise_errors	data/bpe_corpus_raw/train.py	/^utf-8	def	raise_errors	(	self	,	response	)	:	\\n	    	verb	=	self	.	debug_verbs	\\n	method	=	res/;"	f
raise_errors	data/data_raw/train.py	/^utf-8	def	raise_errors	(	self	,	response	)	:	\\n	    	verb	=	self	.	debug_verbs	\\n	method	=	res/;"	f
raise_fails	data/bpe_corpus_raw/test.py	/^utf-8	def	raise_fails	(	self	,	object_	)	:	\\n	    	try	:	\\n	        	raise	object_	\\n		except/;"	f
raise_fails	data/data_raw/test.py	/^utf-8	def	raise_fails	(	self	,	object_	)	:	\\n	    	try	:	\\n	        	raise	object_	\\n		except/;"	f
raise_msg_to_str	data/bpe_corpus_raw/valid.py	/^utf-8	def	raise_msg_to_str	(	msg	)	:	\\n	    	if	not	is_string_like	(	msg	)	:	\\n	        	msg	=/;"	f
raise_msg_to_str	data/data_raw/valid.py	/^utf-8	def	raise_msg_to_str	(	msg	)	:	\\n	    	if	not	is_string_like	(	msg	)	:	\\n	        	msg	=/;"	f
rand_norm	data/bpe_corpus_raw/valid.py	/^utf-8	def	rand_norm	(	a	,	b	,	mu	=	None	,	sigma	=	None	)	:	\\n	    	if	mu	is	None	:	\\n	        /;"	f
rand_norm	data/data_raw/valid.py	/^utf-8	def	rand_norm	(	a	,	b	,	mu	=	None	,	sigma	=	None	)	:	\\n	    	if	mu	is	None	:	\\n	        /;"	f
randomMutation	data/bpe_corpus_raw/valid.py	/^utf-8	def	randomMutation	(	self	,	node	,	rand	)	:	\\n	    	self	.	changedName	=	node	.	getFullna/;"	f
randomMutation	data/data_raw/valid.py	/^utf-8	def	randomMutation	(	self	,	node	,	rand	)	:	\\n	    	self	.	changedName	=	node	.	getFullna/;"	f
random_sample	data/bpe_corpus_raw/valid.py	/^utf-8	def	random_sample	(	self	)	:	\\n	    	data	=	np	.	empty	(	(	1	,	self	.	dim	)	)	\\n	for	col/;"	f
random_sample	data/data_raw/valid.py	/^utf-8	def	random_sample	(	self	)	:	\\n	    	data	=	np	.	empty	(	(	1	,	self	.	dim	)	)	\\n	for	col/;"	f
randomizeTargetPositions	data/bpe_corpus_raw/train.py	/^utf-8	def	randomizeTargetPositions	(	self	)	:	\\n	    	print	(	'In randomize target positions.'	/;"	f
randomizeTargetPositions	data/data_raw/train.py	/^utf-8	def	randomizeTargetPositions	(	self	)	:	\\n	    	print	(	'In randomize target positions.'	/;"	f
randomkeypair	data/bpe_corpus_raw/valid.py	/^utf-8	@	pytest	.	fixture	(	)	\\n	def	randomkeypair	(	keysize	=	1024	)	:	\\n	    	cert_store	=	wi/;"	f
randomkeypair	data/data_raw/valid.py	/^utf-8	@	pytest	.	fixture	(	)	\\n	def	randomkeypair	(	keysize	=	1024	)	:	\\n	    	cert_store	=	wi/;"	f
randrange	data/bpe_corpus_raw/train.py	/^utf-8	def	randrange	(	order	,	entropy	=	None	)	:	\\n	    	if	entropy	is	None	:	\\n	        	entr/;"	f
randrange	data/data_raw/train.py	/^utf-8	def	randrange	(	order	,	entropy	=	None	)	:	\\n	    	if	entropy	is	None	:	\\n	        	entr/;"	f
rank	data/bpe_corpus_raw/train.py	/^utf-8	def	rank	(	obj	)	:	\\n	    	warnings	.	warn	(	'`rank` is deprecated; use the `ndim` functi/;"	f
rank	data/data_raw/train.py	/^utf-8	def	rank	(	obj	)	:	\\n	    	warnings	.	warn	(	'`rank` is deprecated; use the `ndim` functi/;"	f
raw_req	data/bpe_corpus_raw/train.py	/^utf-8	def	install_as_egg	(	self	,	destination_eggdir	)	:	\\n	    	with	zipfile	.	ZipFile	(	self	/;"	f	function:install_as_egg.get_metadata	file:
raw_req	data/data_raw/train.py	/^utf-8	def	install_as_egg	(	self	,	destination_eggdir	)	:	\\n	    	with	zipfile	.	ZipFile	(	self	/;"	f	function:install_as_egg.get_metadata	file:
raw_text	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	raw_text	(	self	)	:	\\n	    	return	self	.	_raw_text	\\n		$/;"	f
raw_text	data/data_raw/train.py	/^utf-8	@	property	\\n	def	raw_text	(	self	)	:	\\n	    	return	self	.	_raw_text	\\n		$/;"	f
rawq_getchar	data/bpe_corpus_raw/train.py	/^utf-8	def	rawq_getchar	(	self	)	:	\\n	    	if	not	self	.	rawq	:	\\n	        	self	.	fill_rawq	(	/;"	f
rawq_getchar	data/data_raw/train.py	/^utf-8	def	rawq_getchar	(	self	)	:	\\n	    	if	not	self	.	rawq	:	\\n	        	self	.	fill_rawq	(	/;"	f
rc	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	rc	(	self	)	:	\\n	    	return	self	.	exit_status	\\n		$/;"	f
rc	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	rc	(	self	)	:	\\n	    	return	self	.	exit_status	\\n		$/;"	f
re_pytokens	data/bpe_corpus_raw/train.py	/^utf-8	@	lazy_attribute	\\n	def	re_pytokens	(	cls	)	:	\\n	    	return	re	.	compile	(	\\n	"""\\n  /;"	f
re_pytokens	data/data_raw/train.py	/^utf-8	@	lazy_attribute	\\n	def	re_pytokens	(	cls	)	:	\\n	    	return	re	.	compile	(	\\n	"""\\n  /;"	f
read	data/bpe_corpus_raw/train.py	/^utf-8	def	read	(	self	,	amt	=	None	,	decode_content	=	None	,	cache_content	=	False	)	:	\\n	    	/;"	f
read	data/bpe_corpus_raw/valid.py	/^utf-8	def	read	(	self	,	filepath	)	:	\\n	    	fp	=	codecs	.	open	(	filepath	,	'r'	,	encoding	=	'/;"	f
read	data/data_raw/train.py	/^utf-8	def	read	(	self	,	amt	=	None	,	decode_content	=	None	,	cache_content	=	False	)	:	\\n	    	/;"	f
read	data/data_raw/valid.py	/^utf-8	def	read	(	self	,	filepath	)	:	\\n	    	fp	=	codecs	.	open	(	filepath	,	'r'	,	encoding	=	'/;"	f
read1	data/bpe_corpus_raw/test.py	/^utf-8	def	read1	(	self	,	size	=	None	)	:	\\n	    	self	.	_unsupported	(	'read1'	)	\\n		$/;"	f
read1	data/bpe_corpus_raw/valid.py	/^utf-8	def	read1	(	self	,	n	)	:	\\n	    	return	self	.	read	(	n	)	\\n		$/;"	f
read1	data/data_raw/test.py	/^utf-8	def	read1	(	self	,	size	=	None	)	:	\\n	    	self	.	_unsupported	(	'read1'	)	\\n		$/;"	f
read1	data/data_raw/valid.py	/^utf-8	def	read1	(	self	,	n	)	:	\\n	    	return	self	.	read	(	n	)	\\n		$/;"	f
read_and_decode	data/bpe_corpus_raw/valid.py	/^utf-8	def	read_and_decode	(	filename	,	is_train	=	None	)	:	\\n	    	filename_queue	=	tf	.	train	/;"	f
read_and_decode	data/data_raw/valid.py	/^utf-8	def	read_and_decode	(	filename	,	is_train	=	None	)	:	\\n	    	filename_queue	=	tf	.	train	/;"	f
read_batch_features	data/bpe_corpus_raw/valid.py	/^utf-8	def	read_batch_features	(	file_pattern	,	batch_size	,	features	,	reader	,	\\n	reader_args	/;"	f
read_batch_features	data/data_raw/valid.py	/^utf-8	def	read_batch_features	(	file_pattern	,	batch_size	,	features	,	reader	,	\\n	reader_args	/;"	f
read_configuration	data/bpe_corpus_raw/valid.py	/^utf-8	def	read_configuration	(	self	)	->	'JobLocation'	:	\\n	    	out	=	self	.	exec_check_output/;"	f
read_configuration	data/data_raw/valid.py	/^utf-8	def	read_configuration	(	self	)	->	'JobLocation'	:	\\n	    	out	=	self	.	exec_check_output/;"	f
read_input_group	data/bpe_corpus_raw/valid.py	/^utf-8	def	read_input_group	(	self	,	**	kwargs	)	:	\\n	    	root	=	self	.	_tmp_file	(	)	\\n	new_r/;"	f
read_input_group	data/data_raw/valid.py	/^utf-8	def	read_input_group	(	self	,	**	kwargs	)	:	\\n	    	root	=	self	.	_tmp_file	(	)	\\n	new_r/;"	f
read_pdb	data/bpe_corpus_raw/valid.py	/^utf-8	def	read_pdb	(	f	,	assign_ccd_bonds	=	True	)	:	\\n	    	assemblies	=	pdb	.	get_pdb_assembl/;"	f
read_pdb	data/data_raw/valid.py	/^utf-8	def	read_pdb	(	f	,	assign_ccd_bonds	=	True	)	:	\\n	    	assemblies	=	pdb	.	get_pdb_assembl/;"	f
read_region	data/bpe_corpus_raw/valid.py	/^utf-8	def	read_region	(	self	,	location	,	level	,	size	)	:	\\n	    	return	lowlevel	.	read_regio/;"	f
read_region	data/data_raw/valid.py	/^utf-8	def	read_region	(	self	,	location	,	level	,	size	)	:	\\n	    	return	lowlevel	.	read_regio/;"	f
read_request_headers	data/bpe_corpus_raw/valid.py	/^utf-8	def	read_request_headers	(	self	)	:	\\n	    	try	:	\\n	        	read_headers	(	self	.	rfil/;"	f
read_request_headers	data/data_raw/valid.py	/^utf-8	def	read_request_headers	(	self	)	:	\\n	    	try	:	\\n	        	read_headers	(	self	.	rfil/;"	f
read_stringnl	data/bpe_corpus_raw/valid.py	/^utf-8	def	read_stringnl	(	f	,	decode	=	True	,	stripquotes	=	True	)	:	\\n	    	data	=	f	.	readlin/;"	f
read_stringnl	data/data_raw/valid.py	/^utf-8	def	read_stringnl	(	f	,	decode	=	True	,	stripquotes	=	True	)	:	\\n	    	data	=	f	.	readlin/;"	f
read_timeout	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	read_timeout	(	self	)	:	\\n	    	if	(	self	.	total	is	not	None	and	self/;"	f
read_timeout	data/data_raw/train.py	/^utf-8	@	property	\\n	def	read_timeout	(	self	)	:	\\n	    	if	(	self	.	total	is	not	None	and	self/;"	f
reader	data/bpe_corpus_raw/train.py	/^utf-8	def	reader	(	self	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
reader	data/data_raw/train.py	/^utf-8	def	reader	(	self	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
readline	data/bpe_corpus_raw/valid.py	/^utf-8	@	coroutine	\\n	def	readline	(	self	)	:	\\n	    	sep	=	b'\\\\n'	\\n	seplen	=	len	(	sep	)	\\/;"	f
readline	data/bpe_corpus_raw/valid.py	/^utf-8	def	readline	(	self	,	size	=	-	1	)	:	\\n	    	if	size	==	0	:	\\n	        	return	self	.	_e/;"	f
readline	data/data_raw/valid.py	/^utf-8	@	coroutine	\\n	def	readline	(	self	)	:	\\n	    	sep	=	b'\\\\n'	\\n	seplen	=	len	(	sep	)	\\/;"	f
readline	data/data_raw/valid.py	/^utf-8	def	readline	(	self	,	size	=	-	1	)	:	\\n	    	if	size	==	0	:	\\n	        	return	self	.	_e/;"	f
readlines	data/bpe_corpus_raw/train.py	/^utf-8	def	readlines	(	self	,	size	=	None	)	:	\\n	    	last_pos	=	self	.	_pos	\\n	result	=	[	]	\\/;"	f
readlines	data/data_raw/train.py	/^utf-8	def	readlines	(	self	,	size	=	None	)	:	\\n	    	last_pos	=	self	.	_pos	\\n	result	=	[	]	\\/;"	f
ready	data/bpe_corpus_raw/test.py	/^utf-8	def	ready	(	self	)	:	\\n	    	return	True	\\n		$/;"	f
ready	data/data_raw/test.py	/^utf-8	def	ready	(	self	)	:	\\n	    	return	True	\\n		$/;"	f
reattach_inner_anchors	data/bpe_corpus_raw/train.py	/^utf-8	def	reattach_inner_anchors	(	attachments	,	sentence	)	:	\\n	    	output	=	[	]	\\n	for	(	A	/;"	f
reattach_inner_anchors	data/data_raw/train.py	/^utf-8	def	reattach_inner_anchors	(	attachments	,	sentence	)	:	\\n	    	output	=	[	]	\\n	for	(	A	/;"	f
receive	data/bpe_corpus_raw/valid.py	/^utf-8	def	testCommentSignals	(	self	)	:	\\n	\\n	    	def	receive	(	sender	,	**	kwargs	)	:	\\n	  /;"	f	function:testCommentSignals	file:
receive	data/data_raw/valid.py	/^utf-8	def	testCommentSignals	(	self	)	:	\\n	\\n	    	def	receive	(	sender	,	**	kwargs	)	:	\\n	  /;"	f	function:testCommentSignals	file:
receiver	data/bpe_corpus_raw/train.py	/^utf-8	def	receiver	(	self	)	:	\\n	    	utf8validator	=	Utf8Validator	(	)	\\n	running	=	True	\\n	/;"	f
receiver	data/data_raw/train.py	/^utf-8	def	receiver	(	self	)	:	\\n	    	utf8validator	=	Utf8Validator	(	)	\\n	running	=	True	\\n	/;"	f
recode	data/bpe_corpus_raw/valid.py	/^utf-8	def	recode	(	data	,	recode_table	,	na_value	)	:	\\n	    	newdata	=	rmm	.	device_array_like/;"	f
recode	data/data_raw/valid.py	/^utf-8	def	recode	(	data	,	recode_table	,	na_value	)	:	\\n	    	newdata	=	rmm	.	device_array_like/;"	f
recommendProducts	data/bpe_corpus_raw/valid.py	/^utf-8	@	since	(	'1.4.0'	)	\\n	def	recommendProducts	(	self	,	user	,	num	)	:	\\n	    	return	list/;"	f
recommendProducts	data/data_raw/valid.py	/^utf-8	@	since	(	'1.4.0'	)	\\n	def	recommendProducts	(	self	,	user	,	num	)	:	\\n	    	return	list/;"	f
record_read_permission_factory	data/bpe_corpus_raw/valid.py	/^utf-8	def	record_read_permission_factory	(	record	=	None	)	:	\\n	    	return	record_permission_f/;"	f
record_read_permission_factory	data/data_raw/valid.py	/^utf-8	def	record_read_permission_factory	(	record	=	None	)	:	\\n	    	return	record_permission_f/;"	f
recover_site_configuration_snapshot_slot	data/bpe_corpus_raw/valid.py	/^utf-8	def	recover_site_configuration_snapshot_slot	(	self	,	resource_group_name	,	\\n	name	,	sna/;"	f
recover_site_configuration_snapshot_slot	data/data_raw/valid.py	/^utf-8	def	recover_site_configuration_snapshot_slot	(	self	,	resource_group_name	,	\\n	name	,	sna/;"	f
recursive_exclude	data/bpe_corpus_raw/valid.py	/^utf-8	def	recursive_exclude	(	self	,	dir	,	pattern	)	:	\\n	    	match	=	translate_pattern	(	os	./;"	f
recursive_exclude	data/data_raw/valid.py	/^utf-8	def	recursive_exclude	(	self	,	dir	,	pattern	)	:	\\n	    	match	=	translate_pattern	(	os	./;"	f
recursive_feature_array	data/bpe_corpus_raw/valid.py	/^utf-8	def	recursive_feature_array	(	G	,	func	,	n	)	:	\\n	    	attr_name	=	'_rolx_'	+	func	.	__na/;"	f
recursive_feature_array	data/data_raw/valid.py	/^utf-8	def	recursive_feature_array	(	G	,	func	,	n	)	:	\\n	    	attr_name	=	'_rolx_'	+	func	.	__na/;"	f
recursive_glob	data/bpe_corpus_raw/valid.py	/^utf-8	def	recursive_glob	(	src_folder	,	target_folder	)	:	\\n	    	l	=	[	]	\\n	print	(	src_folde/;"	f
recursive_glob	data/data_raw/valid.py	/^utf-8	def	recursive_glob	(	src_folder	,	target_folder	)	:	\\n	    	l	=	[	]	\\n	print	(	src_folde/;"	f
recv	data/bpe_corpus_raw/train.py	/^utf-8	def	recv	(	self	,	max_size	=	None	)	:	\\n	    	if	max_size	and	max_size	<	len	(	self	.	buf/;"	f
recv	data/bpe_corpus_raw/valid.py	/^utf-8	def	recv	(	self	,	bytes	)	:	\\n	    	buffer	=	bytearray	(	)	\\n	while	len	(	buffer	)	==	0	/;"	f
recv	data/bpe_corpus_raw/valid.py	/^utf-8	def	recv	(	self	,	input	)	:	\\n	    	return	lib	.	mlm_proto_recv	(	self	.	_as_parameter_	,/;"	f
recv	data/bpe_corpus_raw/valid.py	/^utf-8	def	recv	(	self	,	s	)	:	\\n	    	licPacket	=	LicPacket	(	)	\\n	s	.	readType	(	licPacket	)	/;"	f
recv	data/data_raw/train.py	/^utf-8	def	recv	(	self	,	max_size	=	None	)	:	\\n	    	if	max_size	and	max_size	<	len	(	self	.	buf/;"	f
recv	data/data_raw/valid.py	/^utf-8	def	recv	(	self	,	bytes	)	:	\\n	    	buffer	=	bytearray	(	)	\\n	while	len	(	buffer	)	==	0	/;"	f
recv	data/data_raw/valid.py	/^utf-8	def	recv	(	self	,	input	)	:	\\n	    	return	lib	.	mlm_proto_recv	(	self	.	_as_parameter_	,/;"	f
recv	data/data_raw/valid.py	/^utf-8	def	recv	(	self	,	s	)	:	\\n	    	licPacket	=	LicPacket	(	)	\\n	s	.	readType	(	licPacket	)	/;"	f
redirect	data/bpe_corpus_raw/train.py	/^utf-8	def	redirect	(	url	=	''	,	internal	=	True	,	debug	=	False	)	:	\\n	    	if	debug	:	\\n	    /;"	f
redirect	data/data_raw/train.py	/^utf-8	def	redirect	(	url	=	''	,	internal	=	True	,	debug	=	False	)	:	\\n	    	if	debug	:	\\n	    /;"	f
reduce_assoc	data/bpe_corpus_raw/train.py	/^utf-8	def	reduce_assoc	(	assoc_filename	,	embedding_filenames	,	output_filename	,	\\n	cutoff	=	3/;"	f
reduce_assoc	data/data_raw/train.py	/^utf-8	def	reduce_assoc	(	assoc_filename	,	embedding_filenames	,	output_filename	,	\\n	cutoff	=	3/;"	f
reduced_Vode_system	data/bpe_corpus_raw/test.py	/^utf-8	def	reduced_Vode_system	(	self	,	vars	)	:	\\n	    	gen	=	self	.	gen	\\n	name	=	'reduced_'	/;"	f
reduced_Vode_system	data/data_raw/test.py	/^utf-8	def	reduced_Vode_system	(	self	,	vars	)	:	\\n	    	gen	=	self	.	gen	\\n	name	=	'reduced_'	/;"	f
referenced	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	referenced	(	self	)	:	\\n	    	if	not	hasattr	(	self	,	'_referenced'	)	/;"	f
referenced	data/data_raw/train.py	/^utf-8	@	property	\\n	def	referenced	(	self	)	:	\\n	    	if	not	hasattr	(	self	,	'_referenced'	)	/;"	f
refine	data/bpe_corpus_raw/valid.py	/^utf-8	def	refine	(	video	,	embedded_subtitles	=	True	,	**	kwargs	)	:	\\n	    	if	not	video	.	exi/;"	f
refine	data/data_raw/valid.py	/^utf-8	def	refine	(	video	,	embedded_subtitles	=	True	,	**	kwargs	)	:	\\n	    	if	not	video	.	exi/;"	f
reflect	data/bpe_corpus_raw/valid.py	/^utf-8	def	reflect	(	self	,	bind	=	None	,	schema	=	None	,	views	=	False	,	only	=	None	,	\\n	exten/;"	f
reflect	data/data_raw/valid.py	/^utf-8	def	reflect	(	self	,	bind	=	None	,	schema	=	None	,	views	=	False	,	only	=	None	,	\\n	exten/;"	f
refs	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	refs	(	self	)	:	\\n	    	out_refs	=	IterableList	(	RemoteReference	.	_i/;"	f
refs	data/data_raw/train.py	/^utf-8	@	property	\\n	def	refs	(	self	)	:	\\n	    	out_refs	=	IterableList	(	RemoteReference	.	_i/;"	f
regenerate_next_generic_task_id	data/bpe_corpus_raw/train.py	/^utf-8	def	regenerate_next_generic_task_id	(	self	,	batch_account	:	str	,	service_url	:	\\n	str	,/;"	f
regenerate_next_generic_task_id	data/data_raw/train.py	/^utf-8	def	regenerate_next_generic_task_id	(	self	,	batch_account	:	str	,	service_url	:	\\n	str	,/;"	f
regex_opt	data/bpe_corpus_raw/test.py	/^utf-8	def	regex_opt	(	strings	,	prefix	=	''	,	suffix	=	''	)	:	\\n	    	strings	=	sorted	(	string/;"	f
regex_opt	data/data_raw/test.py	/^utf-8	def	regex_opt	(	strings	,	prefix	=	''	,	suffix	=	''	)	:	\\n	    	strings	=	sorted	(	string/;"	f
register	data/bpe_corpus_raw/train.py	/^utf-8	@	classmethod	\\n	def	register	(	cls	,	type	,	reduce	)	:	\\n	    	cls	.	_extra_reducers	[	/;"	f
register	data/bpe_corpus_raw/train.py	/^utf-8	def	register	(	self	,	new_reg	=	None	)	:	\\n	    	new_reg	=	messages	.	NewRegistration	(	)/;"	f
register	data/bpe_corpus_raw/train.py	/^utf-8	def	register	(	self	,	obj	,	resource	)	:	\\n	\\n	    	def	callback	(	ref	)	:	\\n	        	/;"	f
register	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	register_binary_op	(	cls	,	series_method_name	)	:	\\n	\\n	    	def	r/;"	f	function:register_binary_op	file:
register	data/bpe_corpus_raw/valid.py	/^utf-8	def	register	(	screen	,	palette	)	:	\\n	    	screen	.	set_terminal_properties	(	colors	=	p/;"	f
register	data/bpe_corpus_raw/valid.py	/^utf-8	def	register	(	self	,	connection	,	alias	=	None	)	:	\\n	    	self	.	current	=	connection	\\/;"	f
register	data/bpe_corpus_raw/valid.py	/^utf-8	def	register	(	self	,	model	,	registry_class	=	None	)	:	\\n	    	if	not	registry_class	:	\\/;"	f
register	data/bpe_corpus_raw/valid.py	/^utf-8	def	register	(	self	,	observer	,	directories	)	:	\\n	    	for	dirname	in	directories	:	\\n/;"	f
register	data/bpe_corpus_raw/valid.py	/^utf-8	def	register	(	self	,	wait	,	enable_availability_zone	,	timeout	)	:	\\n	    	for	lb	in	sel/;"	f
register	data/data_raw/train.py	/^utf-8	@	classmethod	\\n	def	register	(	cls	,	type	,	reduce	)	:	\\n	    	cls	.	_extra_reducers	[	/;"	f
register	data/data_raw/train.py	/^utf-8	def	register	(	self	,	new_reg	=	None	)	:	\\n	    	new_reg	=	messages	.	NewRegistration	(	)/;"	f
register	data/data_raw/train.py	/^utf-8	def	register	(	self	,	obj	,	resource	)	:	\\n	\\n	    	def	callback	(	ref	)	:	\\n	        	/;"	f
register	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	register_binary_op	(	cls	,	series_method_name	)	:	\\n	\\n	    	def	r/;"	f	function:register_binary_op	file:
register	data/data_raw/valid.py	/^utf-8	def	register	(	screen	,	palette	)	:	\\n	    	screen	.	set_terminal_properties	(	colors	=	p/;"	f
register	data/data_raw/valid.py	/^utf-8	def	register	(	self	,	connection	,	alias	=	None	)	:	\\n	    	self	.	current	=	connection	\\/;"	f
register	data/data_raw/valid.py	/^utf-8	def	register	(	self	,	model	,	registry_class	=	None	)	:	\\n	    	if	not	registry_class	:	\\/;"	f
register	data/data_raw/valid.py	/^utf-8	def	register	(	self	,	observer	,	directories	)	:	\\n	    	for	dirname	in	directories	:	\\n/;"	f
register	data/data_raw/valid.py	/^utf-8	def	register	(	self	,	wait	,	enable_availability_zone	,	timeout	)	:	\\n	    	for	lb	in	sel/;"	f
registerCommandPlugin	data/bpe_corpus_raw/valid.py	/^utf-8	def	registerCommandPlugin	(	self	,	name	,	displayName	,	callback	,	description	=	''	)	:	\\/;"	f
registerCommandPlugin	data/data_raw/valid.py	/^utf-8	def	registerCommandPlugin	(	self	,	name	,	displayName	,	callback	,	description	=	''	)	:	\\/;"	f
registerUsageMessage	data/bpe_corpus_raw/valid.py	/^utf-8	def	registerUsageMessage	(	)	:	\\n	    	usageMessage	=	'  DIRAC %s\\\\n'	%	version	\\n	usa/;"	f
registerUsageMessage	data/data_raw/valid.py	/^utf-8	def	registerUsageMessage	(	)	:	\\n	    	usageMessage	=	'  DIRAC %s\\\\n'	%	version	\\n	usa/;"	f
register_binary_op	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	register_binary_op	(	cls	,	series_method_name	)	:	\\n	\\n	    	def	r/;"	f
register_binary_op	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	register_binary_op	(	cls	,	series_method_name	)	:	\\n	\\n	    	def	r/;"	f
register_commands	data/bpe_corpus_raw/train.py	/^utf-8	def	register_commands	(	subparsers	,	context	)	:	\\n	    	defsrctree	=	standard	.	get_defa/;"	f
register_commands	data/data_raw/train.py	/^utf-8	def	register_commands	(	subparsers	,	context	)	:	\\n	    	defsrctree	=	standard	.	get_defa/;"	f
register_error_handler	data/bpe_corpus_raw/valid.py	/^utf-8	def	register_error_handler	(	self	,	code_or_exception	,	f	)	:	\\n	    	self	.	_register_er/;"	f
register_error_handler	data/data_raw/valid.py	/^utf-8	def	register_error_handler	(	self	,	code_or_exception	,	f	)	:	\\n	    	self	.	_register_er/;"	f
register_surrogateescape	data/bpe_corpus_raw/train.py	/^utf-8	def	register_surrogateescape	(	)	:	\\n	    	if	utils	.	PY3	:	\\n	        	return	\\n		try	/;"	f
register_surrogateescape	data/data_raw/train.py	/^utf-8	def	register_surrogateescape	(	)	:	\\n	    	if	utils	.	PY3	:	\\n	        	return	\\n		try	/;"	f
registered	data/bpe_corpus_raw/train.py	/^utf-8	def	registered	(	required	,	provided	,	name	=	_BLANK	)	:	\\n	$/;"	f
registered	data/data_raw/train.py	/^utf-8	def	registered	(	required	,	provided	,	name	=	_BLANK	)	:	\\n	$/;"	f
regsort	data/bpe_corpus_raw/train.py	/^utf-8	def	regsort	(	in_out	,	all_regs	,	tmp	=	None	,	xchg	=	True	,	randomize	=	None	)	:	\\n	    /;"	f
regsort	data/data_raw/train.py	/^utf-8	def	regsort	(	in_out	,	all_regs	,	tmp	=	None	,	xchg	=	True	,	randomize	=	None	)	:	\\n	    /;"	f
reind_proc	data/bpe_corpus_raw/train.py	/^utf-8	def	reind_proc	(	self	,	inputstring	,	**	kwargs	)	:	\\n	    	out	=	[	]	\\n	level	=	0	\\n	f/;"	f
reind_proc	data/data_raw/train.py	/^utf-8	def	reind_proc	(	self	,	inputstring	,	**	kwargs	)	:	\\n	    	out	=	[	]	\\n	level	=	0	\\n	f/;"	f
reindex_indexer	data/bpe_corpus_raw/test.py	/^utf-8	def	reindex_indexer	(	self	,	new_axis	,	indexer	,	axis	,	fill_value	=	None	,	\\n	allow_dup/;"	f
reindex_indexer	data/data_raw/test.py	/^utf-8	def	reindex_indexer	(	self	,	new_axis	,	indexer	,	axis	,	fill_value	=	None	,	\\n	allow_dup/;"	f
relaxed_value_for_var	data/bpe_corpus_raw/train.py	/^utf-8	@	staticmethod	\\n	def	relaxed_value_for_var	(	value	,	var	)	:	\\n	    	assert	isinstance	/;"	f
relaxed_value_for_var	data/data_raw/train.py	/^utf-8	@	staticmethod	\\n	def	relaxed_value_for_var	(	value	,	var	)	:	\\n	    	assert	isinstance	/;"	f
release	data/bpe_corpus_raw/train.py	/^utf-8	def	release	(	self	)	:	\\n	    	if	not	self	.	locked_status	:	\\n	        	raise	error	\\n/;"	f
release	data/data_raw/train.py	/^utf-8	def	release	(	self	)	:	\\n	    	if	not	self	.	locked_status	:	\\n	        	raise	error	\\n/;"	f
release_memory	data/bpe_corpus_raw/valid.py	/^utf-8	def	release_memory	(	self	)	:	\\n	    	if	self	.	_outputs	is	not	None	:	\\n	        	for	d/;"	f
release_memory	data/data_raw/valid.py	/^utf-8	def	release_memory	(	self	)	:	\\n	    	if	self	.	_outputs	is	not	None	:	\\n	        	for	d/;"	f
reload_doc	data/bpe_corpus_raw/train.py	/^utf-8	@	click	.	command	(	'reload-doc'	)	\\n	@	click	.	argument	(	'module'	)	\\n	@	click	.	argum/;"	f
reload_doc	data/data_raw/train.py	/^utf-8	@	click	.	command	(	'reload-doc'	)	\\n	@	click	.	argument	(	'module'	)	\\n	@	click	.	argum/;"	f
remote_is_block_blob	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	remote_is_block_blob	(	self	)	:	\\n	    	return	self	.	dst_entity	.	mod/;"	f
remote_is_block_blob	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	remote_is_block_blob	(	self	)	:	\\n	    	return	self	.	dst_entity	.	mod/;"	f
remove	data/bpe_corpus_raw/train.py	/^utf-8	def	remove	(	self	,	dist	)	:	\\n	    	self	.	_distmap	[	dist	.	key	]	.	remove	(	dist	)	\\n/;"	f
remove	data/data_raw/train.py	/^utf-8	def	remove	(	self	,	dist	)	:	\\n	    	self	.	_distmap	[	dist	.	key	]	.	remove	(	dist	)	\\n/;"	f
removeFromDatabaseByUrl	data/bpe_corpus_raw/train.py	/^utf-8	def	removeFromDatabaseByUrl	(	self	,	url	,	actionType	=	'removeSongByUrl'	)	:	\\n	    	if	/;"	f
removeFromDatabaseByUrl	data/data_raw/train.py	/^utf-8	def	removeFromDatabaseByUrl	(	self	,	url	,	actionType	=	'removeSongByUrl'	)	:	\\n	    	if	/;"	f
removeLinks	data/bpe_corpus_raw/valid.py	/^utf-8	def	removeLinks	(	self	)	:	\\n	    	pages	=	self	.	getObject	(	self	.	_pages	)	[	'\/Kids'	/;"	f
removeLinks	data/data_raw/valid.py	/^utf-8	def	removeLinks	(	self	)	:	\\n	    	pages	=	self	.	getObject	(	self	.	_pages	)	[	'\/Kids'	/;"	f
removeStreamStatusClient	data/bpe_corpus_raw/train.py	/^utf-8	def	removeStreamStatusClient	(	self	,	streamObj	)	:	\\n	    	if	hasattr	(	streamObj	,	'str/;"	f
removeStreamStatusClient	data/data_raw/train.py	/^utf-8	def	removeStreamStatusClient	(	self	,	streamObj	)	:	\\n	    	if	hasattr	(	streamObj	,	'str/;"	f
removeTick	data/bpe_corpus_raw/valid.py	/^utf-8	def	removeTick	(	self	,	tick	)	:	\\n	    	del	self	.	ticks	[	tick	]	\\n	tick	.	setParentIt/;"	f
removeTick	data/data_raw/valid.py	/^utf-8	def	removeTick	(	self	,	tick	)	:	\\n	    	del	self	.	ticks	[	tick	]	\\n	tick	.	setParentIt/;"	f
remove_admin	data/bpe_corpus_raw/test.py	/^utf-8	def	remove_admin	(	self	,	account	)	:	\\n	    	from	modoboa	.	lib	.	permissions	import	ung/;"	f
remove_admin	data/data_raw/test.py	/^utf-8	def	remove_admin	(	self	,	account	)	:	\\n	    	from	modoboa	.	lib	.	permissions	import	ung/;"	f
remove_child	data/bpe_corpus_raw/train.py	/^utf-8	def	remove_child	(	self	,	parent_id	:	str	,	child_id	:	str	)	->	dict	:	\\n	    	r	=	self	./;"	f
remove_child	data/data_raw/train.py	/^utf-8	def	remove_child	(	self	,	parent_id	:	str	,	child_id	:	str	)	->	dict	:	\\n	    	r	=	self	./;"	f
remove_distribution_point	data/bpe_corpus_raw/valid.py	/^utf-8	def	remove_distribution_point	(	self	,	index	)	:	\\n	    	self	.	_children	.	pop	(	index	)/;"	f
remove_distribution_point	data/data_raw/valid.py	/^utf-8	def	remove_distribution_point	(	self	,	index	)	:	\\n	    	self	.	_children	.	pop	(	index	)/;"	f
remove_group_name	data/bpe_corpus_raw/valid.py	/^utf-8	def	remove_group_name	(	self	,	inc_group_name	)	:	\\n	    	try	:	\\n	        	self	.	group/;"	f
remove_group_name	data/data_raw/valid.py	/^utf-8	def	remove_group_name	(	self	,	inc_group_name	)	:	\\n	    	try	:	\\n	        	self	.	group/;"	f
remove_if_exists	data/bpe_corpus_raw/train.py	/^utf-8	def	remove_if_exists	(	path	)	:	\\n	    	if	path	is	not	None	and	os	.	path	.	exists	(	path/;"	f
remove_if_exists	data/data_raw/train.py	/^utf-8	def	remove_if_exists	(	path	)	:	\\n	    	if	path	is	not	None	and	os	.	path	.	exists	(	path/;"	f
remove_move	data/bpe_corpus_raw/valid.py	/^utf-8	def	remove_move	(	name	)	:	\\n	    	try	:	\\n	        	delattr	(	_MovedItems	,	name	)	\\n	/;"	f
remove_move	data/data_raw/valid.py	/^utf-8	def	remove_move	(	name	)	:	\\n	    	try	:	\\n	        	delattr	(	_MovedItems	,	name	)	\\n	/;"	f
remove_page	data/bpe_corpus_raw/valid.py	/^utf-8	def	remove_page	(	self	,	page_name	)	:	\\n	    	if	page_name	not	in	self	.	pages	:	\\n	   /;"	f
remove_page	data/data_raw/valid.py	/^utf-8	def	remove_page	(	self	,	page_name	)	:	\\n	    	if	page_name	not	in	self	.	pages	:	\\n	   /;"	f
remove_subject	data/bpe_corpus_raw/valid.py	/^utf-8	def	remove_subject	(	self	,	inc_subject	)	:	\\n	    	try	:	\\n	        	self	.	subjects	.	/;"	f
remove_subject	data/data_raw/valid.py	/^utf-8	def	remove_subject	(	self	,	inc_subject	)	:	\\n	    	try	:	\\n	        	self	.	subjects	.	/;"	f
remove_terminal_callbacks	data/bpe_corpus_raw/train.py	/^utf-8	def	remove_terminal_callbacks	(	self	,	multiplex	,	callback_id	)	:	\\n	    	import	termina/;"	f
remove_terminal_callbacks	data/data_raw/train.py	/^utf-8	def	remove_terminal_callbacks	(	self	,	multiplex	,	callback_id	)	:	\\n	    	import	termina/;"	f
remove_thread	data/bpe_corpus_raw/valid.py	/^utf-8	def	remove_thread	(	self	,	ketype	,	kti	)	:	\\n	    	if	ketype	==	TERMINATE_THREAD	:	\\n	 /;"	f
remove_thread	data/data_raw/valid.py	/^utf-8	def	remove_thread	(	self	,	ketype	,	kti	)	:	\\n	    	if	ketype	==	TERMINATE_THREAD	:	\\n	 /;"	f
remove_user	data/bpe_corpus_raw/train.py	/^utf-8	def	remove_user	(	username	)	:	\\n	    	instance	=	adobe_api	.	AdobeAPIObject	(	username	)/;"	f
remove_user	data/data_raw/train.py	/^utf-8	def	remove_user	(	username	)	:	\\n	    	instance	=	adobe_api	.	AdobeAPIObject	(	username	)/;"	f
remove_user_from_group	data/bpe_corpus_raw/valid.py	/^utf-8	def	remove_user_from_group	(	self	,	group_name	,	user_name	)	:	\\n	    	params	=	{	'GroupN/;"	f
remove_user_from_group	data/data_raw/valid.py	/^utf-8	def	remove_user_from_group	(	self	,	group_name	,	user_name	)	:	\\n	    	params	=	{	'GroupN/;"	f
remove_verb	data/bpe_corpus_raw/valid.py	/^utf-8	def	remove_verb	(	self	,	inc_verb	)	:	\\n	    	try	:	\\n	        	self	.	verbs	.	remove	(	/;"	f
remove_verb	data/data_raw/valid.py	/^utf-8	def	remove_verb	(	self	,	inc_verb	)	:	\\n	    	try	:	\\n	        	self	.	verbs	.	remove	(	/;"	f
remove_youngest_descendant_nodes_with_specs	data/bpe_corpus_raw/valid.py	/^utf-8	def	remove_youngest_descendant_nodes_with_specs	(	self	)	:	\\n	    	graph	=	self	.	graph	\\/;"	f
remove_youngest_descendant_nodes_with_specs	data/data_raw/valid.py	/^utf-8	def	remove_youngest_descendant_nodes_with_specs	(	self	)	:	\\n	    	graph	=	self	.	graph	\\/;"	f
removes_return	data/bpe_corpus_raw/test.py	/^utf-8	@	staticmethod	\\n	def	removes_return	(	)	:	\\n	\\n	    	def	decorator	(	fn	)	:	\\n	      /;"	f
removes_return	data/data_raw/test.py	/^utf-8	@	staticmethod	\\n	def	removes_return	(	)	:	\\n	\\n	    	def	decorator	(	fn	)	:	\\n	      /;"	f
rename	data/bpe_corpus_raw/train.py	/^utf-8	def	rename	(	config	,	unused_plugins	)	:	\\n	    	cert_manager	.	rename_lineage	(	config	)/;"	f
rename	data/bpe_corpus_raw/valid.py	/^utf-8	def	rename	(	i	)	:	\\n	    	return	ren	(	i	)	\\n		$/;"	f
rename	data/data_raw/train.py	/^utf-8	def	rename	(	config	,	unused_plugins	)	:	\\n	    	cert_manager	.	rename_lineage	(	config	)/;"	f
rename	data/data_raw/valid.py	/^utf-8	def	rename	(	i	)	:	\\n	    	return	ren	(	i	)	\\n		$/;"	f
render	data/bpe_corpus_raw/train.py	/^utf-8	def	render	(	pieces	,	style	)	:	\\n	    	if	pieces	[	'error'	]	:	\\n	        	return	{	've/;"	f
render	data/bpe_corpus_raw/valid.py	/^utf-8	def	render	(	self	)	:	\\n	    	if	self	.	calcbounds	is	None	:	\\n	        	self	.	getBound/;"	f
render	data/bpe_corpus_raw/valid.py	/^utf-8	def	render	(	self	)	:	\\n	    	retval	=	self	\\n	if	not	self	.	_is_rendered	:	\\n	        /;"	f
render	data/data_raw/train.py	/^utf-8	def	render	(	pieces	,	style	)	:	\\n	    	if	pieces	[	'error'	]	:	\\n	        	return	{	've/;"	f
render	data/data_raw/valid.py	/^utf-8	def	render	(	self	)	:	\\n	    	if	self	.	calcbounds	is	None	:	\\n	        	self	.	getBound/;"	f
render	data/data_raw/valid.py	/^utf-8	def	render	(	self	)	:	\\n	    	retval	=	self	\\n	if	not	self	.	_is_rendered	:	\\n	        /;"	f
render_data	data/bpe_corpus_raw/test.py	/^utf-8	def	render_data	(	self	,	state	,	review_request	)	:	\\n	    	people	=	review_request	.	tar/;"	f
render_data	data/data_raw/test.py	/^utf-8	def	render_data	(	self	,	state	,	review_request	)	:	\\n	    	people	=	review_request	.	tar/;"	f
render_done	data/bpe_corpus_raw/valid.py	/^utf-8	def	render_done	(	self	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
render_done	data/data_raw/valid.py	/^utf-8	def	render_done	(	self	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
render_git_describe	data/bpe_corpus_raw/valid.py	/^utf-8	def	render_git_describe	(	pieces	)	:	\\n	    	if	pieces	[	'closest-tag'	]	:	\\n	        	r/;"	f
render_git_describe	data/data_raw/valid.py	/^utf-8	def	render_git_describe	(	pieces	)	:	\\n	    	if	pieces	[	'closest-tag'	]	:	\\n	        	r/;"	f
render_git_describe_long	data/bpe_corpus_raw/valid.py	/^utf-8	def	render_git_describe_long	(	pieces	)	:	\\n	    	if	pieces	[	'closest-tag'	]	:	\\n	     /;"	f
render_git_describe_long	data/data_raw/valid.py	/^utf-8	def	render_git_describe_long	(	pieces	)	:	\\n	    	if	pieces	[	'closest-tag'	]	:	\\n	     /;"	f
render_headers	data/bpe_corpus_raw/valid.py	/^utf-8	def	render_headers	(	self	)	:	\\n	    	lines	=	[	]	\\n	sort_keys	=	[	'Content-Disposition'/;"	f
render_headers	data/data_raw/valid.py	/^utf-8	def	render_headers	(	self	)	:	\\n	    	lines	=	[	]	\\n	sort_keys	=	[	'Content-Disposition'/;"	f
render_literal_value	data/bpe_corpus_raw/train.py	/^utf-8	def	render_literal_value	(	self	,	value	,	type_	)	:	\\n	    	processor	=	type_	.	_cached_l/;"	f
render_literal_value	data/data_raw/train.py	/^utf-8	def	render_literal_value	(	self	,	value	,	type_	)	:	\\n	    	processor	=	type_	.	_cached_l/;"	f
render_output_pydot	data/bpe_corpus_raw/valid.py	/^utf-8	def	render_output_pydot	(	self	,	dotdata	,	**	kwargs	)	:	\\n	    	if	not	HAS_PYDOT	:	\\n	 /;"	f
render_output_pydot	data/data_raw/valid.py	/^utf-8	def	render_output_pydot	(	self	,	dotdata	,	**	kwargs	)	:	\\n	    	if	not	HAS_PYDOT	:	\\n	 /;"	f
render_pep440_pre	data/bpe_corpus_raw/valid.py	/^utf-8	def	render_pep440_pre	(	pieces	)	:	\\n	    	if	pieces	[	'closest-tag'	]	:	\\n	        	ren/;"	f
render_pep440_pre	data/data_raw/valid.py	/^utf-8	def	render_pep440_pre	(	pieces	)	:	\\n	    	if	pieces	[	'closest-tag'	]	:	\\n	        	ren/;"	f
render_source	data/bpe_corpus_raw/valid.py	/^utf-8	def	render_source	(	self	)	:	\\n	    	return	SOURCE_TABLE_HTML	%	'\\\\n'	.	join	(	line	.	r/;"	f
render_source	data/data_raw/valid.py	/^utf-8	def	render_source	(	self	)	:	\\n	    	return	SOURCE_TABLE_HTML	%	'\\\\n'	.	join	(	line	.	r/;"	f
render_template	data/bpe_corpus_raw/train.py	/^utf-8	def	render_template	(	self	,	request	,	form	,	previous_fields	,	step	,	context	=	None	)	:	/;"	f
render_template	data/data_raw/train.py	/^utf-8	def	render_template	(	self	,	request	,	form	,	previous_fields	,	step	,	context	=	None	)	:	/;"	f
reorder_encoder_out	models/seq2seq.py	/^    def reorder_encoder_out(self, encoder_out, new_order):$/;"	m	class:Seq2SeqEncoder
reorder_incremental_state	models/seq2seq.py	/^    def reorder_incremental_state(self, incremental_state, new_order):$/;"	m	class:Seq2SeqDecoder
repeat_columns	data/bpe_corpus_raw/train.py	/^utf-8	@	convert_column_args	\\n	def	repeat_columns	(	self	,	first_col	,	last_col	=	None	)	:	\\n	/;"	f
repeat_columns	data/data_raw/train.py	/^utf-8	@	convert_column_args	\\n	def	repeat_columns	(	self	,	first_col	,	last_col	=	None	)	:	\\n	/;"	f
repeat_op	data/bpe_corpus_raw/valid.py	/^utf-8	def	repeat_op	(	repetitions	,	inputs	,	op	,	*	args	,	**	kwargs	)	:	\\n	    	scope	=	kwargs/;"	f
repeat_op	data/data_raw/valid.py	/^utf-8	def	repeat_op	(	repetitions	,	inputs	,	op	,	*	args	,	**	kwargs	)	:	\\n	    	scope	=	kwargs/;"	f
repeat_value	data/bpe_corpus_raw/valid.py	/^utf-8	def	repeat_value	(	value	:	Any	=	None	,	repeat_count	:	int	=	None	)	->	Observable	:	\\n	  /;"	f
repeat_value	data/data_raw/valid.py	/^utf-8	def	repeat_value	(	value	:	Any	=	None	,	repeat_count	:	int	=	None	)	->	Observable	:	\\n	  /;"	f
replace_child	data/bpe_corpus_raw/train.py	/^utf-8	def	replace_child	(	self	,	old_obj	,	new_obj	)	:	\\n	    	self	.	container	[	self	.	contai/;"	f
replace_child	data/data_raw/train.py	/^utf-8	def	replace_child	(	self	,	old_obj	,	new_obj	)	:	\\n	    	self	.	container	[	self	.	contai/;"	f
replace_partition_in_path	data/bpe_corpus_raw/valid.py	/^utf-8	def	replace_partition_in_path	(	path	,	part_power	)	:	\\n	    	path_components	=	path	.	sp/;"	f
replace_partition_in_path	data/data_raw/valid.py	/^utf-8	def	replace_partition_in_path	(	path	,	part_power	)	:	\\n	    	path_components	=	path	.	sp/;"	f
replace_traceback_format_tb	data/bpe_corpus_raw/valid.py	/^utf-8	def	replace_traceback_format_tb	(	)	:	\\n	    	import	traceback	\\n	traceback	.	format_tb	/;"	f
replace_traceback_format_tb	data/data_raw/valid.py	/^utf-8	def	replace_traceback_format_tb	(	)	:	\\n	    	import	traceback	\\n	traceback	.	format_tb	/;"	f
replicate	data/bpe_corpus_raw/test.py	/^utf-8	def	replicate	(	self	,	stream_name	,	token	)	:	\\n	    	if	stream_name	not	in	STREAMS_MAP	/;"	f
replicate	data/data_raw/test.py	/^utf-8	def	replicate	(	self	,	stream_name	,	token	)	:	\\n	    	if	stream_name	not	in	STREAMS_MAP	/;"	f
reply_handler	data/bpe_corpus_raw/valid.py	/^utf-8	def	reply_handler	(	self	,	payload	)	:	\\n	    	link	=	self	.	network	.	link_get	(	payload/;"	f
reply_handler	data/data_raw/valid.py	/^utf-8	def	reply_handler	(	self	,	payload	)	:	\\n	    	link	=	self	.	network	.	link_get	(	payload/;"	f
repo_df	data_utils/downloaded_repos.py	/^repo_df = pd.read_csv(".\/python_java_repos.csv")$/;"	v
repo_list	data_utils/get_repolist.py	/^    repo_list = pd.concat([repo_list, counts_df], axis=1)$/;"	v
repo_list	data_utils/get_repolist.py	/^repo_list: pd.DataFrame = pd.read_csv(".\/repolist.csv")$/;"	v
report	data/bpe_corpus_raw/train.py	/^utf-8	def	report	(	self	)	:	\\n	    	systemOS	=	''	\\n	systemARCH	=	0	\\n	self	.	detailedresults/;"	f
report	data/bpe_corpus_raw/valid.py	/^utf-8	def	report	(	self	,	align_bam	,	ref_file	,	gtf_file	,	is_paired	=	False	,	rrna_file	=	\\n	/;"	f
report	data/data_raw/train.py	/^utf-8	def	report	(	self	)	:	\\n	    	systemOS	=	''	\\n	systemARCH	=	0	\\n	self	.	detailedresults/;"	f
report	data/data_raw/valid.py	/^utf-8	def	report	(	self	,	align_bam	,	ref_file	,	gtf_file	,	is_paired	=	False	,	rrna_file	=	\\n	/;"	f
report_failure	data/bpe_corpus_raw/train.py	/^utf-8	@	require	(	[	'report'	,	'directory'	,	'clang'	,	'output_dir'	,	'language'	,	'file'	,	\\n	/;"	f
report_failure	data/data_raw/train.py	/^utf-8	@	require	(	[	'report'	,	'directory'	,	'clang'	,	'output_dir'	,	'language'	,	'file'	,	\\n	/;"	f
report_files	data/bpe_corpus_raw/train.py	/^utf-8	def	report_files	(	self	,	report_fn	,	morfs	,	config	,	directory	=	None	)	:	\\n	    	self	/;"	f
report_files	data/data_raw/train.py	/^utf-8	def	report_files	(	self	,	report_fn	,	morfs	,	config	,	directory	=	None	)	:	\\n	    	self	/;"	f
reposition_match	data/bpe_corpus_raw/valid.py	/^utf-8	def	reposition_match	(	self	,	line	,	col	,	m	,	vv	)	:	\\n	    	near	=	self	.	strip_quotes	/;"	f
reposition_match	data/data_raw/valid.py	/^utf-8	def	reposition_match	(	self	,	line	,	col	,	m	,	vv	)	:	\\n	    	near	=	self	.	strip_quotes	/;"	f
repr2to3	data/bpe_corpus_raw/train.py	/^utf-8	def	repr2to3	(	v	)	:	\\n	    	if	isinstance	(	v	,	six	.	string_types	)	:	\\n	        	qu	=/;"	f
repr2to3	data/data_raw/train.py	/^utf-8	def	repr2to3	(	v	)	:	\\n	    	if	isinstance	(	v	,	six	.	string_types	)	:	\\n	        	qu	=/;"	f
request	data/bpe_corpus_raw/valid.py	/^utf-8	def	request	(	self	,	verb	,	url	,	payload	=	None	,	multipart	=	None	)	:	\\n	    	raise	Not/;"	f
request	data/data_raw/valid.py	/^utf-8	def	request	(	self	,	verb	,	url	,	payload	=	None	,	multipart	=	None	)	:	\\n	    	raise	Not/;"	f
request_bulk_enroll	data/bpe_corpus_raw/test.py	/^utf-8	def	request_bulk_enroll	(	self	,	data	=	None	,	use_json	=	False	,	**	extra	)	:	\\n	    	co/;"	f
request_bulk_enroll	data/data_raw/test.py	/^utf-8	def	request_bulk_enroll	(	self	,	data	=	None	,	use_json	=	False	,	**	extra	)	:	\\n	    	co/;"	f
request_encode_url	data/bpe_corpus_raw/train.py	/^utf-8	def	request_encode_url	(	self	,	method	,	url	,	fields	=	None	,	headers	=	None	,	**	\\n	url/;"	f
request_encode_url	data/data_raw/train.py	/^utf-8	def	request_encode_url	(	self	,	method	,	url	,	fields	=	None	,	headers	=	None	,	**	\\n	url/;"	f
request_from_dict	data/bpe_corpus_raw/valid.py	/^utf-8	def	request_from_dict	(	d	,	spider	=	None	)	:	\\n	    	cb	=	d	[	'callback'	]	\\n	if	cb	and/;"	f
request_from_dict	data/data_raw/valid.py	/^utf-8	def	request_from_dict	(	d	,	spider	=	None	)	:	\\n	    	cb	=	d	[	'callback'	]	\\n	if	cb	and/;"	f
require_all	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	require_all	(	self	)	:	\\n	    	return	self	.	_config	.	get	(	'require_/;"	f
require_all	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	require_all	(	self	)	:	\\n	    	return	self	.	_config	.	get	(	'require_/;"	f
require_file	data/bpe_corpus_raw/valid.py	/^utf-8	def	add_task	(	name	,	timespec	,	user	,	command	,	environment	=	None	)	:	\\n	    	if	envir/;"	x	function:add_task	file:
require_file	data/data_raw/valid.py	/^utf-8	def	add_task	(	name	,	timespec	,	user	,	command	,	environment	=	None	)	:	\\n	    	if	envir/;"	x	function:add_task	file:
required_errors	data/bpe_corpus_raw/test.py	/^utf-8	@	property	\\n	def	required_errors	(	self	)	:	\\n	    	return	[	]	\\n		$/;"	f
required_errors	data/data_raw/test.py	/^utf-8	@	property	\\n	def	required_errors	(	self	)	:	\\n	    	return	[	]	\\n		$/;"	f
requires	data/bpe_corpus_raw/valid.py	/^utf-8	def	requires	(	*	requirements	,	**	opts	)	:	\\n	    	identity	=	opts	.	get	(	'identity'	)	/;"	f
requires	data/data_raw/valid.py	/^utf-8	def	requires	(	*	requirements	,	**	opts	)	:	\\n	    	identity	=	opts	.	get	(	'identity'	)	/;"	f
requires_older_graph_version	data/bpe_corpus_raw/valid.py	/^utf-8	def	requires_older_graph_version	(	name	=	None	)	:	\\n	    	result	=	_op_def_lib	.	apply_o/;"	f
requires_older_graph_version	data/data_raw/valid.py	/^utf-8	def	requires_older_graph_version	(	name	=	None	)	:	\\n	    	result	=	_op_def_lib	.	apply_o/;"	f
resample_v	data/bpe_corpus_raw/test.py	/^utf-8	def	resample_v	(	self	,	A	,	W	)	:	\\n	    	for	c1	in	range	(	self	.	C	)	:	\\n	        	for/;"	f
resample_v	data/data_raw/test.py	/^utf-8	def	resample_v	(	self	,	A	,	W	)	:	\\n	    	for	c1	in	range	(	self	.	C	)	:	\\n	        	for/;"	f
reset	data/bpe_corpus_raw/test.py	/^utf-8	def	reset	(	self	)	:	\\n	    	self	.	rawdata	=	''	\\n	self	.	lasttag	=	'???'	\\n	self	.	in/;"	f
reset	data/bpe_corpus_raw/test.py	/^utf-8	def	reset	(	self	)	:	\\n	    	try	:	\\n	        	for	metric	in	self	.	metrics	:	\\n	      /;"	f
reset	data/bpe_corpus_raw/train.py	/^utf-8	@	classmethod	\\n	def	reset	(	cls	)	:	\\n	    	cls	.	_exec_query_call_count	.	reset	(	)	\\/;"	f
reset	data/bpe_corpus_raw/valid.py	/^utf-8	def	reset	(	self	)	:	\\n	    	pass	\\n		$/;"	f
reset	data/bpe_corpus_raw/valid.py	/^utf-8	def	reset	(	self	)	:	\\n	    	response	=	self	.	_requester	.	request	(	'POST'	,	'courses\//;"	f
reset	data/bpe_corpus_raw/valid.py	/^utf-8	def	reset	(	self	)	:	\\n	    	self	.	_first_record_emitted	=	False	\\n		$/;"	f
reset	data/data_raw/test.py	/^utf-8	def	reset	(	self	)	:	\\n	    	self	.	rawdata	=	''	\\n	self	.	lasttag	=	'???'	\\n	self	.	in/;"	f
reset	data/data_raw/test.py	/^utf-8	def	reset	(	self	)	:	\\n	    	try	:	\\n	        	for	metric	in	self	.	metrics	:	\\n	      /;"	f
reset	data/data_raw/train.py	/^utf-8	@	classmethod	\\n	def	reset	(	cls	)	:	\\n	    	cls	.	_exec_query_call_count	.	reset	(	)	\\/;"	f
reset	data/data_raw/valid.py	/^utf-8	def	reset	(	self	)	:	\\n	    	pass	\\n		$/;"	f
reset	data/data_raw/valid.py	/^utf-8	def	reset	(	self	)	:	\\n	    	response	=	self	.	_requester	.	request	(	'POST'	,	'courses\//;"	f
reset	data/data_raw/valid.py	/^utf-8	def	reset	(	self	)	:	\\n	    	self	.	_first_record_emitted	=	False	\\n		$/;"	f
reset_elasticsearch	data/bpe_corpus_raw/valid.py	/^utf-8	def	reset_elasticsearch	(	self	)	:	\\n	    	print	(	\\n	"""\\nCleanup Elasticsearch databa/;"	f
reset_elasticsearch	data/data_raw/valid.py	/^utf-8	def	reset_elasticsearch	(	self	)	:	\\n	    	print	(	\\n	"""\\nCleanup Elasticsearch databa/;"	f
reset_password	data/bpe_corpus_raw/train.py	/^utf-8	@	csrf_exempt	\\n	@	logout_required	\\n	def	reset_password	(	request	,	data	=	None	,	redir/;"	f
reset_password	data/data_raw/train.py	/^utf-8	@	csrf_exempt	\\n	@	logout_required	\\n	def	reset_password	(	request	,	data	=	None	,	redir/;"	f
reset_state_for_orphaned_tasks	data/bpe_corpus_raw/valid.py	/^utf-8	@	provide_session	\\n	def	reset_state_for_orphaned_tasks	(	self	,	filter_by_dag_run	=	None/;"	f
reset_state_for_orphaned_tasks	data/data_raw/valid.py	/^utf-8	@	provide_session	\\n	def	reset_state_for_orphaned_tasks	(	self	,	filter_by_dag_run	=	None/;"	f
reshape_blob	data/bpe_corpus_raw/test.py	/^utf-8	def	reshape_blob	(	self	,	name	,	*	args	)	:	\\n	    	self	.	blobs	[	name	]	.	reshape	(	*	a/;"	f
reshape_blob	data/data_raw/test.py	/^utf-8	def	reshape_blob	(	self	,	name	,	*	args	)	:	\\n	    	self	.	blobs	[	name	]	.	reshape	(	*	a/;"	f
resize_short	data/bpe_corpus_raw/train.py	/^utf-8	def	resize_short	(	im	,	size	)	:	\\n	    	assert	_check_cv2	(	)	is	True	\\n	h	,	w	=	im	.	s/;"	f
resize_short	data/data_raw/train.py	/^utf-8	def	resize_short	(	im	,	size	)	:	\\n	    	assert	_check_cv2	(	)	is	True	\\n	h	,	w	=	im	.	s/;"	f
resnet_arg_scope	data/bpe_corpus_raw/valid.py	/^utf-8	@	deprecated_args	(	'2017-08-01'	,	\\n	'Pass is_training directly to the network instead o/;"	f
resnet_arg_scope	data/data_raw/valid.py	/^utf-8	@	deprecated_args	(	'2017-08-01'	,	\\n	'Pass is_training directly to the network instead o/;"	f
resnet_v1	data/bpe_corpus_raw/valid.py	/^utf-8	def	resnet_v1	(	inputs	,	blocks	,	num_classes	=	None	,	is_training	=	None	,	\\n	global_poo/;"	f
resnet_v1	data/data_raw/valid.py	/^utf-8	def	resnet_v1	(	inputs	,	blocks	,	num_classes	=	None	,	is_training	=	None	,	\\n	global_poo/;"	f
resolv	data/bpe_corpus_raw/valid.py	/^utf-8	def	resolv	(	host	)	:	\\n	    	host	=	host	.	lower	(	)	\\n	addr	=	host	\\n	if	HOST_RESOLV_/;"	f
resolv	data/data_raw/valid.py	/^utf-8	def	resolv	(	host	)	:	\\n	    	host	=	host	.	lower	(	)	\\n	addr	=	host	\\n	if	HOST_RESOLV_/;"	f
resolve	data/bpe_corpus_raw/train.py	/^utf-8	def	resolve	(	self	,	args	:	argparse	.	Namespace	)	:	\\n	    	for	suffix	in	self	.	suffix_/;"	f
resolve	data/data_raw/train.py	/^utf-8	def	resolve	(	self	,	args	:	argparse	.	Namespace	)	:	\\n	    	for	suffix	in	self	.	suffix_/;"	f
resolve_ambiguity	data/bpe_corpus_raw/valid.py	/^utf-8	def	resolve_ambiguity	(	all_tokens	,	seen_ts	)	:	\\n	    	for	parent	,	token	in	all_tokens/;"	f
resolve_ambiguity	data/data_raw/valid.py	/^utf-8	def	resolve_ambiguity	(	all_tokens	,	seen_ts	)	:	\\n	    	for	parent	,	token	in	all_tokens/;"	f
resolve_imaginary	data/bpe_corpus_raw/valid.py	/^utf-8	def	resolve_imaginary	(	dt	)	:	\\n	    	if	dt	.	tzinfo	is	not	None	and	not	datetime_exists/;"	f
resolve_imaginary	data/data_raw/valid.py	/^utf-8	def	resolve_imaginary	(	dt	)	:	\\n	    	if	dt	.	tzinfo	is	not	None	and	not	datetime_exists/;"	f
resolve_ipv4	data/bpe_corpus_raw/valid.py	/^utf-8	def	resolve_ipv4	(	name	,	flags	=	0	)	:	\\n	    	waiter	=	Waiter	(	)	\\n	core	.	dns_resolv/;"	f
resolve_ipv4	data/data_raw/valid.py	/^utf-8	def	resolve_ipv4	(	name	,	flags	=	0	)	:	\\n	    	waiter	=	Waiter	(	)	\\n	core	.	dns_resolv/;"	f
resource_filename	data/bpe_corpus_raw/valid.py	/^utf-8	def	resource_filename	(	self	,	package_or_requirement	,	resource_name	)	:	\\n	    	return	/;"	f
resource_filename	data/data_raw/valid.py	/^utf-8	def	resource_filename	(	self	,	package_or_requirement	,	resource_name	)	:	\\n	    	return	/;"	f
resource_stream	data/bpe_corpus_raw/valid.py	/^utf-8	def	resource_stream	(	self	,	package_or_requirement	,	resource_name	)	:	\\n	    	return	ge/;"	f
resource_stream	data/data_raw/valid.py	/^utf-8	def	resource_stream	(	self	,	package_or_requirement	,	resource_name	)	:	\\n	    	return	ge/;"	f
resource_url_fn	data/bpe_corpus_raw/valid.py	/^utf-8	def	resource_url_fn	(	model	,	urlconf_detail_re	=	'(?P<pk>\\\\\\\\d+)'	,	mixins	=	(	)	,	\\/;"	f
resource_url_fn	data/data_raw/valid.py	/^utf-8	def	resource_url_fn	(	model	,	urlconf_detail_re	=	'(?P<pk>\\\\\\\\d+)'	,	mixins	=	(	)	,	\\/;"	f
respond_to_search	data/bpe_corpus_raw/train.py	/^utf-8	def	respond_to_search	(	self	,	addr	:	Tuple	[	str	,	int	]	,	discover_pattern	:	str	,	\\n	m/;"	f
respond_to_search	data/data_raw/train.py	/^utf-8	def	respond_to_search	(	self	,	addr	:	Tuple	[	str	,	int	]	,	discover_pattern	:	str	,	\\n	m/;"	f
response_model	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	response_model	(	self	)	:	\\n	    	return	self	.	_response_model	\\n		$/;"	f
response_model	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	response_model	(	self	)	:	\\n	    	return	self	.	_response_model	\\n		$/;"	f
rest	data/bpe_corpus_raw/valid.py	/^utf-8	def	rest	(	self	,	n	=	1	)	:	\\n	    	return	self	.	_wrap	(	self	.	obj	[	n	:	]	)	\\n		$/;"	f
rest	data/data_raw/valid.py	/^utf-8	def	rest	(	self	,	n	=	1	)	:	\\n	    	return	self	.	_wrap	(	self	.	obj	[	n	:	]	)	\\n		$/;"	f
rest_error	data/bpe_corpus_raw/train.py	/^utf-8	def	rest_error	(	self	)	:	\\n	    	error_json	=	self	.	__format_error	(	'errors'	)	\\n	ret/;"	f
rest_error	data/data_raw/train.py	/^utf-8	def	rest_error	(	self	)	:	\\n	    	error_json	=	self	.	__format_error	(	'errors'	)	\\n	ret/;"	f
restart	data/bpe_corpus_raw/train.py	/^utf-8	def	restart	(	self	,	*	args	,	**	kw	)	:	\\n	    	self	.	stop	(	)	\\n	self	.	start	(	*	args/;"	f
restart	data/bpe_corpus_raw/valid.py	/^utf-8	def	restart	(	self	)	:	\\n	    	self	.	_update	(	'restart'	)	\\n	self	.	supervisord	.	opti/;"	f
restart	data/bpe_corpus_raw/valid.py	/^utf-8	def	restart	(	self	,	resource_group_name	,	server_name	,	custom_headers	=	None	,	\\n	raw	=/;"	f
restart	data/data_raw/train.py	/^utf-8	def	restart	(	self	,	*	args	,	**	kw	)	:	\\n	    	self	.	stop	(	)	\\n	self	.	start	(	*	args/;"	f
restart	data/data_raw/valid.py	/^utf-8	def	restart	(	self	)	:	\\n	    	self	.	_update	(	'restart'	)	\\n	self	.	supervisord	.	opti/;"	f
restart	data/data_raw/valid.py	/^utf-8	def	restart	(	self	,	resource_group_name	,	server_name	,	custom_headers	=	None	,	\\n	raw	=/;"	f
restart_service	data/bpe_corpus_raw/valid.py	/^utf-8	def	restart_service	(	self	)	:	\\n	    	self	.	execute	(	'service'	,	self	.	ganesha_servic/;"	f
restart_service	data/data_raw/valid.py	/^utf-8	def	restart_service	(	self	)	:	\\n	    	self	.	execute	(	'service'	,	self	.	ganesha_servic/;"	f
restoreCfgFile	data/bpe_corpus_raw/valid.py	/^utf-8	def	restoreCfgFile	(	fileName	)	:	\\n	    	shutil	.	copyfile	(	fileName	+	'.bkp'	,	fileNam/;"	f
restoreCfgFile	data/data_raw/valid.py	/^utf-8	def	restoreCfgFile	(	fileName	)	:	\\n	    	shutil	.	copyfile	(	fileName	+	'.bkp'	,	fileNam/;"	f
restrict_to_connected_triangulations	data/bpe_corpus_raw/valid.py	/^utf-8	def	restrict_to_connected_triangulations	(	self	,	connected	=	True	)	:	\\n	    	return	Poi/;"	f
restrict_to_connected_triangulations	data/data_raw/valid.py	/^utf-8	def	restrict_to_connected_triangulations	(	self	,	connected	=	True	)	:	\\n	    	return	Poi/;"	f
result_type	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	result_type	(	self	)	:	\\n	    	if	not	hasattr	(	self	,	'_result_type'	/;"	f
result_type	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	result_type	(	self	)	:	\\n	    	if	not	hasattr	(	self	,	'_result_type'	/;"	f
results	data_utils/data_to_text.py	/^results = workers.map(tokenize_row, dataset.itertuples(index=False))$/;"	v
results_iter	data/bpe_corpus_raw/valid.py	/^utf-8	def	results_iter	(	self	)	:	\\n	    	resolve_columns	=	hasattr	(	self	,	'resolve_columns'	/;"	f
results_iter	data/data_raw/valid.py	/^utf-8	def	results_iter	(	self	)	:	\\n	    	resolve_columns	=	hasattr	(	self	,	'resolve_columns'	/;"	f
retain	data/bpe_corpus_raw/train.py	/^utf-8	def	retain	(	self	)	:	\\n	    	return	libvlc_media_list_player_retain	(	self	)	\\n		$/;"	f
retain	data/data_raw/train.py	/^utf-8	def	retain	(	self	)	:	\\n	    	return	libvlc_media_list_player_retain	(	self	)	\\n		$/;"	f
retrieve	data/bpe_corpus_raw/train.py	/^utf-8	def	retrieve	(	self	,	options	,	timeout	=	120	)	:	\\n	    	result	=	self	.	login	(	)	\\n	i/;"	f
retrieve	data/bpe_corpus_raw/train.py	/^utf-8	def	retrieve	(	self	,	url	,	filename	=	None	,	reporthook	=	None	,	data	=	None	)	:	\\n	    /;"	f
retrieve	data/data_raw/train.py	/^utf-8	def	retrieve	(	self	,	options	,	timeout	=	120	)	:	\\n	    	result	=	self	.	login	(	)	\\n	i/;"	f
retrieve	data/data_raw/train.py	/^utf-8	def	retrieve	(	self	,	url	,	filename	=	None	,	reporthook	=	None	,	data	=	None	)	:	\\n	    /;"	f
retry	data/bpe_corpus_raw/valid.py	/^utf-8	@	pyqtSlot	(	)	\\n	def	retry	(	self	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
retry	data/data_raw/valid.py	/^utf-8	@	pyqtSlot	(	)	\\n	def	retry	(	self	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
returnOutlines	data/bpe_corpus_raw/train.py	/^utf-8	@	staticmethod	\\n	def	returnOutlines	(	stairsObj	,	edges	,	align	=	'Left'	,	mode	=	None	,/;"	f
returnOutlines	data/data_raw/train.py	/^utf-8	@	staticmethod	\\n	def	returnOutlines	(	stairsObj	,	edges	,	align	=	'Left'	,	mode	=	None	,/;"	f
return_env	data/bpe_corpus_raw/valid.py	/^utf-8	def	return_env	(	self	,	exists	=	True	)	:	\\n	    	env	=	dict	(	include	=	self	.	_build_pa/;"	f
return_env	data/data_raw/valid.py	/^utf-8	def	return_env	(	self	,	exists	=	True	)	:	\\n	    	env	=	dict	(	include	=	self	.	_build_pa/;"	f
reverse_url	data/bpe_corpus_raw/valid.py	/^utf-8	def	reverse_url	(	self	,	name	:	str	,	*	args	:	Any	)	->	str	:	\\n	    	return	self	.	appli/;"	f
reverse_url	data/data_raw/valid.py	/^utf-8	def	reverse_url	(	self	,	name	:	str	,	*	args	:	Any	)	->	str	:	\\n	    	return	self	.	appli/;"	f
revert	data/bpe_corpus_raw/valid.py	/^utf-8	def	revert	(	self	,	filename	=	None	,	ignore_discard	=	False	,	ignore_expires	=	False	)	:	/;"	f
revert	data/data_raw/valid.py	/^utf-8	def	revert	(	self	,	filename	=	None	,	ignore_discard	=	False	,	ignore_expires	=	False	)	:	/;"	f
revert_units_commented	data/bpe_corpus_raw/valid.py	/^utf-8	@	write_stdout	(	' * Reverting unit comments by: %(user)s... '	)	\\n	def	revert_units_comm/;"	f
revert_units_commented	data/data_raw/valid.py	/^utf-8	@	write_stdout	(	' * Reverting unit comments by: %(user)s... '	)	\\n	def	revert_units_comm/;"	f
review_comment	data/bpe_corpus_raw/valid.py	/^utf-8	@	blueprint	.	route	(	'\/ajax\/editor\/review'	,	methods	=	[	'POST'	,	'DELETE'	]	)	\\n	@	P/;"	f
review_comment	data/data_raw/valid.py	/^utf-8	@	blueprint	.	route	(	'\/ajax\/editor\/review'	,	methods	=	[	'POST'	,	'DELETE'	]	)	\\n	@	P/;"	f
revision	data/bpe_corpus_raw/train.py	/^utf-8	@	revision	.	setter	\\n	def	revision	(	self	,	revision	)	:	\\n	    	self	.	_revision	=	rev/;"	f
revision	data/data_raw/train.py	/^utf-8	@	revision	.	setter	\\n	def	revision	(	self	,	revision	)	:	\\n	    	self	.	_revision	=	rev/;"	f
revoke_snapshot_access	data/bpe_corpus_raw/valid.py	/^utf-8	def	revoke_snapshot_access	(	self	,	snapshot_identifier	,	\\n	account_with_restore_access	/;"	f
revoke_snapshot_access	data/data_raw/valid.py	/^utf-8	def	revoke_snapshot_access	(	self	,	snapshot_identifier	,	\\n	account_with_restore_access	/;"	f
revs	data/bpe_corpus_raw/train.py	/^utf-8	def	revs	(	self	,	branch	=	'master'	,	limit	=	None	,	skip	=	None	,	num_datapoints	=	None	)/;"	f
revs	data/data_raw/train.py	/^utf-8	def	revs	(	self	,	branch	=	'master'	,	limit	=	None	,	skip	=	None	,	num_datapoints	=	None	)/;"	f
ri	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	ri	(	self	)	:	\\n	    	if	not	self	.	is_open	:	\\n	        	raise	portN/;"	f
ri	data/data_raw/train.py	/^utf-8	@	property	\\n	def	ri	(	self	)	:	\\n	    	if	not	self	.	is_open	:	\\n	        	raise	portN/;"	f
right_pipe_function	data/bpe_corpus_raw/train.py	/^utf-8	def	right_pipe_function	(	self	,	other	)	:	\\n	    	self	=	set_default_colnames	(	self	)	\\/;"	f
right_pipe_function	data/data_raw/train.py	/^utf-8	def	right_pipe_function	(	self	,	other	)	:	\\n	    	self	=	set_default_colnames	(	self	)	\\/;"	f
rindex	data/bpe_corpus_raw/valid.py	/^utf-8	def	rindex	(	self	,	sub	,	start	=	0	,	end	=	None	)	:	\\n	    	return	rindex	(	self	,	sub	,/;"	f
rindex	data/data_raw/valid.py	/^utf-8	def	rindex	(	self	,	sub	,	start	=	0	,	end	=	None	)	:	\\n	    	return	rindex	(	self	,	sub	,/;"	f
rmsd	data/bpe_corpus_raw/test.py	/^utf-8	def	rmsd	(	a	,	b	,	weights	=	None	,	center	=	False	,	superposition	=	False	)	:	\\n	    	a	/;"	f
rmsd	data/data_raw/test.py	/^utf-8	def	rmsd	(	a	,	b	,	weights	=	None	,	center	=	False	,	superposition	=	False	)	:	\\n	    	a	/;"	f
robust_get_level_values	data/bpe_corpus_raw/train.py	/^utf-8	def	_to_ijv	(	ss	,	row_levels	=	(	0	,	)	,	column_levels	=	(	1	,	)	,	sort_labels	=	False	)	/;"	f	function:_to_ijv.get_indexers._get_label_to_i_dict._get_index_subset_to_coord_dict	file:
robust_get_level_values	data/data_raw/train.py	/^utf-8	def	_to_ijv	(	ss	,	row_levels	=	(	0	,	)	,	column_levels	=	(	1	,	)	,	sort_labels	=	False	)	/;"	f	function:_to_ijv.get_indexers._get_label_to_i_dict._get_index_subset_to_coord_dict	file:
role_ref	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	role_ref	(	self	)	:	\\n	    	if	self	.	_role_ref	is	None	:	\\n	        /;"	f
role_ref	data/data_raw/train.py	/^utf-8	@	property	\\n	def	role_ref	(	self	)	:	\\n	    	if	self	.	_role_ref	is	None	:	\\n	        /;"	f
root	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	root	(	self	)	:	\\n	    	return	''	\\n		$/;"	f
root	data/data_raw/train.py	/^utf-8	@	property	\\n	def	root	(	self	)	:	\\n	    	return	''	\\n		$/;"	f
root_is_purelib	data/bpe_corpus_raw/test.py	/^utf-8	def	root_is_purelib	(	name	,	wheeldir	)	:	\\n	    	name_folded	=	name	.	replace	(	'-'	,	'_/;"	f
root_is_purelib	data/data_raw/test.py	/^utf-8	def	root_is_purelib	(	name	,	wheeldir	)	:	\\n	    	name_folded	=	name	.	replace	(	'-'	,	'_/;"	f
rootdir	data_utils/build_dataset.py	/^    rootdir = argv[1]$/;"	v
roots	data/bpe_corpus_raw/valid.py	/^utf-8	def	roots	(	self	,	reset	=	False	)	:	\\n	    	if	reset	or	self	.	__roots	is	None	:	\\n	   /;"	f
roots	data/data_raw/valid.py	/^utf-8	def	roots	(	self	,	reset	=	False	)	:	\\n	    	if	reset	or	self	.	__roots	is	None	:	\\n	   /;"	f
round	data/bpe_corpus_raw/valid.py	/^utf-8	def	round	(	value	,	ndigits	=	0	)	:	\\n	    	ndigits	=	int	(	ndigits	)	\\n	if	isinstance	(/;"	f
round	data/data_raw/valid.py	/^utf-8	def	round	(	value	,	ndigits	=	0	)	:	\\n	    	ndigits	=	int	(	ndigits	)	\\n	if	isinstance	(/;"	f
roundRect	data/bpe_corpus_raw/valid.py	/^utf-8	def	roundRect	(	self	,	x	,	y	,	width	,	height	,	rx	,	ry	)	:	\\n	    	if	rx	==	0	:	\\n	    /;"	f
roundRect	data/data_raw/valid.py	/^utf-8	def	roundRect	(	self	,	x	,	y	,	width	,	height	,	rx	,	ry	)	:	\\n	    	if	rx	==	0	:	\\n	    /;"	f
route_family	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	route_family	(	self	)	:	\\n	    	return	self	.	_settings	.	get	(	VRF_RF/;"	f
route_family	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	route_family	(	self	)	:	\\n	    	return	self	.	_settings	.	get	(	VRF_RF/;"	f
row_del	data/bpe_corpus_raw/train.py	/^utf-8	def	row_del	(	self	,	i	)	:	\\n	    	self	.	_mat	=	self	.	_mat	[	:	i	*	self	.	cols	]	+	self/;"	f
row_del	data/data_raw/train.py	/^utf-8	def	row_del	(	self	,	i	)	:	\\n	    	self	.	_mat	=	self	.	_mat	[	:	i	*	self	.	cols	]	+	self/;"	f
row_structure_symbolic_cholesky	data/bpe_corpus_raw/valid.py	/^utf-8	def	row_structure_symbolic_cholesky	(	self	)	:	\\n	    	R	,	parent	=	self	.	liupc	(	)	\\n	/;"	f
row_structure_symbolic_cholesky	data/data_raw/valid.py	/^utf-8	def	row_structure_symbolic_cholesky	(	self	)	:	\\n	    	R	,	parent	=	self	.	liupc	(	)	\\n	/;"	f
rows	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	rows	(	self	)	:	\\n	    	rows_df	=	callMLlibFunc	(	'getIndexedRows'	,	s/;"	f
rows	data/data_raw/train.py	/^utf-8	@	property	\\n	def	rows	(	self	)	:	\\n	    	rows_df	=	callMLlibFunc	(	'getIndexedRows'	,	s/;"	f
royal_road1	data/bpe_corpus_raw/valid.py	/^utf-8	def	royal_road1	(	individual	,	order	)	:	\\n	    	nelem	=	len	(	individual	)	\/	order	\\n	/;"	f
royal_road1	data/data_raw/valid.py	/^utf-8	def	royal_road1	(	individual	,	order	)	:	\\n	    	nelem	=	len	(	individual	)	\/	order	\\n	/;"	f
rpad	data/bpe_corpus_raw/valid.py	/^utf-8	@	since	(	1.5	)	\\n	@	ignore_unicode_prefix	\\n	def	rpad	(	col	,	len	,	pad	)	:	\\n	    	sc/;"	f
rpad	data/data_raw/valid.py	/^utf-8	@	since	(	1.5	)	\\n	@	ignore_unicode_prefix	\\n	def	rpad	(	col	,	len	,	pad	)	:	\\n	    	sc/;"	f
rrows	data/bpe_corpus_raw/valid.py	/^utf-8	def	rrows	(	self	)	:	\\n	    	for	row	in	reversed	(	self	.	__array	)	:	\\n	        	yield	/;"	f
rrows	data/data_raw/valid.py	/^utf-8	def	rrows	(	self	)	:	\\n	    	for	row	in	reversed	(	self	.	__array	)	:	\\n	        	yield	/;"	f
rs_exp	data/bpe_corpus_raw/train.py	/^utf-8	def	rs_exp	(	p	,	x	,	prec	)	:	\\n	    	if	rs_is_puiseux	(	p	,	x	)	:	\\n	        	return	rs/;"	f
rs_exp	data/data_raw/train.py	/^utf-8	def	rs_exp	(	p	,	x	,	prec	)	:	\\n	    	if	rs_is_puiseux	(	p	,	x	)	:	\\n	        	return	rs/;"	f
rsa_pss_sign	data/bpe_corpus_raw/test.py	/^utf-8	def	rsa_pss_sign	(	private_key	,	data	,	hash_algorithm	)	:	\\n	    	if	private_key	.	algor/;"	f
rsa_pss_sign	data/data_raw/test.py	/^utf-8	def	rsa_pss_sign	(	private_key	,	data	,	hash_algorithm	)	:	\\n	    	if	private_key	.	algor/;"	f
run	data/bpe_corpus_raw/train.py	/^utf-8	def	get_cmdclass	(	)	:	\\n	    	if	'versioneer'	in	sys	.	modules	:	\\n	        	del	sys	.	/;"	f	function:get_cmdclass.cmd_version.initialize_options.finalize_options	file:
run	data/bpe_corpus_raw/train.py	/^utf-8	def	get_cmdclass	(	)	:	\\n	    	if	'versioneer'	in	sys	.	modules	:	\\n	        	del	sys	.	/;"	m	class:get_cmdclass.cmd_version.initialize_options.finalize_options.run.cmd_build_py
run	data/bpe_corpus_raw/train.py	/^utf-8	def	get_cmdclass	(	)	:	\\n	    	if	'versioneer'	in	sys	.	modules	:	\\n	        	del	sys	.	/;"	m	class:get_cmdclass.cmd_version.initialize_options.finalize_options.run.cmd_build_py.run.cmd_build_exe
run	data/bpe_corpus_raw/train.py	/^utf-8	def	get_cmdclass	(	)	:	\\n	    	if	'versioneer'	in	sys	.	modules	:	\\n	        	del	sys	.	/;"	m	class:get_cmdclass.cmd_version.initialize_options.finalize_options.run.cmd_build_py.run.cmd_build_exe.run.cmd_sdist
run	data/bpe_corpus_raw/train.py	/^utf-8	def	run	(	self	)	:	\\n	    	eventlistener	=	self	.	createListener	(	)	\\n	self	.	engine	.	/;"	f
run	data/bpe_corpus_raw/train.py	/^utf-8	def	run	(	self	)	:	\\n	    	global	active_analysis_count	\\n	active_analysis_count	+=	1	\\/;"	f
run	data/bpe_corpus_raw/train.py	/^utf-8	def	run	(	self	)	:	\\n	    	print	(	'\\\\n******* beginning to run Ezhil test *******'	)	\\/;"	f
run	data/bpe_corpus_raw/train.py	/^utf-8	def	run	(	self	,	cmd	,	log_stdout	=	True	,	log_stderr	=	True	,	log_online	=	False	,	\\n	ex/;"	f
run	data/bpe_corpus_raw/train.py	/^utf-8	def	run	(	typ	,	freq	,	data	)	:	\\n	    	try	:	\\n	        	if	configHandler	.	checkConfig/;"	f
run	data/bpe_corpus_raw/train.py	/^utf-8	def	setup	(	pkg	,	setup_py	,	cmake_shared_library_prefix	,	\\n	cmake_shared_library_suffix/;"	m	class:setup.my_build_py
run	data/bpe_corpus_raw/train.py	/^utf-8	def	setup	(	pkg	,	setup_py	,	cmake_shared_library_prefix	,	\\n	cmake_shared_library_suffix/;"	m	class:setup.my_build_py.run.my_clean
run	data/bpe_corpus_raw/valid.py	/^utf-8	def	run	(	input	,	conf	,	filepath	=	None	)	:	\\n	    	if	conf	.	is_file_ignored	(	filepath/;"	f
run	data/bpe_corpus_raw/valid.py	/^utf-8	def	run	(	namespace	=	None	,	action_prefix	=	'action_'	,	args	=	None	)	:	\\n	    	if	names/;"	f
run	data/bpe_corpus_raw/valid.py	/^utf-8	def	run	(	self	)	:	\\n	    	q	=	self	.	_queue	\\n	delayfunc	=	self	.	delayfunc	\\n	timefun/;"	f
run	data/bpe_corpus_raw/valid.py	/^utf-8	def	run	(	self	)	:	\\n	    	start	=	datetime	.	now	(	)	\\n	koko	.	CANVAS	.	border	=	None	\\/;"	f
run	data/bpe_corpus_raw/valid.py	/^utf-8	def	run	(	self	,	blocking	=	True	)	:	\\n	    	lock	=	self	.	_lock	\\n	q	=	self	.	_queue	\\/;"	f
run	data/bpe_corpus_raw/valid.py	/^utf-8	def	run	(	self	,	filename	,	file	,	dependency_results	=	dict	(	)	,	follow_redirects	:	\\n	/;"	f
run	data/bpe_corpus_raw/valid.py	/^utf-8	def	run	(	self	,	profile_id	)	:	\\n	    	results	=	{	}	\\n	self	.	connect	(	)	\\n	orion_da/;"	f
run	data/bpe_corpus_raw/valid.py	/^utf-8	def	run	(	self	,	run	)	:	\\n	    	log	.	info	(	'Running %s for %s on %s'	,	run	.	command	,/;"	f
run	data/data_raw/train.py	/^utf-8	def	get_cmdclass	(	)	:	\\n	    	if	'versioneer'	in	sys	.	modules	:	\\n	        	del	sys	.	/;"	f	function:get_cmdclass.cmd_version.initialize_options.finalize_options	file:
run	data/data_raw/train.py	/^utf-8	def	get_cmdclass	(	)	:	\\n	    	if	'versioneer'	in	sys	.	modules	:	\\n	        	del	sys	.	/;"	m	class:get_cmdclass.cmd_version.initialize_options.finalize_options.run.cmd_build_py
run	data/data_raw/train.py	/^utf-8	def	get_cmdclass	(	)	:	\\n	    	if	'versioneer'	in	sys	.	modules	:	\\n	        	del	sys	.	/;"	m	class:get_cmdclass.cmd_version.initialize_options.finalize_options.run.cmd_build_py.run.cmd_build_exe
run	data/data_raw/train.py	/^utf-8	def	get_cmdclass	(	)	:	\\n	    	if	'versioneer'	in	sys	.	modules	:	\\n	        	del	sys	.	/;"	m	class:get_cmdclass.cmd_version.initialize_options.finalize_options.run.cmd_build_py.run.cmd_build_exe.run.cmd_sdist
run	data/data_raw/train.py	/^utf-8	def	run	(	self	)	:	\\n	    	eventlistener	=	self	.	createListener	(	)	\\n	self	.	engine	.	/;"	f
run	data/data_raw/train.py	/^utf-8	def	run	(	self	)	:	\\n	    	global	active_analysis_count	\\n	active_analysis_count	+=	1	\\/;"	f
run	data/data_raw/train.py	/^utf-8	def	run	(	self	)	:	\\n	    	print	(	'\\\\n******* beginning to run Ezhil test *******'	)	\\/;"	f
run	data/data_raw/train.py	/^utf-8	def	run	(	self	,	cmd	,	log_stdout	=	True	,	log_stderr	=	True	,	log_online	=	False	,	\\n	ex/;"	f
run	data/data_raw/train.py	/^utf-8	def	run	(	typ	,	freq	,	data	)	:	\\n	    	try	:	\\n	        	if	configHandler	.	checkConfig/;"	f
run	data/data_raw/train.py	/^utf-8	def	setup	(	pkg	,	setup_py	,	cmake_shared_library_prefix	,	\\n	cmake_shared_library_suffix/;"	m	class:setup.my_build_py
run	data/data_raw/train.py	/^utf-8	def	setup	(	pkg	,	setup_py	,	cmake_shared_library_prefix	,	\\n	cmake_shared_library_suffix/;"	m	class:setup.my_build_py.run.my_clean
run	data/data_raw/valid.py	/^utf-8	def	run	(	input	,	conf	,	filepath	=	None	)	:	\\n	    	if	conf	.	is_file_ignored	(	filepath/;"	f
run	data/data_raw/valid.py	/^utf-8	def	run	(	namespace	=	None	,	action_prefix	=	'action_'	,	args	=	None	)	:	\\n	    	if	names/;"	f
run	data/data_raw/valid.py	/^utf-8	def	run	(	self	)	:	\\n	    	q	=	self	.	_queue	\\n	delayfunc	=	self	.	delayfunc	\\n	timefun/;"	f
run	data/data_raw/valid.py	/^utf-8	def	run	(	self	)	:	\\n	    	start	=	datetime	.	now	(	)	\\n	koko	.	CANVAS	.	border	=	None	\\/;"	f
run	data/data_raw/valid.py	/^utf-8	def	run	(	self	,	blocking	=	True	)	:	\\n	    	lock	=	self	.	_lock	\\n	q	=	self	.	_queue	\\/;"	f
run	data/data_raw/valid.py	/^utf-8	def	run	(	self	,	filename	,	file	,	dependency_results	=	dict	(	)	,	follow_redirects	:	\\n	/;"	f
run	data/data_raw/valid.py	/^utf-8	def	run	(	self	,	profile_id	)	:	\\n	    	results	=	{	}	\\n	self	.	connect	(	)	\\n	orion_da/;"	f
run	data/data_raw/valid.py	/^utf-8	def	run	(	self	,	run	)	:	\\n	    	log	.	info	(	'Running %s for %s on %s'	,	run	.	command	,/;"	f
runTest	data/bpe_corpus_raw/train.py	/^utf-8	def	runTest	(	self	,	browser_config	,	test_config	)	:	\\n	    	LOG	.	debug	(	'operating wi/;"	f
runTest	data/data_raw/train.py	/^utf-8	def	runTest	(	self	,	browser_config	,	test_config	)	:	\\n	    	LOG	.	debug	(	'operating wi/;"	f
run_ansible	data/bpe_corpus_raw/train.py	/^utf-8	@	staticmethod	\\n	def	run_ansible	(	params	)	:	\\n	    	oc_version	=	OCVersion	(	params	[/;"	f
run_ansible	data/data_raw/train.py	/^utf-8	@	staticmethod	\\n	def	run_ansible	(	params	)	:	\\n	    	oc_version	=	OCVersion	(	params	[/;"	f
run_background_process	data/bpe_corpus_raw/train.py	/^utf-8	def	run_background_process	(	cmd	,	out_log	=	None	,	err_log	=	None	,	cwd	=	None	)	:	\\n	  /;"	f
run_background_process	data/data_raw/train.py	/^utf-8	def	run_background_process	(	cmd	,	out_log	=	None	,	err_log	=	None	,	cwd	=	None	)	:	\\n	  /;"	f
run_collection	data/bpe_corpus_raw/train.py	/^utf-8	def	run_collection	(	self	,	collection	,	method	,	name	,	smoothness	=	None	,	\\n	known_fai/;"	f
run_collection	data/data_raw/train.py	/^utf-8	def	run_collection	(	self	,	collection	,	method	,	name	,	smoothness	=	None	,	\\n	known_fai/;"	f
run_conversation	data/bpe_corpus_raw/valid.py	/^utf-8	def	main	(	)	:	\\n	    	argparser	=	ParlaiParser	(	False	,	False	)	\\n	argparser	.	add_par/;"	f	function:main.run_onboard.check_worker_eligibility.assign_worker_roles	file:
run_conversation	data/data_raw/valid.py	/^utf-8	def	main	(	)	:	\\n	    	argparser	=	ParlaiParser	(	False	,	False	)	\\n	argparser	.	add_par/;"	f	function:main.run_onboard.check_worker_eligibility.assign_worker_roles	file:
run_dialog	data/bpe_corpus_raw/train.py	/^utf-8	def	run_dialog	(	default_type	)	:	\\n	    	return	_run_dialog	(	_	(	'Create Podcast Folder/;"	f
run_dialog	data/data_raw/train.py	/^utf-8	def	run_dialog	(	default_type	)	:	\\n	    	return	_run_dialog	(	_	(	'Create Podcast Folder/;"	f
run_entriesdump	data/bpe_corpus_raw/test.py	/^utf-8	def	run_entriesdump	(	path	)	:	\\n	    	exit_code	,	stdout_lines	,	stderr_lines	=	spawn_pr/;"	f
run_entriesdump	data/data_raw/test.py	/^utf-8	def	run_entriesdump	(	path	)	:	\\n	    	exit_code	,	stdout_lines	,	stderr_lines	=	spawn_pr/;"	f
run_feed_keys_info	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	run_feed_keys_info	(	self	)	:	\\n	    	output	=	self	.	_run_feed_keys_i/;"	f
run_feed_keys_info	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	run_feed_keys_info	(	self	)	:	\\n	    	return	self	.	_run_feed_keys_inf/;"	f
run_feed_keys_info	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	run_feed_keys_info	(	self	)	:	\\n	    	output	=	self	.	_run_feed_keys_i/;"	f
run_feed_keys_info	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	run_feed_keys_info	(	self	)	:	\\n	    	return	self	.	_run_feed_keys_inf/;"	f
run_function	data/bpe_corpus_raw/valid.py	/^utf-8	def	run_function	(	self	,	function	,	*	args	,	**	kwargs	)	:	\\n	    	try	:	\\n	        	fu/;"	f
run_function	data/data_raw/valid.py	/^utf-8	def	run_function	(	self	,	function	,	*	args	,	**	kwargs	)	:	\\n	    	try	:	\\n	        	fu/;"	f
run_glm	data/bpe_corpus_raw/valid.py	/^utf-8	def	run_glm	(	X	,	y	,	Xtest	=	None	,	ytest	=	None	,	nGPUs	=	0	,	nlambda	=	100	,	nfolds	=	5/;"	f
run_glm	data/data_raw/valid.py	/^utf-8	def	run_glm	(	X	,	y	,	Xtest	=	None	,	ytest	=	None	,	nGPUs	=	0	,	nlambda	=	100	,	nfolds	=	5/;"	f
run_import	data/bpe_corpus_raw/valid.py	/^utf-8	def	run_import	(	upload_session	,	async_upload	=	_ASYNC_UPLOAD	)	:	\\n	    	import_session/;"	f
run_import	data/data_raw/valid.py	/^utf-8	def	run_import	(	upload_session	,	async_upload	=	_ASYNC_UPLOAD	)	:	\\n	    	import_session/;"	f
run_initializer	data/bpe_corpus_raw/valid.py	/^utf-8	def	run_initializer	(	initializer	,	initargs	)	:	\\n	    	try	:	\\n	        	initializer	(/;"	f
run_initializer	data/data_raw/valid.py	/^utf-8	def	run_initializer	(	initializer	,	initargs	)	:	\\n	    	try	:	\\n	        	initializer	(/;"	f
run_jobs	data/bpe_corpus_raw/train.py	/^utf-8	def	run_jobs	(	self	,	max_threads	,	logger	=	None	,	log_it	=	True	)	:	\\n	    	total	=	len/;"	f
run_jobs	data/data_raw/train.py	/^utf-8	def	run_jobs	(	self	,	max_threads	,	logger	=	None	,	log_it	=	True	)	:	\\n	    	total	=	len/;"	f
run_mcr_job	data/bpe_corpus_raw/valid.py	/^utf-8	def	run_mcr_job	(	job	)	:	\\n	    	log	(	'Running a compiled Matlab job.\\\\n'	)	\\n	os	.	/;"	f
run_mcr_job	data/data_raw/valid.py	/^utf-8	def	run_mcr_job	(	job	)	:	\\n	    	log	(	'Running a compiled Matlab job.\\\\n'	)	\\n	os	.	/;"	f
run_on_dataset	data/bpe_corpus_raw/valid.py	/^utf-8	def	run_on_dataset	(	tf_manager	:	TensorFlowManager	,	runners	:	List	[	BaseRunner	]	,	\\n	/;"	f
run_on_dataset	data/data_raw/valid.py	/^utf-8	def	run_on_dataset	(	tf_manager	:	TensorFlowManager	,	runners	:	List	[	BaseRunner	]	,	\\n	/;"	f
run_on_repo	data/bpe_corpus_raw/valid.py	/^utf-8	def	run_on_repo	(	self	,	reponame	,	cli_args	)	:	\\n	    	self	.	check	(	cli_args	)	\\n	pk/;"	f
run_on_repo	data/data_raw/valid.py	/^utf-8	def	run_on_repo	(	self	,	reponame	,	cli_args	)	:	\\n	    	self	.	check	(	cli_args	)	\\n	pk/;"	f
run_onboard	data/bpe_corpus_raw/valid.py	/^utf-8	def	main	(	)	:	\\n	    	argparser	=	ParlaiParser	(	False	,	False	)	\\n	argparser	.	add_par/;"	f	function:main	file:
run_onboard	data/data_raw/valid.py	/^utf-8	def	main	(	)	:	\\n	    	argparser	=	ParlaiParser	(	False	,	False	)	\\n	argparser	.	add_par/;"	f	function:main	file:
run_script	data/bpe_corpus_raw/valid.py	/^utf-8	def	run_script	(	self	,	requires	,	script_name	)	:	\\n	    	ns	=	sys	.	_getframe	(	1	)	.	f/;"	f
run_script	data/data_raw/valid.py	/^utf-8	def	run_script	(	self	,	requires	,	script_name	)	:	\\n	    	ns	=	sys	.	_getframe	(	1	)	.	f/;"	f
run_suite	data/bpe_corpus_raw/train.py	/^utf-8	def	run_suite	(	self	,	test_suite	,	variants	,	timeout	=	0	,	replay_map	=	None	,	\\n	execu/;"	f
run_suite	data/data_raw/train.py	/^utf-8	def	run_suite	(	self	,	test_suite	,	variants	,	timeout	=	0	,	replay_map	=	None	,	\\n	execu/;"	f
run_thread	data/bpe_corpus_raw/train.py	/^utf-8	def	run_thread	(	self	,	loop	,	name	)	:	\\n	    	self	.	dprint	(	2	,	'Starting loop for {n/;"	f
run_thread	data/data_raw/train.py	/^utf-8	def	run_thread	(	self	,	loop	,	name	)	:	\\n	    	self	.	dprint	(	2	,	'Starting loop for {n/;"	f
run_thread_search	data/bpe_corpus_raw/valid.py	/^utf-8	def	run_thread_search	(	query_set	,	query	)	:	\\n	    	return	run_full_text_search	(	query/;"	f
run_thread_search	data/data_raw/valid.py	/^utf-8	def	run_thread_search	(	query_set	,	query	)	:	\\n	    	return	run_full_text_search	(	query/;"	f
run_train	data/bpe_corpus_raw/valid.py	/^utf-8	def	run_train	(	self	,	workspace	)	:	\\n	    	image_name	=	self	.	image_name	.	value	\\n	i/;"	f
run_train	data/data_raw/valid.py	/^utf-8	def	run_train	(	self	,	workspace	)	:	\\n	    	image_name	=	self	.	image_name	.	value	\\n	i/;"	f
runtest	data/bpe_corpus_raw/valid.py	/^utf-8	def	runtest	(	ns	,	test	)	:	\\n	    	output_on_failure	=	ns	.	verbose3	\\n	use_timeout	=	n/;"	f
runtest	data/data_raw/valid.py	/^utf-8	def	runtest	(	ns	,	test	)	:	\\n	    	output_on_failure	=	ns	.	verbose3	\\n	use_timeout	=	n/;"	f
s	data/bpe_corpus_raw/valid.py	/^utf-8	@	abstract_method	\\n	def	s	(	self	)	:	\\n	$/;"	f
s	data/data_raw/valid.py	/^utf-8	@	abstract_method	\\n	def	s	(	self	)	:	\\n	$/;"	f
safe_join	data/bpe_corpus_raw/train.py	/^utf-8	def	safe_join	(	base	,	*	paths	)	:	\\n	    	base	=	force_text	(	base	)	\\n	paths	=	[	force/;"	f
safe_join	data/data_raw/train.py	/^utf-8	def	safe_join	(	base	,	*	paths	)	:	\\n	    	base	=	force_text	(	base	)	\\n	paths	=	[	force/;"	f
safecall	data/bpe_corpus_raw/valid.py	/^utf-8	def	safecall	(	func	)	:	\\n	\\n	    	def	wrapper	(	*	args	,	**	kwargs	)	:	\\n	        	try/;"	f
safecall	data/data_raw/valid.py	/^utf-8	def	safecall	(	func	)	:	\\n	\\n	    	def	wrapper	(	*	args	,	**	kwargs	)	:	\\n	        	try/;"	f
samedir	data/bpe_corpus_raw/valid.py	/^utf-8	def	samedir	(	self	,	pkt	)	:	\\n	    	if	not	self	.	socket	:	\\n	        	raise	RuntimeErr/;"	f
samedir	data/data_raw/valid.py	/^utf-8	def	samedir	(	self	,	pkt	)	:	\\n	    	if	not	self	.	socket	:	\\n	        	raise	RuntimeErr/;"	f
sample_pairs	data/bpe_corpus_raw/valid.py	/^utf-8	def	sample_pairs	(	self	,	batch_size	,	once	=	False	)	:	\\n	    	ids	=	range	(	len	(	self	/;"	f
sample_pairs	data/data_raw/valid.py	/^utf-8	def	sample_pairs	(	self	,	batch_size	,	once	=	False	)	:	\\n	    	ids	=	range	(	len	(	self	/;"	f
sampling_step	data/bpe_corpus_raw/train.py	/^utf-8	def	sampling_step	(	self	,	*	args	)	:	\\n	    	args	=	iter	(	args	)	\\n	step_num	=	next	(	/;"	f
sampling_step	data/data_raw/train.py	/^utf-8	def	sampling_step	(	self	,	*	args	)	:	\\n	    	args	=	iter	(	args	)	\\n	step_num	=	next	(	/;"	f
sanitize	data/bpe_corpus_raw/train.py	/^utf-8	def	sanitize	(	x	:	Any	)	->	Any	:	\\n	    	if	isinstance	(	x	,	(	str	,	float	,	int	,	bool	/;"	f
sanitize	data/data_raw/train.py	/^utf-8	def	sanitize	(	x	:	Any	)	->	Any	:	\\n	    	if	isinstance	(	x	,	(	str	,	float	,	int	,	bool	/;"	f
save	data/bpe_corpus_raw/test.py	/^utf-8	def	save	(	self	)	:	\\n	    	self	.	rpc	.	call	(	MsfRpcMethod	.	CoreSave	)	\\n		$/;"	f
save	data/bpe_corpus_raw/train.py	/^utf-8	def	save	(	self	,	commit	=	True	,	*	args	,	**	kwargs	)	:	\\n	    	repository	=	super	(	Rep/;"	f
save	data/bpe_corpus_raw/valid.py	/^utf-8	def	save	(	self	)	:	\\n	    	fname	=	os	.	path	.	expanduser	(	GRAMPS_FILENAME	)	\\n	try	:	/;"	f
save	data/bpe_corpus_raw/valid.py	/^utf-8	def	save	(	self	,	content	)	:	\\n	    	return	self	.	storage	.	save	(	self	.	name	,	conten/;"	f
save	data/data_raw/test.py	/^utf-8	def	save	(	self	)	:	\\n	    	self	.	rpc	.	call	(	MsfRpcMethod	.	CoreSave	)	\\n		$/;"	f
save	data/data_raw/train.py	/^utf-8	def	save	(	self	,	commit	=	True	,	*	args	,	**	kwargs	)	:	\\n	    	repository	=	super	(	Rep/;"	f
save	data/data_raw/valid.py	/^utf-8	def	save	(	self	)	:	\\n	    	fname	=	os	.	path	.	expanduser	(	GRAMPS_FILENAME	)	\\n	try	:	/;"	f
save	data/data_raw/valid.py	/^utf-8	def	save	(	self	,	content	)	:	\\n	    	return	self	.	storage	.	save	(	self	.	name	,	conten/;"	f
save_autologin_data	data/bpe_corpus_raw/valid.py	/^utf-8	def	save_autologin_data	(	self	,	autologin_user	,	autologin_id	)	:	\\n	    	self	.	nx_comm/;"	f
save_autologin_data	data/data_raw/valid.py	/^utf-8	def	save_autologin_data	(	self	,	autologin_user	,	autologin_id	)	:	\\n	    	self	.	nx_comm/;"	f
save_item	data/bpe_corpus_raw/valid.py	/^utf-8	def	save_item	(	self	,	what	,	object_id	,	token	,	editmode	=	'bypass'	)	:	\\n	    	self	.	/;"	f
save_item	data/data_raw/valid.py	/^utf-8	def	save_item	(	self	,	what	,	object_id	,	token	,	editmode	=	'bypass'	)	:	\\n	    	self	.	/;"	f
save_json	data/bpe_corpus_raw/valid.py	/^utf-8	def	save_json	(	self	,	filename	,	data	)	:	\\n	    	path	,	ext	=	splitext	(	filename	)	\\n/;"	f
save_json	data/data_raw/valid.py	/^utf-8	def	save_json	(	self	,	filename	,	data	)	:	\\n	    	path	,	ext	=	splitext	(	filename	)	\\n/;"	f
save_options	data/bpe_corpus_raw/valid.py	/^utf-8	def	save_options	(	self	,	app	)	:	\\n	    	app	.	save_preferences	(	)	\\n	for	section	in	s/;"	f
save_options	data/data_raw/valid.py	/^utf-8	def	save_options	(	self	,	app	)	:	\\n	    	app	.	save_preferences	(	)	\\n	for	section	in	s/;"	f
saved	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_create_ignores_other_nodes	(	self	)	:	\\n	    	saving	=	self	.	persistence_servic/;"	f	function:test_create_ignores_other_nodes	file:
saved	data/data_raw/valid.py	/^utf-8	def	test_create_ignores_other_nodes	(	self	)	:	\\n	    	saving	=	self	.	persistence_servic/;"	f	function:test_create_ignores_other_nodes	file:
scale_from_matrix	data/bpe_corpus_raw/train.py	/^utf-8	def	scale_from_matrix	(	matrix	)	:	\\n	    	M	=	numpy	.	array	(	matrix	,	dtype	=	numpy	.	f/;"	f
scale_from_matrix	data/data_raw/train.py	/^utf-8	def	scale_from_matrix	(	matrix	)	:	\\n	    	M	=	numpy	.	array	(	matrix	,	dtype	=	numpy	.	f/;"	f
scaled	data/bpe_corpus_raw/valid.py	/^utf-8	def	scaled	(	self	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
scaled	data/data_raw/valid.py	/^utf-8	def	scaled	(	self	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
scanLineForCreate	data/bpe_corpus_raw/valid.py	/^utf-8	def	scanLineForCreate	(	suite	,	lineNo	,	line	)	:	\\n	    	if	create_re	.	search	(	line	)	/;"	f
scanLineForCreate	data/data_raw/valid.py	/^utf-8	def	scanLineForCreate	(	suite	,	lineNo	,	line	)	:	\\n	    	if	create_re	.	search	(	line	)	/;"	f
scan_results	data/bpe_corpus_raw/valid.py	/^utf-8	def	scan_results	(	self	)	:	\\n	    	bsses	=	self	.	_wifi_ctrl	.	scan_results	(	self	.	_ra/;"	f
scan_results	data/data_raw/valid.py	/^utf-8	def	scan_results	(	self	)	:	\\n	    	bsses	=	self	.	_wifi_ctrl	.	scan_results	(	self	.	_ra/;"	f
sched	data/bpe_corpus_raw/valid.py	/^utf-8	def	testCallbackReCoiterate	(	self	)	:	\\n	    	calls	=	[	]	\\n	\\n	\\n	class	FakeCall	:	\\/;"	f	function:testCallbackReCoiterate.FakeCall.__init__.__repr__	file:
sched	data/data_raw/valid.py	/^utf-8	def	testCallbackReCoiterate	(	self	)	:	\\n	    	calls	=	[	]	\\n	\\n	\\n	class	FakeCall	:	\\/;"	f	function:testCallbackReCoiterate.FakeCall.__init__.__repr__	file:
schedule	data/bpe_corpus_raw/train.py	/^utf-8	def	schedule	(	self	,	deadline	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
schedule	data/data_raw/train.py	/^utf-8	def	schedule	(	self	,	deadline	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
schedule_prep_resize	data/bpe_corpus_raw/train.py	/^utf-8	def	schedule_prep_resize	(	self	,	context	,	image	,	request_spec	,	\\n	filter_properties	,/;"	f
schedule_prep_resize	data/data_raw/train.py	/^utf-8	def	schedule_prep_resize	(	self	,	context	,	image	,	request_spec	,	\\n	filter_properties	,/;"	f
scheduled_job	data/bpe_corpus_raw/train.py	/^utf-8	def	scheduled_job	(	self	,	trigger	,	args	=	None	,	kwargs	=	None	,	id	=	None	,	name	=	None/;"	f
scheduled_job	data/data_raw/train.py	/^utf-8	def	scheduled_job	(	self	,	trigger	,	args	=	None	,	kwargs	=	None	,	id	=	None	,	name	=	None/;"	f
schema	data/bpe_corpus_raw/valid.py	/^utf-8	def	schema	(	self	)	:	\\n	    	schema_data	=	super	(	GlobalBaseIndexField	,	self	)	.	schem/;"	f
schema	data/data_raw/valid.py	/^utf-8	def	schema	(	self	)	:	\\n	    	schema_data	=	super	(	GlobalBaseIndexField	,	self	)	.	schem/;"	f
schemaValidCtxtGetOptions	data/bpe_corpus_raw/train.py	/^utf-8	def	schemaValidCtxtGetOptions	(	self	)	:	\\n	    	ret	=	libxml2mod	.	xmlSchemaValidCtxtGet/;"	f
schemaValidCtxtGetOptions	data/data_raw/train.py	/^utf-8	def	schemaValidCtxtGetOptions	(	self	)	:	\\n	    	ret	=	libxml2mod	.	xmlSchemaValidCtxtGet/;"	f
score_all	data/bpe_corpus_raw/test.py	/^utf-8	@	deprecated_keywords	(	{	'measure'	:	'score'	}	)	\\n	def	score_all	(	data	,	score	=	Relie/;"	f
score_all	data/data_raw/test.py	/^utf-8	@	deprecated_keywords	(	{	'measure'	:	'score'	}	)	\\n	def	score_all	(	data	,	score	=	Relie/;"	f
screenshot_raw	data/bpe_corpus_raw/valid.py	/^utf-8	def	screenshot_raw	(	self	,	includes	=	'subtitles'	)	:	\\n	    	from	PIL	import	Image	\\n	/;"	f
screenshot_raw	data/data_raw/valid.py	/^utf-8	def	screenshot_raw	(	self	,	includes	=	'subtitles'	)	:	\\n	    	from	PIL	import	Image	\\n	/;"	f
script	data/bpe_corpus_raw/valid.py	/^utf-8	def	script	(	self	,	path	)	:	\\n	    	sc	=	script	.	Script	(	path	,	False	)	\\n	return	sc	/;"	f
script	data/data_raw/valid.py	/^utf-8	def	script	(	self	,	path	)	:	\\n	    	sc	=	script	.	Script	(	path	,	False	)	\\n	return	sc	/;"	f
script_name	data/bpe_corpus_raw/train.py	/^utf-8	def	script_name	(	self	,	path	=	None	)	:	\\n	    	if	path	is	None	:	\\n	        	try	:	\\n/;"	f
script_name	data/data_raw/train.py	/^utf-8	def	script_name	(	self	,	path	=	None	)	:	\\n	    	if	path	is	None	:	\\n	        	try	:	\\n/;"	f
script_root	data/bpe_corpus_raw/valid.py	/^utf-8	@	cached_property	\\n	def	script_root	(	self	)	:	\\n	    	path	=	wsgi_decoding_dance	(	sel/;"	f
script_root	data/data_raw/valid.py	/^utf-8	@	cached_property	\\n	def	script_root	(	self	)	:	\\n	    	path	=	wsgi_decoding_dance	(	sel/;"	f
search	data/bpe_corpus_raw/test.py	/^utf-8	def	search	(	self	,	context	,	data_dict	)	:	\\n	    	raise	NotImplementedError	(	)	\\n		$/;"	f
search	data/data_raw/test.py	/^utf-8	def	search	(	self	,	context	,	data_dict	)	:	\\n	    	raise	NotImplementedError	(	)	\\n		$/;"	f
searchMemoryRange	data/bpe_corpus_raw/valid.py	/^utf-8	def	searchMemoryRange	(	self	,	needle	,	address	,	size	,	regex	=	False	)	:	\\n	    	result/;"	f
searchMemoryRange	data/data_raw/valid.py	/^utf-8	def	searchMemoryRange	(	self	,	needle	,	address	,	size	,	regex	=	False	)	:	\\n	    	result/;"	f
search_annotations	data/bpe_corpus_raw/valid.py	/^utf-8	def	search_annotations	(	self	,	q	,	id	=	'me'	,	**	kwargs	)	:	\\n	    	if	'feed'	in	kwargs/;"	f
search_annotations	data/data_raw/valid.py	/^utf-8	def	search_annotations	(	self	,	q	,	id	=	'me'	,	**	kwargs	)	:	\\n	    	if	'feed'	in	kwargs/;"	f
search_releases	data/bpe_corpus_raw/valid.py	/^utf-8	@	_docstring_search	(	'release'	)	\\n	def	search_releases	(	query	=	''	,	limit	=	None	,	of/;"	f
search_releases	data/data_raw/valid.py	/^utf-8	@	_docstring_search	(	'release'	)	\\n	def	search_releases	(	query	=	''	,	limit	=	None	,	of/;"	f
search_services	data/bpe_corpus_raw/valid.py	/^utf-8	def	search_services	(	self	,	name_or_id	=	None	,	filters	=	None	)	:	\\n	    	services	=	se/;"	f
search_services	data/data_raw/valid.py	/^utf-8	def	search_services	(	self	,	name_or_id	=	None	,	filters	=	None	)	:	\\n	    	services	=	se/;"	f
secret	data/bpe_corpus_raw/train.py	/^utf-8	def	secret	(	server	)	:	\\n	    	r	=	http	.	get	(	'\/secret'	,	server	=	server	)	\\n	if	20/;"	f
secret	data/data_raw/train.py	/^utf-8	def	secret	(	server	)	:	\\n	    	r	=	http	.	get	(	'\/secret'	,	server	=	server	)	\\n	if	20/;"	f
sectrack	data/bpe_corpus_raw/valid.py	/^utf-8	@	merge_vuln_ids	\\n	def	sectrack	(	self	)	:	\\n	    	return	self	.	__sectrack	\\n		$/;"	f
sectrack	data/data_raw/valid.py	/^utf-8	@	merge_vuln_ids	\\n	def	sectrack	(	self	)	:	\\n	    	return	self	.	__sectrack	\\n		$/;"	f
seed	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	seed	(	self	)	:	\\n	    	return	self	.	_parms	.	get	(	'seed'	)	\\n		$/;"	f
seed	data/bpe_corpus_raw/valid.py	/^utf-8	def	seed	(	buffer	)	:	\\n	    	if	not	isinstance	(	buffer	,	_builtin_bytes	)	:	\\n	       /;"	f
seed	data/data_raw/train.py	/^utf-8	@	property	\\n	def	seed	(	self	)	:	\\n	    	return	self	.	_parms	.	get	(	'seed'	)	\\n		$/;"	f
seed	data/data_raw/valid.py	/^utf-8	def	seed	(	buffer	)	:	\\n	    	if	not	isinstance	(	buffer	,	_builtin_bytes	)	:	\\n	       /;"	f
seg_keywords	data/bpe_corpus_raw/valid.py	/^utf-8	def	seg_keywords	(	text	,	**	kwargs	)	:	\\n	    	word	=	Word	(	text	)	\\n	pre_words	=	proc/;"	f
seg_keywords	data/data_raw/valid.py	/^utf-8	def	seg_keywords	(	text	,	**	kwargs	)	:	\\n	    	word	=	Word	(	text	)	\\n	pre_words	=	proc/;"	f
segment	data/bpe_corpus_raw/valid.py	/^utf-8	def	segment	(	self	,	tokens	,	style	,	renders	,	text_displayable	)	:	\\n	    	self	.	hyper/;"	f
segment	data/data_raw/valid.py	/^utf-8	def	segment	(	self	,	tokens	,	style	,	renders	,	text_displayable	)	:	\\n	    	self	.	hyper/;"	f
segment_rank	data/bpe_corpus_raw/valid.py	/^utf-8	def	segment_rank	(	self	)	:	\\n	    	if	not	self	.	is_segment_name	(	)	:	\\n	        	rais/;"	f
segment_rank	data/data_raw/valid.py	/^utf-8	def	segment_rank	(	self	)	:	\\n	    	if	not	self	.	is_segment_name	(	)	:	\\n	        	rais/;"	f
select	data/bpe_corpus_raw/valid.py	/^utf-8	def	select	(	self	,	stream	,	namespaces	=	None	,	variables	=	None	)	:	\\n	    	if	namespac/;"	f
select	data/bpe_corpus_raw/valid.py	/^utf-8	def	select	(	self	,	tab_id	=	None	)	:	\\n	    	return	self	.	tk	.	call	(	self	.	_w	,	'sele/;"	f
select	data/bpe_corpus_raw/valid.py	/^utf-8	def	select	(	self	,	whereclause	=	None	,	**	params	)	:	\\n	    	return	Select	(	[	self	]	,/;"	f
select	data/data_raw/valid.py	/^utf-8	def	select	(	self	,	stream	,	namespaces	=	None	,	variables	=	None	)	:	\\n	    	if	namespac/;"	f
select	data/data_raw/valid.py	/^utf-8	def	select	(	self	,	tab_id	=	None	)	:	\\n	    	return	self	.	tk	.	call	(	self	.	_w	,	'sele/;"	f
select	data/data_raw/valid.py	/^utf-8	def	select	(	self	,	whereclause	=	None	,	**	params	)	:	\\n	    	return	Select	(	[	self	]	,/;"	f
selectAllText	data/bpe_corpus_raw/train.py	/^utf-8	def	selectAllText	(	self	,	s	=	None	)	:	\\n	    	self	.	setSelectionRange	(	0	,	self	.	get/;"	f
selectAllText	data/data_raw/train.py	/^utf-8	def	selectAllText	(	self	,	s	=	None	)	:	\\n	    	self	.	setSelectionRange	(	0	,	self	.	get/;"	f
selection_element	data/bpe_corpus_raw/valid.py	/^utf-8	def	selection_element	(	self	,	element	=	None	)	:	\\n	    	return	self	.	selection	(	'elem/;"	f
selection_element	data/data_raw/valid.py	/^utf-8	def	selection_element	(	self	,	element	=	None	)	:	\\n	    	return	self	.	selection	(	'elem/;"	f
send	data/bpe_corpus_raw/valid.py	/^utf-8	def	send	(	self	,	d	)	:	\\n	    	if	not	d	:	\\n	        	return	\\n		req_id	=	self	.	proto/;"	f
send	data/data_raw/valid.py	/^utf-8	def	send	(	self	,	d	)	:	\\n	    	if	not	d	:	\\n	        	return	\\n		req_id	=	self	.	proto/;"	f
sendKeyEvent	data/bpe_corpus_raw/valid.py	/^utf-8	def	sendKeyEvent	(	self	,	keyEvent	)	:	\\n	    	self	.	send	(	(	UInt8	(	ClientToServerMess/;"	f
sendKeyEvent	data/data_raw/valid.py	/^utf-8	def	sendKeyEvent	(	self	,	keyEvent	)	:	\\n	    	self	.	send	(	(	UInt8	(	ClientToServerMess/;"	f
sendReply	data/bpe_corpus_raw/train.py	/^utf-8	def	test_allowQueryFalse	(	self	)	:	\\n	\\n	\\n	    	class	SendReplyException	(	Exception	/;"	f	member:test_allowQueryFalse.SendReplyException.RaisingDNSServerFactory.allowQuery	file:
sendReply	data/data_raw/train.py	/^utf-8	def	test_allowQueryFalse	(	self	)	:	\\n	\\n	\\n	    	class	SendReplyException	(	Exception	/;"	f	member:test_allowQueryFalse.SendReplyException.RaisingDNSServerFactory.allowQuery	file:
send_arp_reply	data/bpe_corpus_raw/valid.py	/^utf-8	def	send_arp_reply	(	reply_to	,	mac	,	src_mac	=	None	)	:	\\n	    	if	mac	is	False	:	\\n	  /;"	f
send_arp_reply	data/data_raw/valid.py	/^utf-8	def	send_arp_reply	(	reply_to	,	mac	,	src_mac	=	None	)	:	\\n	    	if	mac	is	False	:	\\n	  /;"	f
send_card	data/bpe_corpus_raw/train.py	/^utf-8	def	send_card	(	self	,	body	:	str	=	''	,	to	:	Identifier	=	None	,	in_reply_to	:	Message	\\/;"	f
send_card	data/data_raw/train.py	/^utf-8	def	send_card	(	self	,	body	:	str	=	''	,	to	:	Identifier	=	None	,	in_reply_to	:	Message	\\/;"	f
send_command	data/bpe_corpus_raw/valid.py	/^utf-8	def	send_command	(	command	)	:	\\n	    	bottle	=	local_out_port	.	prepare	(	)	\\n	bottle	./;"	f
send_command	data/data_raw/valid.py	/^utf-8	def	send_command	(	command	)	:	\\n	    	bottle	=	local_out_port	.	prepare	(	)	\\n	bottle	./;"	f
send_data	data/bpe_corpus_raw/train.py	/^utf-8	def	send_data	(	self	,	stream_id	,	data	,	end_stream	=	False	,	pad_length	=	None	)	:	\\n	 /;"	f
send_data	data/data_raw/train.py	/^utf-8	def	send_data	(	self	,	stream_id	,	data	,	end_stream	=	False	,	pad_length	=	None	)	:	\\n	 /;"	f
send_files_to_contact	data/bpe_corpus_raw/valid.py	/^utf-8	@	asynchronous	\\n	def	send_files_to_contact	(	self	,	contact	,	path	,	fields	,	files	)	:	/;"	f
send_files_to_contact	data/data_raw/valid.py	/^utf-8	@	asynchronous	\\n	def	send_files_to_contact	(	self	,	contact	,	path	,	fields	,	files	)	:	/;"	f
send_headers	data/bpe_corpus_raw/train.py	/^utf-8	def	send_headers	(	self	)	:	\\n	    	self	.	cleanup_headers	(	)	\\n	self	.	headers_sent	=	/;"	f
send_headers	data/data_raw/train.py	/^utf-8	def	send_headers	(	self	)	:	\\n	    	self	.	cleanup_headers	(	)	\\n	self	.	headers_sent	=	/;"	f
send_kpi_data	data/bpe_corpus_raw/valid.py	/^utf-8	def	send_kpi_data	(	self	,	data	,	is_check_response	=	True	,	submit_target	=	None	)	:	\\n	/;"	f
send_kpi_data	data/data_raw/valid.py	/^utf-8	def	send_kpi_data	(	self	,	data	,	is_check_response	=	True	,	submit_target	=	None	)	:	\\n	/;"	f
send_mass_voice	data/bpe_corpus_raw/valid.py	/^utf-8	def	send_mass_voice	(	self	,	group_or_users	,	media_id	,	is_to_all	=	False	,	\\n	preview	=/;"	f
send_mass_voice	data/data_raw/valid.py	/^utf-8	def	send_mass_voice	(	self	,	group_or_users	,	media_id	,	is_to_all	=	False	,	\\n	preview	=/;"	f
send_metadata	data/bpe_corpus_raw/test.py	/^utf-8	def	send_metadata	(	self	)	:	\\n	    	if	self	.	has_config	:	\\n	        	choice	=	'1'	\\n/;"	f
send_metadata	data/data_raw/test.py	/^utf-8	def	send_metadata	(	self	)	:	\\n	    	if	self	.	has_config	:	\\n	        	choice	=	'1'	\\n/;"	f
send_packet	data/bpe_corpus_raw/valid.py	/^utf-8	def	send_packet	(	self	,	pkttype	,	*	args	)	:	\\n	    	if	self	.	_send_chan	is	None	:	\\n	/;"	f
send_packet	data/data_raw/valid.py	/^utf-8	def	send_packet	(	self	,	pkttype	,	*	args	)	:	\\n	    	if	self	.	_send_chan	is	None	:	\\n	/;"	f
send_robust	data/bpe_corpus_raw/train.py	/^utf-8	def	send_robust	(	self	,	sender	,	**	named	)	:	\\n	    	responses	=	[	]	\\n	if	not	self	.	/;"	f
send_robust	data/data_raw/train.py	/^utf-8	def	send_robust	(	self	,	sender	,	**	named	)	:	\\n	    	responses	=	[	]	\\n	if	not	self	.	/;"	f
sendline	data/bpe_corpus_raw/train.py	/^utf-8	def	sendline	(	self	,	sendspec	)	:	\\n	    	assert	not	sendspec	.	started	,	shutit_util	.	/;"	f
sendline	data/data_raw/train.py	/^utf-8	def	sendline	(	self	,	sendspec	)	:	\\n	    	assert	not	sendspec	.	started	,	shutit_util	.	/;"	f
sensor_offsets_encode	data/bpe_corpus_raw/valid.py	/^utf-8	def	sensor_offsets_encode	(	self	,	mag_ofs_x	,	mag_ofs_y	,	mag_ofs_z	,	\\n	mag_declination/;"	f
sensor_offsets_encode	data/data_raw/valid.py	/^utf-8	def	sensor_offsets_encode	(	self	,	mag_ofs_x	,	mag_ofs_y	,	mag_ofs_z	,	\\n	mag_declination/;"	f
separable_conv2d_shape	data/bpe_corpus_raw/valid.py	/^utf-8	def	separable_conv2d_shape	(	op	)	:	\\n	    	input_shape	=	op	.	inputs	[	0	]	.	get_shape	(/;"	f
separable_conv2d_shape	data/data_raw/valid.py	/^utf-8	def	separable_conv2d_shape	(	op	)	:	\\n	    	input_shape	=	op	.	inputs	[	0	]	.	get_shape	(/;"	f
separable_conv_block	data/bpe_corpus_raw/valid.py	/^utf-8	def	separable_conv_block	(	data	,	name	,	depthwise_channels	,	pointwise_channels	,	\\n	ker/;"	f
separable_conv_block	data/data_raw/valid.py	/^utf-8	def	separable_conv_block	(	data	,	name	,	depthwise_channels	,	pointwise_channels	,	\\n	ker/;"	f
separate_headers	data/bpe_corpus_raw/valid.py	/^utf-8	def	separate_headers	(	bytestring	:	bytes	,	header_length_list	:	List	[	int	]	)	->	List	[	/;"	f
separate_headers	data/data_raw/valid.py	/^utf-8	def	separate_headers	(	bytestring	:	bytes	,	header_length_list	:	List	[	int	]	)	->	List	[	/;"	f
separate_my_zero	data/bpe_corpus_raw/valid.py	/^utf-8	def	separate_my_zero	(	ctx	,	my_zero_number	,	zero_number_block	,	T	,	V	,	prec	)	:	\\n	   /;"	f
separate_my_zero	data/data_raw/valid.py	/^utf-8	def	separate_my_zero	(	ctx	,	my_zero_number	,	zero_number_block	,	T	,	V	,	prec	)	:	\\n	   /;"	f
seq_traceback	data/bpe_corpus_raw/valid.py	/^utf-8	def	seq_traceback	(	s1	,	s2	,	aligned_positions	,	gap_value	)	:	\\n	    	seqs	=	[	s1	,	s2	/;"	f
seq_traceback	data/data_raw/valid.py	/^utf-8	def	seq_traceback	(	s1	,	s2	,	aligned_positions	,	gap_value	)	:	\\n	    	seqs	=	[	s1	,	s2	/;"	f
sequence	data/bpe_corpus_raw/train.py	/^utf-8	def	get_sequence	(	n	)	:	\\n	\\n	    	def	fib	(	)	:	\\n	        	"""\\n        Return Fibo/;"	f	function:get_sequence.fib	file:
sequence	data/data_raw/train.py	/^utf-8	def	get_sequence	(	n	)	:	\\n	\\n	    	def	fib	(	)	:	\\n	        	"""\\n        Return Fibo/;"	f	function:get_sequence.fib	file:
serialize	data/bpe_corpus_raw/valid.py	/^utf-8	def	serialize	(	self	)	:	\\n	    	self	.	fix_crc	(	)	\\n	bytestring	=	''	\\n	chunk_data	=	/;"	f
serialize	data/bpe_corpus_raw/valid.py	/^utf-8	def	serialize	(	self	,	fname	,	**	kwargs	)	:	\\n	    	corpora	.	SvmLightCorpus	.	serialize/;"	f
serialize	data/data_raw/valid.py	/^utf-8	def	serialize	(	self	)	:	\\n	    	self	.	fix_crc	(	)	\\n	bytestring	=	''	\\n	chunk_data	=	/;"	f
serialize	data/data_raw/valid.py	/^utf-8	def	serialize	(	self	,	fname	,	**	kwargs	)	:	\\n	    	corpora	.	SvmLightCorpus	.	serialize/;"	f
serialize_zim_config	data/bpe_corpus_raw/valid.py	/^utf-8	def	serialize_zim_config	(	self	)	:	\\n	    	return	self	.	userpath	\\n		$/;"	f
serialize_zim_config	data/data_raw/valid.py	/^utf-8	def	serialize_zim_config	(	self	)	:	\\n	    	return	self	.	userpath	\\n		$/;"	f
serialtoflat	data/bpe_corpus_raw/valid.py	/^utf-8	def	serialtoflat	(	self	,	bytes	,	width	=	None	)	:	\\n	    	if	self	.	bitdepth	==	8	:	\\n	/;"	f
serialtoflat	data/data_raw/valid.py	/^utf-8	def	serialtoflat	(	self	,	bytes	,	width	=	None	)	:	\\n	    	if	self	.	bitdepth	==	8	:	\\n	/;"	f
serre_derivative	data/bpe_corpus_raw/valid.py	/^utf-8	def	serre_derivative	(	self	)	:	\\n	    	return	self	.	diff_op	(	self	.	parent	(	)	.	_serr/;"	f
serre_derivative	data/data_raw/valid.py	/^utf-8	def	serre_derivative	(	self	)	:	\\n	    	return	self	.	diff_op	(	self	.	parent	(	)	.	_serr/;"	f
server_grp	data/bpe_corpus_raw/valid.py	/^utf-8	def	init	(	)	:	\\n	    	server_formatter	=	cli	.	make_formatter	(	'server'	)	\\n	\\n	@	cli/;"	f	function:init	file:
server_grp	data/data_raw/valid.py	/^utf-8	def	init	(	)	:	\\n	    	server_formatter	=	cli	.	make_formatter	(	'server'	)	\\n	\\n	@	cli/;"	f	function:init	file:
service	data/bpe_corpus_raw/test.py	/^utf-8	@	service	.	setter	\\n	def	service	(	self	,	config	)	:	\\n	    	self	.	svc	=	config	\\n		$/;"	f
service	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	service	(	self	)	:	\\n	    	if	not	self	.	svc	:	\\n	        	self	.	get/;"	f
service	data/bpe_corpus_raw/valid.py	/^utf-8	@	service	.	setter	\\n	def	service	(	self	,	data	)	:	\\n	    	self	.	svc	=	data	\\n		$/;"	f
service	data/data_raw/test.py	/^utf-8	@	service	.	setter	\\n	def	service	(	self	,	config	)	:	\\n	    	self	.	svc	=	config	\\n		$/;"	f
service	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	service	(	self	)	:	\\n	    	if	not	self	.	svc	:	\\n	        	self	.	get/;"	f
service	data/data_raw/valid.py	/^utf-8	@	service	.	setter	\\n	def	service	(	self	,	data	)	:	\\n	    	self	.	svc	=	data	\\n		$/;"	f
serviceDescription	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	serviceDescription	(	self	)	:	\\n	    	if	self	.	_serviceDescription	is/;"	f
serviceDescription	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	serviceDescription	(	self	)	:	\\n	    	if	self	.	_serviceDescription	is/;"	f
service_status	data/bpe_corpus_raw/valid.py	/^utf-8	def	service_status	(	service_name	,	config	=	None	)	:	\\n	    	if	service_name	==	'nis'	or/;"	f
service_status	data/data_raw/valid.py	/^utf-8	def	service_status	(	service_name	,	config	=	None	)	:	\\n	    	if	service_name	==	'nis'	or/;"	f
service_url	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	service_url	(	self	)	:	\\n	    	return	'http:\/\/%s'	%	utils	.	join_hos/;"	f
service_url	data/data_raw/train.py	/^utf-8	@	property	\\n	def	service_url	(	self	)	:	\\n	    	return	'http:\/\/%s'	%	utils	.	join_hos/;"	f
sessions	data/bpe_corpus_raw/valid.py	/^utf-8	@	filterable	\\n	def	sessions	(	self	,	filters	,	options	)	:	\\n	\\n	    	def	transform	(	/;"	f
sessions	data/data_raw/valid.py	/^utf-8	@	filterable	\\n	def	sessions	(	self	,	filters	,	options	)	:	\\n	\\n	    	def	transform	(	/;"	f
set	data/bpe_corpus_raw/train.py	/^utf-8	def	set	(	self	,	state	)	:	\\n	    	self	.	append	(	state	)	\\n		$/;"	f
set	data/bpe_corpus_raw/train.py	/^utf-8	def	set	(	self	,	value	)	:	\\n	    	self	.	tk	.	call	(	self	.	_w	,	'set'	,	value	)	\\n		$/;"	f
set	data/bpe_corpus_raw/valid.py	/^utf-8	def	set	(	self	,	key	,	value	)	:	\\n	    	self	.	attrib	[	key	]	=	value	\\n		$/;"	f
set	data/bpe_corpus_raw/valid.py	/^utf-8	def	set	(	self	,	value	)	:	\\n	    	self	.	tk	.	call	(	self	.	_w	,	'set'	,	value	)	\\n		$/;"	f
set	data/data_raw/train.py	/^utf-8	def	set	(	self	,	state	)	:	\\n	    	self	.	append	(	state	)	\\n		$/;"	f
set	data/data_raw/train.py	/^utf-8	def	set	(	self	,	value	)	:	\\n	    	self	.	tk	.	call	(	self	.	_w	,	'set'	,	value	)	\\n		$/;"	f
set	data/data_raw/valid.py	/^utf-8	def	set	(	self	,	key	,	value	)	:	\\n	    	self	.	attrib	[	key	]	=	value	\\n		$/;"	f
set	data/data_raw/valid.py	/^utf-8	def	set	(	self	,	value	)	:	\\n	    	self	.	tk	.	call	(	self	.	_w	,	'set'	,	value	)	\\n		$/;"	f
setAffinityCode	data/bpe_corpus_raw/valid.py	/^utf-8	def	setAffinityCode	(	music21Object	)	:	\\n	    	for	music21Class	,	code	,	sortOrder	in	af/;"	f
setAffinityCode	data/data_raw/valid.py	/^utf-8	def	setAffinityCode	(	music21Object	)	:	\\n	    	for	music21Class	,	code	,	sortOrder	in	af/;"	f
setBreak	data/bpe_corpus_raw/valid.py	/^utf-8	def	setBreak	(	self	,	breakFlag	=	True	)	:	\\n	    	if	breakFlag	:	\\n	        	_parseMeth/;"	f
setBreak	data/data_raw/valid.py	/^utf-8	def	setBreak	(	self	,	breakFlag	=	True	)	:	\\n	    	if	breakFlag	:	\\n	        	_parseMeth/;"	f
setCharPositionInLine	data/bpe_corpus_raw/train.py	/^utf-8	def	setCharPositionInLine	(	self	,	pos	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
setCharPositionInLine	data/data_raw/train.py	/^utf-8	def	setCharPositionInLine	(	self	,	pos	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
setDebug	data/bpe_corpus_raw/train.py	/^utf-8	def	setDebug	(	self	,	flag	=	True	)	:	\\n	    	if	flag	:	\\n	        	self	.	setDebugActio/;"	f
setDebug	data/data_raw/train.py	/^utf-8	def	setDebug	(	self	,	flag	=	True	)	:	\\n	    	if	flag	:	\\n	        	self	.	setDebugActio/;"	f
setDesolvation	data/bpe_corpus_raw/valid.py	/^utf-8	def	setDesolvation	(	self	,	label	,	prefactor	=	None	,	allowance	=	None	,	fudge	=	None	,	\\/;"	f
setDesolvation	data/data_raw/valid.py	/^utf-8	def	setDesolvation	(	self	,	label	,	prefactor	=	None	,	allowance	=	None	,	fudge	=	None	,	\\/;"	f
setETag	data/bpe_corpus_raw/train.py	/^utf-8	def	setETag	(	etag	)	:	\\n	$/;"	f
setETag	data/data_raw/train.py	/^utf-8	def	setETag	(	etag	)	:	\\n	$/;"	f
setFailAction	data/bpe_corpus_raw/valid.py	/^utf-8	def	setFailAction	(	self	,	fn	)	:	\\n	    	self	.	failAction	=	fn	\\n	return	self	\\n		$/;"	f
setFailAction	data/data_raw/valid.py	/^utf-8	def	setFailAction	(	self	,	fn	)	:	\\n	    	self	.	failAction	=	fn	\\n	return	self	\\n		$/;"	f
setFileMode	data/bpe_corpus_raw/valid.py	/^utf-8	def	setFileMode	(	self	,	path	,	mode	)	:	\\n	    	return	self	.	_setFileParameter	(	path	,/;"	f
setFileMode	data/data_raw/valid.py	/^utf-8	def	setFileMode	(	self	,	path	,	mode	)	:	\\n	    	return	self	.	_setFileParameter	(	path	,/;"	f
setFillColorRGB	data/bpe_corpus_raw/train.py	/^utf-8	def	setFillColorRGB	(	self	,	r	,	g	,	b	,	alpha	=	None	)	:	\\n	    	self	.	setFillColor	(	(/;"	f
setFillColorRGB	data/data_raw/train.py	/^utf-8	def	setFillColorRGB	(	self	,	r	,	g	,	b	,	alpha	=	None	)	:	\\n	    	self	.	setFillColor	(	(/;"	f
setFilterfreq	data/bpe_corpus_raw/valid.py	/^utf-8	def	setFilterfreq	(	self	,	x	)	:	\\n	    	pyoArgsAssert	(	self	,	'O'	,	x	)	\\n	self	.	_fil/;"	f
setFilterfreq	data/data_raw/valid.py	/^utf-8	def	setFilterfreq	(	self	,	x	)	:	\\n	    	pyoArgsAssert	(	self	,	'O'	,	x	)	\\n	self	.	_fil/;"	f
setForCurrStep	data/bpe_corpus_raw/valid.py	/^utf-8	def	setForCurrStep	(	self	,	value	)	:	\\n	    	self	.	list	[	len	(	self	.	list	)	-	1	]	=	v/;"	f
setForCurrStep	data/data_raw/valid.py	/^utf-8	def	setForCurrStep	(	self	,	value	)	:	\\n	    	self	.	list	[	len	(	self	.	list	)	-	1	]	=	v/;"	f
setFormatter	data/bpe_corpus_raw/test.py	/^utf-8	def	setFormatter	(	self	,	fmt	)	:	\\n	    	self	.	formatter	=	fmt	\\n		$/;"	f
setFormatter	data/data_raw/test.py	/^utf-8	def	setFormatter	(	self	,	fmt	)	:	\\n	    	self	.	formatter	=	fmt	\\n		$/;"	f
setHostsMask	data/bpe_corpus_raw/train.py	/^utf-8	def	setHostsMask	(	self	,	value	)	:	\\n	    	if	checkRegExp	(	value	)	:	\\n	        	self	/;"	f
setHostsMask	data/data_raw/train.py	/^utf-8	def	setHostsMask	(	self	,	value	)	:	\\n	    	if	checkRegExp	(	value	)	:	\\n	        	self	/;"	f
setHttpHeaders	data/bpe_corpus_raw/train.py	/^utf-8	def	setHttpHeaders	(	self	,	content_type	=	'text\/xml'	)	:	\\n	    	self	.	setHeader	(	'Ex/;"	f
setHttpHeaders	data/data_raw/train.py	/^utf-8	def	setHttpHeaders	(	self	,	content_type	=	'text\/xml'	)	:	\\n	    	self	.	setHeader	(	'Ex/;"	f
setImageItem	data/bpe_corpus_raw/test.py	/^utf-8	def	setImageItem	(	self	,	img	)	:	\\n	    	self	.	imageItem	=	weakref	.	ref	(	img	)	\\n	im/;"	f
setImageItem	data/data_raw/test.py	/^utf-8	def	setImageItem	(	self	,	img	)	:	\\n	    	self	.	imageItem	=	weakref	.	ref	(	img	)	\\n	im/;"	f
setPassword	data/bpe_corpus_raw/valid.py	/^utf-8	def	setPassword	(	self	,	user	,	password	,	save	=	True	)	:	\\n	    	from	.	password	import/;"	f
setPassword	data/data_raw/valid.py	/^utf-8	def	setPassword	(	self	,	user	,	password	,	save	=	True	)	:	\\n	    	from	.	password	import/;"	f
setProperties	data/bpe_corpus_raw/valid.py	/^utf-8	def	setProperties	(	self	,	props	)	:	\\n	    	self	.	__dict__	.	update	(	props	)	\\n		$/;"	f
setProperties	data/data_raw/valid.py	/^utf-8	def	setProperties	(	self	,	props	)	:	\\n	    	self	.	__dict__	.	update	(	props	)	\\n		$/;"	f
setQuadrantSegments	data/bpe_corpus_raw/valid.py	/^utf-8	def	setQuadrantSegments	(	self	,	quadSegs	:	int	)	->	None	:	\\n	    	self	.	bufParams	.	se/;"	f
setQuadrantSegments	data/data_raw/valid.py	/^utf-8	def	setQuadrantSegments	(	self	,	quadSegs	:	int	)	->	None	:	\\n	    	self	.	bufParams	.	se/;"	f
setRawIndexModeEvent	data/bpe_corpus_raw/valid.py	/^utf-8	def	setRawIndexModeEvent	(	self	,	rawIndexMode	)	:	\\n	    	self	.	sliderCombo	.	setIndexM/;"	f
setRawIndexModeEvent	data/data_raw/valid.py	/^utf-8	def	setRawIndexModeEvent	(	self	,	rawIndexMode	)	:	\\n	    	self	.	sliderCombo	.	setIndexM/;"	f
setToNameAddToDialog	data/bpe_corpus_raw/train.py	/^utf-8	def	setToNameAddToDialog	(	self	,	name	,	gridPosition	)	:	\\n	    	if	self	.	radioVar	!=	N/;"	f
setToNameAddToDialog	data/data_raw/train.py	/^utf-8	def	setToNameAddToDialog	(	self	,	name	,	gridPosition	)	:	\\n	    	if	self	.	radioVar	!=	N/;"	f
setType	data/bpe_corpus_raw/train.py	/^utf-8	def	setType	(	self	,	t	,	type	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
setType	data/data_raw/train.py	/^utf-8	def	setType	(	self	,	t	,	type	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
setUp	data/bpe_corpus_raw/test.py	/^utf-8	def	setUp	(	self	)	:	\\n	    	super	(	DonationViewTest	,	self	)	.	setUp	(	)	\\n	self	.	use/;"	f
setUp	data/bpe_corpus_raw/train.py	/^utf-8	def	setUp	(	self	)	:	\\n	    	_parser	=	OptionParser	(	)	\\n	_parser	.	add_option	(	'-d'	,/;"	f
setUp	data/bpe_corpus_raw/valid.py	/^utf-8	def	setUp	(	self	)	:	\\n	    	cache_patcher	=	patch	(	'open_connect.mailer.models.cache'	)/;"	f
setUp	data/bpe_corpus_raw/valid.py	/^utf-8	def	setUp	(	self	)	:	\\n	    	db	.	setup	(	{	'sqlalchemy.url'	:	'sqlite:\/\/\/:memory:'	}	/;"	f
setUp	data/bpe_corpus_raw/valid.py	/^utf-8	def	setUp	(	self	)	:	\\n	    	header_str	=	'#include <math.h>\\\\n'	\\n	if	sys	.	platform	/;"	f
setUp	data/bpe_corpus_raw/valid.py	/^utf-8	def	setUp	(	self	)	:	\\n	    	self	.	conn	=	MockConnection	(	)	\\n	self	.	channel	=	channe/;"	f
setUp	data/bpe_corpus_raw/valid.py	/^utf-8	def	setUp	(	self	)	:	\\n	    	source	=	self	.	params	.	get	(	'source'	,	default	=	'abort.c/;"	f
setUp	data/bpe_corpus_raw/valid.py	/^utf-8	def	setUp	(	self	)	:	\\n	    	super	(	TestVideoThumbnails	,	self	)	.	setUp	(	)	\\n	self	.	/;"	f
setUp	data/bpe_corpus_raw/valid.py	/^utf-8	def	setUp	(	self	)	:	\\n	    	super	(	TextbookCreateTestCase	,	self	)	.	setUp	(	)	\\n	self/;"	f
setUp	data/bpe_corpus_raw/valid.py	/^utf-8	def	setUp	(	self	,	username	=	'admin'	,	password	=	'password'	)	:	\\n	    	self	.	assertEq/;"	f
setUp	data/data_raw/test.py	/^utf-8	def	setUp	(	self	)	:	\\n	    	super	(	DonationViewTest	,	self	)	.	setUp	(	)	\\n	self	.	use/;"	f
setUp	data/data_raw/train.py	/^utf-8	def	setUp	(	self	)	:	\\n	    	_parser	=	OptionParser	(	)	\\n	_parser	.	add_option	(	'-d'	,/;"	f
setUp	data/data_raw/valid.py	/^utf-8	def	setUp	(	self	)	:	\\n	    	cache_patcher	=	patch	(	'open_connect.mailer.models.cache'	)/;"	f
setUp	data/data_raw/valid.py	/^utf-8	def	setUp	(	self	)	:	\\n	    	db	.	setup	(	{	'sqlalchemy.url'	:	'sqlite:\/\/\/:memory:'	}	/;"	f
setUp	data/data_raw/valid.py	/^utf-8	def	setUp	(	self	)	:	\\n	    	header_str	=	'#include <math.h>\\\\n'	\\n	if	sys	.	platform	/;"	f
setUp	data/data_raw/valid.py	/^utf-8	def	setUp	(	self	)	:	\\n	    	self	.	conn	=	MockConnection	(	)	\\n	self	.	channel	=	channe/;"	f
setUp	data/data_raw/valid.py	/^utf-8	def	setUp	(	self	)	:	\\n	    	source	=	self	.	params	.	get	(	'source'	,	default	=	'abort.c/;"	f
setUp	data/data_raw/valid.py	/^utf-8	def	setUp	(	self	)	:	\\n	    	super	(	TestVideoThumbnails	,	self	)	.	setUp	(	)	\\n	self	.	/;"	f
setUp	data/data_raw/valid.py	/^utf-8	def	setUp	(	self	)	:	\\n	    	super	(	TextbookCreateTestCase	,	self	)	.	setUp	(	)	\\n	self/;"	f
setUp	data/data_raw/valid.py	/^utf-8	def	setUp	(	self	,	username	=	'admin'	,	password	=	'password'	)	:	\\n	    	self	.	assertEq/;"	f
set_channel_swap	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_channel_swap	(	self	,	in_	,	order	)	:	\\n	    	self	.	__check_input	(	in_	)	\\n	if/;"	f
set_channel_swap	data/data_raw/valid.py	/^utf-8	def	set_channel_swap	(	self	,	in_	,	order	)	:	\\n	    	self	.	__check_input	(	in_	)	\\n	if/;"	f
set_child	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_child	(	self	,	i	,	child	)	:	\\n	    	child	.	parent	=	self	\\n	self	.	children	[	/;"	f
set_child	data/data_raw/valid.py	/^utf-8	def	set_child	(	self	,	i	,	child	)	:	\\n	    	child	.	parent	=	self	\\n	self	.	children	[	/;"	f
set_color	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_color	(	image	,	coords	,	color	,	alpha	=	1	)	:	\\n	    	rr	,	cc	=	coords	\\n	if	im/;"	f
set_color	data/data_raw/valid.py	/^utf-8	def	set_color	(	image	,	coords	,	color	,	alpha	=	1	)	:	\\n	    	rr	,	cc	=	coords	\\n	if	im/;"	f
set_control_number	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_control_number	(	self	,	control_number	)	:	\\n	    	field	=	Field	(	tag	=	'001'	,	/;"	f
set_control_number	data/data_raw/valid.py	/^utf-8	def	set_control_number	(	self	,	control_number	)	:	\\n	    	field	=	Field	(	tag	=	'001'	,	/;"	f
set_cookie	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_cookie	(	self	,	cookie_name	,	cookie_value	)	:	\\n	    	self	.	app	.	cookies	[	coo/;"	f
set_cookie	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_cookie	(	self	,	key	,	value	=	''	,	max_age	=	None	,	expires	=	None	,	path	=	'\/'	,/;"	f
set_cookie	data/data_raw/valid.py	/^utf-8	def	set_cookie	(	self	,	cookie_name	,	cookie_value	)	:	\\n	    	self	.	app	.	cookies	[	coo/;"	f
set_cookie	data/data_raw/valid.py	/^utf-8	def	set_cookie	(	self	,	key	,	value	=	''	,	max_age	=	None	,	expires	=	None	,	path	=	'\/'	,/;"	f
set_crash_recovery	data/bpe_corpus_raw/train.py	/^utf-8	def	set_crash_recovery	(	self	,	state	=	True	)	:	\\n	    	self	.	_crash_recovery	=	state	\\/;"	f
set_crash_recovery	data/data_raw/train.py	/^utf-8	def	set_crash_recovery	(	self	,	state	=	True	)	:	\\n	    	self	.	_crash_recovery	=	state	\\/;"	f
set_creator_node	data/bpe_corpus_raw/train.py	/^utf-8	def	set_creator_node	(	self	,	creator_node	)	:	\\n	    	self	.	creator_node	=	creator_node/;"	f
set_creator_node	data/data_raw/train.py	/^utf-8	def	set_creator_node	(	self	,	creator_node	)	:	\\n	    	self	.	creator_node	=	creator_node/;"	f
set_data	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_data	(	self	,	path	,	data	,	*	,	_mode	=	438	)	:	\\n	    	parent	,	filename	=	_path/;"	f
set_data	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_data	(	self	,	path	,	value	,	version	=	-	1	)	:	\\n	    	if	not	isinstance	(	path	,/;"	f
set_data	data/data_raw/valid.py	/^utf-8	def	set_data	(	self	,	path	,	data	,	*	,	_mode	=	438	)	:	\\n	    	parent	,	filename	=	_path/;"	f
set_data	data/data_raw/valid.py	/^utf-8	def	set_data	(	self	,	path	,	value	,	version	=	-	1	)	:	\\n	    	if	not	isinstance	(	path	,/;"	f
set_default_etree	data/bpe_corpus_raw/train.py	/^utf-8	def	set_default_etree	(	etree	)	:	\\n	    	from	pyamf	import	xml	\\n	return	xml	.	set_defa/;"	f
set_default_etree	data/data_raw/train.py	/^utf-8	def	set_default_etree	(	etree	)	:	\\n	    	from	pyamf	import	xml	\\n	return	xml	.	set_defa/;"	f
set_default_proxy	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_default_proxy	(	proxy_type	=	None	,	addr	=	None	,	port	=	None	,	rdns	=	True	,	\\n	/;"	f
set_default_proxy	data/data_raw/valid.py	/^utf-8	def	set_default_proxy	(	proxy_type	=	None	,	addr	=	None	,	port	=	None	,	rdns	=	True	,	\\n	/;"	f
set_default_weight	data/bpe_corpus_raw/train.py	/^utf-8	def	set_default_weight	(	self	,	weight	)	:	\\n	    	self	.	__default_weight	=	weight	\\n		$/;"	f
set_default_weight	data/data_raw/train.py	/^utf-8	def	set_default_weight	(	self	,	weight	)	:	\\n	    	self	.	__default_weight	=	weight	\\n		$/;"	f
set_defaults	data/bpe_corpus_raw/train.py	/^utf-8	def	set_defaults	(	self	)	:	\\n	    	for	resource	,	settings	in	self	.	config	[	'DOMAIN'	]/;"	f
set_defaults	data/data_raw/train.py	/^utf-8	def	set_defaults	(	self	)	:	\\n	    	for	resource	,	settings	in	self	.	config	[	'DOMAIN'	]/;"	f
set_dictionary_for_worker	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_dictionary_for_worker	(	self	,	d	)	:	\\n	    	self	.	get_dictionary	(	)	.	clear	(	/;"	f
set_dictionary_for_worker	data/data_raw/valid.py	/^utf-8	def	set_dictionary_for_worker	(	self	,	d	)	:	\\n	    	self	.	get_dictionary	(	)	.	clear	(	/;"	f
set_element_text	data/bpe_corpus_raw/test.py	/^utf-8	def	set_element_text	(	root	,	path	,	text	)	:	\\n	    	elements	=	XPath	(	path	)	(	root	)	/;"	f
set_element_text	data/data_raw/test.py	/^utf-8	def	set_element_text	(	root	,	path	,	text	)	:	\\n	    	elements	=	XPath	(	path	)	(	root	)	/;"	f
set_exe	data/bpe_corpus_raw/valid.py	/^utf-8	def	find_executables	(	self	)	:	\\n	    	assert	self	.	_is_customised	\\n	exe_cache	=	self/;"	f	function:find_executables.cached_find_executable.verify_command_form	file:
set_exe	data/data_raw/valid.py	/^utf-8	def	find_executables	(	self	)	:	\\n	    	assert	self	.	_is_customised	\\n	exe_cache	=	self/;"	f	function:find_executables.cached_find_executable.verify_command_form	file:
set_expiry	data/bpe_corpus_raw/train.py	/^utf-8	def	set_expiry	(	self	,	timeout	)	:	\\n	    	if	timeout	is	None	:	\\n	        	self	.	_ttl/;"	f
set_expiry	data/data_raw/train.py	/^utf-8	def	set_expiry	(	self	,	timeout	)	:	\\n	    	if	timeout	is	None	:	\\n	        	self	.	_ttl/;"	f
set_extended_position	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_extended_position	(	self	,	position	)	:	\\n	    	if	len	(	position	)	!=	s3g	.	EXTE/;"	f
set_extended_position	data/data_raw/valid.py	/^utf-8	def	set_extended_position	(	self	,	position	)	:	\\n	    	if	len	(	position	)	!=	s3g	.	EXTE/;"	f
set_f_stop	data/bpe_corpus_raw/train.py	/^utf-8	def	set_f_stop	(	self	,	cnum	=	1	,	freq	=	''	)	:	\\n	    	scpi_command	=	scpi_preprocess	(/;"	f
set_f_stop	data/data_raw/train.py	/^utf-8	def	set_f_stop	(	self	,	cnum	=	1	,	freq	=	''	)	:	\\n	    	scpi_command	=	scpi_preprocess	(/;"	f
set_fade	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_fade	(	self	,	color_and_fade_callback	:	Callable	[	[	int	]	,	Tuple	[	float	,	int	]/;"	f
set_fade	data/data_raw/valid.py	/^utf-8	def	set_fade	(	self	,	color_and_fade_callback	:	Callable	[	[	int	]	,	Tuple	[	float	,	int	]/;"	f
set_fill_value	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_fill_value	(	a	,	fill_value	)	:	\\n	    	if	isinstance	(	a	,	MaskedArray	)	:	\\n	 /;"	f
set_fill_value	data/data_raw/valid.py	/^utf-8	def	set_fill_value	(	a	,	fill_value	)	:	\\n	    	if	isinstance	(	a	,	MaskedArray	)	:	\\n	 /;"	f
set_gpio_pins	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_gpio_pins	(	)	:	\\n	    	GPIO	.	setmode	(	GPIO	.	BCM	)	\\n	GPIO	.	setup	(	BACK_MOT/;"	f
set_gpio_pins	data/data_raw/valid.py	/^utf-8	def	set_gpio_pins	(	)	:	\\n	    	GPIO	.	setmode	(	GPIO	.	BCM	)	\\n	GPIO	.	setup	(	BACK_MOT/;"	f
set_header_if_not_none	data/bpe_corpus_raw/valid.py	/^utf-8	@	app	.	route	(	'\/<string:container_name>\/<path:object_name>'	,	methods	=	[	'HEAD'	]	)	\\/;"	f	function:head_object	file:
set_header_if_not_none	data/data_raw/valid.py	/^utf-8	@	app	.	route	(	'\/<string:container_name>\/<path:object_name>'	,	methods	=	[	'HEAD'	]	)	\\/;"	f	function:head_object	file:
set_icon	data/bpe_corpus_raw/test.py	/^utf-8	def	set_icon	(	self	,	icon	)	:	\\n	    	self	.	_icon	=	icon	\\n	return	self	.	_listitem	.	/;"	f
set_icon	data/data_raw/test.py	/^utf-8	def	set_icon	(	self	,	icon	)	:	\\n	    	self	.	_icon	=	icon	\\n	return	self	.	_listitem	.	/;"	f
set_input_value	data/bpe_corpus_raw/train.py	/^utf-8	def	set_input_value	(	self	,	selector	,	value	)	:	\\n	    	script	=	'document.querySelecto/;"	f
set_input_value	data/data_raw/train.py	/^utf-8	def	set_input_value	(	self	,	selector	,	value	)	:	\\n	    	script	=	'document.querySelecto/;"	f
set_lacp_fallback	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_lacp_fallback	(	self	,	name	,	mode	=	None	)	:	\\n	    	if	mode	not	in	[	'disabled'/;"	f
set_lacp_fallback	data/data_raw/valid.py	/^utf-8	def	set_lacp_fallback	(	self	,	name	,	mode	=	None	)	:	\\n	    	if	mode	not	in	[	'disabled'/;"	f
set_limits	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_limits	(	self	,	low	=	None	,	high	=	None	)	:	\\n	    	if	low	is	not	None	:	\\n	   /;"	f
set_limits	data/data_raw/valid.py	/^utf-8	def	set_limits	(	self	,	low	=	None	,	high	=	None	)	:	\\n	    	if	low	is	not	None	:	\\n	   /;"	f
set_logging_level	data/bpe_corpus_raw/test.py	/^utf-8	def	set_logging_level	(	self	,	new_log_level	)	:	\\n	    	self	.	log	.	set_logging_level	(/;"	f
set_logging_level	data/data_raw/test.py	/^utf-8	def	set_logging_level	(	self	,	new_log_level	)	:	\\n	    	self	.	log	.	set_logging_level	(/;"	f
set_logging_service	data/bpe_corpus_raw/test.py	/^utf-8	def	set_logging_service	(	self	,	project_id	,	zone	,	cluster_id	,	logging_service	,	\\n	na/;"	f
set_logging_service	data/data_raw/test.py	/^utf-8	def	set_logging_service	(	self	,	project_id	,	zone	,	cluster_id	,	logging_service	,	\\n	na/;"	f
set_margin	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_margin	(	self	,	top	=	40	,	bottom	=	30	,	left	=	50	,	right	=	10	,	buffer_size	=	8	/;"	f
set_margin	data/data_raw/valid.py	/^utf-8	def	set_margin	(	self	,	top	=	40	,	bottom	=	30	,	left	=	50	,	right	=	10	,	buffer_size	=	8	/;"	f
set_master	data/bpe_corpus_raw/train.py	/^utf-8	def	set_master	(	self	,	master_server	,	get_cur_log_pos	=	True	)	:	\\n	    	self	.	wsrep_c/;"	f
set_master	data/data_raw/train.py	/^utf-8	def	set_master	(	self	,	master_server	,	get_cur_log_pos	=	True	)	:	\\n	    	self	.	wsrep_c/;"	f
set_modelScale	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_modelScale	(	self	,	oldValue	)	:	\\n	    	DEBUG_MSG	(	'%s::set_modelScale: %i chan/;"	f
set_modelScale	data/data_raw/valid.py	/^utf-8	def	set_modelScale	(	self	,	oldValue	)	:	\\n	    	DEBUG_MSG	(	'%s::set_modelScale: %i chan/;"	f
set_modulation_type	data/bpe_corpus_raw/test.py	/^utf-8	def	set_modulation_type	(	self	,	mod_type	)	:	\\n	    	if	mod_type	not	in	[	0	,	1	,	2	]	:	/;"	f
set_modulation_type	data/data_raw/test.py	/^utf-8	def	set_modulation_type	(	self	,	mod_type	)	:	\\n	    	if	mod_type	not	in	[	0	,	1	,	2	]	:	/;"	f
set_partial_cors_and_reset	data/bpe_corpus_raw/train.py	/^utf-8	def	set_partial_cors_and_reset	(	self	)	:	\\n	    	bucket_uri	=	self	.	CreateBucket	(	)	\\/;"	f
set_partial_cors_and_reset	data/data_raw/train.py	/^utf-8	def	set_partial_cors_and_reset	(	self	)	:	\\n	    	bucket_uri	=	self	.	CreateBucket	(	)	\\/;"	f
set_payload	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_payload	(	self	,	payload	,	charset	=	None	)	:	\\n	    	self	.	_payload	=	payload	\\/;"	f
set_payload	data/data_raw/valid.py	/^utf-8	def	set_payload	(	self	,	payload	,	charset	=	None	)	:	\\n	    	self	.	_payload	=	payload	\\/;"	f
set_pickradius	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_pickradius	(	self	,	pickradius	)	:	\\n	    	self	.	pickradius	=	pickradius	\\n		$/;"	f
set_pickradius	data/data_raw/valid.py	/^utf-8	def	set_pickradius	(	self	,	pickradius	)	:	\\n	    	self	.	pickradius	=	pickradius	\\n		$/;"	f
set_placeholders	data/bpe_corpus_raw/test.py	/^utf-8	def	set_placeholders	(	self	,	input_placeholder	,	output_placeholder	)	:	\\n	    	self	.	_/;"	f
set_placeholders	data/data_raw/test.py	/^utf-8	def	set_placeholders	(	self	,	input_placeholder	,	output_placeholder	)	:	\\n	    	self	.	_/;"	f
set_platform_application_attributes	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_platform_application_attributes	(	self	,	platform_application_arn	=	None	,	\\n	att/;"	f
set_platform_application_attributes	data/data_raw/valid.py	/^utf-8	def	set_platform_application_attributes	(	self	,	platform_application_arn	=	None	,	\\n	att/;"	f
set_prefs	.ropeproject/config.py	/^def set_prefs(prefs):$/;"	f
set_prefs	models/.vscode/.ropeproject/config.py	/^def set_prefs(prefs):$/;"	f
set_properties	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_properties	(	self	,	names	,	values	)	:	\\n	    	if	not	isinstance	(	names	,	list	)/;"	f
set_properties	data/data_raw/valid.py	/^utf-8	def	set_properties	(	self	,	names	,	values	)	:	\\n	    	if	not	isinstance	(	names	,	list	)/;"	f
set_proxies	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_proxies	(	self	,	proxies	=	None	,	proxy_bypass	=	None	)	:	\\n	    	self	.	_set_han/;"	f
set_proxies	data/data_raw/valid.py	/^utf-8	def	set_proxies	(	self	,	proxies	=	None	,	proxy_bypass	=	None	)	:	\\n	    	self	.	_set_han/;"	f
set_pubkey	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_pubkey	(	self	,	pkey	)	:	\\n	    	set_result	=	_lib	.	NETSCAPE_SPKI_set_pubkey	(	s/;"	f
set_pubkey	data/data_raw/valid.py	/^utf-8	def	set_pubkey	(	self	,	pkey	)	:	\\n	    	set_result	=	_lib	.	NETSCAPE_SPKI_set_pubkey	(	s/;"	f
set_redirect	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_redirect	(	self	,	redirect_location	,	headers	=	None	)	:	\\n	    	if	headers	is	No/;"	f
set_redirect	data/data_raw/valid.py	/^utf-8	def	set_redirect	(	self	,	redirect_location	,	headers	=	None	)	:	\\n	    	if	headers	is	No/;"	f
set_scale	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_scale	(	self	,	scale	)	:	\\n	    	self	.	_scale	=	scale	\\n		$/;"	f
set_scale	data/data_raw/valid.py	/^utf-8	def	set_scale	(	self	,	scale	)	:	\\n	    	self	.	_scale	=	scale	\\n		$/;"	f
set_scene_numbering	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_scene_numbering	(	indexer_id	,	indexer	,	season	=	0	,	episode	=	0	,	\\n	absolute_n/;"	f
set_scene_numbering	data/data_raw/valid.py	/^utf-8	def	set_scene_numbering	(	indexer_id	,	indexer	,	season	=	0	,	episode	=	0	,	\\n	absolute_n/;"	f
set_sharding_state	data/bpe_corpus_raw/train.py	/^utf-8	def	set_sharding_state	(	self	)	:	\\n	    	epoch	=	self	.	get_own_shard_range	(	)	.	epoch	/;"	f
set_sharding_state	data/data_raw/train.py	/^utf-8	def	set_sharding_state	(	self	)	:	\\n	    	epoch	=	self	.	get_own_shard_range	(	)	.	epoch	/;"	f
set_source_repos	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_source_repos	(	self	,	repos	)	:	\\n	    	self	.	source_repos	=	repos	\\n		$/;"	f
set_source_repos	data/data_raw/valid.py	/^utf-8	def	set_source_repos	(	self	,	repos	)	:	\\n	    	self	.	source_repos	=	repos	\\n		$/;"	f
set_tab_color	data/bpe_corpus_raw/test.py	/^utf-8	def	set_tab_color	(	self	,	color	)	:	\\n	    	self	.	tab_color	=	xl_color	(	color	)	\\n		$/;"	f
set_tab_color	data/data_raw/test.py	/^utf-8	def	set_tab_color	(	self	,	color	)	:	\\n	    	self	.	tab_color	=	xl_color	(	color	)	\\n		$/;"	f
set_test	data/bpe_corpus_raw/valid.py	/^utf-8	def	setastest	(	tf	=	True	)	:	\\n	\\n	    	def	set_test	(	t	)	:	\\n	        	t	.	__test__	/;"	f	function:setastest	file:
set_test	data/data_raw/valid.py	/^utf-8	def	setastest	(	tf	=	True	)	:	\\n	\\n	    	def	set_test	(	t	)	:	\\n	        	t	.	__test__	/;"	f	function:setastest	file:
set_text_props	data/bpe_corpus_raw/test.py	/^utf-8	def	set_text_props	(	self	,	**	kwargs	)	:	\\n	    	self	.	_text	.	update	(	kwargs	)	\\n	se/;"	f
set_text_props	data/data_raw/test.py	/^utf-8	def	set_text_props	(	self	,	**	kwargs	)	:	\\n	    	self	.	_text	.	update	(	kwargs	)	\\n	se/;"	f
set_time_based_auto_scaling	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_time_based_auto_scaling	(	self	,	instance_id	,	auto_scaling_schedule	=	None	)	:	\\/;"	f
set_time_based_auto_scaling	data/data_raw/valid.py	/^utf-8	def	set_time_based_auto_scaling	(	self	,	instance_id	,	auto_scaling_schedule	=	None	)	:	\\/;"	f
set_timeout	data/bpe_corpus_raw/train.py	/^utf-8	def	set_timeout	(	self	)	:	\\n	    	pass	\\n		$/;"	f
set_timeout	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_timeout	(	self	,	timeout	)	:	\\n	    	libnotify	.	notify_notification_set_timeout	/;"	f
set_timeout	data/data_raw/train.py	/^utf-8	def	set_timeout	(	self	)	:	\\n	    	pass	\\n		$/;"	f
set_timeout	data/data_raw/valid.py	/^utf-8	def	set_timeout	(	self	,	timeout	)	:	\\n	    	libnotify	.	notify_notification_set_timeout	/;"	f
set_title	data/bpe_corpus_raw/train.py	/^utf-8	def	set_title	(	self	,	options	)	:	\\n	    	name	,	name_formula	=	self	.	_process_names	(	/;"	f
set_title	data/bpe_corpus_raw/train.py	/^utf-8	def	set_title	(	self	,	title	)	:	\\n	    	field	=	Field	(	tag	=	'245'	,	indicators	=	[	'0'/;"	f
set_title	data/data_raw/train.py	/^utf-8	def	set_title	(	self	,	options	)	:	\\n	    	name	,	name_formula	=	self	.	_process_names	(	/;"	f
set_title	data/data_raw/train.py	/^utf-8	def	set_title	(	self	,	title	)	:	\\n	    	field	=	Field	(	tag	=	'245'	,	indicators	=	[	'0'/;"	f
set_tunnel	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_tunnel	(	self	,	host	,	port	=	None	,	headers	=	None	)	:	\\n	    	self	.	_httpreque/;"	f
set_tunnel	data/data_raw/valid.py	/^utf-8	def	set_tunnel	(	self	,	host	,	port	=	None	,	headers	=	None	)	:	\\n	    	self	.	_httpreque/;"	f
set_username	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_username	(	self	,	username	)	:	\\n	    	try	:	\\n	        	auth_system	=	self	.	au/;"	f
set_username	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_username	(	strategy	,	details	,	user	,	social	,	*	args	,	**	kwargs	)	:	\\n	    	if/;"	f
set_username	data/data_raw/valid.py	/^utf-8	def	set_username	(	self	,	username	)	:	\\n	    	try	:	\\n	        	auth_system	=	self	.	au/;"	f
set_username	data/data_raw/valid.py	/^utf-8	def	set_username	(	strategy	,	details	,	user	,	social	,	*	args	,	**	kwargs	)	:	\\n	    	if/;"	f
set_visible	data/bpe_corpus_raw/train.py	/^utf-8	def	set_visible	(	self	,	visible	)	:	\\n	    	self	.	_visible	=	visible	\\n	if	visible	:	\\/;"	f
set_visible	data/data_raw/train.py	/^utf-8	def	set_visible	(	self	,	visible	)	:	\\n	    	self	.	_visible	=	visible	\\n	if	visible	:	\\/;"	f
set_waveform2_freq	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_waveform2_freq	(	self	,	freq	)	:	\\n	    	if	freq	is	None	:	\\n	        	self	[	WA/;"	f
set_waveform2_freq	data/data_raw/valid.py	/^utf-8	def	set_waveform2_freq	(	self	,	freq	)	:	\\n	    	if	freq	is	None	:	\\n	        	self	[	WA/;"	f
set_width	data/bpe_corpus_raw/train.py	/^utf-8	def	set_width	(	self	,	width	)	:	\\n	    	self	.	width	=	width	\\n		$/;"	f
set_width	data/data_raw/train.py	/^utf-8	def	set_width	(	self	,	width	)	:	\\n	    	self	.	width	=	width	\\n		$/;"	f
set_writer_position	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_writer_position	(	self	,	name	,	timestamp	)	:	\\n	    	execute	=	self	.	cursor	.	e/;"	f
set_writer_position	data/data_raw/valid.py	/^utf-8	def	set_writer_position	(	self	,	name	,	timestamp	)	:	\\n	    	execute	=	self	.	cursor	.	e/;"	f
set_yi	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_yi	(	self	,	yi	,	axis	=	None	)	:	\\n	    	if	yi	is	None	:	\\n	        	self	.	yi	=/;"	f
set_yi	data/data_raw/valid.py	/^utf-8	def	set_yi	(	self	,	yi	,	axis	=	None	)	:	\\n	    	if	yi	is	None	:	\\n	        	self	.	yi	=/;"	f
set_z	data/bpe_corpus_raw/valid.py	/^utf-8	def	set_z	(	self	,	value	)	:	\\n	    	if	self	.	hasz	:	\\n	        	self	.	_cs	.	setOrdina/;"	f
set_z	data/data_raw/valid.py	/^utf-8	def	set_z	(	self	,	value	)	:	\\n	    	if	self	.	hasz	:	\\n	        	self	.	_cs	.	setOrdina/;"	f
setastest	data/bpe_corpus_raw/valid.py	/^utf-8	def	setastest	(	tf	=	True	)	:	\\n	\\n	    	def	set_test	(	t	)	:	\\n	        	t	.	__test__	/;"	f
setastest	data/data_raw/valid.py	/^utf-8	def	setastest	(	tf	=	True	)	:	\\n	\\n	    	def	set_test	(	t	)	:	\\n	        	t	.	__test__	/;"	f
setcbreak	data/bpe_corpus_raw/valid.py	/^utf-8	def	setcbreak	(	fd	,	when	=	TCSAFLUSH	)	:	\\n	    	mode	=	tcgetattr	(	fd	)	\\n	mode	[	LFLA/;"	f
setcbreak	data/data_raw/valid.py	/^utf-8	def	setcbreak	(	fd	,	when	=	TCSAFLUSH	)	:	\\n	    	mode	=	tcgetattr	(	fd	)	\\n	mode	[	LFLA/;"	f
setdefault	data/bpe_corpus_raw/test.py	/^utf-8	def	setdefault	(	self	,	key	,	value	)	:	\\n	    	if	key	not	in	self	:	\\n	        	self	[	/;"	f
setdefault	data/data_raw/test.py	/^utf-8	def	setdefault	(	self	,	key	,	value	)	:	\\n	    	if	key	not	in	self	:	\\n	        	self	[	/;"	f
setdiff1d	data/bpe_corpus_raw/train.py	/^utf-8	def	setdiff1d	(	ar1	,	ar2	,	assume_unique	=	False	)	:	\\n	    	if	assume_unique	:	\\n	    /;"	f
setdiff1d	data/data_raw/train.py	/^utf-8	def	setdiff1d	(	ar1	,	ar2	,	assume_unique	=	False	)	:	\\n	    	if	assume_unique	:	\\n	    /;"	f
setdummies	data/bpe_corpus_raw/valid.py	/^utf-8	def	setdummies	(	self	,	e	)	:	\\n	    	v0	,	v1	=	e	.	v	\\n	r0	,	r1	=	self	.	grx	[	v0	]	.	r/;"	f
setdummies	data/data_raw/valid.py	/^utf-8	def	setdummies	(	self	,	e	)	:	\\n	    	v0	,	v1	=	e	.	v	\\n	r0	,	r1	=	self	.	grx	[	v0	]	.	r/;"	f
setproxy	data/bpe_corpus_raw/test.py	/^utf-8	def	setproxy	(	self	,	proxytype	=	None	,	addr	=	None	,	port	=	None	,	rdns	=	True	,	\\n	use/;"	f
setproxy	data/data_raw/test.py	/^utf-8	def	setproxy	(	self	,	proxytype	=	None	,	addr	=	None	,	port	=	None	,	rdns	=	True	,	\\n	use/;"	f
setting	data/bpe_corpus_raw/valid.py	/^utf-8	def	setting	(	self	,	name	,	default	=	NoDefault	)	:	\\n	    	if	default	is	NoDefault	:	\\n/;"	f
setting	data/data_raw/valid.py	/^utf-8	def	setting	(	self	,	name	,	default	=	NoDefault	)	:	\\n	    	if	default	is	NoDefault	:	\\n/;"	f
setup	data/bpe_corpus_raw/train.py	/^utf-8	def	setup	(	pkg	,	setup_py	,	cmake_shared_library_prefix	,	\\n	cmake_shared_library_suffix/;"	f
setup	data/data_raw/train.py	/^utf-8	def	setup	(	pkg	,	setup_py	,	cmake_shared_library_prefix	,	\\n	cmake_shared_library_suffix/;"	f
setup_drag	data/bpe_corpus_raw/train.py	/^utf-8	def	setup_drag	(	self	,	widget	,	get_drag_data_func	,	drag_data_receive_func	,	\\n	get_dra/;"	f
setup_drag	data/data_raw/train.py	/^utf-8	def	setup_drag	(	self	,	widget	,	get_drag_data_func	,	drag_data_receive_func	,	\\n	get_dra/;"	f
setup_platform	data/bpe_corpus_raw/train.py	/^utf-8	def	setup_platform	(	hass	,	config	,	add_entities	,	discovery_info	=	None	)	:	\\n	    	bas/;"	f
setup_platform	data/bpe_corpus_raw/train.py	/^utf-8	def	setup_platform	(	hass	,	config	,	add_entities	,	discovery_info	=	None	)	:	\\n	    	dev/;"	f
setup_platform	data/data_raw/train.py	/^utf-8	def	setup_platform	(	hass	,	config	,	add_entities	,	discovery_info	=	None	)	:	\\n	    	bas/;"	f
setup_platform	data/data_raw/train.py	/^utf-8	def	setup_platform	(	hass	,	config	,	add_entities	,	discovery_info	=	None	)	:	\\n	    	dev/;"	f
setup_processor_data_feeder	data/bpe_corpus_raw/valid.py	/^utf-8	def	setup_processor_data_feeder	(	x	)	:	\\n	    	if	HAS_PANDAS	:	\\n	        	x	=	extract_/;"	f
setup_processor_data_feeder	data/data_raw/valid.py	/^utf-8	def	setup_processor_data_feeder	(	x	)	:	\\n	    	if	HAS_PANDAS	:	\\n	        	x	=	extract_/;"	f
setup_python26	data/bpe_corpus_raw/train.py	/^utf-8	def	setup_python26	(	self	)	:	\\n	    	self	.	client	=	Python26TestResult	(	)	\\n	self	.	s/;"	f
setup_python26	data/data_raw/train.py	/^utf-8	def	setup_python26	(	self	)	:	\\n	    	self	.	client	=	Python26TestResult	(	)	\\n	self	.	s/;"	f
sha1	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	sha1	(	self	)	:	\\n	    	return	self	.	__sha1	\\n		$/;"	f
sha1	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	sha1	(	self	)	:	\\n	    	return	self	.	__sha1	\\n		$/;"	f
shape	data/bpe_corpus_raw/test.py	/^utf-8	@	property	\\n	def	shape	(	self	)	->	str	:	\\n	    	return	self	.	_shape	\\n		$/;"	f
shape	data/data_raw/test.py	/^utf-8	@	property	\\n	def	shape	(	self	)	->	str	:	\\n	    	return	self	.	_shape	\\n		$/;"	f
shapeShader	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	shapeShader	(	self	)	:	\\n	    	return	self	.	_shapeShader	\\n		$/;"	f
shapeShader	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	shapeShader	(	self	)	:	\\n	    	return	self	.	_shapeShader	\\n		$/;"	f
shape_internal	data/bpe_corpus_raw/test.py	/^utf-8	def	shape_internal	(	input	,	name	=	None	,	optimize	=	True	,	out_type	=	dtypes	.	int32	)	:/;"	f
shape_internal	data/data_raw/test.py	/^utf-8	def	shape_internal	(	input	,	name	=	None	,	optimize	=	True	,	out_type	=	dtypes	.	int32	)	:/;"	f
shelf	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	shelf	(	self	)	:	\\n	    	return	self	.	_shelf	\\n		$/;"	f
shelf	data/data_raw/train.py	/^utf-8	@	property	\\n	def	shelf	(	self	)	:	\\n	    	return	self	.	_shelf	\\n		$/;"	f
shell	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	shell	(	self	)	:	\\n	    	return	self	[	0	]	\\n		$/;"	f
shell	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	shell	(	self	)	:	\\n	    	return	self	[	0	]	\\n		$/;"	f
shell_comment	data/bpe_corpus_raw/valid.py	/^utf-8	def	shell_comment	(	c	)	:	\\n	    	return	ShellQuoted	(	'# {c}'	)	.	format	(	c	=	ShellQuot/;"	f
shell_comment	data/data_raw/valid.py	/^utf-8	def	shell_comment	(	c	)	:	\\n	    	return	ShellQuoted	(	'# {c}'	)	.	format	(	c	=	ShellQuot/;"	f
shift	data/bpe_corpus_raw/valid.py	/^utf-8	def	shift	(	self	,	type	,	value	,	newstate	,	context	)	:	\\n	    	dfa	,	state	,	node	=	sel/;"	f
shift	data/bpe_corpus_raw/valid.py	/^utf-8	def	shift	(	x	,	a	,	period	=	None	,	_cache	=	_cache	)	:	\\n	    	tmp	=	asarray	(	x	)	\\n	i/;"	f
shift	data/data_raw/valid.py	/^utf-8	def	shift	(	self	,	type	,	value	,	newstate	,	context	)	:	\\n	    	dfa	,	state	,	node	=	sel/;"	f
shift	data/data_raw/valid.py	/^utf-8	def	shift	(	x	,	a	,	period	=	None	,	_cache	=	_cache	)	:	\\n	    	tmp	=	asarray	(	x	)	\\n	i/;"	f
shortid	data/bpe_corpus_raw/test.py	/^utf-8	def	write_object_diff	(	f	,	store	,	old_file	,	new_file	,	diff_binary	=	False	)	:	\\n	    /;"	f	function:write_object_diff	file:
shortid	data/data_raw/test.py	/^utf-8	def	write_object_diff	(	f	,	store	,	old_file	,	new_file	,	diff_binary	=	False	)	:	\\n	    /;"	f	function:write_object_diff	file:
shouldFlush	data/bpe_corpus_raw/valid.py	/^utf-8	def	shouldFlush	(	self	,	record	)	:	\\n	    	return	len	(	self	.	buffer	)	>=	self	.	capaci/;"	f
shouldFlush	data/data_raw/valid.py	/^utf-8	def	shouldFlush	(	self	,	record	)	:	\\n	    	return	len	(	self	.	buffer	)	>=	self	.	capaci/;"	f
should_be_compact_paragraph	data/bpe_corpus_raw/train.py	/^utf-8	def	should_be_compact_paragraph	(	self	,	node	)	:	\\n	    	if	isinstance	(	node	.	parent	,/;"	f
should_be_compact_paragraph	data/data_raw/train.py	/^utf-8	def	should_be_compact_paragraph	(	self	,	node	)	:	\\n	    	if	isinstance	(	node	.	parent	,/;"	f
should_bypass_proxies	data/bpe_corpus_raw/train.py	/^utf-8	def	should_bypass_proxies	(	url	,	no_proxy	)	:	\\n	    	get_proxy	=	lambda	k	:	os	.	enviro/;"	f
should_bypass_proxies	data/data_raw/train.py	/^utf-8	def	should_bypass_proxies	(	url	,	no_proxy	)	:	\\n	    	get_proxy	=	lambda	k	:	os	.	enviro/;"	f
should_disable_ldap	data/bpe_corpus_raw/valid.py	/^utf-8	def	should_disable_ldap	(	self	,	service_name	)	:	\\n	    	if	self	.	is_managing_services	/;"	f
should_disable_ldap	data/data_raw/valid.py	/^utf-8	def	should_disable_ldap	(	self	,	service_name	)	:	\\n	    	if	self	.	is_managing_services	/;"	f
should_exist	data/bpe_corpus_raw/valid.py	/^utf-8	def	should_exist	(	self	,	path	,	msg	=	None	)	:	\\n	    	path	=	self	.	_absnorm	(	path	)	\\/;"	f
should_exist	data/data_raw/valid.py	/^utf-8	def	should_exist	(	self	,	path	,	msg	=	None	)	:	\\n	    	path	=	self	.	_absnorm	(	path	)	\\/;"	f
should_poll	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	should_poll	(	self	)	:	\\n	    	return	False	\\n		$/;"	f
should_poll	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	should_poll	(	self	)	:	\\n	    	return	False	\\n		$/;"	f
show	data/bpe_corpus_raw/train.py	/^utf-8	def	show	(	self	)	:	\\n	    	self	.	_widget	.	show	(	)	\\n		$/;"	f
show	data/data_raw/train.py	/^utf-8	def	show	(	self	)	:	\\n	    	self	.	_widget	.	show	(	)	\\n		$/;"	f
showFeedback	data/bpe_corpus_raw/valid.py	/^utf-8	def	showFeedback	(	self	,	feedback	)	:	\\n	    	pass	\\n		$/;"	f
showFeedback	data/data_raw/valid.py	/^utf-8	def	showFeedback	(	self	,	feedback	)	:	\\n	    	pass	\\n		$/;"	f
show_fig_outline_in_viewer	data/bpe_corpus_raw/train.py	/^utf-8	def	show_fig_outline_in_viewer	(	self	,	state	)	:	\\n	    	if	state	is	True	:	\\n	        /;"	f
show_fig_outline_in_viewer	data/data_raw/train.py	/^utf-8	def	show_fig_outline_in_viewer	(	self	,	state	)	:	\\n	    	if	state	is	True	:	\\n	        /;"	f
show_metering_label	data/bpe_corpus_raw/valid.py	/^utf-8	def	show_metering_label	(	self	,	metering_label	,	**	_params	)	:	\\n	    	return	self	.	ge/;"	f
show_metering_label	data/data_raw/valid.py	/^utf-8	def	show_metering_label	(	self	,	metering_label	,	**	_params	)	:	\\n	    	return	self	.	ge/;"	f
showlyxformat	data/bpe_corpus_raw/train.py	/^utf-8	def	showlyxformat	(	self	)	:	\\n	    	Trace	.	message	(	GeneralConfig	.	version	[	'lyxform/;"	f
showlyxformat	data/data_raw/train.py	/^utf-8	def	showlyxformat	(	self	)	:	\\n	    	Trace	.	message	(	GeneralConfig	.	version	[	'lyxform/;"	f
showtip	data/bpe_corpus_raw/train.py	/^utf-8	def	showtip	(	self	,	text	,	parenleft	,	parenright	)	:	\\n	    	self	.	text	=	text	\\n	if	/;"	f
showtip	data/data_raw/train.py	/^utf-8	def	showtip	(	self	,	text	,	parenleft	,	parenright	)	:	\\n	    	self	.	text	=	text	\\n	if	/;"	f
shuffle	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	shuffle	(	self	)	:	\\n	    	return	self	.	_table	.	is_shuffle	\\n		$/;"	f
shuffle	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	shuffle	(	self	)	:	\\n	    	return	self	.	_table	.	is_shuffle	\\n		$/;"	f
shutdown	data/bpe_corpus_raw/train.py	/^utf-8	def	shutdown	(	self	,	wait	=	True	)	:	\\n	    	pass	\\n		$/;"	f
shutdown	data/data_raw/train.py	/^utf-8	def	shutdown	(	self	,	wait	=	True	)	:	\\n	    	pass	\\n		$/;"	f
shutdown_worker	data/bpe_corpus_raw/train.py	/^utf-8	def	_queue_management_worker	(	executor_reference	,	processes	,	\\n	pending_work_items	,	w/;"	f	function:_queue_management_worker.shutting_down	file:
shutdown_worker	data/data_raw/train.py	/^utf-8	def	_queue_management_worker	(	executor_reference	,	processes	,	\\n	pending_work_items	,	w/;"	f	function:_queue_management_worker.shutting_down	file:
shutting_down	data/bpe_corpus_raw/train.py	/^utf-8	def	_queue_management_worker	(	executor_reference	,	processes	,	\\n	pending_work_items	,	w/;"	f	function:_queue_management_worker	file:
shutting_down	data/data_raw/train.py	/^utf-8	def	_queue_management_worker	(	executor_reference	,	processes	,	\\n	pending_work_items	,	w/;"	f	function:_queue_management_worker	file:
sight_move_operation	data/bpe_corpus_raw/train.py	/^utf-8	def	sight_move_operation	(	self	,	op	)	:	\\n	    	obj	=	self	.	map	.	update	(	op	[	0	]	,	o/;"	f
sight_move_operation	data/data_raw/train.py	/^utf-8	def	sight_move_operation	(	self	,	op	)	:	\\n	    	obj	=	self	.	map	.	update	(	op	[	0	]	,	o/;"	f
sign	data/bpe_corpus_raw/train.py	/^utf-8	def	sign	(	self	)	:	\\n	    	return	self	.	_unop	(	'sign'	,	rtype	=	'int'	)	\\n		$/;"	f
sign	data/bpe_corpus_raw/train.py	/^utf-8	def	sign	(	self	,	M	,	K	)	:	\\n	    	return	pubkey	.	sign	(	self	,	M	,	K	)	\\n		$/;"	f
sign	data/bpe_corpus_raw/valid.py	/^utf-8	def	sign	(	data	=	None	,	out	=	None	,	name	=	None	,	**	kwargs	)	:	\\n	    	return	0	,	\\n	/;"	f
sign	data/data_raw/train.py	/^utf-8	def	sign	(	self	)	:	\\n	    	return	self	.	_unop	(	'sign'	,	rtype	=	'int'	)	\\n		$/;"	f
sign	data/data_raw/train.py	/^utf-8	def	sign	(	self	,	M	,	K	)	:	\\n	    	return	pubkey	.	sign	(	self	,	M	,	K	)	\\n		$/;"	f
sign	data/data_raw/valid.py	/^utf-8	def	sign	(	data	=	None	,	out	=	None	,	name	=	None	,	**	kwargs	)	:	\\n	    	return	0	,	\\n	/;"	f
signal_handle	data/bpe_corpus_raw/valid.py	/^utf-8	def	main	(	)	:	\\n	    	runner	=	Runner	(	)	\\n	print	(	'Running {0} example.'	.	format	(	/;"	f	function:main	file:
signal_handle	data/data_raw/valid.py	/^utf-8	def	main	(	)	:	\\n	    	runner	=	Runner	(	)	\\n	print	(	'Running {0} example.'	.	format	(	/;"	f	function:main	file:
signal_handler	data/bpe_corpus_raw/train.py	/^utf-8	def	signal_handler	(	self	,	signum	,	frame	)	:	\\n	    	self	.	_caught_signal	=	signum	,	f/;"	f
signal_handler	data/data_raw/train.py	/^utf-8	def	signal_handler	(	self	,	signum	,	frame	)	:	\\n	    	self	.	_caught_signal	=	signum	,	f/;"	f
signatures	data/bpe_corpus_raw/test.py	/^utf-8	@	classmethod	\\n	def	signatures	(	cls	)	:	\\n	    	return	cls	.	_SIGNATURES	\\n		$/;"	f
signatures	data/data_raw/test.py	/^utf-8	@	classmethod	\\n	def	signatures	(	cls	)	:	\\n	    	return	cls	.	_SIGNATURES	\\n		$/;"	f
signup	data/bpe_corpus_raw/test.py	/^utf-8	@	make_android_api_method	(	METHOD_POST	)	\\n	def	signup	(	self	,	response	)	:	\\n	    	pa/;"	f
signup	data/data_raw/test.py	/^utf-8	@	make_android_api_method	(	METHOD_POST	)	\\n	def	signup	(	self	,	response	)	:	\\n	    	pa/;"	f
similarities	data/bpe_corpus_raw/valid.py	/^utf-8	@	register	.	filter	\\n	def	similarities	(	obj	,	limit	=	5	)	:	\\n	    	if	isinstance	(	ob/;"	f
similarities	data/data_raw/valid.py	/^utf-8	@	register	.	filter	\\n	def	similarities	(	obj	,	limit	=	5	)	:	\\n	    	if	isinstance	(	ob/;"	f
simple_projections	data/bpe_corpus_raw/train.py	/^utf-8	@	cached_method	\\n	def	simple_projections	(	self	,	to_negative	=	True	)	:	\\n	    	if	to_/;"	f
simple_projections	data/data_raw/train.py	/^utf-8	@	cached_method	\\n	def	simple_projections	(	self	,	to_negative	=	True	)	:	\\n	    	if	to_/;"	f
simulateKeyExchange	data/bpe_corpus_raw/valid.py	/^utf-8	def	simulateKeyExchange	(	self	,	sharedSecret	,	exchangeHash	)	:	\\n	    	self	.	proto	.	_/;"	f
simulateKeyExchange	data/data_raw/valid.py	/^utf-8	def	simulateKeyExchange	(	self	,	sharedSecret	,	exchangeHash	)	:	\\n	    	self	.	proto	.	_/;"	f
single_char_or_whitespace_or_unicode	data/bpe_corpus_raw/valid.py	/^utf-8	def	single_char_or_whitespace_or_unicode	(	argument	)	:	\\n	    	if	argument	==	'tab'	:	\\/;"	f
single_char_or_whitespace_or_unicode	data/data_raw/valid.py	/^utf-8	def	single_char_or_whitespace_or_unicode	(	argument	)	:	\\n	    	if	argument	==	'tab'	:	\\/;"	f
sinm	data/bpe_corpus_raw/valid.py	/^utf-8	def	sinm	(	A	)	:	\\n	    	A	=	_asarray_square	(	A	)	\\n	if	np	.	iscomplexobj	(	A	)	:	\\n	 /;"	f
sinm	data/data_raw/valid.py	/^utf-8	def	sinm	(	A	)	:	\\n	    	A	=	_asarray_square	(	A	)	\\n	if	np	.	iscomplexobj	(	A	)	:	\\n	 /;"	f
site_data_dir	data/bpe_corpus_raw/valid.py	/^utf-8	def	site_data_dir	(	appname	=	None	,	appauthor	=	None	,	version	=	None	,	multipath	=	False/;"	f
site_data_dir	data/data_raw/valid.py	/^utf-8	def	site_data_dir	(	appname	=	None	,	appauthor	=	None	,	version	=	None	,	multipath	=	False/;"	f
sizes	data_utils/count_filesize_by_ext.py	/^    counts, sizes = get_file_lists(argv[1], pbar)$/;"	v
skim_credit	data/bpe_corpus_raw/valid.py	/^utf-8	def	skim_credit	(	amount	,	ba	)	:	\\n	    	assert	isinstance	(	amount	,	Money	)	,	type	(	a/;"	f
skim_credit	data/data_raw/valid.py	/^utf-8	def	skim_credit	(	amount	,	ba	)	:	\\n	    	assert	isinstance	(	amount	,	Money	)	,	type	(	a/;"	f
skip_format_url	data/bpe_corpus_raw/test.py	/^utf-8	def	skip_format_url	(	format_	,	url	)	:	\\n	    	if	format_	==	''	:	\\n	        	return	Tr/;"	f
skip_format_url	data/data_raw/test.py	/^utf-8	def	skip_format_url	(	format_	,	url	)	:	\\n	    	if	format_	==	''	:	\\n	        	return	Tr/;"	f
skip_if_not_available	data/bpe_corpus_raw/train.py	/^utf-8	def	skip_if_not_available	(	modules	=	None	,	datasets	=	None	,	configurations	=	None	)	:	\\/;"	f
skip_if_not_available	data/data_raw/train.py	/^utf-8	def	skip_if_not_available	(	modules	=	None	,	datasets	=	None	,	configurations	=	None	)	:	\\/;"	f
skip_leading_rows	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	skip_leading_rows	(	self	)	:	\\n	    	return	_int_or_none	(	self	.	_pro/;"	f
skip_leading_rows	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	skip_leading_rows	(	self	)	:	\\n	    	return	_int_or_none	(	self	.	_pro/;"	f
skip_unless_symlink	data/bpe_corpus_raw/train.py	/^utf-8	def	skip_unless_symlink	(	test	)	:	\\n	    	ok	=	can_symlink	(	)	\\n	msg	=	'Requires funct/;"	f
skip_unless_symlink	data/data_raw/train.py	/^utf-8	def	skip_unless_symlink	(	test	)	:	\\n	    	ok	=	can_symlink	(	)	\\n	msg	=	'Requires funct/;"	f
skiporiginal	data/bpe_corpus_raw/valid.py	/^utf-8	def	skiporiginal	(	self	,	string	,	pos	)	:	\\n	    	self	.	original	+=	string	\\n	if	not	p/;"	f
skiporiginal	data/data_raw/valid.py	/^utf-8	def	skiporiginal	(	self	,	string	,	pos	)	:	\\n	    	self	.	original	+=	string	\\n	if	not	p/;"	f
sleep	data/bpe_corpus_raw/valid.py	/^utf-8	def	sleep	(	self	)	:	\\n	    	try	:	\\n	        	ready	=	select	.	select	(	[	self	.	PIPE	[/;"	f
sleep	data/data_raw/valid.py	/^utf-8	def	sleep	(	self	)	:	\\n	    	try	:	\\n	        	ready	=	select	.	select	(	[	self	.	PIPE	[/;"	f
slice_axis	data/bpe_corpus_raw/valid.py	/^utf-8	def	slice_axis	(	data	=	None	,	axis	=	_Null	,	begin	=	_Null	,	end	=	_Null	,	out	=	None	,	\\/;"	f
slice_axis	data/data_raw/valid.py	/^utf-8	def	slice_axis	(	data	=	None	,	axis	=	_Null	,	begin	=	_Null	,	end	=	_Null	,	out	=	None	,	\\/;"	f
slugify	data/bpe_corpus_raw/train.py	/^utf-8	def	slugify	(	name	,	reserved_keywords	=	None	,	prefix	=	''	)	:	\\n	    	if	len	(	name	)	=/;"	f
slugify	data/data_raw/train.py	/^utf-8	def	slugify	(	name	,	reserved_keywords	=	None	,	prefix	=	''	)	:	\\n	    	if	len	(	name	)	=/;"	f
snap	data/bpe_corpus_raw/train.py	/^utf-8	def	snap	(	args	)	:	\\n	    	p	=	OptionParser	(	snap	.	__doc__	)	\\n	p	.	set_home	(	'maker/;"	f
snap	data/data_raw/train.py	/^utf-8	def	snap	(	args	)	:	\\n	    	p	=	OptionParser	(	snap	.	__doc__	)	\\n	p	.	set_home	(	'maker/;"	f
snapshot_check	data/bpe_corpus_raw/valid.py	/^utf-8	def	snapshot_check	(	client	,	snapshot	=	None	,	repository	=	None	)	:	\\n	    	try	:	\\n	 /;"	f
snapshot_check	data/data_raw/valid.py	/^utf-8	def	snapshot_check	(	client	,	snapshot	=	None	,	repository	=	None	)	:	\\n	    	try	:	\\n	 /;"	f
snapshot_lvol_bdev	data/bpe_corpus_raw/valid.py	/^utf-8	def	snapshot_lvol_bdev	(	client	,	lvol_name	,	snapshot_name	)	:	\\n	    	params	=	{	'lvol_/;"	f
snapshot_lvol_bdev	data/data_raw/valid.py	/^utf-8	def	snapshot_lvol_bdev	(	client	,	lvol_name	,	snapshot_name	)	:	\\n	    	params	=	{	'lvol_/;"	f
soften_mask	data/bpe_corpus_raw/train.py	/^utf-8	def	soften_mask	(	self	)	:	\\n	    	self	.	_hardmask	=	False	\\n		$/;"	f
soften_mask	data/data_raw/train.py	/^utf-8	def	soften_mask	(	self	)	:	\\n	    	self	.	_hardmask	=	False	\\n		$/;"	f
sort	data/bpe_corpus_raw/train.py	/^utf-8	@	classmethod	\\n	def	sort	(	cls	,	columns	,	by	=	[	]	,	reverse	=	False	)	:	\\n	    	retur/;"	f
sort	data/data_raw/train.py	/^utf-8	@	classmethod	\\n	def	sort	(	cls	,	columns	,	by	=	[	]	,	reverse	=	False	)	:	\\n	    	retur/;"	f
sort_chronologically	data/bpe_corpus_raw/valid.py	/^utf-8	def	sort_chronologically	(	self	)	:	\\n	    	self	.	measurements	.	sort	(	key	=	lambda	m	:/;"	f
sort_chronologically	data/data_raw/valid.py	/^utf-8	def	sort_chronologically	(	self	)	:	\\n	    	self	.	measurements	.	sort	(	key	=	lambda	m	:/;"	f
sort_view	data/bpe_corpus_raw/train.py	/^utf-8	def	sort_view	(	self	,	request	)	:	\\n	    	if	not	self	.	has_change_permission	(	request	/;"	f
sort_view	data/data_raw/train.py	/^utf-8	def	sort_view	(	self	,	request	)	:	\\n	    	if	not	self	.	has_change_permission	(	request	/;"	f
sparse_softmax_cross_entropy	data/bpe_corpus_raw/valid.py	/^utf-8	def	sparse_softmax_cross_entropy	(	labels	,	logits	,	weights	=	1.0	,	scope	=	None	,	\\n	lo/;"	f
sparse_softmax_cross_entropy	data/data_raw/valid.py	/^utf-8	def	sparse_softmax_cross_entropy	(	labels	,	logits	,	weights	=	1.0	,	scope	=	None	,	\\n	lo/;"	f
spawn_process	data/bpe_corpus_raw/train.py	/^utf-8	def	test_agent_spawn_process	(	nsproxy	)	:	\\n	\\n	\\n	    	class	Spawner	(	Agent	)	:	\\n	/;"	m	class:test_agent_spawn_process.Spawner
spawn_process	data/data_raw/train.py	/^utf-8	def	test_agent_spawn_process	(	nsproxy	)	:	\\n	\\n	\\n	    	class	Spawner	(	Agent	)	:	\\n	/;"	m	class:test_agent_spawn_process.Spawner
speaker_summary	data/bpe_corpus_raw/test.py	/^utf-8	@	memoize_property	\\n	def	speaker_summary	(	self	)	:	\\n	    	ids_seen	=	set	(	)	\\n	spea/;"	f
speaker_summary	data/data_raw/test.py	/^utf-8	@	memoize_property	\\n	def	speaker_summary	(	self	)	:	\\n	    	ids_seen	=	set	(	)	\\n	spea/;"	f
spectrogram	data/bpe_corpus_raw/train.py	/^utf-8	def	spectrogram	(	x	,	fs	=	1.0	,	window	=	(	'tukey'	,	0.25	)	,	nperseg	=	None	,	noverlap	=/;"	f
spectrogram	data/data_raw/train.py	/^utf-8	def	spectrogram	(	x	,	fs	=	1.0	,	window	=	(	'tukey'	,	0.25	)	,	nperseg	=	None	,	noverlap	=/;"	f
split	data/bpe_corpus_raw/test.py	/^utf-8	def	split	(	self	,	sep	=	None	,	maxsplit	=	None	)	:	\\n	    	return	split	(	self	,	sep	,	m/;"	f
split	data/bpe_corpus_raw/train.py	/^utf-8	def	split	(	self	,	instring	,	maxsplit	=	_MAX_INT	,	includeSeparators	=	False	)	:	\\n	    /;"	f
split	data/bpe_corpus_raw/valid.py	/^utf-8	@	tf_should_use	.	should_use_result	\\n	def	split	(	self	,	value	,	lengths	,	name	=	None	)/;"	f
split	data/bpe_corpus_raw/valid.py	/^utf-8	def	split	(	attrs	,	inputs	,	proto_obj	)	:	\\n	    	split_list	=	attrs	.	get	(	'split'	)	i/;"	f
split	data/data_raw/test.py	/^utf-8	def	split	(	self	,	sep	=	None	,	maxsplit	=	None	)	:	\\n	    	return	split	(	self	,	sep	,	m/;"	f
split	data/data_raw/train.py	/^utf-8	def	split	(	self	,	instring	,	maxsplit	=	_MAX_INT	,	includeSeparators	=	False	)	:	\\n	    /;"	f
split	data/data_raw/valid.py	/^utf-8	@	tf_should_use	.	should_use_result	\\n	def	split	(	self	,	value	,	lengths	,	name	=	None	)/;"	f
split	data/data_raw/valid.py	/^utf-8	def	split	(	attrs	,	inputs	,	proto_obj	)	:	\\n	    	split_list	=	attrs	.	get	(	'split'	)	i/;"	f
splitLines0	data/bpe_corpus_raw/train.py	/^utf-8	def	splitLines0	(	frags	,	widths	)	:	\\n	    	lines	=	[	]	\\n	lineNum	=	0	\\n	maxW	=	width/;"	f
splitLines0	data/data_raw/train.py	/^utf-8	def	splitLines0	(	frags	,	widths	)	:	\\n	    	lines	=	[	]	\\n	lineNum	=	0	\\n	maxW	=	width/;"	f
split_first	data/bpe_corpus_raw/train.py	/^utf-8	def	split_first	(	s	,	delims	)	:	\\n	    	min_idx	=	None	\\n	min_delim	=	None	\\n	for	d	in/;"	f
split_first	data/data_raw/train.py	/^utf-8	def	split_first	(	s	,	delims	)	:	\\n	    	min_idx	=	None	\\n	min_delim	=	None	\\n	for	d	in/;"	f
split_full_label	data/bpe_corpus_raw/train.py	/^utf-8	def	split_full_label	(	lab	)	:	\\n	    	data	=	lab	.	split	(	'-'	)	\\n	if	len	(	data	)	!=	/;"	f
split_full_label	data/data_raw/train.py	/^utf-8	def	split_full_label	(	lab	)	:	\\n	    	data	=	lab	.	split	(	'-'	)	\\n	if	len	(	data	)	!=	/;"	f
split_sections	data/bpe_corpus_raw/valid.py	/^utf-8	def	split_sections	(	s	)	:	\\n	    	section	=	None	\\n	content	=	[	]	\\n	for	line	in	yield/;"	f
split_sections	data/data_raw/valid.py	/^utf-8	def	split_sections	(	s	)	:	\\n	    	section	=	None	\\n	content	=	[	]	\\n	for	line	in	yield/;"	f
split_value	data/bpe_corpus_raw/train.py	/^utf-8	def	split_value	(	self	,	rules	,	opts	=	None	)	:	\\n	    	if	opts	is	None	:	\\n	        	r/;"	f
split_value	data/data_raw/train.py	/^utf-8	def	split_value	(	self	,	rules	,	opts	=	None	)	:	\\n	    	if	opts	is	None	:	\\n	        	r/;"	f
splitunc	data/bpe_corpus_raw/valid.py	/^utf-8	def	splitunc	(	p	)	:	\\n	    	if	p	[	1	:	2	]	==	':'	:	\\n	        	return	''	,	p	\\n		firs/;"	f
splitunc	data/data_raw/valid.py	/^utf-8	def	splitunc	(	p	)	:	\\n	    	if	p	[	1	:	2	]	==	':'	:	\\n	        	return	''	,	p	\\n		firs/;"	f
srange	data/bpe_corpus_raw/valid.py	/^utf-8	def	srange	(	s	)	:	\\n	    	try	:	\\n	        	return	''	.	join	(	_expanded	(	part	)	for	p/;"	f
srange	data/data_raw/valid.py	/^utf-8	def	srange	(	s	)	:	\\n	    	try	:	\\n	        	return	''	.	join	(	_expanded	(	part	)	for	p/;"	f
ssh_accept_sec_context	data/bpe_corpus_raw/valid.py	/^utf-8	def	ssh_accept_sec_context	(	self	,	hostname	,	recv_token	,	username	=	None	)	:	\\n	    	s/;"	f
ssh_accept_sec_context	data/data_raw/valid.py	/^utf-8	def	ssh_accept_sec_context	(	self	,	hostname	,	recv_token	,	username	=	None	)	:	\\n	    	s/;"	f
sso_remove_logout_url	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	sso_remove_logout_url	(	cls	,	val	)	:	\\n	    	return	cls	(	'sso_rem/;"	f
sso_remove_logout_url	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	sso_remove_logout_url	(	cls	,	val	)	:	\\n	    	return	cls	(	'sso_rem/;"	f
stack	data/bpe_corpus_raw/valid.py	/^utf-8	def	stack	(	inputs	,	layer	,	stack_args	,	**	kwargs	)	:	\\n	    	scope	=	kwargs	.	pop	(	's/;"	f
stack	data/data_raw/valid.py	/^utf-8	def	stack	(	inputs	,	layer	,	stack_args	,	**	kwargs	)	:	\\n	    	scope	=	kwargs	.	pop	(	's/;"	f
stack_arrays	data/bpe_corpus_raw/valid.py	/^utf-8	def	stack_arrays	(	arrays	,	defaults	=	None	,	usemask	=	True	,	asrecarray	=	False	,	\\n	au/;"	f
stack_arrays	data/data_raw/valid.py	/^utf-8	def	stack_arrays	(	arrays	,	defaults	=	None	,	usemask	=	True	,	asrecarray	=	False	,	\\n	au/;"	f
stack_name	data/bpe_corpus_raw/valid.py	/^utf-8	def	stack_name	(	self	)	:	\\n	    	if	self	.	PARAM_STACK_NAME	not	in	self	.	data	:	\\n	   /;"	f
stack_name	data/data_raw/valid.py	/^utf-8	def	stack_name	(	self	)	:	\\n	    	if	self	.	PARAM_STACK_NAME	not	in	self	.	data	:	\\n	   /;"	f
staff_lines_color_tags	data/bpe_corpus_raw/valid.py	/^utf-8	def	staff_lines_color_tags	(	self	,	path	=	None	)	->	typing	.	List	[	str	]	:	\\n	    	tags/;"	f
staff_lines_color_tags	data/data_raw/valid.py	/^utf-8	def	staff_lines_color_tags	(	self	,	path	=	None	)	->	typing	.	List	[	str	]	:	\\n	    	tags/;"	f
stage_execute_file	data/bpe_corpus_raw/train.py	/^utf-8	def	stage_execute_file	(	self	,	filepath	,	clear_trees	=	False	)	:	\\n	    	self	.	command/;"	f
stage_execute_file	data/data_raw/train.py	/^utf-8	def	stage_execute_file	(	self	,	filepath	,	clear_trees	=	False	)	:	\\n	    	self	.	command/;"	f
staged_predict	data/bpe_corpus_raw/train.py	/^utf-8	def	staged_predict	(	self	,	X	,	vote_function	=	None	)	:	\\n	    	return	self	.	_staged_fo/;"	f
staged_predict	data/data_raw/train.py	/^utf-8	def	staged_predict	(	self	,	X	,	vote_function	=	None	)	:	\\n	    	return	self	.	_staged_fo/;"	f
start	data/bpe_corpus_raw/valid.py	/^utf-8	@	validate_cell	\\n	def	start	(	self	,	context	,	instance	)	:	\\n	    	super	(	ComputeCell/;"	f
start	data/bpe_corpus_raw/valid.py	/^utf-8	def	start	(	self	)	:	\\n	    	if	not	self	.	running	:	\\n	        	while	True	:	\\n	      /;"	f
start	data/bpe_corpus_raw/valid.py	/^utf-8	def	start	(	self	)	:	\\n	    	pass	\\n		$/;"	f
start	data/data_raw/valid.py	/^utf-8	@	validate_cell	\\n	def	start	(	self	,	context	,	instance	)	:	\\n	    	super	(	ComputeCell/;"	f
start	data/data_raw/valid.py	/^utf-8	def	start	(	self	)	:	\\n	    	if	not	self	.	running	:	\\n	        	while	True	:	\\n	      /;"	f
start	data/data_raw/valid.py	/^utf-8	def	start	(	self	)	:	\\n	    	pass	\\n		$/;"	f
startService	data/bpe_corpus_raw/train.py	/^utf-8	def	startService	(	)	:	\\n	$/;"	f
startService	data/data_raw/train.py	/^utf-8	def	startService	(	)	:	\\n	$/;"	f
start_case	data/bpe_corpus_raw/valid.py	/^utf-8	def	start_case	(	text	)	:	\\n	    	text	=	pyd	.	to_string	(	text	)	\\n	return	' '	.	join	(/;"	f
start_case	data/data_raw/valid.py	/^utf-8	def	start_case	(	text	)	:	\\n	    	text	=	pyd	.	to_string	(	text	)	\\n	return	' '	.	join	(/;"	f
start_child	data/bpe_corpus_raw/valid.py	/^utf-8	def	fork_processes	(	num_processes	,	max_restarts	=	100	)	:	\\n	    	global	_task_id	\\n	a/;"	f	function:fork_processes	file:
start_child	data/data_raw/valid.py	/^utf-8	def	fork_processes	(	num_processes	,	max_restarts	=	100	)	:	\\n	    	global	_task_id	\\n	a/;"	f	function:fork_processes	file:
start_container_fprobes	data/bpe_corpus_raw/valid.py	/^utf-8	def	start_container_fprobes	(	self	,	container_id	,	avoid_setns	=	False	,	**	kwargs	)	:	\\/;"	f
start_container_fprobes	data/data_raw/valid.py	/^utf-8	def	start_container_fprobes	(	self	,	container_id	,	avoid_setns	=	False	,	**	kwargs	)	:	\\/;"	f
start_instance	data/bpe_corpus_raw/train.py	/^utf-8	def	start_instance	(	self	,	instance_id	)	:	\\n	    	params	=	{	'InstanceId'	:	instance_id/;"	f
start_instance	data/data_raw/train.py	/^utf-8	def	start_instance	(	self	,	instance_id	)	:	\\n	    	params	=	{	'InstanceId'	:	instance_id/;"	f
start_macro	data/bpe_corpus_raw/valid.py	/^utf-8	def	start_macro	(	self	)	:	\\n	    	self	.	current_recording	=	[	]	\\n		$/;"	f
start_macro	data/data_raw/valid.py	/^utf-8	def	start_macro	(	self	)	:	\\n	    	self	.	current_recording	=	[	]	\\n		$/;"	f
start_profiling	data/bpe_corpus_raw/valid.py	/^utf-8	def	start_profiling	(	*	args	)	:	\\n	    	if	profiler	is	None	:	\\n	        	enable_profil/;"	f
start_profiling	data/data_raw/valid.py	/^utf-8	def	start_profiling	(	*	args	)	:	\\n	    	if	profiler	is	None	:	\\n	        	enable_profil/;"	f
start_response_wrapper	data/bpe_corpus_raw/valid.py	/^utf-8	def	validator	(	application	)	:	\\n	\\n	    	def	lint_app	(	*	args	,	**	kw	)	:	\\n	       /;"	f	function:validator.lint_app	file:
start_response_wrapper	data/data_raw/valid.py	/^utf-8	def	validator	(	application	)	:	\\n	\\n	    	def	lint_app	(	*	args	,	**	kw	)	:	\\n	       /;"	f	function:validator.lint_app	file:
start_sorted_set	data/bpe_corpus_raw/train.py	/^utf-8	def	start_sorted_set	(	self	,	key	,	length	,	expiry	,	info	)	:	\\n	    	pass	\\n		$/;"	f
start_sorted_set	data/data_raw/train.py	/^utf-8	def	start_sorted_set	(	self	,	key	,	length	,	expiry	,	info	)	:	\\n	    	pass	\\n		$/;"	f
start_stream_handler	data/bpe_corpus_raw/train.py	/^utf-8	def	start_stream_handler	(	self	,	xml	)	:	\\n	    	self	.	stream_id	=	xml	.	get	(	'id'	,	'/;"	f
start_stream_handler	data/data_raw/train.py	/^utf-8	def	start_stream_handler	(	self	,	xml	)	:	\\n	    	self	.	stream_id	=	xml	.	get	(	'id'	,	'/;"	f
start_task	data/bpe_corpus_raw/test.py	/^utf-8	def	start_task	(	self	,	task_definition	,	container_instances	,	cluster	=	None	,	\\n	overr/;"	f
start_task	data/data_raw/test.py	/^utf-8	def	start_task	(	self	,	task_definition	,	container_instances	,	cluster	=	None	,	\\n	overr/;"	f
startbody	data/bpe_corpus_raw/valid.py	/^utf-8	def	startbody	(	self	,	ctype	,	plist	=	[	]	,	prefix	=	1	)	:	\\n	    	for	name	,	value	in	p/;"	f
startbody	data/data_raw/valid.py	/^utf-8	def	startbody	(	self	,	ctype	,	plist	=	[	]	,	prefix	=	1	)	:	\\n	    	for	name	,	value	in	p/;"	f
startedConnecting	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_startedConnecting	(	self	)	:	\\n	    	result	=	[	]	\\n	\\n	\\n	class	Factory	(	ob/;"	m	class:test_startedConnecting.Factory
startedConnecting	data/data_raw/valid.py	/^utf-8	def	test_startedConnecting	(	self	)	:	\\n	    	result	=	[	]	\\n	\\n	\\n	class	Factory	(	ob/;"	m	class:test_startedConnecting.Factory
startup	data/bpe_corpus_raw/valid.py	/^utf-8	def	startup	(	self	)	:	\\n	    	self	.	_feed_manager	.	update	(	)	\\n	self	.	_init_regular/;"	f
startup	data/data_raw/valid.py	/^utf-8	def	startup	(	self	)	:	\\n	    	self	.	_feed_manager	.	update	(	)	\\n	self	.	_init_regular/;"	f
stat	data/bpe_corpus_raw/train.py	/^utf-8	def	stat	(	self	,	path	)	:	\\n	    	assert	path	,	isinstance	(	path	,	str	)	\\n	self	.	set/;"	f
stat	data/bpe_corpus_raw/valid.py	/^utf-8	def	stat	(	filename	)	:	\\n	    	file_statistics	=	pywrap_tensorflow	.	FileStatistics	(	)	/;"	f
stat	data/data_raw/train.py	/^utf-8	def	stat	(	self	,	path	)	:	\\n	    	assert	path	,	isinstance	(	path	,	str	)	\\n	self	.	set/;"	f
stat	data/data_raw/valid.py	/^utf-8	def	stat	(	filename	)	:	\\n	    	file_statistics	=	pywrap_tensorflow	.	FileStatistics	(	)	/;"	f
state_attributes	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	state_attributes	(	self	)	:	\\n	    	data	=	{	}	\\n	for	prop	,	attr	in	/;"	f
state_attributes	data/data_raw/train.py	/^utf-8	@	property	\\n	def	state_attributes	(	self	)	:	\\n	    	data	=	{	}	\\n	for	prop	,	attr	in	/;"	f
status	data/bpe_corpus_raw/train.py	/^utf-8	@	status	.	setter	\\n	def	status	(	self	,	status	)	:	\\n	    	allowed_values	=	[	'availabl/;"	f
status	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	status	(	cls	,	snapshot_url	)	:	\\n	    	snap_path	=	urlparse	(	snap/;"	f
status	data/data_raw/train.py	/^utf-8	@	status	.	setter	\\n	def	status	(	self	,	status	)	:	\\n	    	allowed_values	=	[	'availabl/;"	f
status	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	status	(	cls	,	snapshot_url	)	:	\\n	    	snap_path	=	urlparse	(	snap/;"	f
status_update	data/bpe_corpus_raw/valid.py	/^utf-8	def	status_update	(	data_id	,	status	)	:	\\n	    	legal_status	=	{	'active'	,	'deactivated/;"	f
status_update	data/data_raw/valid.py	/^utf-8	def	status_update	(	data_id	,	status	)	:	\\n	    	legal_status	=	{	'active'	,	'deactivated/;"	f
stfts_to_melspecgrams	data/bpe_corpus_raw/test.py	/^utf-8	def	stfts_to_melspecgrams	(	self	,	stfts	)	:	\\n	    	return	self	.	specgrams_to_melspecgr/;"	f
stfts_to_melspecgrams	data/data_raw/test.py	/^utf-8	def	stfts_to_melspecgrams	(	self	,	stfts	)	:	\\n	    	return	self	.	specgrams_to_melspecgr/;"	f
stls	data/bpe_corpus_raw/train.py	/^utf-8	def	stls	(	self	,	context	=	None	)	:	\\n	    	if	not	HAVE_SSL	:	\\n	        	raise	error_p/;"	f
stls	data/data_raw/train.py	/^utf-8	def	stls	(	self	,	context	=	None	)	:	\\n	    	if	not	HAVE_SSL	:	\\n	        	raise	error_p/;"	f
stop	data/bpe_corpus_raw/test.py	/^utf-8	def	stop	(	self	,	check	=	True	)	:	\\n	    	if	check	and	self	.	countiter	>	0	and	self	.	o/;"	f
stop	data/bpe_corpus_raw/train.py	/^utf-8	def	stop	(	self	)	:	\\n	    	self	.	_active_patches	.	discard	(	self	)	\\n	return	self	.	_/;"	f
stop	data/bpe_corpus_raw/valid.py	/^utf-8	def	stop	(	self	)	:	\\n	    	if	self	.	_fd	is	not	None	:	\\n	        	self	.	_pollobj	.	un/;"	f
stop	data/bpe_corpus_raw/valid.py	/^utf-8	def	stop	(	self	)	:	\\n	    	self	.	_keep_running	=	False	\\n	ctypes	.	wintypes	.	windll	./;"	f
stop	data/bpe_corpus_raw/valid.py	/^utf-8	def	stop	(	self	)	:	\\n	    	self	.	_max_value	=	0.0	\\n	self	.	_current_value	=	0.0	\\n	s/;"	f
stop	data/bpe_corpus_raw/valid.py	/^utf-8	def	stop	(	self	)	:	\\n	    	self	.	fcgiserver	.	_keepGoing	=	False	\\n	self	.	fcgiserver	/;"	f
stop	data/bpe_corpus_raw/valid.py	/^utf-8	def	stop	(	self	)	:	\\n	    	self	.	tk	.	call	(	self	.	_w	,	'stop'	)	\\n		$/;"	f
stop	data/data_raw/test.py	/^utf-8	def	stop	(	self	,	check	=	True	)	:	\\n	    	if	check	and	self	.	countiter	>	0	and	self	.	o/;"	f
stop	data/data_raw/train.py	/^utf-8	def	stop	(	self	)	:	\\n	    	self	.	_active_patches	.	discard	(	self	)	\\n	return	self	.	_/;"	f
stop	data/data_raw/valid.py	/^utf-8	def	stop	(	self	)	:	\\n	    	if	self	.	_fd	is	not	None	:	\\n	        	self	.	_pollobj	.	un/;"	f
stop	data/data_raw/valid.py	/^utf-8	def	stop	(	self	)	:	\\n	    	self	.	_keep_running	=	False	\\n	ctypes	.	wintypes	.	windll	./;"	f
stop	data/data_raw/valid.py	/^utf-8	def	stop	(	self	)	:	\\n	    	self	.	_max_value	=	0.0	\\n	self	.	_current_value	=	0.0	\\n	s/;"	f
stop	data/data_raw/valid.py	/^utf-8	def	stop	(	self	)	:	\\n	    	self	.	fcgiserver	.	_keepGoing	=	False	\\n	self	.	fcgiserver	/;"	f
stop	data/data_raw/valid.py	/^utf-8	def	stop	(	self	)	:	\\n	    	self	.	tk	.	call	(	self	.	_w	,	'stop'	)	\\n		$/;"	f
stop_recording	data/bpe_corpus_raw/valid.py	/^utf-8	def	stop_recording	(	self	,	splitter_port	=	1	)	:	\\n	    	try	:	\\n	        	with	self	.	/;"	f
stop_recording	data/data_raw/valid.py	/^utf-8	def	stop_recording	(	self	,	splitter_port	=	1	)	:	\\n	    	try	:	\\n	        	with	self	.	/;"	f
stopwords	data/bpe_corpus_raw/valid.py	/^utf-8	def	_simple_document	(	text	,	min_length	=	1	,	stopwords	=	None	)	:	\\n	    	if	not	stopwo/;"	x	function:_simple_document	file:
stopwords	data/data_raw/valid.py	/^utf-8	def	_simple_document	(	text	,	min_length	=	1	,	stopwords	=	None	)	:	\\n	    	if	not	stopwo/;"	x	function:_simple_document	file:
store_iter_weights	data/bpe_corpus_raw/valid.py	/^utf-8	def	store_iter_weights	(	self	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
store_iter_weights	data/data_raw/valid.py	/^utf-8	def	store_iter_weights	(	self	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
store_many	data/bpe_corpus_raw/train.py	/^utf-8	def	store_many	(	self	,	items	)	:	\\n	    	with	self	.	walrus	.	atomic	(	)	:	\\n	        	/;"	f
store_many	data/data_raw/train.py	/^utf-8	def	store_many	(	self	,	items	)	:	\\n	    	with	self	.	walrus	.	atomic	(	)	:	\\n	        	/;"	f
store_vector	data/bpe_corpus_raw/valid.py	/^utf-8	def	store_vector	(	self	,	hash_name	,	bucket_key	,	v	,	data	)	:	\\n	    	if	not	hash_name	/;"	f
store_vector	data/data_raw/valid.py	/^utf-8	def	store_vector	(	self	,	hash_name	,	bucket_key	,	v	,	data	)	:	\\n	    	if	not	hash_name	/;"	f
str_import_path	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	str_import_path	(	self	)	:	\\n	    	return	tuple	(	str	(	name	)	for	nam/;"	f
str_import_path	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	str_import_path	(	self	)	:	\\n	    	return	tuple	(	str	(	name	)	for	nam/;"	f
str_slice_replace	data/bpe_corpus_raw/valid.py	/^utf-8	def	str_slice_replace	(	arr	,	start	=	None	,	stop	=	None	,	repl	=	None	)	:	\\n	    	if	rep/;"	f
str_slice_replace	data/data_raw/valid.py	/^utf-8	def	str_slice_replace	(	arr	,	start	=	None	,	stop	=	None	,	repl	=	None	)	:	\\n	    	if	rep/;"	f
stream	data/bpe_corpus_raw/valid.py	/^utf-8	def	stream	(	self	)	:	\\n	    	return	self	.	_get_stream	(	)	\\n		$/;"	f
stream	data/bpe_corpus_raw/valid.py	/^utf-8	def	stream	(	self	,	from_	=	values	.	unset	,	to	=	values	.	unset	,	\\n	date_created_on_or_/;"	f
stream	data/data_raw/valid.py	/^utf-8	def	stream	(	self	)	:	\\n	    	return	self	.	_get_stream	(	)	\\n		$/;"	f
stream	data/data_raw/valid.py	/^utf-8	def	stream	(	self	,	from_	=	values	.	unset	,	to	=	values	.	unset	,	\\n	date_created_on_or_/;"	f
streamStarted	data/bpe_corpus_raw/train.py	/^utf-8	def	streamStarted	(	self	,	rootElement	)	:	\\n	    	if	rootElement	.	hasAttribute	(	'versi/;"	f
streamStarted	data/data_raw/train.py	/^utf-8	def	streamStarted	(	self	,	rootElement	)	:	\\n	    	if	rootElement	.	hasAttribute	(	'versi/;"	f
stream_encode_multipart	data/bpe_corpus_raw/train.py	/^utf-8	def	stream_encode_multipart	(	values	,	use_tempfile	=	True	,	threshold	=	1024	*	500	,	\\n	/;"	f
stream_encode_multipart	data/data_raw/train.py	/^utf-8	def	stream_encode_multipart	(	values	,	use_tempfile	=	True	,	threshold	=	1024	*	500	,	\\n	/;"	f
streaming_recall	data/bpe_corpus_raw/test.py	/^utf-8	@	deprecated_args	(	IGNORE_MASK_DATE	,	IGNORE_MASK_INSTRUCTIONS	,	'ignore_mask'	)	\\n	def	/;"	f
streaming_recall	data/data_raw/test.py	/^utf-8	@	deprecated_args	(	IGNORE_MASK_DATE	,	IGNORE_MASK_INSTRUCTIONS	,	'ignore_mask'	)	\\n	def	/;"	f
stretch	data/bpe_corpus_raw/valid.py	/^utf-8	def	stretch	(	img	,	arg0	=	None	,	arg1	=	None	,	dtype	=	np	.	uint8	)	:	\\n	    	if	arg0	is/;"	f
stretch	data/data_raw/valid.py	/^utf-8	def	stretch	(	img	,	arg0	=	None	,	arg1	=	None	,	dtype	=	np	.	uint8	)	:	\\n	    	if	arg0	is/;"	f
strig_statement_	data/bpe_corpus_raw/valid.py	/^utf-8	def	strig_statement_	(	self	,	args	)	:	\\n	    	on	,	=	args	\\n	self	.	is_on	=	on	==	tk	.	/;"	f
strig_statement_	data/data_raw/valid.py	/^utf-8	def	strig_statement_	(	self	,	args	)	:	\\n	    	on	,	=	args	\\n	self	.	is_on	=	on	==	tk	.	/;"	f
stringify	data/bpe_corpus_raw/train.py	/^utf-8	def	stringify	(	self	,	ascommalist	=	''	)	:	\\n	    	rval	=	[	]	\\n	for	key	in	sorted	(	se/;"	f
stringify	data/data_raw/train.py	/^utf-8	def	stringify	(	self	,	ascommalist	=	''	)	:	\\n	    	rval	=	[	]	\\n	for	key	in	sorted	(	se/;"	f
strip_suffixes	data/bpe_corpus_raw/train.py	/^utf-8	def	PDFEmitter	(	target	,	source	,	env	)	:	\\n	\\n	    	def	strip_suffixes	(	n	)	:	\\n	   /;"	f	function:PDFEmitter	file:
strip_suffixes	data/data_raw/train.py	/^utf-8	def	PDFEmitter	(	target	,	source	,	env	)	:	\\n	\\n	    	def	strip_suffixes	(	n	)	:	\\n	   /;"	f	function:PDFEmitter	file:
strseq	data/bpe_corpus_raw/valid.py	/^utf-8	def	strseq	(	object	,	convert	,	join	=	joinseq	)	:	\\n	    	if	type	(	object	)	in	[	list	,/;"	f
strseq	data/data_raw/valid.py	/^utf-8	def	strseq	(	object	,	convert	,	join	=	joinseq	)	:	\\n	    	if	type	(	object	)	in	[	list	,/;"	f
structured_pow	data/bpe_corpus_raw/train.py	/^utf-8	@	structured_monoid	(	tensor	.	pow	)	\\n	def	structured_pow	(	x	,	y	)	:	\\n	$/;"	f
structured_pow	data/data_raw/train.py	/^utf-8	@	structured_monoid	(	tensor	.	pow	)	\\n	def	structured_pow	(	x	,	y	)	:	\\n	$/;"	f
submit	data/bpe_corpus_raw/test.py	/^utf-8	def	submit	(	self	,	fn	,	*	args	)	:	\\n	    	self	.	_raiseIfClosed	(	)	\\n	futures	=	[	sel/;"	f
submit	data/data_raw/test.py	/^utf-8	def	submit	(	self	,	fn	,	*	args	)	:	\\n	    	self	.	_raiseIfClosed	(	)	\\n	futures	=	[	sel/;"	f
submit_command	data/bpe_corpus_raw/test.py	/^utf-8	@	abstractmethod	\\n	def	submit_command	(	self	,	command	,	nodes	=	1	)	:	\\n	    	pass	\\n/;"	f
submit_command	data/data_raw/test.py	/^utf-8	@	abstractmethod	\\n	def	submit_command	(	self	,	command	,	nodes	=	1	)	:	\\n	    	pass	\\n/;"	f
submit_plugin_form_data	data/bpe_corpus_raw/valid.py	/^utf-8	def	submit_plugin_form_data	(	self	,	form_entry	,	request	,	form	,	\\n	form_element_entrie/;"	f
submit_plugin_form_data	data/data_raw/valid.py	/^utf-8	def	submit_plugin_form_data	(	self	,	form_entry	,	request	,	form	,	\\n	form_element_entrie/;"	f
submit_tags	data/bpe_corpus_raw/valid.py	/^utf-8	def	submit_tags	(	**	kwargs	)	:	\\n	    	for	k	,	v	in	kwargs	.	items	(	)	:	\\n	        	fo/;"	f
submit_tags	data/data_raw/valid.py	/^utf-8	def	submit_tags	(	**	kwargs	)	:	\\n	    	for	k	,	v	in	kwargs	.	items	(	)	:	\\n	        	fo/;"	f
submitter	data/bpe_corpus_raw/valid.py	/^utf-8	@	check_login_required	\\n	@	check_local_site_access	\\n	@	valid_prefs_required	(	disable_/;"	f
submitter	data/data_raw/valid.py	/^utf-8	@	check_login_required	\\n	@	check_local_site_access	\\n	@	valid_prefs_required	(	disable_/;"	f
subrefs	data/bpe_corpus_raw/valid.py	/^utf-8	def	subrefs	(	refs_dict	,	base	)	:	\\n	    	base	=	base	or	''	\\n	keys	=	list	(	refs_dict	/;"	f
subrefs	data/data_raw/valid.py	/^utf-8	def	subrefs	(	refs_dict	,	base	)	:	\\n	    	base	=	base	or	''	\\n	keys	=	list	(	refs_dict	/;"	f
suffix	data/bpe_corpus_raw/train.py	/^utf-8	def	suffix	(	self	)	:	\\n	    	return	'-org'	if	int	(	self	.	ver	.	split	(	'.'	)	[	1	]	)	%/;"	f
suffix	data/data_raw/train.py	/^utf-8	def	suffix	(	self	)	:	\\n	    	return	'-org'	if	int	(	self	.	ver	.	split	(	'.'	)	[	1	]	)	%/;"	f
sum_split	data/bpe_corpus_raw/test.py	/^utf-8	def	sum_split	(	line	,	digest_bits	)	:	\\n	    	digest_hex_bytes	=	digest_bits	\/\/	4	\\n	/;"	f
sum_split	data/data_raw/test.py	/^utf-8	def	sum_split	(	line	,	digest_bits	)	:	\\n	    	digest_hex_bytes	=	digest_bits	\/\/	4	\\n	/;"	f
summarizePerformance	data/bpe_corpus_raw/train.py	/^utf-8	def	summarizePerformance	(	self	,	test_data_set	,	*	args	,	**	kwargs	)	:	\\n	    	print	(	/;"	f
summarizePerformance	data/data_raw/train.py	/^utf-8	def	summarizePerformance	(	self	,	test_data_set	,	*	args	,	**	kwargs	)	:	\\n	    	print	(	/;"	f
summarize_address_range	data/bpe_corpus_raw/train.py	/^utf-8	def	summarize_address_range	(	first	,	last	)	:	\\n	    	if	not	(	isinstance	(	first	,	_Bas/;"	f
summarize_address_range	data/data_raw/train.py	/^utf-8	def	summarize_address_range	(	first	,	last	)	:	\\n	    	if	not	(	isinstance	(	first	,	_Bas/;"	f
summary	data/bpe_corpus_raw/train.py	/^utf-8	def	summary	(	self	,	solution	=	None	,	threshold	=	0.01	,	fva	=	None	,	names	=	False	,	\\n/;"	f
summary	data/data_raw/train.py	/^utf-8	def	summary	(	self	,	solution	=	None	,	threshold	=	0.01	,	fva	=	None	,	names	=	False	,	\\n/;"	f
summary_list	data/bpe_corpus_raw/valid.py	/^utf-8	def	summary_list	(	self	,	request	,	instances	)	:	\\n	    	return	self	.	_list_view	(	self/;"	f
summary_list	data/data_raw/valid.py	/^utf-8	def	summary_list	(	self	,	request	,	instances	)	:	\\n	    	return	self	.	_list_view	(	self/;"	f
sunionstore	data/bpe_corpus_raw/valid.py	/^utf-8	@	_query_command	\\n	def	sunionstore	(	self	,	tr	,	destination	:	NativeType	,	keys	:	ListO/;"	f
sunionstore	data/data_raw/valid.py	/^utf-8	@	_query_command	\\n	def	sunionstore	(	self	,	tr	,	destination	:	NativeType	,	keys	:	ListO/;"	f
super	data/bpe_corpus_raw/train.py	/^utf-8	def	super	(	self	,	name	,	current	)	:	\\n	    	try	:	\\n	        	blocks	=	self	.	blocks	[/;"	f
super	data/data_raw/train.py	/^utf-8	def	super	(	self	,	name	,	current	)	:	\\n	    	try	:	\\n	        	blocks	=	self	.	blocks	[/;"	f
support_enumeration	data/bpe_corpus_raw/train.py	/^utf-8	def	support_enumeration	(	g	)	:	\\n	    	return	list	(	support_enumeration_gen	(	g	)	)	\\n/;"	f
support_enumeration	data/data_raw/train.py	/^utf-8	def	support_enumeration	(	g	)	:	\\n	    	return	list	(	support_enumeration_gen	(	g	)	)	\\n/;"	f
supported_features	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	supported_features	(	self	)	:	\\n	    	return	SUPPORTED_FEATURES	\\n		$/;"	f
supported_features	data/data_raw/train.py	/^utf-8	@	property	\\n	def	supported_features	(	self	)	:	\\n	    	return	SUPPORTED_FEATURES	\\n		$/;"	f
supported_vpn_devices	data/bpe_corpus_raw/valid.py	/^utf-8	def	supported_vpn_devices	(	self	,	resource_group_name	,	\\n	virtual_network_gateway_name	/;"	f
supported_vpn_devices	data/data_raw/valid.py	/^utf-8	def	supported_vpn_devices	(	self	,	resource_group_name	,	\\n	virtual_network_gateway_name	/;"	f
supports_http_1_1	data/bpe_corpus_raw/train.py	/^utf-8	def	supports_http_1_1	(	self	)	:	\\n	    	return	self	.	version	==	'HTTP\/1.1'	\\n		$/;"	f
supports_http_1_1	data/data_raw/train.py	/^utf-8	def	supports_http_1_1	(	self	)	:	\\n	    	return	self	.	version	==	'HTTP\/1.1'	\\n		$/;"	f
switch	data/bpe_corpus_raw/valid.py	/^utf-8	def	switch	(	self	,	dest	,	url	,	rev_options	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
switch	data/data_raw/valid.py	/^utf-8	def	switch	(	self	,	dest	,	url	,	rev_options	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
sxt_color_table	data/bpe_corpus_raw/test.py	/^utf-8	def	sxt_color_table	(	sxt_filter	)	:	\\n	    	try	:	\\n	        	r	,	g	,	b	=	{	'al'	:	(	sx/;"	f
sxt_color_table	data/data_raw/test.py	/^utf-8	def	sxt_color_table	(	sxt_filter	)	:	\\n	    	try	:	\\n	        	r	,	g	,	b	=	{	'al'	:	(	sx/;"	f
sym_difference	data/bpe_corpus_raw/valid.py	/^utf-8	def	sym_difference	(	self	,	other	)	:	\\n	    	return	self	.	_topology	(	capi	.	geos_symdi/;"	f
sym_difference	data/data_raw/valid.py	/^utf-8	def	sym_difference	(	self	,	other	)	:	\\n	    	return	self	.	_topology	(	capi	.	geos_symdi/;"	f
symmetric_rescaling_sa	data/bpe_corpus_raw/train.py	/^utf-8	def	symmetric_rescaling_sa	(	A	,	B	,	BH	=	None	)	:	\\n	    	[	D_sqrt	,	D_sqrt_inv	,	A	]	=	/;"	f
symmetric_rescaling_sa	data/data_raw/train.py	/^utf-8	def	symmetric_rescaling_sa	(	A	,	B	,	BH	=	None	)	:	\\n	    	[	D_sqrt	,	D_sqrt_inv	,	A	]	=	/;"	f
sync	data/bpe_corpus_raw/valid.py	/^utf-8	def	sync	(	self	,	other	,	project_name	)	:	\\n	    	self_labels	=	set	(	self	.	labels	(	pr/;"	f
sync	data/data_raw/valid.py	/^utf-8	def	sync	(	self	,	other	,	project_name	)	:	\\n	    	self_labels	=	set	(	self	.	labels	(	pr/;"	f
sync_blocks	data/bpe_corpus_raw/valid.py	/^utf-8	def	sync_blocks	(	rpc_connections	,	wait	=	1	,	timeout	=	60	)	:	\\n	    	while	timeout	>	0/;"	f
sync_blocks	data/data_raw/valid.py	/^utf-8	def	sync_blocks	(	rpc_connections	,	wait	=	1	,	timeout	=	60	)	:	\\n	    	while	timeout	>	0/;"	f
synthesize_ssml	data/bpe_corpus_raw/train.py	/^utf-8	def	synthesize_ssml	(	ssml	)	:	\\n	    	from	google	.	cloud	import	texttospeech	\\n	client/;"	f
synthesize_ssml	data/data_raw/train.py	/^utf-8	def	synthesize_ssml	(	ssml	)	:	\\n	    	from	google	.	cloud	import	texttospeech	\\n	client/;"	f
sys_exit_group	data/bpe_corpus_raw/valid.py	/^utf-8	def	sys_exit_group	(	self	,	error_code	)	:	\\n	    	return	self	.	_exit	(	\\n	f'Program fi/;"	f
sys_exit_group	data/data_raw/valid.py	/^utf-8	def	sys_exit_group	(	self	,	error_code	)	:	\\n	    	return	self	.	_exit	(	\\n	f'Program fi/;"	f
t0	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	t0	(	self	)	:	\\n	    	return	self	.	_t0	\\n		$/;"	f
t0	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	t0	(	self	)	:	\\n	    	return	self	.	_t0	\\n		$/;"	f
t2t_detokenize	data/bpe_corpus_raw/test.py	/^utf-8	def	t2t_detokenize	(	data	:	Iterator	[	List	[	str	]	]	)	->	Iterator	[	str	]	:	\\n	    	for/;"	f
t2t_detokenize	data/data_raw/test.py	/^utf-8	def	t2t_detokenize	(	data	:	Iterator	[	List	[	str	]	]	)	->	Iterator	[	str	]	:	\\n	    	for/;"	f
tablize	data/bpe_corpus_raw/train.py	/^utf-8	def	tablize	(	self	,	data	,	header	=	None	,	labels	=	None	)	:	\\n	    	if	not	header	and	h/;"	f
tablize	data/data_raw/train.py	/^utf-8	def	tablize	(	self	,	data	,	header	=	None	,	labels	=	None	)	:	\\n	    	if	not	header	and	h/;"	f
tabs_obsolete	data/bpe_corpus_raw/test.py	/^utf-8	@	register_check	\\n	def	tabs_obsolete	(	physical_line	)	:	\\n	    	indent	=	INDENT_REGEX	/;"	f
tabs_obsolete	data/data_raw/test.py	/^utf-8	@	register_check	\\n	def	tabs_obsolete	(	physical_line	)	:	\\n	    	indent	=	INDENT_REGEX	/;"	f
tag	data/bpe_corpus_raw/test.py	/^utf-8	@	property	\\n	def	tag	(	self	)	:	\\n	    	return	self	.	arcElement	.	tag	\\n		$/;"	f
tag	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	tag	(	self	)	:	\\n	    	return	self	.	_tag	\\n		$/;"	f
tag	data/data_raw/test.py	/^utf-8	@	property	\\n	def	tag	(	self	)	:	\\n	    	return	self	.	arcElement	.	tag	\\n		$/;"	f
tag	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	tag	(	self	)	:	\\n	    	return	self	.	_tag	\\n		$/;"	f
tagAsTextMinimizeAtts	data/bpe_corpus_raw/valid.py	/^utf-8	def	tagAsTextMinimizeAtts	(	self	,	tagObj	,	singletonFlag	=	0	)	:	\\n	    	tag	,	atts	=	ta/;"	f
tagAsTextMinimizeAtts	data/data_raw/valid.py	/^utf-8	def	tagAsTextMinimizeAtts	(	self	,	tagObj	,	singletonFlag	=	0	)	:	\\n	    	tag	,	atts	=	ta/;"	f
tail	data/bpe_corpus_raw/valid.py	/^utf-8	def	tail	(	Sts	,	bts	,	cts	,	Ntsr	,	t_cts	,	qm	)	:	\\n	    	deltats	=	bts	**	2	\/	(	Sts	*	/;"	f
tail	data/data_raw/valid.py	/^utf-8	def	tail	(	Sts	,	bts	,	cts	,	Ntsr	,	t_cts	,	qm	)	:	\\n	    	deltats	=	bts	**	2	\/	(	Sts	*	/;"	f
tail_horizontal	data/bpe_corpus_raw/valid.py	/^utf-8	def	tail_horizontal	(	b_h	,	sweep_h	,	Nult	,	S_h	,	TOW	,	mac_w	,	mac_h	,	l_w2h	,	\\n	t_c_h/;"	f
tail_horizontal	data/data_raw/valid.py	/^utf-8	def	tail_horizontal	(	b_h	,	sweep_h	,	Nult	,	S_h	,	TOW	,	mac_w	,	mac_h	,	l_w2h	,	\\n	t_c_h/;"	f
target_dir	data/bpe_corpus_raw/train.py	/^utf-8	def	target_dir	(	self	,	hidex86	=	False	,	x64	=	False	)	:	\\n	    	return	(	''	if	self	.	t/;"	f
target_dir	data/data_raw/train.py	/^utf-8	def	target_dir	(	self	,	hidex86	=	False	,	x64	=	False	)	:	\\n	    	return	(	''	if	self	.	t/;"	f
target_temperature_high	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	target_temperature_high	(	self	)	:	\\n	    	set_req	=	self	.	gateway	.	/;"	f
target_temperature_high	data/data_raw/train.py	/^utf-8	@	property	\\n	def	target_temperature_high	(	self	)	:	\\n	    	set_req	=	self	.	gateway	.	/;"	f
targets	data/bpe_corpus_raw/valid.py	/^utf-8	def	targets	(	obj	,	reftype	)	:	\\n	$/;"	f
targets	data/data_raw/valid.py	/^utf-8	def	targets	(	obj	,	reftype	)	:	\\n	$/;"	f
task	data/bpe_corpus_raw/train.py	/^utf-8	@	contextlib	.	contextmanager	\\n	def	task	(	ctx	,	config	)	:	\\n	    	if	config	is	None	:/;"	f
task	data/data_raw/train.py	/^utf-8	@	contextlib	.	contextmanager	\\n	def	task	(	ctx	,	config	)	:	\\n	    	if	config	is	None	:/;"	f
task_sort	data/bpe_corpus_raw/valid.py	/^utf-8	def	task_sort	(	)	:	\\n	\\n	    	def	list_sort	(	l	)	:	\\n	        	l	=	l	[	:	:	-	1	]	\\n	/;"	f
task_sort	data/data_raw/valid.py	/^utf-8	def	task_sort	(	)	:	\\n	\\n	    	def	list_sort	(	l	)	:	\\n	        	l	=	l	[	:	:	-	1	]	\\n	/;"	f
tasks	data/bpe_corpus_raw/train.py	/^utf-8	def	tasks	(	self	,	**	query	)	:	\\n	    	return	self	.	_list	(	_task	.	Task	,	**	query	)	\\/;"	f
tasks	data/data_raw/train.py	/^utf-8	def	tasks	(	self	,	**	query	)	:	\\n	    	return	self	.	_list	(	_task	.	Task	,	**	query	)	\\/;"	f
tau3_from_mtotal_eta	data/bpe_corpus_raw/test.py	/^utf-8	def	tau3_from_mtotal_eta	(	mtotal	,	eta	,	f_lower	)	:	\\n	    	mtotal	=	mtotal	*	lal	.	MTS/;"	f
tau3_from_mtotal_eta	data/data_raw/test.py	/^utf-8	def	tau3_from_mtotal_eta	(	mtotal	,	eta	,	f_lower	)	:	\\n	    	mtotal	=	mtotal	*	lal	.	MTS/;"	f
team_batting_bref	data/bpe_corpus_raw/valid.py	/^utf-8	def	team_batting_bref	(	team	,	start_season	,	end_season	=	None	)	:	\\n	    	if	start_seas/;"	f
team_batting_bref	data/data_raw/valid.py	/^utf-8	def	team_batting_bref	(	team	,	start_season	,	end_season	=	None	)	:	\\n	    	if	start_seas/;"	f
tearDown	data/bpe_corpus_raw/train.py	/^utf-8	def	tearDown	(	self	)	:	\\n	    	self	.	logd	(	'tearDown.'	)	\\n		$/;"	f
tearDown	data/bpe_corpus_raw/train.py	/^utf-8	def	tearDown	(	self	)	:	\\n	    	super	(	TestCommandRunnerUnitTests	,	self	)	.	tearDown	(	/;"	f
tearDown	data/bpe_corpus_raw/valid.py	/^utf-8	def	tearDown	(	self	)	:	\\n	    	config	.	fake_user_agent_exceptions	=	self	.	orig_fake_us/;"	f
tearDown	data/bpe_corpus_raw/valid.py	/^utf-8	def	tearDown	(	self	)	:	\\n	    	if	self	.	tearDownFunc	:	\\n	        	self	.	tearDownFunc/;"	f
tearDown	data/bpe_corpus_raw/valid.py	/^utf-8	def	tearDown	(	self	)	:	\\n	    	tools	.	_current_arch	=	None	\\n	tools	.	_foreign_arch	=	/;"	f
tearDown	data/bpe_corpus_raw/valid.py	/^utf-8	def	tearDown	(	self	)	:	\\n	    	try	:	\\n	        	self	.	server	.	stop	(	2.0	)	\\n	self	/;"	f
tearDown	data/data_raw/train.py	/^utf-8	def	tearDown	(	self	)	:	\\n	    	self	.	logd	(	'tearDown.'	)	\\n		$/;"	f
tearDown	data/data_raw/train.py	/^utf-8	def	tearDown	(	self	)	:	\\n	    	super	(	TestCommandRunnerUnitTests	,	self	)	.	tearDown	(	/;"	f
tearDown	data/data_raw/valid.py	/^utf-8	def	tearDown	(	self	)	:	\\n	    	config	.	fake_user_agent_exceptions	=	self	.	orig_fake_us/;"	f
tearDown	data/data_raw/valid.py	/^utf-8	def	tearDown	(	self	)	:	\\n	    	if	self	.	tearDownFunc	:	\\n	        	self	.	tearDownFunc/;"	f
tearDown	data/data_raw/valid.py	/^utf-8	def	tearDown	(	self	)	:	\\n	    	tools	.	_current_arch	=	None	\\n	tools	.	_foreign_arch	=	/;"	f
tearDown	data/data_raw/valid.py	/^utf-8	def	tearDown	(	self	)	:	\\n	    	try	:	\\n	        	self	.	server	.	stop	(	2.0	)	\\n	self	/;"	f
tearDownClass	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	tearDownClass	(	cls	)	:	\\n	    	try	:	\\n	        	cls	.	driver	.	q/;"	f
tearDownClass	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	tearDownClass	(	cls	)	:	\\n	    	try	:	\\n	        	cls	.	driver	.	q/;"	f
tear_down	data/bpe_corpus_raw/valid.py	/^utf-8	def	tear_down	(	self	)	:	\\n	    	import	sip	\\n	self	.	widget	.	saveSettings	(	)	\\n	self/;"	f
tear_down	data/data_raw/valid.py	/^utf-8	def	tear_down	(	self	)	:	\\n	    	import	sip	\\n	self	.	widget	.	saveSettings	(	)	\\n	self/;"	f
teardown_databases	data/bpe_corpus_raw/train.py	/^utf-8	def	teardown_databases	(	self	,	old_config	,	**	kwargs	)	:	\\n	    	old_names	,	mirrors	=	/;"	f
teardown_databases	data/data_raw/train.py	/^utf-8	def	teardown_databases	(	self	,	old_config	,	**	kwargs	)	:	\\n	    	old_names	,	mirrors	=	/;"	f
teardown_method	data/bpe_corpus_raw/test.py	/^utf-8	def	teardown_method	(	self	)	:	\\n	    	self	.	hass	.	stop	(	)	\\n		$/;"	f
teardown_method	data/data_raw/test.py	/^utf-8	def	teardown_method	(	self	)	:	\\n	    	self	.	hass	.	stop	(	)	\\n		$/;"	f
tell	data/bpe_corpus_raw/train.py	/^utf-8	def	tell	(	self	)	:	\\n	    	return	self	.	_pos	\\n		$/;"	f
tell	data/bpe_corpus_raw/valid.py	/^utf-8	def	tell	(	self	)	:	\\n	    	return	_ProxyFile	.	tell	(	self	)	-	self	.	_start	\\n		$/;"	f
tell	data/bpe_corpus_raw/valid.py	/^utf-8	def	tell	(	self	)	:	\\n	    	return	self	.	__frame	\\n		$/;"	f
tell	data/bpe_corpus_raw/valid.py	/^utf-8	def	tell	(	self	)	:	\\n	    	return	self	.	_fp_bytes_read	\\n		$/;"	f
tell	data/bpe_corpus_raw/valid.py	/^utf-8	def	tell	(	self	)	:	\\n	    	try	:	\\n	        	return	self	.	stream	.	tell	(	)	\\n		excep/;"	f
tell	data/data_raw/train.py	/^utf-8	def	tell	(	self	)	:	\\n	    	return	self	.	_pos	\\n		$/;"	f
tell	data/data_raw/valid.py	/^utf-8	def	tell	(	self	)	:	\\n	    	return	_ProxyFile	.	tell	(	self	)	-	self	.	_start	\\n		$/;"	f
tell	data/data_raw/valid.py	/^utf-8	def	tell	(	self	)	:	\\n	    	return	self	.	__frame	\\n		$/;"	f
tell	data/data_raw/valid.py	/^utf-8	def	tell	(	self	)	:	\\n	    	return	self	.	_fp_bytes_read	\\n		$/;"	f
tell	data/data_raw/valid.py	/^utf-8	def	tell	(	self	)	:	\\n	    	try	:	\\n	        	return	self	.	stream	.	tell	(	)	\\n		excep/;"	f
temperature	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	temperature	(	self	)	->	float	:	\\n	    	return	self	.	_device	.	actual/;"	f
temperature	data/data_raw/train.py	/^utf-8	@	property	\\n	def	temperature	(	self	)	->	float	:	\\n	    	return	self	.	_device	.	actual/;"	f
tensor	data/bpe_corpus_raw/train.py	/^utf-8	def	tensor	(	self	,	other	)	:	\\n	    	return	self	.	_tensor_product	(	other	,	reverse	=	F/;"	f
tensor	data/data_raw/train.py	/^utf-8	def	tensor	(	self	,	other	)	:	\\n	    	return	self	.	_tensor_product	(	other	,	reverse	=	F/;"	f
tensors_to_item	data/bpe_corpus_raw/train.py	/^utf-8	@	abc	.	abstractmethod	\\n	def	tensors_to_item	(	self	,	keys_to_tensors	)	:	\\n	    	pass	/;"	f
tensors_to_item	data/data_raw/train.py	/^utf-8	@	abc	.	abstractmethod	\\n	def	tensors_to_item	(	self	,	keys_to_tensors	)	:	\\n	    	pass	/;"	f
terminate	data/bpe_corpus_raw/train.py	/^utf-8	@	_assert_pid_not_reused	\\n	def	terminate	(	self	)	:	\\n	    	if	_POSIX	:	\\n	        	se/;"	f
terminate	data/bpe_corpus_raw/valid.py	/^utf-8	@	control_command	(	variadic	=	'task_id'	,	args	=	[	(	'signal'	,	text_t	)	]	,	signature	=	/;"	f
terminate	data/bpe_corpus_raw/valid.py	/^utf-8	def	terminate	(	self	)	:	\\n	    	self	.	forceCloseAllDocuments	(	)	\\n	self	.	openedFileE/;"	f
terminate	data/bpe_corpus_raw/valid.py	/^utf-8	def	terminate	(	self	,	force	=	False	)	:	\\n	    	if	not	self	.	isalive	(	)	:	\\n	        /;"	f
terminate	data/data_raw/train.py	/^utf-8	@	_assert_pid_not_reused	\\n	def	terminate	(	self	)	:	\\n	    	if	_POSIX	:	\\n	        	se/;"	f
terminate	data/data_raw/valid.py	/^utf-8	@	control_command	(	variadic	=	'task_id'	,	args	=	[	(	'signal'	,	text_t	)	]	,	signature	=	/;"	f
terminate	data/data_raw/valid.py	/^utf-8	def	terminate	(	self	)	:	\\n	    	self	.	forceCloseAllDocuments	(	)	\\n	self	.	openedFileE/;"	f
terminate	data/data_raw/valid.py	/^utf-8	def	terminate	(	self	,	force	=	False	)	:	\\n	    	if	not	self	.	isalive	(	)	:	\\n	        /;"	f
terminate_cluster_endpoint	data/bpe_corpus_raw/valid.py	/^utf-8	def	terminate_cluster_endpoint	(	host	)	:	\\n	    	return	'https:\/\/{}\/api\/2.0\/cluster/;"	f
terminate_cluster_endpoint	data/data_raw/valid.py	/^utf-8	def	terminate_cluster_endpoint	(	host	)	:	\\n	    	return	'https:\/\/{}\/api\/2.0\/cluster/;"	f
terminate_instances	data/bpe_corpus_raw/train.py	/^utf-8	def	terminate_instances	(	self	,	instance_ids	=	None	)	:	\\n	    	params	=	{	}	\\n	if	inst/;"	f
terminate_instances	data/bpe_corpus_raw/valid.py	/^utf-8	def	terminate_instances	(	module	,	ec2	,	instance_ids	)	:	\\n	    	wait	=	module	.	params	/;"	f
terminate_instances	data/data_raw/train.py	/^utf-8	def	terminate_instances	(	self	,	instance_ids	=	None	)	:	\\n	    	params	=	{	}	\\n	if	inst/;"	f
terminate_instances	data/data_raw/valid.py	/^utf-8	def	terminate_instances	(	module	,	ec2	,	instance_ids	)	:	\\n	    	wait	=	module	.	params	/;"	f
terms	data/bpe_corpus_raw/valid.py	/^utf-8	@	defun	\\n	def	qp	(	ctx	,	a	,	q	=	None	,	n	=	None	,	**	kwargs	)	:	\\n	    	a	=	ctx	.	conv/;"	f	function:qp	file:
terms	data/data_raw/valid.py	/^utf-8	@	defun	\\n	def	qp	(	ctx	,	a	,	q	=	None	,	n	=	None	,	**	kwargs	)	:	\\n	    	a	=	ctx	.	conv/;"	f	function:qp	file:
test	data/bpe_corpus_raw/train.py	/^utf-8	def	test	(	self	,	parent	,	block	)	:	\\n	    	pass	\\n		$/;"	f
test	data/bpe_corpus_raw/valid.py	/^utf-8	def	_add_tests	(	self	,	testcases	)	:	\\n	\\n	    	def	_add_test	(	test_runner	,	test_dict/;"	f	function:_add_tests._add_test	file:
test	data/bpe_corpus_raw/valid.py	/^utf-8	def	test	(	)	:	\\n	    	cir	=	ahkab	.	Circuit	(	'CS amplifier'	)	\\n	mys	=	ahkab	.	time_fu/;"	f
test	data/bpe_corpus_raw/valid.py	/^utf-8	def	test	(	self	)	:	\\n	    	connection	=	self	.	_connect	(	)	\\n	ch	=	connection	.	channe/;"	f
test	data/data_raw/train.py	/^utf-8	def	test	(	self	,	parent	,	block	)	:	\\n	    	pass	\\n		$/;"	f
test	data/data_raw/valid.py	/^utf-8	def	_add_tests	(	self	,	testcases	)	:	\\n	\\n	    	def	_add_test	(	test_runner	,	test_dict/;"	f	function:_add_tests._add_test	file:
test	data/data_raw/valid.py	/^utf-8	def	test	(	)	:	\\n	    	cir	=	ahkab	.	Circuit	(	'CS amplifier'	)	\\n	mys	=	ahkab	.	time_fu/;"	f
test	data/data_raw/valid.py	/^utf-8	def	test	(	self	)	:	\\n	    	connection	=	self	.	_connect	(	)	\\n	ch	=	connection	.	channe/;"	f
test0	data/bpe_corpus_raw/train.py	/^utf-8	def	test0	(	self	)	:	\\n	    	c	=	Canvas	(	outputfile	(	'test_pdfbase_encodings.pdf'	)	)	\\/;"	f
test0	data/data_raw/train.py	/^utf-8	def	test0	(	self	)	:	\\n	    	c	=	Canvas	(	outputfile	(	'test_pdfbase_encodings.pdf'	)	)	\\/;"	f
test00	data/bpe_corpus_raw/valid.py	/^utf-8	def	test00	(	self	)	:	\\n	    	garbageLen	=	len	(	gc	.	garbage	)	\\n	if	garbageLen	==	0	:	/;"	f
test00	data/data_raw/valid.py	/^utf-8	def	test00	(	self	)	:	\\n	    	garbageLen	=	len	(	gc	.	garbage	)	\\n	if	garbageLen	==	0	:	/;"	f
test0041	data/bpe_corpus_raw/train.py	/^utf-8	@	patch	(	'apimethods.system.system.ansible_get_child_alarms'	)	\\n	def	test0041	(	self	,	/;"	f
test0041	data/data_raw/train.py	/^utf-8	@	patch	(	'apimethods.system.system.ansible_get_child_alarms'	)	\\n	def	test0041	(	self	,	/;"	f
test00a	data/bpe_corpus_raw/valid.py	/^utf-8	def	test00a	(	self	)	:	\\n	    	cn	=	self	.	getobject	(	)	\\n	cn	.	attrs	[	'attr1'	]	=	'va/;"	f
test00a	data/data_raw/valid.py	/^utf-8	def	test00a	(	self	)	:	\\n	    	cn	=	self	.	getobject	(	)	\\n	cn	.	attrs	[	'attr1'	]	=	'va/;"	f
test00b	data/bpe_corpus_raw/train.py	/^utf-8	def	test00b	(	self	)	:	\\n	    	N	=	100	\\n	ra	=	np	.	fromiter	(	(	(	i	,	i	*	2.0	,	i	*	3	)/;"	f
test00b	data/data_raw/train.py	/^utf-8	def	test00b	(	self	)	:	\\n	    	N	=	100	\\n	ra	=	np	.	fromiter	(	(	(	i	,	i	*	2.0	,	i	*	3	)/;"	f
test020_get_questionset_1	data/bpe_corpus_raw/test.py	/^utf-8	def	test020_get_questionset_1	(	self	)	:	\\n	    	response	=	self	.	client	.	get	(	'\/q\/t/;"	f
test020_get_questionset_1	data/data_raw/test.py	/^utf-8	def	test020_get_questionset_1	(	self	)	:	\\n	    	response	=	self	.	client	.	get	(	'\/q\/t/;"	f
test02_test_health	data/bpe_corpus_raw/valid.py	/^utf-8	def	test02_test_health	(	self	)	:	\\n	    	rv	=	self	.	app	.	get	(	'\/health'	,	headers	=	/;"	f
test02_test_health	data/data_raw/valid.py	/^utf-8	def	test02_test_health	(	self	)	:	\\n	    	rv	=	self	.	app	.	get	(	'\/health'	,	headers	=	/;"	f
test03a_kml	data/bpe_corpus_raw/train.py	/^utf-8	def	test03a_kml	(	self	)	:	\\n	    	if	not	postgis	:	\\n	        	self	.	assertRaises	(	No/;"	f
test03a_kml	data/data_raw/train.py	/^utf-8	def	test03a_kml	(	self	)	:	\\n	    	if	not	postgis	:	\\n	        	self	.	assertRaises	(	No/;"	f
test04_ComplexAtom	data/bpe_corpus_raw/valid.py	/^utf-8	def	test04_ComplexAtom	(	self	)	:	\\n	    	ttypes	=	[	'complex64'	,	'complex128'	]	\\n	if	/;"	f
test04_ComplexAtom	data/data_raw/valid.py	/^utf-8	def	test04_ComplexAtom	(	self	)	:	\\n	    	ttypes	=	[	'complex64'	,	'complex128'	]	\\n	if	/;"	f
test1	data/bpe_corpus_raw/valid.py	/^utf-8	def	test1	(	self	)	:	\\n	    	self	.	verify	(	'#@ blah'	,	'#@ blah'	)	\\n	self	.	verify	(	/;"	f
test1	data/data_raw/valid.py	/^utf-8	def	test1	(	self	)	:	\\n	    	self	.	verify	(	'#@ blah'	,	'#@ blah'	)	\\n	self	.	verify	(	/;"	f
test12	data/bpe_corpus_raw/valid.py	/^utf-8	def	test12	(	self	)	:	\\n	    	result	=	_rel_open_and_read	(	'data:text\/plain;,Hello%20Wo/;"	f
test12	data/data_raw/valid.py	/^utf-8	def	test12	(	self	)	:	\\n	    	result	=	_rel_open_and_read	(	'data:text\/plain;,Hello%20Wo/;"	f
testAdd	data/bpe_corpus_raw/valid.py	/^utf-8	def	testAdd	(	self	)	:	\\n	    	pmap	=	passwd	.	PasswdMap	(	)	\\n	entry	=	self	.	_good_ent/;"	f
testAdd	data/data_raw/valid.py	/^utf-8	def	testAdd	(	self	)	:	\\n	    	pmap	=	passwd	.	PasswdMap	(	)	\\n	entry	=	self	.	_good_ent/;"	f
testAdding	data/bpe_corpus_raw/valid.py	/^utf-8	def	testAdding	(	self	)	:	\\n	    	ssd	=	self	.	original	(	)	\\n	op	=	IECoreScene	.	AddSmo/;"	f
testAdding	data/data_raw/valid.py	/^utf-8	def	testAdding	(	self	)	:	\\n	    	ssd	=	self	.	original	(	)	\\n	op	=	IECoreScene	.	AddSmo/;"	f
testAliasesOfYesAndNo	data/bpe_corpus_raw/valid.py	/^utf-8	def	testAliasesOfYesAndNo	(	self	)	:	\\n	    	self	.	assert_	(	UsesColor	(	'dumb'	,	None	,/;"	f
testAliasesOfYesAndNo	data/data_raw/valid.py	/^utf-8	def	testAliasesOfYesAndNo	(	self	)	:	\\n	    	self	.	assert_	(	UsesColor	(	'dumb'	,	None	,/;"	f
testBadFilter	data/bpe_corpus_raw/train.py	/^utf-8	def	testBadFilter	(	self	)	:	\\n	    	self	.	RunAndVerify	(	'BadFilter'	,	[	]	)	\\n	self	./;"	f
testBadFilter	data/data_raw/train.py	/^utf-8	def	testBadFilter	(	self	)	:	\\n	    	self	.	RunAndVerify	(	'BadFilter'	,	[	]	)	\\n	self	./;"	f
testBasic3DWrongAxes	data/bpe_corpus_raw/train.py	/^utf-8	def	testBasic3DWrongAxes	(	self	)	:	\\n	    	for	fileName	in	self	.	imgFileNames3D	:	\\n	 /;"	f
testBasic3DWrongAxes	data/data_raw/train.py	/^utf-8	def	testBasic3DWrongAxes	(	self	)	:	\\n	    	for	fileName	in	self	.	imgFileNames3D	:	\\n	 /;"	f
testBindNull	data/bpe_corpus_raw/train.py	/^utf-8	def	testBindNull	(	self	)	:	\\n	    	self	.	cursor	.	execute	(	\\n	"""\\n                s/;"	f
testBindNull	data/data_raw/train.py	/^utf-8	def	testBindNull	(	self	)	:	\\n	    	self	.	cursor	.	execute	(	\\n	"""\\n                s/;"	f
testCallbackReCoiterate	data/bpe_corpus_raw/valid.py	/^utf-8	def	testCallbackReCoiterate	(	self	)	:	\\n	    	calls	=	[	]	\\n	\\n	\\n	class	FakeCall	:	\\/;"	f
testCallbackReCoiterate	data/data_raw/valid.py	/^utf-8	def	testCallbackReCoiterate	(	self	)	:	\\n	    	calls	=	[	]	\\n	\\n	\\n	class	FakeCall	:	\\/;"	f
testCanConnectToRestartedBrowser	data/bpe_corpus_raw/valid.py	/^utf-8	def	testCanConnectToRestartedBrowser	(	self	)	:	\\n	    	driver	=	self	.	NewWebDriver	(	)	/;"	f
testCanConnectToRestartedBrowser	data/data_raw/valid.py	/^utf-8	def	testCanConnectToRestartedBrowser	(	self	)	:	\\n	    	driver	=	self	.	NewWebDriver	(	)	/;"	f
testCleanupExceptionContextException	data/bpe_corpus_raw/train.py	/^utf-8	def	testCleanupExceptionContextException	(	self	)	:	\\n	    	was_raised	=	False	\\n	tempdi/;"	f
testCleanupExceptionContextException	data/data_raw/train.py	/^utf-8	def	testCleanupExceptionContextException	(	self	)	:	\\n	    	was_raised	=	False	\\n	tempdi/;"	f
testCommentSignals	data/bpe_corpus_raw/valid.py	/^utf-8	def	testCommentSignals	(	self	)	:	\\n	\\n	    	def	receive	(	sender	,	**	kwargs	)	:	\\n	  /;"	f
testCommentSignals	data/data_raw/valid.py	/^utf-8	def	testCommentSignals	(	self	)	:	\\n	\\n	    	def	receive	(	sender	,	**	kwargs	)	:	\\n	  /;"	f
testComputationValid	data/bpe_corpus_raw/train.py	/^utf-8	@	parameterized	.	NamedParameters	(	(	'WithBias'	,	True	)	,	(	'WithoutBias'	,	False	)	)	\\/;"	f
testComputationValid	data/data_raw/train.py	/^utf-8	@	parameterized	.	NamedParameters	(	(	'WithBias'	,	True	)	,	(	'WithoutBias'	,	False	)	)	\\/;"	f
testConstructors	data/bpe_corpus_raw/valid.py	/^utf-8	def	testConstructors	(	self	)	:	\\n	    	m	=	imath	.	M44f	(	1.0	,	0.0	,	0.0	,	0.0	,	0.0	,	/;"	f
testConstructors	data/data_raw/valid.py	/^utf-8	def	testConstructors	(	self	)	:	\\n	    	m	=	imath	.	M44f	(	1.0	,	0.0	,	0.0	,	0.0	,	0.0	,	/;"	f
testCreatingInMemoryStoreUsingConfigWithGivenSection	data/bpe_corpus_raw/valid.py	/^utf-8	def	testCreatingInMemoryStoreUsingConfigWithGivenSection	(	self	)	:	\\n	    	config	=	conf/;"	f
testCreatingInMemoryStoreUsingConfigWithGivenSection	data/data_raw/valid.py	/^utf-8	def	testCreatingInMemoryStoreUsingConfigWithGivenSection	(	self	)	:	\\n	    	config	=	conf/;"	f
testCustomMetrics	data/bpe_corpus_raw/train.py	/^utf-8	def	testCustomMetrics	(	self	)	:	\\n	\\n	    	def	_input_fn_train	(	)	:	\\n	        	targe/;"	f
testCustomMetrics	data/data_raw/train.py	/^utf-8	def	testCustomMetrics	(	self	)	:	\\n	\\n	    	def	_input_fn_train	(	)	:	\\n	        	targe/;"	f
testDataSource	data/bpe_corpus_raw/test.py	/^utf-8	def	testDataSource	(	self	)	:	\\n	    	self	.	assert_	(	self	.	feed	.	data_source	[	0	]	is/;"	f
testDataSource	data/data_raw/test.py	/^utf-8	def	testDataSource	(	self	)	:	\\n	    	self	.	assert_	(	self	.	feed	.	data_source	[	0	]	is/;"	f
testDataStreams	data/bpe_corpus_raw/train.py	/^utf-8	def	testDataStreams	(	self	)	:	\\n	    	path_spec	=	tar_path_spec	.	TARPathSpec	(	location/;"	f
testDataStreams	data/data_raw/train.py	/^utf-8	def	testDataStreams	(	self	)	:	\\n	    	path_spec	=	tar_path_spec	.	TARPathSpec	(	location/;"	f
testDictionarySerializer	data/bpe_corpus_raw/train.py	/^utf-8	def	testDictionarySerializer	(	self	)	:	\\n	    	old_workflow	=	self	.	workflow	\\n	serial/;"	f
testDictionarySerializer	data/data_raw/train.py	/^utf-8	def	testDictionarySerializer	(	self	)	:	\\n	    	old_workflow	=	self	.	workflow	\\n	serial/;"	f
testEquality	data/bpe_corpus_raw/valid.py	/^utf-8	def	testEquality	(	self	)	:	\\n	\\n	\\n	    	class	MyEnum	(	messages	.	Enum	)	:	\\n	      /;"	f
testEquality	data/data_raw/valid.py	/^utf-8	def	testEquality	(	self	)	:	\\n	\\n	\\n	    	class	MyEnum	(	messages	.	Enum	)	:	\\n	      /;"	f
testFilterWithoutDot	data/bpe_corpus_raw/train.py	/^utf-8	def	testFilterWithoutDot	(	self	)	:	\\n	    	self	.	RunAndVerify	(	'*z*'	,	[	'FooTest.Xyz'/;"	f
testFilterWithoutDot	data/data_raw/train.py	/^utf-8	def	testFilterWithoutDot	(	self	)	:	\\n	    	self	.	RunAndVerify	(	'*z*'	,	[	'FooTest.Xyz'/;"	f
testFlag	data/bpe_corpus_raw/train.py	/^utf-8	def	testFlag	(	self	)	:	\\n	    	self	.	RunAndVerify	(	env_var_value	=	None	,	flag_value	=/;"	f
testFlag	data/data_raw/train.py	/^utf-8	def	testFlag	(	self	)	:	\\n	    	self	.	RunAndVerify	(	env_var_value	=	None	,	flag_value	=/;"	f
testFoundPublicOverlays	data/bpe_corpus_raw/test.py	/^utf-8	def	testFoundPublicOverlays	(	self	)	:	\\n	    	for	b	in	(	self	.	PUB_PRIV	,	self	.	PUB_PR/;"	f
testFoundPublicOverlays	data/data_raw/test.py	/^utf-8	def	testFoundPublicOverlays	(	self	)	:	\\n	    	for	b	in	(	self	.	PUB_PRIV	,	self	.	PUB_PR/;"	f
testFromWireOk	data/bpe_corpus_raw/train.py	/^utf-8	def	testFromWireOk	(	self	)	:	\\n	    	eui	=	b'\\\\x01#Eg\\\\x89\\\\xab'	\\n	pad_len	=	100/;"	f
testFromWireOk	data/data_raw/train.py	/^utf-8	def	testFromWireOk	(	self	)	:	\\n	    	eui	=	b'\\\\x01#Eg\\\\x89\\\\xab'	\\n	pad_len	=	100/;"	f
testGceTarballGeneration	data/bpe_corpus_raw/train.py	/^utf-8	def	testGceTarballGeneration	(	self	)	:	\\n	    	image_dir	=	os	.	path	.	join	(	self	.	tem/;"	f
testGceTarballGeneration	data/data_raw/train.py	/^utf-8	def	testGceTarballGeneration	(	self	)	:	\\n	    	image_dir	=	os	.	path	.	join	(	self	.	tem/;"	f
testGetFormatStringAttributeNames	data/bpe_corpus_raw/valid.py	/^utf-8	def	testGetFormatStringAttributeNames	(	self	)	:	\\n	    	event_formatter	=	winlnk	.	WinLn/;"	f
testGetFormatStringAttributeNames	data/data_raw/valid.py	/^utf-8	def	testGetFormatStringAttributeNames	(	self	)	:	\\n	    	event_formatter	=	winlnk	.	WinLn/;"	f
testGetItemsRemote	data/bpe_corpus_raw/train.py	/^utf-8	def	testGetItemsRemote	(	self	)	:	\\n	    	self	.	stream_start	(	mode	=	'client'	,	plugins/;"	f
testGetItemsRemote	data/data_raw/train.py	/^utf-8	def	testGetItemsRemote	(	self	)	:	\\n	    	self	.	stream_start	(	mode	=	'client'	,	plugins/;"	f
testHasJavaLibrary	data/bpe_corpus_raw/valid.py	/^utf-8	def	testHasJavaLibrary	(	self	)	:	\\n	    	mk_parser	=	android_mk	.	CreateAndroidMK	(	path/;"	f
testHasJavaLibrary	data/data_raw/valid.py	/^utf-8	def	testHasJavaLibrary	(	self	)	:	\\n	    	mk_parser	=	android_mk	.	CreateAndroidMK	(	path/;"	f
testIdentifyBadSyntaxDuringInit	data/bpe_corpus_raw/valid.py	/^utf-8	def	testIdentifyBadSyntaxDuringInit	(	self	)	:	\\n	    	self	.	assertRaises	(	re	.	error	,/;"	f
testIdentifyBadSyntaxDuringInit	data/data_raw/valid.py	/^utf-8	def	testIdentifyBadSyntaxDuringInit	(	self	)	:	\\n	    	self	.	assertRaises	(	re	.	error	,/;"	f
testImages	data/bpe_corpus_raw/valid.py	/^utf-8	def	testImages	(	self	)	:	\\n	    	image_json	=	self	.	_getJson	(	'\/data\/images?tag=imag/;"	f
testImages	data/data_raw/valid.py	/^utf-8	def	testImages	(	self	)	:	\\n	    	image_json	=	self	.	_getJson	(	'\/data\/images?tag=imag/;"	f
testInitializers	data/bpe_corpus_raw/valid.py	/^utf-8	@	parameterized	.	NamedParameters	(	(	'WithBias'	,	True	)	,	(	'WithoutBias'	,	False	)	)	\\/;"	f
testInitializers	data/data_raw/valid.py	/^utf-8	@	parameterized	.	NamedParameters	(	(	'WithBias'	,	True	)	,	(	'WithoutBias'	,	False	)	)	\\/;"	f
testInputStep2WhenVerifyDataSignedWithCertException	data/bpe_corpus_raw/train.py	/^utf-8	def	testInputStep2WhenVerifyDataSignedWithCertException	(	self	)	:	\\n	    	m	=	'c cn sn'	/;"	f
testInputStep2WhenVerifyDataSignedWithCertException	data/data_raw/train.py	/^utf-8	def	testInputStep2WhenVerifyDataSignedWithCertException	(	self	)	:	\\n	    	m	=	'c cn sn'	/;"	f
testInvalidKey	data/bpe_corpus_raw/train.py	/^utf-8	def	testInvalidKey	(	self	)	:	\\n	    	self	.	assertFalse	(	mox	.	ContainsKeyValue	(	'qux'/;"	f
testInvalidKey	data/data_raw/train.py	/^utf-8	def	testInvalidKey	(	self	)	:	\\n	    	self	.	assertFalse	(	mox	.	ContainsKeyValue	(	'qux'/;"	f
testJoinentAckAcceptErrorPack	data/bpe_corpus_raw/test.py	/^utf-8	def	testJoinentAckAcceptErrorPack	(	self	)	:	\\n	    	console	.	terse	(	'{0}\\\\n'	.	forma/;"	f
testJoinentAckAcceptErrorPack	data/data_raw/test.py	/^utf-8	def	testJoinentAckAcceptErrorPack	(	self	)	:	\\n	    	console	.	terse	(	'{0}\\\\n'	.	forma/;"	f
testLeftOuterJoinSimple	data/bpe_corpus_raw/valid.py	/^utf-8	def	testLeftOuterJoinSimple	(	self	)	:	\\n	    	x	=	self	.	context	.	parallelize	(	[	(	'a'/;"	f
testLeftOuterJoinSimple	data/data_raw/valid.py	/^utf-8	def	testLeftOuterJoinSimple	(	self	)	:	\\n	    	x	=	self	.	context	.	parallelize	(	[	(	'a'/;"	f
testListOptions	data/bpe_corpus_raw/valid.py	/^utf-8	@	pytest	.	mark	.	parametrize	(	'purge'	,	[	True	,	False	]	)	\\n	def	testListOptions	(	sel/;"	f
testListOptions	data/data_raw/valid.py	/^utf-8	@	pytest	.	mark	.	parametrize	(	'purge'	,	[	True	,	False	]	)	\\n	def	testListOptions	(	sel/;"	f
testLoginKeychain	data/bpe_corpus_raw/test.py	/^utf-8	def	testLoginKeychain	(	self	)	:	\\n	    	self	.	StubSetup	(	)	\\n	command	=	[	certs	.	CMD/;"	f
testLoginKeychain	data/data_raw/test.py	/^utf-8	def	testLoginKeychain	(	self	)	:	\\n	    	self	.	StubSetup	(	)	\\n	command	=	[	certs	.	CMD/;"	f
testModbusControlBlockDiagnostic	data/bpe_corpus_raw/train.py	/^utf-8	def	testModbusControlBlockDiagnostic	(	self	)	:	\\n	    	self	.	assertEqual	(	[	False	]	*	/;"	f
testModbusControlBlockDiagnostic	data/data_raw/train.py	/^utf-8	def	testModbusControlBlockDiagnostic	(	self	)	:	\\n	    	self	.	assertEqual	(	[	False	]	*	/;"	f
testMonthDict	data/bpe_corpus_raw/test.py	/^utf-8	def	testMonthDict	(	self	)	:	\\n	    	self	.	assertEqual	(	timelib	.	MONTH_DICT	[	'nov'	]	/;"	f
testMonthDict	data/data_raw/test.py	/^utf-8	def	testMonthDict	(	self	)	:	\\n	    	self	.	assertEqual	(	timelib	.	MONTH_DICT	[	'nov'	]	/;"	f
testNodeSetUpdatesFromEmptyNodeSet	data/bpe_corpus_raw/train.py	/^utf-8	def	testNodeSetUpdatesFromEmptyNodeSet	(	self	)	:	\\n	    	nodeset	=	NodeSet	(	)	\\n	self	/;"	f
testNodeSetUpdatesFromEmptyNodeSet	data/data_raw/train.py	/^utf-8	def	testNodeSetUpdatesFromEmptyNodeSet	(	self	)	:	\\n	    	nodeset	=	NodeSet	(	)	\\n	self	/;"	f
testNonExistentViewpoint	data/bpe_corpus_raw/valid.py	/^utf-8	def	testNonExistentViewpoint	(	self	)	:	\\n	    	self	.	assertRaisesHttpError	(	404	,	self/;"	f
testNonExistentViewpoint	data/data_raw/valid.py	/^utf-8	def	testNonExistentViewpoint	(	self	)	:	\\n	    	self	.	assertRaisesHttpError	(	404	,	self/;"	f
testNormalization	data/bpe_corpus_raw/test.py	/^utf-8	def	testNormalization	(	self	)	:	\\n	    	inputs	=	tf	.	constant	(	[	[	1.0	,	2.0	,	3.0	]	,/;"	f
testNormalization	data/data_raw/test.py	/^utf-8	def	testNormalization	(	self	)	:	\\n	    	inputs	=	tf	.	constant	(	[	[	1.0	,	2.0	,	3.0	]	,/;"	f
testNormalizePortOutOfRange	data/bpe_corpus_raw/valid.py	/^utf-8	def	testNormalizePortOutOfRange	(	self	)	:	\\n	    	self	.	assertRaises	(	ValueError	,	rem/;"	f
testNormalizePortOutOfRange	data/data_raw/valid.py	/^utf-8	def	testNormalizePortOutOfRange	(	self	)	:	\\n	    	self	.	assertRaises	(	ValueError	,	rem/;"	f
testNumpyFContiguousMatrix	data/bpe_corpus_raw/test.py	/^utf-8	def	testNumpyFContiguousMatrix	(	self	)	:	\\n	    	x	=	np	.	array	(	np	.	random	.	rand	(	1/;"	f
testNumpyFContiguousMatrix	data/data_raw/test.py	/^utf-8	def	testNumpyFContiguousMatrix	(	self	)	:	\\n	    	x	=	np	.	array	(	np	.	random	.	rand	(	1/;"	f
testOpenCloseLocation	data/bpe_corpus_raw/test.py	/^utf-8	def	testOpenCloseLocation	(	self	)	:	\\n	    	self	.	_TestOpenCloseLocation	(	self	.	_bde_/;"	f
testOpenCloseLocation	data/data_raw/test.py	/^utf-8	def	testOpenCloseLocation	(	self	)	:	\\n	    	self	.	_TestOpenCloseLocation	(	self	.	_bde_/;"	f
testOverlapOK	data/bpe_corpus_raw/valid.py	/^utf-8	def	testOverlapOK	(	self	)	:	\\n	    	encoder	=	RandomDistributedScalarEncoder	(	name	=	'e/;"	f
testOverlapOK	data/data_raw/valid.py	/^utf-8	def	testOverlapOK	(	self	)	:	\\n	    	encoder	=	RandomDistributedScalarEncoder	(	name	=	'e/;"	f
testPersistenceForOldVersions	data/bpe_corpus_raw/train.py	/^utf-8	def	testPersistenceForOldVersions	(	self	)	:	\\n	    	old_model_path	=	datapath	(	'ft_mode/;"	f
testPersistenceForOldVersions	data/data_raw/train.py	/^utf-8	def	testPersistenceForOldVersions	(	self	)	:	\\n	    	old_model_path	=	datapath	(	'ft_mode/;"	f
testPrivateSQ	data/bpe_corpus_raw/train.py	/^utf-8	def	testPrivateSQ	(	self	)	:	\\n	    	dcmread	(	priv_SQ_name	)	\\n		$/;"	f
testPrivateSQ	data/data_raw/train.py	/^utf-8	def	testPrivateSQ	(	self	)	:	\\n	    	dcmread	(	priv_SQ_name	)	\\n		$/;"	f
testProcessResponseValid	data/bpe_corpus_raw/valid.py	/^utf-8	def	testProcessResponseValid	(	self	)	:	\\n	    	request_data	=	self	.	get_request	(	)	\\n/;"	f
testProcessResponseValid	data/data_raw/valid.py	/^utf-8	def	testProcessResponseValid	(	self	)	:	\\n	    	request_data	=	self	.	get_request	(	)	\\n/;"	f
testProcessSoftwareZones	data/bpe_corpus_raw/valid.py	/^utf-8	@	shared_test_lib	.	skipUnlessHasTestFile	(	[	'SOFTWARE'	]	)	\\n	def	testProcessSoftwareZo/;"	f
testProcessSoftwareZones	data/data_raw/valid.py	/^utf-8	@	shared_test_lib	.	skipUnlessHasTestFile	(	[	'SOFTWARE'	]	)	\\n	def	testProcessSoftwareZo/;"	f
testProtojsonUnrecognizedFieldNumber	data/bpe_corpus_raw/train.py	/^utf-8	def	testProtojsonUnrecognizedFieldNumber	(	self	)	:	\\n	    	decoded	=	protojson	.	decode_/;"	f
testProtojsonUnrecognizedFieldNumber	data/data_raw/train.py	/^utf-8	def	testProtojsonUnrecognizedFieldNumber	(	self	)	:	\\n	    	decoded	=	protojson	.	decode_/;"	f
testReloadPopulatesFirstEventTimestamp	data/bpe_corpus_raw/test.py	/^utf-8	def	testReloadPopulatesFirstEventTimestamp	(	self	)	:	\\n	    	gen	=	_EventGenerator	(	)	\\/;"	f
testReloadPopulatesFirstEventTimestamp	data/data_raw/test.py	/^utf-8	def	testReloadPopulatesFirstEventTimestamp	(	self	)	:	\\n	    	gen	=	_EventGenerator	(	)	\\/;"	f
testRepeatedCompositeFieldSortArguments	data/bpe_corpus_raw/valid.py	/^utf-8	def	testRepeatedCompositeFieldSortArguments	(	self	,	message_module	)	:	\\n	    	message	=/;"	f
testRepeatedCompositeFieldSortArguments	data/data_raw/valid.py	/^utf-8	def	testRepeatedCompositeFieldSortArguments	(	self	,	message_module	)	:	\\n	    	message	=/;"	f
testRings1	data/bpe_corpus_raw/train.py	/^utf-8	def	testRings1	(	self	)	:	\\n	    	smiList	=	[	(	'C1OCCCC1'	,	(	'O1CCCCC1'	,	'C1COCCC1'	,	/;"	f
testRings1	data/data_raw/train.py	/^utf-8	def	testRings1	(	self	)	:	\\n	    	smiList	=	[	(	'C1OCCCC1'	,	(	'O1CCCCC1'	,	'C1COCCC1'	,	/;"	f
testScalar_Counter	data/bpe_corpus_raw/valid.py	/^utf-8	def	testScalar_Counter	(	self	)	:	\\n	    	self	.	scalarGetAndCheck	(	'snimpyCounter'	,	47/;"	f
testScalar_Counter	data/data_raw/valid.py	/^utf-8	def	testScalar_Counter	(	self	)	:	\\n	    	self	.	scalarGetAndCheck	(	'snimpyCounter'	,	47/;"	f
testScalar_Timeticks	data/bpe_corpus_raw/train.py	/^utf-8	def	testScalar_Timeticks	(	self	)	:	\\n	    	self	.	scalarSetAndCheck	(	'snimpyTimeticks'	/;"	f
testScalar_Timeticks	data/data_raw/train.py	/^utf-8	def	testScalar_Timeticks	(	self	)	:	\\n	    	self	.	scalarSetAndCheck	(	'snimpyTimeticks'	/;"	f
testSetupMode	data/bpe_corpus_raw/valid.py	/^utf-8	def	testSetupMode	(	self	)	:	\\n	    	self	.	mock_object	.	NonsenseCall	(	)	\\n	self	.	ass/;"	f
testSetupMode	data/data_raw/valid.py	/^utf-8	def	testSetupMode	(	self	)	:	\\n	    	self	.	mock_object	.	NonsenseCall	(	)	\\n	self	.	ass/;"	f
testShardDescription	data/bpe_corpus_raw/valid.py	/^utf-8	def	testShardDescription	(	self	)	:	\\n	    	self	.	mockOutBlobInfoSize	(	199	)	\\n	self	./;"	f
testShardDescription	data/data_raw/valid.py	/^utf-8	def	testShardDescription	(	self	)	:	\\n	    	self	.	mockOutBlobInfoSize	(	199	)	\\n	self	./;"	f
testShardStatusFileIsCreatedWithListTests	data/bpe_corpus_raw/valid.py	/^utf-8	def	testShardStatusFileIsCreatedWithListTests	(	self	)	:	\\n	    	shard_status_file	=	os	./;"	f
testShardStatusFileIsCreatedWithListTests	data/data_raw/valid.py	/^utf-8	def	testShardStatusFileIsCreatedWithListTests	(	self	)	:	\\n	    	shard_status_file	=	os	./;"	f
testShouldWaitMissingBuilderWithBuildbucket	data/bpe_corpus_raw/valid.py	/^utf-8	def	testShouldWaitMissingBuilderWithBuildbucket	(	self	)	:	\\n	    	buildbucket_id_dict	=	/;"	f
testShouldWaitMissingBuilderWithBuildbucket	data/data_raw/valid.py	/^utf-8	def	testShouldWaitMissingBuilderWithBuildbucket	(	self	)	:	\\n	    	buildbucket_id_dict	=	/;"	f
testSignResumable	data/bpe_corpus_raw/train.py	/^utf-8	def	testSignResumable	(	self	)	:	\\n	    	expected	=	sigs	.	TEST_SIGN_RESUMABLE	\\n	\\n	\\/;"	f
testSignResumable	data/data_raw/train.py	/^utf-8	def	testSignResumable	(	self	)	:	\\n	    	expected	=	sigs	.	TEST_SIGN_RESUMABLE	\\n	\\n	\\/;"	f
testSimpleStreamOneNoteDifferent	data/bpe_corpus_raw/train.py	/^utf-8	def	testSimpleStreamOneNoteDifferent	(	self	)	:	\\n	    	from	music21	import	stream	\\n	fr/;"	f
testSimpleStreamOneNoteDifferent	data/data_raw/train.py	/^utf-8	def	testSimpleStreamOneNoteDifferent	(	self	)	:	\\n	    	from	music21	import	stream	\\n	fr/;"	f
testTCPStats	data/bpe_corpus_raw/train.py	/^utf-8	def	testTCPStats	(	self	)	:	\\n	    	stb	=	stbservice	.	STBService	(	)	\\n	self	.	assertEq/;"	f
testTCPStats	data/data_raw/train.py	/^utf-8	def	testTCPStats	(	self	)	:	\\n	    	stb	=	stbservice	.	STBService	(	)	\\n	self	.	assertEq/;"	f
testTimestampDir	data/bpe_corpus_raw/train.py	/^utf-8	def	testTimestampDir	(	self	)	:	\\n	    	update_obj	=	updater	.	Updater	(	config	.	MAP_PAS/;"	f
testTimestampDir	data/data_raw/train.py	/^utf-8	def	testTimestampDir	(	self	)	:	\\n	    	update_obj	=	updater	.	Updater	(	config	.	MAP_PAS/;"	f
testTwoPatterns	data/bpe_corpus_raw/train.py	/^utf-8	def	testTwoPatterns	(	self	)	:	\\n	    	self	.	RunAndVerify	(	'Foo*.*:*A*'	,	[	'FooTest.Ab/;"	f
testTwoPatterns	data/data_raw/train.py	/^utf-8	def	testTwoPatterns	(	self	)	:	\\n	    	self	.	RunAndVerify	(	'Foo*.*:*A*'	,	[	'FooTest.Ab/;"	f
testUpdateLonePairs	data/bpe_corpus_raw/train.py	/^utf-8	def	testUpdateLonePairs	(	self	)	:	\\n	    	mol_N1sc_N5t	=	Molecule	(	)	.	fromAdjacencyLis/;"	f
testUpdateLonePairs	data/data_raw/train.py	/^utf-8	def	testUpdateLonePairs	(	self	)	:	\\n	    	mol_N1sc_N5t	=	Molecule	(	)	.	fromAdjacencyLis/;"	f
testUpdateWorkerStatus	data/bpe_corpus_raw/train.py	/^utf-8	def	testUpdateWorkerStatus	(	self	)	:	\\n	    	status	=	processing_status	.	ProcessingStat/;"	f
testUpdateWorkerStatus	data/data_raw/train.py	/^utf-8	def	testUpdateWorkerStatus	(	self	)	:	\\n	    	status	=	processing_status	.	ProcessingStat/;"	f
testV1beta1PriorityClassList	data/bpe_corpus_raw/valid.py	/^utf-8	def	testV1beta1PriorityClassList	(	self	)	:	\\n	    	pass	\\n		$/;"	f
testV1beta1PriorityClassList	data/data_raw/valid.py	/^utf-8	def	testV1beta1PriorityClassList	(	self	)	:	\\n	    	pass	\\n		$/;"	f
testVFSWithWAL	data/bpe_corpus_raw/test.py	/^utf-8	def	testVFSWithWAL	(	self	)	:	\\n	    	apsw	.	connection_hooks	.	append	(	lambda	c	:	c	.	c/;"	f
testVFSWithWAL	data/data_raw/test.py	/^utf-8	def	testVFSWithWAL	(	self	)	:	\\n	    	apsw	.	connection_hooks	.	append	(	lambda	c	:	c	.	c/;"	f
testVariableGenericHunt	data/bpe_corpus_raw/train.py	/^utf-8	def	testVariableGenericHunt	(	self	)	:	\\n	    	hunt	=	self	.	RunVariableGenericHunt	(	)	\\/;"	f
testVariableGenericHunt	data/data_raw/train.py	/^utf-8	def	testVariableGenericHunt	(	self	)	:	\\n	    	hunt	=	self	.	RunVariableGenericHunt	(	)	\\/;"	f
testWaitForGsPathsTimeout	data/bpe_corpus_raw/train.py	/^utf-8	def	testWaitForGsPathsTimeout	(	self	)	:	\\n	    	ctx	=	gs	.	GSContext	(	)	\\n	exists	=	{	/;"	f
testWaitForGsPathsTimeout	data/data_raw/train.py	/^utf-8	def	testWaitForGsPathsTimeout	(	self	)	:	\\n	    	ctx	=	gs	.	GSContext	(	)	\\n	exists	=	{	/;"	f
testWildcardInTestCaseName	data/bpe_corpus_raw/train.py	/^utf-8	def	testWildcardInTestCaseName	(	self	)	:	\\n	    	self	.	RunAndVerify	(	'*a*.*'	,	[	'BarT/;"	f
testWildcardInTestCaseName	data/data_raw/train.py	/^utf-8	def	testWildcardInTestCaseName	(	self	)	:	\\n	    	self	.	RunAndVerify	(	'*a*.*'	,	[	'BarT/;"	f
testWildcardInTestName	data/bpe_corpus_raw/valid.py	/^utf-8	def	testWildcardInTestName	(	self	)	:	\\n	    	self	.	RunAndVerify	(	'*.*A*'	,	[	'FooTest./;"	f
testWildcardInTestName	data/data_raw/valid.py	/^utf-8	def	testWildcardInTestName	(	self	)	:	\\n	    	self	.	RunAndVerify	(	'*.*A*'	,	[	'FooTest./;"	f
testWrite	data/bpe_corpus_raw/valid.py	/^utf-8	def	testWrite	(	self	)	:	\\n	    	self	.	mMemoryLayer	=	QgsVectorLayer	(	\\n	'Point?crs=ep/;"	f
testWrite	data/data_raw/valid.py	/^utf-8	def	testWrite	(	self	)	:	\\n	    	self	.	mMemoryLayer	=	QgsVectorLayer	(	\\n	'Point?crs=ep/;"	f
testWriteSingleRegisters	data/bpe_corpus_raw/valid.py	/^utf-8	def	testWriteSingleRegisters	(	self	)	:	\\n	    	result	=	self	.	master	.	execute	(	1	,	mo/;"	f
testWriteSingleRegisters	data/data_raw/valid.py	/^utf-8	def	testWriteSingleRegisters	(	self	)	:	\\n	    	result	=	self	.	master	.	execute	(	1	,	mo/;"	f
test_001_load	data/bpe_corpus_raw/train.py	/^utf-8	def	test_001_load	(	self	)	:	\\n	    	permmap	=	PermissionMap	(	'tests\/perm_map'	)	\\n	se/;"	f
test_001_load	data/data_raw/train.py	/^utf-8	def	test_001_load	(	self	)	:	\\n	    	permmap	=	PermissionMap	(	'tests\/perm_map'	)	\\n	se/;"	f
test_002_lookup_invalid	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_002_lookup_invalid	(	self	)	:	\\n	    	with	self	.	assertRaises	(	InvalidSensitiv/;"	f
test_002_lookup_invalid	data/data_raw/valid.py	/^utf-8	def	test_002_lookup_invalid	(	self	)	:	\\n	    	with	self	.	assertRaises	(	InvalidSensitiv/;"	f
test_01_dhcpOnlyRouter	data/bpe_corpus_raw/valid.py	/^utf-8	@	attr	(	tags	=	[	'sg'	,	'basic'	,	'eip'	,	'basic'	]	,	required_hardware	=	'true'	)	\\n	de/;"	f
test_01_dhcpOnlyRouter	data/data_raw/valid.py	/^utf-8	@	attr	(	tags	=	[	'sg'	,	'basic'	,	'eip'	,	'basic'	]	,	required_hardware	=	'true'	)	\\n	de/;"	f
test_02_check_from_draft_to_done_with_steps	data/bpe_corpus_raw/train.py	/^utf-8	def	test_02_check_from_draft_to_done_with_steps	(	self	)	:	\\n	    	cr	,	uid	=	self	.	cr	,/;"	f
test_02_check_from_draft_to_done_with_steps	data/data_raw/train.py	/^utf-8	def	test_02_check_from_draft_to_done_with_steps	(	self	)	:	\\n	    	cr	,	uid	=	self	.	cr	,/;"	f
test_03_02_align_separately	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_03_02_align_separately	(	self	)	:	\\n	    	np	.	random	.	seed	(	0	)	\\n	shape	=	4/;"	f
test_03_02_align_separately	data/data_raw/valid.py	/^utf-8	def	test_03_02_align_separately	(	self	)	:	\\n	    	np	.	random	.	seed	(	0	)	\\n	shape	=	4/;"	f
test_060_AS5_whitelist_wl_ko	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_060_AS5_whitelist_wl_ko	(	self	)	:	\\n	    	lrg_comms	=	self	.	_set_lrg_comms	(	[/;"	f
test_060_AS5_whitelist_wl_ko	data/data_raw/valid.py	/^utf-8	def	test_060_AS5_whitelist_wl_ko	(	self	)	:	\\n	    	lrg_comms	=	self	.	_set_lrg_comms	(	[/;"	f
test_1	data/bpe_corpus_raw/train.py	/^utf-8	def	test_1	(	self	)	:	\\n	    	r1	,	r5	=	MyVariable	(	1	)	,	MyVariable	(	5	)	\\n	o	=	MyOp	/;"	f
test_1	data/data_raw/train.py	/^utf-8	def	test_1	(	self	)	:	\\n	    	r1	,	r5	=	MyVariable	(	1	)	,	MyVariable	(	5	)	\\n	o	=	MyOp	/;"	f
test_10822	data/bpe_corpus_raw/train.py	/^utf-8	def	test_10822	(	self	)	:	\\n	    	session	=	self	.	prepare	(	)	\\n	session	.	execute	(	\\/;"	f
test_10822	data/data_raw/train.py	/^utf-8	def	test_10822	(	self	)	:	\\n	    	session	=	self	.	prepare	(	)	\\n	session	.	execute	(	\\/;"	f
test_12	data/bpe_corpus_raw/test.py	/^utf-8	def	test_12	(	self	)	:	\\n	    	self	.	assertEqual	(	self	.	management_probe_response	.	ge/;"	f
test_12	data/data_raw/test.py	/^utf-8	def	test_12	(	self	)	:	\\n	    	self	.	assertEqual	(	self	.	management_probe_response	.	ge/;"	f
test_1_arg	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_1_arg	(	self	)	:	\\n	    	typo	,	good	=	'foob'	,	'foo'	\\n	sugg	=	"'{0}' (local)"/;"	f
test_1_arg	data/data_raw/valid.py	/^utf-8	def	test_1_arg	(	self	)	:	\\n	    	typo	,	good	=	'foob'	,	'foo'	\\n	sugg	=	"'{0}' (local)"/;"	f
test_31_set_support_subscription	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_31_set_support_subscription	(	self	)	:	\\n	    	parameters	=	{	}	\\n	response	=	s/;"	f
test_31_set_support_subscription	data/data_raw/valid.py	/^utf-8	def	test_31_set_support_subscription	(	self	)	:	\\n	    	parameters	=	{	}	\\n	response	=	s/;"	f
test_AllChannelsBasic	data/bpe_corpus_raw/train.py	/^utf-8	def	test_AllChannelsBasic	(	)	:	\\n	    	rand	=	''	.	join	(	[	random	.	choice	(	string	.	l/;"	f
test_AllChannelsBasic	data/data_raw/train.py	/^utf-8	def	test_AllChannelsBasic	(	)	:	\\n	    	rand	=	''	.	join	(	[	random	.	choice	(	string	.	l/;"	f
test_Builtins	data/bpe_corpus_raw/train.py	/^utf-8	def	test_Builtins	(	self	)	:	\\n	    	srcPrim	=	self	.	stage	.	GetPrimAtPath	(	'\/FlattenP/;"	f
test_Builtins	data/data_raw/train.py	/^utf-8	def	test_Builtins	(	self	)	:	\\n	    	srcPrim	=	self	.	stage	.	GetPrimAtPath	(	'\/FlattenP/;"	f
test_Container_extend_08	data/bpe_corpus_raw/train.py	/^utf-8	def	test_Container_extend_08	(	)	:	\\n	    	voice_1	=	abjad	.	Voice	(	"c'8 d'8"	)	\\n	abja/;"	f
test_Container_extend_08	data/data_raw/train.py	/^utf-8	def	test_Container_extend_08	(	)	:	\\n	    	voice_1	=	abjad	.	Voice	(	"c'8 d'8"	)	\\n	abja/;"	f
test_GUI	data/bpe_corpus_raw/train.py	/^utf-8	def	test_GUI	(	self	)	:	\\n	    	app	=	Bleachbit	(	exit	=	True	)	\\n	app	.	run	(	)	\\n	gui/;"	f
test_GUI	data/data_raw/train.py	/^utf-8	def	test_GUI	(	self	)	:	\\n	    	app	=	Bleachbit	(	exit	=	True	)	\\n	app	.	run	(	)	\\n	gui/;"	f
test_HawkesKernel0_repr	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_HawkesKernel0_repr	(	self	)	:	\\n	    	self	.	assertEqual	(	str	(	[	self	.	hawkes/;"	f
test_HawkesKernel0_repr	data/data_raw/valid.py	/^utf-8	def	test_HawkesKernel0_repr	(	self	)	:	\\n	    	self	.	assertEqual	(	str	(	[	self	.	hawkes/;"	f
test_ISUPPORT	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_ISUPPORT	(	self	)	:	\\n	    	self	.	_sendISUPPORT	(	)	\\n		$/;"	f
test_ISUPPORT	data/data_raw/valid.py	/^utf-8	def	test_ISUPPORT	(	self	)	:	\\n	    	self	.	_sendISUPPORT	(	)	\\n		$/;"	f
test_IonizationState_exceptions	data/bpe_corpus_raw/valid.py	/^utf-8	@	pytest	.	mark	.	parametrize	(	'test'	,	tests_for_exceptions	.	keys	(	)	)	\\n	def	test_Io/;"	f
test_IonizationState_exceptions	data/data_raw/valid.py	/^utf-8	@	pytest	.	mark	.	parametrize	(	'test'	,	tests_for_exceptions	.	keys	(	)	)	\\n	def	test_Io/;"	f
test_LilyPondParser__spanners__PhrasingSlur_04	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_LilyPondParser__spanners__PhrasingSlur_04	(	)	:	\\n	    	string	=	'{ c \\\\\\\\( /;"	f
test_LilyPondParser__spanners__PhrasingSlur_04	data/data_raw/valid.py	/^utf-8	def	test_LilyPondParser__spanners__PhrasingSlur_04	(	)	:	\\n	    	string	=	'{ c \\\\\\\\( /;"	f
test_POP_14	data/bpe_corpus_raw/train.py	/^utf-8	def	test_POP_14	(	self	)	:	\\n	    	mem	=	Memory32	(	)	\\n	cpu	=	I386Cpu	(	mem	)	\\n	mem	./;"	f
test_POP_14	data/data_raw/train.py	/^utf-8	def	test_POP_14	(	self	)	:	\\n	    	mem	=	Memory32	(	)	\\n	cpu	=	I386Cpu	(	mem	)	\\n	mem	./;"	f
test_PythonProcessPane_on_process_halt_badly_formed_bytes	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_PythonProcessPane_on_process_halt_badly_formed_bytes	(	)	:	\\n	    	data	=	'\\U00/;"	f
test_PythonProcessPane_on_process_halt_badly_formed_bytes	data/data_raw/valid.py	/^utf-8	def	test_PythonProcessPane_on_process_halt_badly_formed_bytes	(	)	:	\\n	    	data	=	'\\U00/;"	f
test_ROR_13_symbolic	data/bpe_corpus_raw/train.py	/^utf-8	def	test_ROR_13_symbolic	(	self	)	:	\\n	    	cs	=	ConstraintSet	(	)	\\n	mem	=	SMemory32	(	/;"	f
test_ROR_13_symbolic	data/data_raw/train.py	/^utf-8	def	test_ROR_13_symbolic	(	self	)	:	\\n	    	cs	=	ConstraintSet	(	)	\\n	mem	=	SMemory32	(	/;"	f
test_SETL_1	data/bpe_corpus_raw/test.py	/^utf-8	def	test_SETL_1	(	self	)	:	\\n	    	mem	=	Memory32	(	)	\\n	cpu	=	I386Cpu	(	mem	)	\\n	mem	./;"	f
test_SETL_1	data/data_raw/test.py	/^utf-8	def	test_SETL_1	(	self	)	:	\\n	    	mem	=	Memory32	(	)	\\n	cpu	=	I386Cpu	(	mem	)	\\n	mem	./;"	f
test_SETNS_1_symbolic	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_SETNS_1_symbolic	(	self	)	:	\\n	    	cs	=	ConstraintSet	(	)	\\n	mem	=	SMemory32	(/;"	f
test_SETNS_1_symbolic	data/data_raw/valid.py	/^utf-8	def	test_SETNS_1_symbolic	(	self	)	:	\\n	    	cs	=	ConstraintSet	(	)	\\n	mem	=	SMemory32	(/;"	f
test_TypedFunc_builtin	data/bpe_corpus_raw/test.py	/^utf-8	def	test_TypedFunc_builtin	(	self	)	:	\\n	    	f	=	(	lambda	x	:	x	+	2	)	**	(	H	\/	int	>>	i/;"	f
test_TypedFunc_builtin	data/data_raw/test.py	/^utf-8	def	test_TypedFunc_builtin	(	self	)	:	\\n	    	f	=	(	lambda	x	:	x	+	2	)	**	(	H	\/	int	>>	i/;"	f
test__connect_with_creds_and_api_key	data/bpe_corpus_raw/test.py	/^utf-8	@	mock	.	patch	(	'bodhi.server.bugs.bugzilla.Bugzilla.__init__'	,	return_value	=	None	)	\\/;"	f
test__connect_with_creds_and_api_key	data/data_raw/test.py	/^utf-8	@	mock	.	patch	(	'bodhi.server.bugs.bugzilla.Bugzilla.__init__'	,	return_value	=	None	)	\\/;"	f
test__nondim_tec_spitzer	data/bpe_corpus_raw/valid.py	/^utf-8	@	pytest	.	mark	.	parametrize	(	'Z'	,	[	1	,	2	,	4	,	16	,	np	.	inf	]	)	\\n	def	test__nondim/;"	f
test__nondim_tec_spitzer	data/data_raw/valid.py	/^utf-8	@	pytest	.	mark	.	parametrize	(	'Z'	,	[	1	,	2	,	4	,	16	,	np	.	inf	]	)	\\n	def	test__nondim/;"	f
test__str__	data/bpe_corpus_raw/valid.py	/^utf-8	@	mock	.	patch	(	'anitya_schema.project_messages.ProjectMapCreated.summary'	,	\\n	new_call/;"	f
test__str__	data/data_raw/valid.py	/^utf-8	@	mock	.	patch	(	'anitya_schema.project_messages.ProjectMapCreated.summary'	,	\\n	new_call/;"	f
test_abort_invalid	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_abort_invalid	(	self	)	:	\\n	    	aborted	=	self	.	get	(	'\/abort'	)	\\n	self	.	a/;"	f
test_abort_invalid	data/data_raw/valid.py	/^utf-8	def	test_abort_invalid	(	self	)	:	\\n	    	aborted	=	self	.	get	(	'\/abort'	)	\\n	self	.	a/;"	f
test_ace_bg_eq_zero	data/bpe_corpus_raw/train.py	/^utf-8	def	test_ace_bg_eq_zero	(	self	)	:	\\n	    	ij	=	10	,	10	\\n	y	=	spy	.	ace	(	self	.	bg	.	m/;"	f
test_ace_bg_eq_zero	data/data_raw/train.py	/^utf-8	def	test_ace_bg_eq_zero	(	self	)	:	\\n	    	ij	=	10	,	10	\\n	y	=	spy	.	ace	(	self	.	bg	.	m/;"	f
test_active_user_mocked	data/bpe_corpus_raw/train.py	/^utf-8	def	test_active_user_mocked	(	self	)	:	\\n	    	client	=	self	.	client	\\n	assertTrue	=	se/;"	f
test_active_user_mocked	data/data_raw/train.py	/^utf-8	def	test_active_user_mocked	(	self	)	:	\\n	    	client	=	self	.	client	\\n	assertTrue	=	se/;"	f
test_adaptive_transfer_speed	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_adaptive_transfer_speed	(	)	:	\\n	    	widgets	=	[	progressbar	.	AdaptiveTransfer/;"	f
test_adaptive_transfer_speed	data/data_raw/valid.py	/^utf-8	def	test_adaptive_transfer_speed	(	)	:	\\n	    	widgets	=	[	progressbar	.	AdaptiveTransfer/;"	f
test_add_column3	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_add_column3	(	self	)	:	\\n	    	stmts	=	[	CREATE_STMT3	,	DROP_COL_STMT	]	\\n	inma/;"	f
test_add_column3	data/data_raw/valid.py	/^utf-8	def	test_add_column3	(	self	)	:	\\n	    	stmts	=	[	CREATE_STMT3	,	DROP_COL_STMT	]	\\n	inma/;"	f
test_add_exercise_denies_anonymous	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_add_exercise_denies_anonymous	(	self	)	:	\\n	    	response	=	self	.	client	.	get	/;"	f
test_add_exercise_denies_anonymous	data/data_raw/valid.py	/^utf-8	def	test_add_exercise_denies_anonymous	(	self	)	:	\\n	    	response	=	self	.	client	.	get	/;"	f
test_add_expected_failure	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_add_expected_failure	(	self	)	:	\\n	    	self	.	protocol	.	addExpectedFailure	(	s/;"	f
test_add_expected_failure	data/data_raw/valid.py	/^utf-8	def	test_add_expected_failure	(	self	)	:	\\n	    	self	.	protocol	.	addExpectedFailure	(	s/;"	f
test_add_inlines	data/bpe_corpus_raw/train.py	/^utf-8	def	test_add_inlines	(	self	)	:	\\n	    	from	selenium	.	common	.	exceptions	import	Timeou/;"	f
test_add_inlines	data/data_raw/train.py	/^utf-8	def	test_add_inlines	(	self	)	:	\\n	    	from	selenium	.	common	.	exceptions	import	Timeou/;"	f
test_add_install_installed	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_add_install_installed	(	self	)	:	\\n	    	ops	=	dnf	.	history	.	NEVRAOperations	(/;"	f
test_add_install_installed	data/data_raw/valid.py	/^utf-8	def	test_add_install_installed	(	self	)	:	\\n	    	ops	=	dnf	.	history	.	NEVRAOperations	(/;"	f
test_add_load_balancer_request_with_invalid_body_causes_bad_request	data/bpe_corpus_raw/test.py	/^utf-8	def	test_add_load_balancer_request_with_invalid_body_causes_bad_request	(	self	)	:	\\n	   /;"	f
test_add_load_balancer_request_with_invalid_body_causes_bad_request	data/data_raw/test.py	/^utf-8	def	test_add_load_balancer_request_with_invalid_body_causes_bad_request	(	self	)	:	\\n	   /;"	f
test_add_to_cc_list	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_add_to_cc_list	(	self	)	:	\\n	    	config_subscriber	(	self	.	env	)	\\n	ticket	=	/;"	f
test_add_to_cc_list	data/data_raw/valid.py	/^utf-8	def	test_add_to_cc_list	(	self	)	:	\\n	    	config_subscriber	(	self	.	env	)	\\n	ticket	=	/;"	f
test_add_tree_cleans_up_header	data/bpe_corpus_raw/train.py	/^utf-8	def	test_add_tree_cleans_up_header	(	self	)	:	\\n	    	self	.	go_to_feature_detail	(	self	/;"	f
test_add_tree_cleans_up_header	data/data_raw/train.py	/^utf-8	def	test_add_tree_cleans_up_header	(	self	)	:	\\n	    	self	.	go_to_feature_detail	(	self	/;"	f
test_add_w_image_size_zero	data/bpe_corpus_raw/train.py	/^utf-8	def	test_add_w_image_size_zero	(	self	)	:	\\n	    	self	.	store	.	chunk_size	=	units	.	Ki	/;"	f
test_add_w_image_size_zero	data/data_raw/train.py	/^utf-8	def	test_add_w_image_size_zero	(	self	)	:	\\n	    	self	.	store	.	chunk_size	=	units	.	Ki	/;"	f
test_addonCompat_attemptingToUseAddonRequiringNewAPIFeaturesWithOldNVDA	data/bpe_corpus_raw/test.py	/^utf-8	def	test_addonCompat_attemptingToUseAddonRequiringNewAPIFeaturesWithOldNVDA	(	\\n	self	)	:/;"	f
test_addonCompat_attemptingToUseAddonRequiringNewAPIFeaturesWithOldNVDA	data/data_raw/test.py	/^utf-8	def	test_addonCompat_attemptingToUseAddonRequiringNewAPIFeaturesWithOldNVDA	(	\\n	self	)	:/;"	f
test_agent_spawn_process	data/bpe_corpus_raw/train.py	/^utf-8	def	test_agent_spawn_process	(	nsproxy	)	:	\\n	\\n	\\n	    	class	Spawner	(	Agent	)	:	\\n	/;"	f
test_agent_spawn_process	data/data_raw/train.py	/^utf-8	def	test_agent_spawn_process	(	nsproxy	)	:	\\n	\\n	\\n	    	class	Spawner	(	Agent	)	:	\\n	/;"	f
test_allowQueryFalse	data/bpe_corpus_raw/train.py	/^utf-8	def	test_allowQueryFalse	(	self	)	:	\\n	\\n	\\n	    	class	SendReplyException	(	Exception	/;"	f
test_allowQueryFalse	data/data_raw/train.py	/^utf-8	def	test_allowQueryFalse	(	self	)	:	\\n	\\n	\\n	    	class	SendReplyException	(	Exception	/;"	f
test_api__get_html_document__err_400__content_id_is_not_int	data/bpe_corpus_raw/train.py	/^utf-8	def	test_api__get_html_document__err_400__content_id_is_not_int	(	self	)	->	None	:	\\n	   /;"	f
test_api__get_html_document__err_400__content_id_is_not_int	data/data_raw/train.py	/^utf-8	def	test_api__get_html_document__err_400__content_id_is_not_int	(	self	)	->	None	:	\\n	   /;"	f
test_api_base_url_removes_trailing_slash	data/bpe_corpus_raw/train.py	/^utf-8	def	test_api_base_url_removes_trailing_slash	(	hass	)	:	\\n	    	api_config	=	http	.	ApiCo/;"	f
test_api_base_url_removes_trailing_slash	data/data_raw/train.py	/^utf-8	def	test_api_base_url_removes_trailing_slash	(	hass	)	:	\\n	    	api_config	=	http	.	ApiCo/;"	f
test_append	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_append	(	)	:	\\n	    	assert_equals	(	'()'	,	interpret	(	"(append '() '())"	,	env/;"	f
test_append	data/data_raw/valid.py	/^utf-8	def	test_append	(	)	:	\\n	    	assert_equals	(	'()'	,	interpret	(	"(append '() '())"	,	env/;"	f
test_article_singular_data	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_article_singular_data	(	self	)	:	\\n	    	testfield	=	ArticleField	(	'Title'	,	ma/;"	f
test_article_singular_data	data/data_raw/valid.py	/^utf-8	def	test_article_singular_data	(	self	)	:	\\n	    	testfield	=	ArticleField	(	'Title'	,	ma/;"	f
test_artifact_list	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_artifact_list	(	self	)	:	\\n	    	response	=	self	.	client	.	get	(	reverse	(	'use/;"	f
test_artifact_list	data/data_raw/valid.py	/^utf-8	def	test_artifact_list	(	self	)	:	\\n	    	response	=	self	.	client	.	get	(	reverse	(	'use/;"	f
test_assemble_opaque_inst	data/bpe_corpus_raw/test.py	/^utf-8	def	test_assemble_opaque_inst	(	self	)	:	\\n	    	opaque_inst	=	Instruction	(	name	=	'my_i/;"	f
test_assemble_opaque_inst	data/data_raw/test.py	/^utf-8	def	test_assemble_opaque_inst	(	self	)	:	\\n	    	opaque_inst	=	Instruction	(	name	=	'my_i/;"	f
test_attach_to_does_not_override_an_override	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_attach_to_does_not_override_an_override	(	self	)	:	\\n	    	customstatic	=	Static/;"	f
test_attach_to_does_not_override_an_override	data/data_raw/valid.py	/^utf-8	def	test_attach_to_does_not_override_an_override	(	self	)	:	\\n	    	customstatic	=	Static/;"	f
test_auth_code_get_session	data/bpe_corpus_raw/valid.py	/^utf-8	@	uber_vcr	.	use_cassette	(	)	\\n	def	test_auth_code_get_session	(	auth_code_grant	)	:	\\n/;"	f
test_auth_code_get_session	data/data_raw/valid.py	/^utf-8	@	uber_vcr	.	use_cassette	(	)	\\n	def	test_auth_code_get_session	(	auth_code_grant	)	:	\\n/;"	f
test_auth_private_owned	data/bpe_corpus_raw/train.py	/^utf-8	def	test_auth_private_owned	(	self	)	:	\\n	    	self	.	do_visible	(	True	,	'pattieblack'	,/;"	f
test_auth_private_owned	data/data_raw/train.py	/^utf-8	def	test_auth_private_owned	(	self	)	:	\\n	    	self	.	do_visible	(	True	,	'pattieblack'	,/;"	f
test_auth_private_unowned	data/bpe_corpus_raw/train.py	/^utf-8	def	test_auth_private_unowned	(	self	)	:	\\n	    	self	.	do_visible	(	False	,	'pattieblack/;"	f
test_auth_private_unowned	data/data_raw/train.py	/^utf-8	def	test_auth_private_unowned	(	self	)	:	\\n	    	self	.	do_visible	(	False	,	'pattieblack/;"	f
test_available_for_one_included_one_not	data/bpe_corpus_raw/test.py	/^utf-8	def	test_available_for_one_included_one_not	(	self	)	:	\\n	    	data	=	self	.	_setup_for_o/;"	f
test_available_for_one_included_one_not	data/data_raw/test.py	/^utf-8	def	test_available_for_one_included_one_not	(	self	)	:	\\n	    	data	=	self	.	_setup_for_o/;"	f
test_bad_placeholder_1	data/bpe_corpus_raw/train.py	/^utf-8	@	override_settings	(	LOCALE_PATHS	=	(	os	.	path	.	join	(	here	,	'other'	,	'locale'	)	,	)	/;"	f
test_bad_placeholder_1	data/data_raw/train.py	/^utf-8	@	override_settings	(	LOCALE_PATHS	=	(	os	.	path	.	join	(	here	,	'other'	,	'locale'	)	,	)	/;"	f
test_barrier_10	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_barrier_10	(	self	)	:	\\n	    	return	self	.	test_barrier	(	10	)	\\n		$/;"	f
test_barrier_10	data/data_raw/valid.py	/^utf-8	def	test_barrier_10	(	self	)	:	\\n	    	return	self	.	test_barrier	(	10	)	\\n		$/;"	f
test_baseline_hazard_works_with_weights_against_R_output	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_baseline_hazard_works_with_weights_against_R_output	(	self	,	rossi	)	:	\\n	    	r/;"	f
test_baseline_hazard_works_with_weights_against_R_output	data/data_raw/valid.py	/^utf-8	def	test_baseline_hazard_works_with_weights_against_R_output	(	self	,	rossi	)	:	\\n	    	r/;"	f
test_basic_addition	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_basic_addition	(	self	)	:	\\n	    	self	.	failUnlessEqual	(	1	+	1	,	2	)	\\n		$/;"	f
test_basic_addition	data/data_raw/valid.py	/^utf-8	def	test_basic_addition	(	self	)	:	\\n	    	self	.	failUnlessEqual	(	1	+	1	,	2	)	\\n		$/;"	f
test_basic_scan	data/bpe_corpus_raw/test.py	/^utf-8	def	test_basic_scan	(	self	)	:	\\n	    	first	=	Resources	(	MockNotifier	(	)	)	\\n	first	./;"	f
test_basic_scan	data/data_raw/test.py	/^utf-8	def	test_basic_scan	(	self	)	:	\\n	    	first	=	Resources	(	MockNotifier	(	)	)	\\n	first	./;"	f
test_bem_source	data/bpe_corpus_raw/train.py	/^utf-8	@	testing	.	requires_testing_data	\\n	@	requires_mayavi	\\n	@	traits_test	\\n	def	test_bem/;"	f
test_bem_source	data/data_raw/train.py	/^utf-8	@	testing	.	requires_testing_data	\\n	@	requires_mayavi	\\n	@	traits_test	\\n	def	test_bem/;"	f
test_best_response_with_payoff_perturbation	data/bpe_corpus_raw/test.py	/^utf-8	def	test_best_response_with_payoff_perturbation	(	self	)	:	\\n	    	eq_	(	self	.	player	.	/;"	f
test_best_response_with_payoff_perturbation	data/data_raw/test.py	/^utf-8	def	test_best_response_with_payoff_perturbation	(	self	)	:	\\n	    	eq_	(	self	.	player	.	/;"	f
test_big_blob	data/bpe_corpus_raw/test.py	/^utf-8	def	test_big_blob	(	self	)	:	\\n	    	conn	=	self	.	connections	[	0	]	\\n	c	=	conn	.	curso/;"	f
test_big_blob	data/data_raw/test.py	/^utf-8	def	test_big_blob	(	self	)	:	\\n	    	conn	=	self	.	connections	[	0	]	\\n	c	=	conn	.	curso/;"	f
test_binary_lookup_in_usr_local	data/bpe_corpus_raw/valid.py	/^utf-8	@	unittest	.	skipIf	(	six	.	PY3	,	'py2 test only'	)	\\n	@	mock	.	patch	(	'os.path.exists'	/;"	f
test_binary_lookup_in_usr_local	data/data_raw/valid.py	/^utf-8	@	unittest	.	skipIf	(	six	.	PY3	,	'py2 test only'	)	\\n	@	mock	.	patch	(	'os.path.exists'	/;"	f
test_binary_lookup_in_usr_local_py3	data/bpe_corpus_raw/train.py	/^utf-8	@	unittest	.	skipIf	(	six	.	PY2	,	'py3 test only'	)	\\n	@	mock	.	patch	(	'shutil.which'	)	/;"	f
test_binary_lookup_in_usr_local_py3	data/data_raw/train.py	/^utf-8	@	unittest	.	skipIf	(	six	.	PY2	,	'py3 test only'	)	\\n	@	mock	.	patch	(	'shutil.which'	)	/;"	f
test_block_get_with_batch_id	data/bpe_corpus_raw/train.py	/^utf-8	def	test_block_get_with_batch_id	(	self	)	:	\\n	    	response	=	self	.	make_request	(	bloc/;"	f
test_block_get_with_batch_id	data/data_raw/train.py	/^utf-8	def	test_block_get_with_batch_id	(	self	)	:	\\n	    	response	=	self	.	make_request	(	bloc/;"	f
test_brokenContent	data/bpe_corpus_raw/train.py	/^utf-8	def	test_brokenContent	(	self	)	:	\\n	    	deferred	=	self	.	agent	.	request	(	b'GET'	,	b'/;"	f
test_brokenContent	data/data_raw/train.py	/^utf-8	def	test_brokenContent	(	self	)	:	\\n	    	deferred	=	self	.	agent	.	request	(	b'GET'	,	b'/;"	f
test_bug21373_mode_raster	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_bug21373_mode_raster	(	self	)	:	\\n	    	context	=	QgsProcessingContext	(	)	\\n	c/;"	f
test_bug21373_mode_raster	data/data_raw/valid.py	/^utf-8	def	test_bug21373_mode_raster	(	self	)	:	\\n	    	context	=	QgsProcessingContext	(	)	\\n	c/;"	f
test_builder_is_pickled	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_builder_is_pickled	(	self	)	:	\\n	    	tree	=	self	.	soup	(	'<a><b>foo<\/a>'	)	\\/;"	f
test_builder_is_pickled	data/data_raw/valid.py	/^utf-8	def	test_builder_is_pickled	(	self	)	:	\\n	    	tree	=	self	.	soup	(	'<a><b>foo<\/a>'	)	\\/;"	f
test_buy_again	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_buy_again	(	chain	:	TesterChain	,	web3	:	Web3	,	ico	:	Contract	,	\\n	uncapped_tok/;"	f
test_buy_again	data/data_raw/valid.py	/^utf-8	def	test_buy_again	(	chain	:	TesterChain	,	web3	:	Web3	,	ico	:	Contract	,	\\n	uncapped_tok/;"	f
test_bytes_to_string	data/bpe_corpus_raw/test.py	/^utf-8	def	test_bytes_to_string	(	)	:	\\n	    	import	sys	\\n	byte	=	bytes	if	sys	.	version_info	/;"	f
test_bytes_to_string	data/data_raw/test.py	/^utf-8	def	test_bytes_to_string	(	)	:	\\n	    	import	sys	\\n	byte	=	bytes	if	sys	.	version_info	/;"	f
test_byview	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_byview	(	self	)	:	\\n	    	base	=	self	.	base	\\n	mbase	=	base	.	view	(	mrecarray/;"	f
test_byview	data/data_raw/valid.py	/^utf-8	def	test_byview	(	self	)	:	\\n	    	base	=	self	.	base	\\n	mbase	=	base	.	view	(	mrecarray/;"	f
test_cache_expires	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_cache_expires	(	wf	)	:	\\n	    	data	=	'hello'	,	'goodbye'	\\n	called	=	{	'called/;"	f
test_cache_expires	data/data_raw/valid.py	/^utf-8	def	test_cache_expires	(	wf	)	:	\\n	    	data	=	'hello'	,	'goodbye'	\\n	called	=	{	'called/;"	f
test_calculator_values	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_calculator_values	(	self	)	:	\\n	    	self	.	assertPropertyValue	(	65536	,	500	)	/;"	f
test_calculator_values	data/data_raw/valid.py	/^utf-8	def	test_calculator_values	(	self	)	:	\\n	    	self	.	assertPropertyValue	(	65536	,	500	)	/;"	f
test_calling_ipython	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_calling_ipython	(	self	)	:	\\n	    	my_python	=	mock	.	MagicMock	(	)	\\n	embed	=	/;"	f
test_calling_ipython	data/data_raw/valid.py	/^utf-8	def	test_calling_ipython	(	self	)	:	\\n	    	my_python	=	mock	.	MagicMock	(	)	\\n	embed	=	/;"	f
test_case_insensitivity	data/bpe_corpus_raw/train.py	/^utf-8	def	test_case_insensitivity	(	self	)	:	\\n	    	robot	=	robots	.	Robots	.	parse	(	'http:\//;"	f
test_case_insensitivity	data/data_raw/train.py	/^utf-8	def	test_case_insensitivity	(	self	)	:	\\n	    	robot	=	robots	.	Robots	.	parse	(	'http:\//;"	f
test_catch_unconnected	data/bpe_corpus_raw/train.py	/^utf-8	def	test_catch_unconnected	(	self	)	:	\\n	    	n	=	coord_net_spec	(	)	\\n	n	.	ip	=	L	.	Inn/;"	f
test_catch_unconnected	data/data_raw/train.py	/^utf-8	def	test_catch_unconnected	(	self	)	:	\\n	    	n	=	coord_net_spec	(	)	\\n	n	.	ip	=	L	.	Inn/;"	f
test_catching_exception_from_subgen_and_returning	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_catching_exception_from_subgen_and_returning	(	self	)	:	\\n	    	trace	=	[	]	\\n	/;"	f
test_catching_exception_from_subgen_and_returning	data/data_raw/valid.py	/^utf-8	def	test_catching_exception_from_subgen_and_returning	(	self	)	:	\\n	    	trace	=	[	]	\\n	/;"	f
test_category_domain	data/bpe_corpus_raw/test.py	/^utf-8	def	test_category_domain	(	self	)	:	\\n	    	with	self	.	assertRaises	(	ValidationError	)	/;"	f
test_category_domain	data/data_raw/test.py	/^utf-8	def	test_category_domain	(	self	)	:	\\n	    	with	self	.	assertRaises	(	ValidationError	)	/;"	f
test_cc	data/bpe_corpus_raw/test.py	/^utf-8	def	test_cc	(	self	)	:	\\n	    	email	=	EmailMessage	(	'Subject'	,	'Content'	,	'from@examp/;"	f
test_cc	data/data_raw/test.py	/^utf-8	def	test_cc	(	self	)	:	\\n	    	email	=	EmailMessage	(	'Subject'	,	'Content'	,	'from@examp/;"	f
test_ceil_shift	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_ceil_shift	(	self	)	:	\\n	    	self	.	assertRaises	(	AssertionError	,	number	.	ce/;"	f
test_ceil_shift	data/data_raw/valid.py	/^utf-8	def	test_ceil_shift	(	self	)	:	\\n	    	self	.	assertRaises	(	AssertionError	,	number	.	ce/;"	f
test_certificate_custom_template_with_org_and_mode	data/bpe_corpus_raw/valid.py	/^utf-8	@	override_settings	(	FEATURES	=	FEATURES_WITH_CUSTOM_CERTS_ENABLED	)	\\n	@	patch	(	'lms.d/;"	f
test_certificate_custom_template_with_org_and_mode	data/data_raw/valid.py	/^utf-8	@	override_settings	(	FEATURES	=	FEATURES_WITH_CUSTOM_CERTS_ENABLED	)	\\n	@	patch	(	'lms.d/;"	f
test_change_id_to_self	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_change_id_to_self	(	self	)	:	\\n	    	chain	=	next	(	iter	(	self	.	struc	.	get_ch/;"	f
test_change_id_to_self	data/data_raw/valid.py	/^utf-8	def	test_change_id_to_self	(	self	)	:	\\n	    	chain	=	next	(	iter	(	self	.	struc	.	get_ch/;"	f
test_channel_ctl_shell_mlocal3	data/bpe_corpus_raw/train.py	/^utf-8	def	test_channel_ctl_shell_mlocal3	(	self	)	:	\\n	    	self	.	_check_channel_ctl_shell	(	'/;"	f
test_channel_ctl_shell_mlocal3	data/data_raw/train.py	/^utf-8	def	test_channel_ctl_shell_mlocal3	(	self	)	:	\\n	    	self	.	_check_channel_ctl_shell	(	'/;"	f
test_chassis_show_field	data/bpe_corpus_raw/train.py	/^utf-8	def	test_chassis_show_field	(	self	)	:	\\n	    	fields	=	[	'uuid'	]	\\n	chassis_show	=	sel/;"	f
test_chassis_show_field	data/data_raw/train.py	/^utf-8	def	test_chassis_show_field	(	self	)	:	\\n	    	fields	=	[	'uuid'	]	\\n	chassis_show	=	sel/;"	f
test_check_all_glyphs_have_codepoints	data/bpe_corpus_raw/train.py	/^utf-8	def	test_check_all_glyphs_have_codepoints	(	)	:	\\n	    	from	fontbakery	.	profiles	.	cmap/;"	f
test_check_all_glyphs_have_codepoints	data/data_raw/train.py	/^utf-8	def	test_check_all_glyphs_have_codepoints	(	)	:	\\n	    	from	fontbakery	.	profiles	.	cmap/;"	f
test_check_archive	data/bpe_corpus_raw/train.py	/^utf-8	def	test_check_archive	(	self	,	tmpdir	)	:	\\n	    	server	=	build_real_server	(	global_co/;"	f
test_check_archive	data/data_raw/train.py	/^utf-8	def	test_check_archive	(	self	,	tmpdir	)	:	\\n	    	server	=	build_real_server	(	global_co/;"	f
test_check_hook	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_check_hook	(	self	)	:	\\n	    	with	warnings	.	catch_warnings	(	record	=	True	)	a/;"	f
test_check_hook	data/data_raw/valid.py	/^utf-8	def	test_check_hook	(	self	)	:	\\n	    	with	warnings	.	catch_warnings	(	record	=	True	)	a/;"	f
test_choices_choose_with_shorcut_no_right_casse	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_choices_choose_with_shorcut_no_right_casse	(	self	)	:	\\n	    	callback1	=	Mock	(/;"	f
test_choices_choose_with_shorcut_no_right_casse	data/data_raw/valid.py	/^utf-8	def	test_choices_choose_with_shorcut_no_right_casse	(	self	)	:	\\n	    	callback1	=	Mock	(/;"	f
test_choices_form_class	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_choices_form_class	(	self	)	:	\\n	    	choices	=	[	(	'a'	,	'a'	)	]	\\n	field	=	mo/;"	f
test_choices_form_class	data/data_raw/valid.py	/^utf-8	def	test_choices_form_class	(	self	)	:	\\n	    	choices	=	[	(	'a'	,	'a'	)	]	\\n	field	=	mo/;"	f
test_choices_with_default	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_choices_with_default	(	self	)	:	\\n	    	choices	=	[	Choice	(	0	,	'Choice0'	,	lam/;"	f
test_choices_with_default	data/data_raw/valid.py	/^utf-8	def	test_choices_with_default	(	self	)	:	\\n	    	choices	=	[	Choice	(	0	,	'Choice0'	,	lam/;"	f
test_circularChainException	data/bpe_corpus_raw/train.py	/^utf-8	def	test_circularChainException	(	self	)	:	\\n	    	self	.	addCleanup	(	setattr	,	warnings/;"	f
test_circularChainException	data/data_raw/train.py	/^utf-8	def	test_circularChainException	(	self	)	:	\\n	    	self	.	addCleanup	(	setattr	,	warnings/;"	f
test_circular_ref	data/bpe_corpus_raw/test.py	/^utf-8	def	test_circular_ref	(	)	:	\\n	    	clear_imagekit_cache	(	)	\\n	instance	=	create_photo	/;"	f
test_circular_ref	data/data_raw/test.py	/^utf-8	def	test_circular_ref	(	)	:	\\n	    	clear_imagekit_cache	(	)	\\n	instance	=	create_photo	/;"	f
test_class_type_and_prefix	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_class_type_and_prefix	(	self	)	:	\\n	    	from	linotp	.	tokens	.	yubikeytoken	imp/;"	f
test_class_type_and_prefix	data/data_raw/valid.py	/^utf-8	def	test_class_type_and_prefix	(	self	)	:	\\n	    	from	linotp	.	tokens	.	yubikeytoken	imp/;"	f
test_cleanPendingCancelsCalls	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_cleanPendingCancelsCalls	(	self	)	:	\\n	\\n	    	def	func	(	)	:	\\n	        	retu/;"	f
test_cleanPendingCancelsCalls	data/data_raw/valid.py	/^utf-8	def	test_cleanPendingCancelsCalls	(	self	)	:	\\n	\\n	    	def	func	(	)	:	\\n	        	retu/;"	f
test_cleanup_wrong_args	data/bpe_corpus_raw/train.py	/^utf-8	def	test_cleanup_wrong_args	(	self	)	:	\\n	    	self	.	assertRaises	(	TypeError	,	rand	.	c/;"	f
test_cleanup_wrong_args	data/data_raw/train.py	/^utf-8	def	test_cleanup_wrong_args	(	self	)	:	\\n	    	self	.	assertRaises	(	TypeError	,	rand	.	c/;"	f
test_clone_cow	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_clone_cow	(	self	)	:	\\n	    	logger	=	mock	.	Mock	(	)	\\n	pool	=	mock	.	Mock	(	)/;"	f
test_clone_cow	data/data_raw/valid.py	/^utf-8	def	test_clone_cow	(	self	)	:	\\n	    	logger	=	mock	.	Mock	(	)	\\n	pool	=	mock	.	Mock	(	)/;"	f
test_cloudsearch_results_matched	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_cloudsearch_results_matched	(	self	)	:	\\n	    	search	=	SearchConnection	(	endpo/;"	f
test_cloudsearch_results_matched	data/data_raw/valid.py	/^utf-8	def	test_cloudsearch_results_matched	(	self	)	:	\\n	    	search	=	SearchConnection	(	endpo/;"	f
test_coast_aliases	data/bpe_corpus_raw/train.py	/^utf-8	@	pytest	.	mark	.	mpl_image_compare	\\n	def	test_coast_aliases	(	)	:	\\n	    	fig	=	Figure/;"	f
test_coast_aliases	data/data_raw/train.py	/^utf-8	@	pytest	.	mark	.	mpl_image_compare	\\n	def	test_coast_aliases	(	)	:	\\n	    	fig	=	Figure/;"	f
test_codecorator_no_iteration	data/bpe_corpus_raw/valid.py	/^utf-8	@	skip_on_condition	(	'sys.version_info >= (3,7)'	,	'test conflicts with PEP 479'	)	\\n	de/;"	f
test_codecorator_no_iteration	data/data_raw/valid.py	/^utf-8	@	skip_on_condition	(	'sys.version_info >= (3,7)'	,	'test conflicts with PEP 479'	)	\\n	de/;"	f
test_collector	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_collector	(	build_base	=	None	)	:	\\n	    	build_test_extensions	(	build_base	)	\\/;"	f
test_collector	data/data_raw/valid.py	/^utf-8	def	test_collector	(	build_base	=	None	)	:	\\n	    	build_test_extensions	(	build_base	)	\\/;"	f
test_columns_single_str_index_pandas_hist	data/bpe_corpus_raw/train.py	/^utf-8	@	pytest	.	mark	.	skipif	(	pd	is	None	,	reason	=	'test requires pandas'	)	\\n	def	test_col/;"	f
test_columns_single_str_index_pandas_hist	data/data_raw/train.py	/^utf-8	@	pytest	.	mark	.	skipif	(	pd	is	None	,	reason	=	'test requires pandas'	)	\\n	def	test_col/;"	f
test_commentReprPy2	data/bpe_corpus_raw/train.py	/^utf-8	def	test_commentReprPy2	(	self	)	:	\\n	    	self	.	assertEqual	(	repr	(	Comment	(	'hello t/;"	f
test_commentReprPy2	data/data_raw/train.py	/^utf-8	def	test_commentReprPy2	(	self	)	:	\\n	    	self	.	assertEqual	(	repr	(	Comment	(	'hello t/;"	f
test_commit_consistency_slash_with_violating_prepare	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_commit_consistency_slash_with_violating_prepare	(	db	)	:	\\n	    	test_string	=	'/;"	f
test_commit_consistency_slash_with_violating_prepare	data/data_raw/valid.py	/^utf-8	def	test_commit_consistency_slash_with_violating_prepare	(	db	)	:	\\n	    	test_string	=	'/;"	f
test_complex_type_print	data/bpe_corpus_raw/test.py	/^utf-8	def	test_complex_type_print	(	)	:	\\n	    	for	t	in	[	np	.	complex64	,	np	.	cdouble	,	np	./;"	f
test_complex_type_print	data/data_raw/test.py	/^utf-8	def	test_complex_type_print	(	)	:	\\n	    	for	t	in	[	np	.	complex64	,	np	.	cdouble	,	np	./;"	f
test_component_chown_complete_owner_restrict_owner_false	data/bpe_corpus_raw/train.py	/^utf-8	def	test_component_chown_complete_owner_restrict_owner_false	(	self	)	:	\\n	    	self	.	ex/;"	f
test_component_chown_complete_owner_restrict_owner_false	data/data_raw/train.py	/^utf-8	def	test_component_chown_complete_owner_restrict_owner_false	(	self	)	:	\\n	    	self	.	ex/;"	f
test_compose_relationship_delete	data/bpe_corpus_raw/train.py	/^utf-8	def	test_compose_relationship_delete	(	self	)	:	\\n	    	compose	=	model	.	Compose	(	relea/;"	f
test_compose_relationship_delete	data/data_raw/train.py	/^utf-8	def	test_compose_relationship_delete	(	self	)	:	\\n	    	compose	=	model	.	Compose	(	relea/;"	f
test_compute_diff_many_nested	data/bpe_corpus_raw/train.py	/^utf-8	def	test_compute_diff_many_nested	(	self	)	:	\\n	    	record1	=	{	'a'	:	{	'b'	:	{	'c'	:	3	/;"	f
test_compute_diff_many_nested	data/data_raw/train.py	/^utf-8	def	test_compute_diff_many_nested	(	self	)	:	\\n	    	record1	=	{	'a'	:	{	'b'	:	{	'c'	:	3	/;"	f
test_conditions	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_conditions	(	builder	)	:	\\n	    	builder	.	build_routes	(	)	\\n	routes	=	[	i	.	r/;"	f
test_conditions	data/data_raw/valid.py	/^utf-8	def	test_conditions	(	builder	)	:	\\n	    	builder	.	build_routes	(	)	\\n	routes	=	[	i	.	r/;"	f
test_config_name_needs_long_option_name	data/bpe_corpus_raw/train.py	/^utf-8	def	test_config_name_needs_long_option_name	(	)	:	\\n	    	with	pytest	.	raises	(	ValueErr/;"	f
test_config_name_needs_long_option_name	data/data_raw/train.py	/^utf-8	def	test_config_name_needs_long_option_name	(	)	:	\\n	    	with	pytest	.	raises	(	ValueErr/;"	f
test_connect_to_tracker	data/bpe_corpus_raw/valid.py	/^utf-8	@	trial_timeout	(	10	)	\\n	def	test_connect_to_tracker	(	self	)	:	\\n	\\n	    	def	verify_/;"	f
test_connect_to_tracker	data/data_raw/valid.py	/^utf-8	@	trial_timeout	(	10	)	\\n	def	test_connect_to_tracker	(	self	)	:	\\n	\\n	    	def	verify_/;"	f
test_connection_made	data/bpe_corpus_raw/train.py	/^utf-8	def	test_connection_made	(	self	)	:	\\n	    	marker	=	object	(	)	\\n	self	.	control_amp_se/;"	f
test_connection_made	data/data_raw/train.py	/^utf-8	def	test_connection_made	(	self	)	:	\\n	    	marker	=	object	(	)	\\n	self	.	control_amp_se/;"	f
test_consecutive_different_servers	data/bpe_corpus_raw/train.py	/^utf-8	@	asynctest	\\n	def	test_consecutive_different_servers	(	self	)	:	\\n	    	with	(	yield	fr/;"	f
test_consecutive_different_servers	data/data_raw/train.py	/^utf-8	@	asynctest	\\n	def	test_consecutive_different_servers	(	self	)	:	\\n	    	with	(	yield	fr/;"	f
test_constant	data/bpe_corpus_raw/test.py	/^utf-8	@	grad_test	(	(	3.0	,	)	)	\\n	def	test_constant	(	x	)	:	\\n	    	return	18.0	*	x	\\n		$/;"	f
test_constant	data/data_raw/test.py	/^utf-8	@	grad_test	(	(	3.0	,	)	)	\\n	def	test_constant	(	x	)	:	\\n	    	return	18.0	*	x	\\n		$/;"	f
test_constraint_update_not_dict	data/bpe_corpus_raw/train.py	/^utf-8	def	test_constraint_update_not_dict	(	self	)	:	\\n	    	my_constraint	=	ec2rlcore	.	constr/;"	f
test_constraint_update_not_dict	data/data_raw/train.py	/^utf-8	def	test_constraint_update_not_dict	(	self	)	:	\\n	    	my_constraint	=	ec2rlcore	.	constr/;"	f
test_construct_3tuple	data/bpe_corpus_raw/train.py	/^utf-8	def	test_construct_3tuple	(	self	)	:	\\n	    	RSATest	.	test_construct_3tuple	(	self	)	\\n/;"	f
test_construct_3tuple	data/data_raw/train.py	/^utf-8	def	test_construct_3tuple	(	self	)	:	\\n	    	RSATest	.	test_construct_3tuple	(	self	)	\\n/;"	f
test_constructor	data/bpe_corpus_raw/train.py	/^utf-8	def	test_constructor	(	)	:	\\n	    	t	=	TokenKind	(	5	,	'foo'	)	\\n	eq_	(	t	.	value	,	5	)	/;"	f
test_constructor	data/data_raw/train.py	/^utf-8	def	test_constructor	(	)	:	\\n	    	t	=	TokenKind	(	5	,	'foo'	)	\\n	eq_	(	t	.	value	,	5	)	/;"	f
test_consumeLengthBorderCase1	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_consumeLengthBorderCase1	(	self	)	:	\\n	    	self	.	netstringReceiver	.	_remainin/;"	f
test_consumeLengthBorderCase1	data/data_raw/valid.py	/^utf-8	def	test_consumeLengthBorderCase1	(	self	)	:	\\n	    	self	.	netstringReceiver	.	_remainin/;"	f
test_context_credentials_auto_set_w_application_default_credentials	data/bpe_corpus_raw/test.py	/^utf-8	def	test_context_credentials_auto_set_w_application_default_credentials	(	)	:	\\n	    	ass/;"	f
test_context_credentials_auto_set_w_application_default_credentials	data/data_raw/test.py	/^utf-8	def	test_context_credentials_auto_set_w_application_default_credentials	(	)	:	\\n	    	ass/;"	f
test_conv_1d	data/bpe_corpus_raw/train.py	/^utf-8	def	test_conv_1d	(	self	)	:	\\n	    	with	context	.	eager_mode	(	)	:	\\n	        	width	=	/;"	f
test_conv_1d	data/data_raw/train.py	/^utf-8	def	test_conv_1d	(	self	)	:	\\n	    	with	context	.	eager_mode	(	)	:	\\n	        	width	=	/;"	f
test_convergence_uses_convergence_remove	data/bpe_corpus_raw/train.py	/^utf-8	@	mock	.	patch	(	'otter.controller.convergence_remove_server_from_group'	,	\\n	autospec	=	/;"	f
test_convergence_uses_convergence_remove	data/data_raw/train.py	/^utf-8	@	mock	.	patch	(	'otter.controller.convergence_remove_server_from_group'	,	\\n	autospec	=	/;"	f
test_conversion	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_conversion	(	self	)	:	\\n	    	from	Bio	.	Alphabet	import	IUPAC	\\n	path	=	os	.	p/;"	f
test_conversion	data/data_raw/valid.py	/^utf-8	def	test_conversion	(	self	)	:	\\n	    	from	Bio	.	Alphabet	import	IUPAC	\\n	path	=	os	.	p/;"	f
test_cookie_not_expired_when_added_after_removal	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_cookie_not_expired_when_added_after_removal	(	self	)	->	None	:	\\n	    	timestamp/;"	f
test_cookie_not_expired_when_added_after_removal	data/data_raw/valid.py	/^utf-8	def	test_cookie_not_expired_when_added_after_removal	(	self	)	->	None	:	\\n	    	timestamp/;"	f
test_correct_yum_repo	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_correct_yum_repo	(	self	)	:	\\n	    	base	.	mkmetadatadir	(	self	.	tempdir	)	\\n	/;"	f
test_correct_yum_repo	data/data_raw/valid.py	/^utf-8	def	test_correct_yum_repo	(	self	)	:	\\n	    	base	.	mkmetadatadir	(	self	.	tempdir	)	\\n	/;"	f
test_cors_config_origin_allow_all_false_with_origin_without_whitelist	data/bpe_corpus_raw/train.py	/^utf-8	@	helpers	.	change_config	(	'ckan.cors.origin_allow_all'	,	'false'	)	\\n	@	helpers	.	chang/;"	f
test_cors_config_origin_allow_all_false_with_origin_without_whitelist	data/data_raw/train.py	/^utf-8	@	helpers	.	change_config	(	'ckan.cors.origin_allow_all'	,	'false'	)	\\n	@	helpers	.	chang/;"	f
test_create	data/bpe_corpus_raw/train.py	/^utf-8	def	test_create	(	self	,	data	=	None	,	**	kwargs	)	:	\\n	    	response	=	self	.	get_create/;"	f
test_create	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_create	(	self	)	:	\\n	    	desc	=	'year'	\\n	level	=	Level	.	from_metadata	(	desc/;"	f
test_create	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_create	(	self	)	:	\\n	    	self	.	assertIsNotNone	(	SecureString	.	create	(	unenc/;"	f
test_create	data/data_raw/train.py	/^utf-8	def	test_create	(	self	,	data	=	None	,	**	kwargs	)	:	\\n	    	response	=	self	.	get_create/;"	f
test_create	data/data_raw/valid.py	/^utf-8	def	test_create	(	self	)	:	\\n	    	desc	=	'year'	\\n	level	=	Level	.	from_metadata	(	desc/;"	f
test_create	data/data_raw/valid.py	/^utf-8	def	test_create	(	self	)	:	\\n	    	self	.	assertIsNotNone	(	SecureString	.	create	(	unenc/;"	f
test_create_deploykeys_ssh_keys_on_disk_invalid	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_create_deploykeys_ssh_keys_on_disk_invalid	(	self	)	:	\\n	    	tests	.	create_pro/;"	f
test_create_deploykeys_ssh_keys_on_disk_invalid	data/data_raw/valid.py	/^utf-8	def	test_create_deploykeys_ssh_keys_on_disk_invalid	(	self	)	:	\\n	    	tests	.	create_pro/;"	f
test_create_ignores_other_nodes	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_create_ignores_other_nodes	(	self	)	:	\\n	    	saving	=	self	.	persistence_servic/;"	f
test_create_ignores_other_nodes	data/data_raw/valid.py	/^utf-8	def	test_create_ignores_other_nodes	(	self	)	:	\\n	    	saving	=	self	.	persistence_servic/;"	f
test_create_liststringindex_unicode_positive	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_create_liststringindex_unicode_positive	(	self	)	:	\\n	    	policy	=	{	}	\\n	reto/;"	f
test_create_liststringindex_unicode_positive	data/data_raw/valid.py	/^utf-8	def	test_create_liststringindex_unicode_positive	(	self	)	:	\\n	    	policy	=	{	}	\\n	reto/;"	f
test_create_snapshot_without_volid	data/bpe_corpus_raw/train.py	/^utf-8	def	test_create_snapshot_without_volid	(	self	)	:	\\n	    	fake_snapshot	=	fakes	.	Snapsho/;"	f
test_create_snapshot_without_volid	data/data_raw/train.py	/^utf-8	def	test_create_snapshot_without_volid	(	self	)	:	\\n	    	fake_snapshot	=	fakes	.	Snapsho/;"	f
test_creating_a_payment_instance	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_creating_a_payment_instance	(	self	)	:	\\n	    	from	stalker	import	Payment	\\n	p/;"	f
test_creating_a_payment_instance	data/data_raw/valid.py	/^utf-8	def	test_creating_a_payment_instance	(	self	)	:	\\n	    	from	stalker	import	Payment	\\n	p/;"	f
test_csv_nested_repeat_output	data/bpe_corpus_raw/train.py	/^utf-8	def	test_csv_nested_repeat_output	(	self	)	:	\\n	    	path	=	os	.	path	.	join	(	self	.	fix/;"	f
test_csv_nested_repeat_output	data/data_raw/train.py	/^utf-8	def	test_csv_nested_repeat_output	(	self	)	:	\\n	    	path	=	os	.	path	.	join	(	self	.	fix/;"	f
test_custom_fraction	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_custom_fraction	(	self	)	:	\\n	    	response	=	self	.	_get_test_page	(	'profile=t/;"	f
test_custom_fraction	data/data_raw/valid.py	/^utf-8	def	test_custom_fraction	(	self	)	:	\\n	    	response	=	self	.	_get_test_page	(	'profile=t/;"	f
test_cwd	data/bpe_corpus_raw/train.py	/^utf-8	def	test_cwd	(	self	)	:	\\n	    	tmp_dir	=	os	.	path	.	realpath	(	tempfile	.	gettempdir	(	/;"	f
test_cwd	data/data_raw/train.py	/^utf-8	def	test_cwd	(	self	)	:	\\n	    	tmp_dir	=	os	.	path	.	realpath	(	tempfile	.	gettempdir	(	/;"	f
test_data_contains_id_field	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_data_contains_id_field	(	self	)	:	\\n	\\n	\\n	    	class	Person	(	Document	)	:	\\/;"	f
test_data_contains_id_field	data/data_raw/valid.py	/^utf-8	def	test_data_contains_id_field	(	self	)	:	\\n	\\n	\\n	    	class	Person	(	Document	)	:	\\/;"	f
test_dates_only_1904_epoch	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_dates_only_1904_epoch	(	self	)	:	\\n	    	excel_dates	=	[	(	'1904-01-01'	,	0	)	,	/;"	f
test_dates_only_1904_epoch	data/data_raw/valid.py	/^utf-8	def	test_dates_only_1904_epoch	(	self	)	:	\\n	    	excel_dates	=	[	(	'1904-01-01'	,	0	)	,	/;"	f
test_db_signature	data/bpe_corpus_raw/train.py	/^utf-8	def	test_db_signature	(	self	)	:	\\n	    	settings_dict	=	self	.	connection	.	settings_dic/;"	f
test_db_signature	data/data_raw/train.py	/^utf-8	def	test_db_signature	(	self	)	:	\\n	    	settings_dict	=	self	.	connection	.	settings_dic/;"	f
test_deactivate	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_deactivate	(	self	)	:	\\n	    	self	.	add_perm	(	self	.	perm	)	\\n	s	=	self	.	fac/;"	f
test_deactivate	data/data_raw/valid.py	/^utf-8	def	test_deactivate	(	self	)	:	\\n	    	self	.	add_perm	(	self	.	perm	)	\\n	s	=	self	.	fac/;"	f
test_deep_equals_fallsback_to_generic_comparator_failing_type	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_deep_equals_fallsback_to_generic_comparator_failing_type	(	)	:	\\n	    	from	date/;"	f
test_deep_equals_fallsback_to_generic_comparator_failing_type	data/data_raw/valid.py	/^utf-8	def	test_deep_equals_fallsback_to_generic_comparator_failing_type	(	)	:	\\n	    	from	date/;"	f
test_deepcopy	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_deepcopy	(	self	)	:	\\n	    	stats	=	Stats	(	)	\\n	stats	.	network	=	'BW'	\\n	sta/;"	f
test_deepcopy	data/data_raw/valid.py	/^utf-8	def	test_deepcopy	(	self	)	:	\\n	    	stats	=	Stats	(	)	\\n	stats	.	network	=	'BW'	\\n	sta/;"	f
test_default_install	data/bpe_corpus_raw/train.py	/^utf-8	def	test_default_install	(	self	)	:	\\n	    	self	.	child	=	spawn_process	(	self	.	command/;"	f
test_default_install	data/data_raw/train.py	/^utf-8	def	test_default_install	(	self	)	:	\\n	    	self	.	child	=	spawn_process	(	self	.	command/;"	f
test_default_renderer_serializes_content	data/bpe_corpus_raw/test.py	/^utf-8	def	test_default_renderer_serializes_content	(	self	)	:	\\n	    	resp	=	self	.	client	.	ge/;"	f
test_default_renderer_serializes_content	data/data_raw/test.py	/^utf-8	def	test_default_renderer_serializes_content	(	self	)	:	\\n	    	resp	=	self	.	client	.	ge/;"	f
test_default_value	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_default_value	(	self	)	:	\\n	    	self	.	assertEqual	(	self	.	exploit_foo	.	doo	,/;"	f
test_default_value	data/data_raw/valid.py	/^utf-8	def	test_default_value	(	self	)	:	\\n	    	self	.	assertEqual	(	self	.	exploit_foo	.	doo	,/;"	f
test_delete	data/bpe_corpus_raw/train.py	/^utf-8	def	test_delete	(	self	)	:	\\n	    	self	.	cache	.	set	(	'key1'	,	'spam'	)	\\n	self	.	cach/;"	f
test_delete	data/data_raw/train.py	/^utf-8	def	test_delete	(	self	)	:	\\n	    	self	.	cache	.	set	(	'key1'	,	'spam'	)	\\n	self	.	cach/;"	f
test_delete_increment_ptrack	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_delete_increment_ptrack	(	self	)	:	\\n	    	fname	=	self	.	id	(	)	.	split	(	'.'	)/;"	f
test_delete_increment_ptrack	data/data_raw/valid.py	/^utf-8	def	test_delete_increment_ptrack	(	self	)	:	\\n	    	fname	=	self	.	id	(	)	.	split	(	'.'	)/;"	f
test_delete_many	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_delete_many	(	self	)	:	\\n	    	self	.	cache	.	delete_many	(	[	'a'	,	'b'	]	)	\\n	/;"	f
test_delete_many	data/data_raw/valid.py	/^utf-8	def	test_delete_many	(	self	)	:	\\n	    	self	.	cache	.	delete_many	(	[	'a'	,	'b'	]	)	\\n	/;"	f
test_delete_own_image	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_delete_own_image	(	self	)	:	\\n	    	u	=	UserFactory	(	)	\\n	self	.	client	.	logi/;"	f
test_delete_own_image	data/data_raw/valid.py	/^utf-8	def	test_delete_own_image	(	self	)	:	\\n	    	u	=	UserFactory	(	)	\\n	self	.	client	.	logi/;"	f
test_delete_user_manager2	data/bpe_corpus_raw/train.py	/^utf-8	def	test_delete_user_manager2	(	self	)	:	\\n	    	self	.	user_login	(	'manager2'	)	\\n	sel/;"	f
test_delete_user_manager2	data/data_raw/train.py	/^utf-8	def	test_delete_user_manager2	(	self	)	:	\\n	    	self	.	user_login	(	'manager2'	)	\\n	sel/;"	f
test_deleting_server	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_deleting_server	(	self	)	:	\\n	    	self	.	servers	[	0	]	[	'OS-EXT-STS:task_state/;"	f
test_deleting_server	data/data_raw/valid.py	/^utf-8	def	test_deleting_server	(	self	)	:	\\n	    	self	.	servers	[	0	]	[	'OS-EXT-STS:task_state/;"	f
test_deposit_updates_balance_immediately	data/bpe_corpus_raw/valid.py	/^utf-8	@	pytest	.	mark	.	parametrize	(	'channels_per_node'	,	[	1	]	)	\\n	@	pytest	.	mark	.	parame/;"	f
test_deposit_updates_balance_immediately	data/data_raw/valid.py	/^utf-8	@	pytest	.	mark	.	parametrize	(	'channels_per_node'	,	[	1	]	)	\\n	@	pytest	.	mark	.	parame/;"	f
test_desired_zero	data/bpe_corpus_raw/test.py	/^utf-8	def	test_desired_zero	(	self	)	:	\\n	    	valid	=	{	'name'	:	'meh'	,	'cooldown'	:	5	,	'typ/;"	f
test_desired_zero	data/data_raw/test.py	/^utf-8	def	test_desired_zero	(	self	)	:	\\n	    	valid	=	{	'name'	:	'meh'	,	'cooldown'	:	5	,	'typ/;"	f
test_detail_view	data/bpe_corpus_raw/train.py	/^utf-8	def	test_detail_view	(	self	)	:	\\n	    	readoutKey	=	CONTRIBUTOR_READOUTS	.	keys	(	)	[	0	/;"	f
test_detail_view	data/data_raw/train.py	/^utf-8	def	test_detail_view	(	self	)	:	\\n	    	readoutKey	=	CONTRIBUTOR_READOUTS	.	keys	(	)	[	0	/;"	f
test_differentNotEqual	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_differentNotEqual	(	self	)	:	\\n	    	u1	=	URL	.	fromText	(	'http:\/\/localhost\//;"	f
test_differentNotEqual	data/data_raw/valid.py	/^utf-8	def	test_differentNotEqual	(	self	)	:	\\n	    	u1	=	URL	.	fromText	(	'http:\/\/localhost\//;"	f
test_disable_track_times	data/bpe_corpus_raw/train.py	/^utf-8	def	test_disable_track_times	(	self	)	:	\\n	    	ds	=	self	.	f	.	create_dataset	(	'foo'	,	/;"	f
test_disable_track_times	data/data_raw/train.py	/^utf-8	def	test_disable_track_times	(	self	)	:	\\n	    	ds	=	self	.	f	.	create_dataset	(	'foo'	,	/;"	f
test_disconnect	data/bpe_corpus_raw/valid.py	/^utf-8	@	inlineCallbacks	\\n	def	test_disconnect	(	self	)	:	\\n	    	fake_smsc	=	FakeSMSC	(	)	\\n/;"	f
test_disconnect	data/data_raw/valid.py	/^utf-8	@	inlineCallbacks	\\n	def	test_disconnect	(	self	)	:	\\n	    	fake_smsc	=	FakeSMSC	(	)	\\n/;"	f
test_discrete_bigger_char	data/bpe_corpus_raw/train.py	/^utf-8	@	dbt	.	run_on	(	[	'postgres'	]	)	\\n	def	test_discrete_bigger_char	(	self	)	:	\\n	    	ta/;"	f
test_discrete_bigger_char	data/data_raw/train.py	/^utf-8	@	dbt	.	run_on	(	[	'postgres'	]	)	\\n	def	test_discrete_bigger_char	(	self	)	:	\\n	    	ta/;"	f
test_display_archived_flag	data/bpe_corpus_raw/test.py	/^utf-8	@	mock	.	patch	(	'bodhi.client.bindings.BodhiClient.csrf'	,	mock	.	MagicMock	(	\\n	return_/;"	f
test_display_archived_flag	data/data_raw/test.py	/^utf-8	@	mock	.	patch	(	'bodhi.client.bindings.BodhiClient.csrf'	,	mock	.	MagicMock	(	\\n	return_/;"	f
test_display_info_verbose_mixed	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_display_info_verbose_mixed	(	self	)	:	\\n	    	apkg_adv_insts	=	itertools	.	chain/;"	f
test_display_info_verbose_mixed	data/data_raw/valid.py	/^utf-8	def	test_display_info_verbose_mixed	(	self	)	:	\\n	    	apkg_adv_insts	=	itertools	.	chain/;"	f
test_doc_lines	data_utils/data_to_text.py	/^test_doc_lines = tokenized_docstring[val_end:]$/;"	v
test_docs_host_with_port_excluded	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_docs_host_with_port_excluded	(	self	)	:	\\n	    	with	self	.	settings	(	LOCALE_MI/;"	f
test_docs_host_with_port_excluded	data/data_raw/valid.py	/^utf-8	def	test_docs_host_with_port_excluded	(	self	)	:	\\n	    	with	self	.	settings	(	LOCALE_MI/;"	f
test_documented_range	data/bpe_corpus_raw/test.py	/^utf-8	def	test_documented_range	(	self	)	:	\\n	    	min_value	,	max_value	=	self	.	documented_ra/;"	f
test_documented_range	data/data_raw/test.py	/^utf-8	def	test_documented_range	(	self	)	:	\\n	    	min_value	,	max_value	=	self	.	documented_ra/;"	f
test_drop_mrel_column	data/bpe_corpus_raw/train.py	/^utf-8	def	test_drop_mrel_column	(	pipeline	,	clean_db	)	:	\\n	    	pipeline	.	create_stream	(	'm/;"	f
test_drop_mrel_column	data/data_raw/train.py	/^utf-8	def	test_drop_mrel_column	(	pipeline	,	clean_db	)	:	\\n	    	pipeline	.	create_stream	(	'm/;"	f
test_du	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_du	(	self	)	:	\\n	    	self	.	shell	.	onecmd	(	"create %s\/one 'hello'"	%	self	.	/;"	f
test_du	data/data_raw/valid.py	/^utf-8	def	test_du	(	self	)	:	\\n	    	self	.	shell	.	onecmd	(	"create %s\/one 'hello'"	%	self	.	/;"	f
test_duplicate_metadata_value_on_document_type_change	data/bpe_corpus_raw/test.py	/^utf-8	def	test_duplicate_metadata_value_on_document_type_change	(	self	)	:	\\n	    	document_met/;"	f
test_duplicate_metadata_value_on_document_type_change	data/data_raw/test.py	/^utf-8	def	test_duplicate_metadata_value_on_document_type_change	(	self	)	:	\\n	    	document_met/;"	f
test_empty_file_upload	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_empty_file_upload	(	self	)	:	\\n	    	res_upload_handler	=	ResumableUploadHandler/;"	f
test_empty_file_upload	data/data_raw/valid.py	/^utf-8	def	test_empty_file_upload	(	self	)	:	\\n	    	res_upload_handler	=	ResumableUploadHandler/;"	f
test_empty_raw_front_matter	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_empty_raw_front_matter	(	self	)	:	\\n	    	doc	=	self	.	pod	.	get_doc	(	'\/conten/;"	f
test_empty_raw_front_matter	data/data_raw/valid.py	/^utf-8	def	test_empty_raw_front_matter	(	self	)	:	\\n	    	doc	=	self	.	pod	.	get_doc	(	'\/conten/;"	f
test_empty_response	data/bpe_corpus_raw/train.py	/^utf-8	def	test_empty_response	(	self	)	:	\\n	    	response	=	self	.	client	.	get	(	self	.	api_li/;"	f
test_empty_response	data/data_raw/train.py	/^utf-8	def	test_empty_response	(	self	)	:	\\n	    	response	=	self	.	client	.	get	(	self	.	api_li/;"	f
test_empty_to_many_relationship_url	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_empty_to_many_relationship_url	(	self	)	:	\\n	    	article	=	self	.	Article	(	id	/;"	f
test_empty_to_many_relationship_url	data/data_raw/valid.py	/^utf-8	def	test_empty_to_many_relationship_url	(	self	)	:	\\n	    	article	=	self	.	Article	(	id	/;"	f
test_equality	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_equality	(	self	)	:	\\n	    	history	=	github3	.	gists	.	history	.	GistHistory	(	/;"	f
test_equality	data/data_raw/valid.py	/^utf-8	def	test_equality	(	self	)	:	\\n	    	history	=	github3	.	gists	.	history	.	GistHistory	(	/;"	f
test_etree_format_happy	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_etree_format_happy	(	self	)	:	\\n	    	etree	=	self	.	f_noauth	.	photos	.	getInfo/;"	f
test_etree_format_happy	data/data_raw/valid.py	/^utf-8	def	test_etree_format_happy	(	self	)	:	\\n	    	etree	=	self	.	f_noauth	.	photos	.	getInfo/;"	f
test_exception_handling_when_duplicate_username	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_exception_handling_when_duplicate_username	(	journalist_app	,	config	,	\\n	mocker/;"	f
test_exception_handling_when_duplicate_username	data/data_raw/valid.py	/^utf-8	def	test_exception_handling_when_duplicate_username	(	journalist_app	,	config	,	\\n	mocker/;"	f
test_exception_syntax	data/bpe_corpus_raw/train.py	/^utf-8	def	test_exception_syntax	(	self	)	:	\\n	    	before	=	"""\\n        try:\\n            pa/;"	f
test_exception_syntax	data/data_raw/train.py	/^utf-8	def	test_exception_syntax	(	self	)	:	\\n	    	before	=	"""\\n        try:\\n            pa/;"	f
test_export_assessments_with_filters_and_conflicting_ca_names	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_export_assessments_with_filters_and_conflicting_ca_names	(	self	)	:	\\n	    	self/;"	f
test_export_assessments_with_filters_and_conflicting_ca_names	data/data_raw/valid.py	/^utf-8	def	test_export_assessments_with_filters_and_conflicting_ca_names	(	self	)	:	\\n	    	self/;"	f
test_expvar_default	data/bpe_corpus_raw/train.py	/^utf-8	def	test_expvar_default	(	self	)	:	\\n	    	r	=	requests	.	get	(	self	.	expvar_url	)	\\n	a/;"	f
test_expvar_default	data/data_raw/train.py	/^utf-8	def	test_expvar_default	(	self	)	:	\\n	    	r	=	requests	.	get	(	self	.	expvar_url	)	\\n	a/;"	f
test_external_path_completion	data/bpe_corpus_raw/train.py	/^utf-8	def	test_external_path_completion	(	self	)	:	\\n	    	self	.	vimiv	[	'commandline'	]	.	set/;"	f
test_external_path_completion	data/data_raw/train.py	/^utf-8	def	test_external_path_completion	(	self	)	:	\\n	    	self	.	vimiv	[	'commandline'	]	.	set/;"	f
test_extract_force	data/bpe_corpus_raw/train.py	/^utf-8	@	mock	.	patch	(	'grow.sdk.themes.GrowTheme.archive'	,	new_callable	=	mock	.	PropertyMock	/;"	f
test_extract_force	data/data_raw/train.py	/^utf-8	@	mock	.	patch	(	'grow.sdk.themes.GrowTheme.archive'	,	new_callable	=	mock	.	PropertyMock	/;"	f
test_fail1	data/bpe_corpus_raw/test.py	/^utf-8	def	test_fail1	(	self	)	:	\\n	    	fail1	=	self	.	True1	*	(	1	+	1e-15	)	\\n	methodVal	=	im/;"	f
test_fail1	data/data_raw/test.py	/^utf-8	def	test_fail1	(	self	)	:	\\n	    	fail1	=	self	.	True1	*	(	1	+	1e-15	)	\\n	methodVal	=	im/;"	f
test_fail_not_a_uri	data/bpe_corpus_raw/train.py	/^utf-8	def	test_fail_not_a_uri	(	self	)	:	\\n	    	self	.	assertFilterErrors	(	'not a valid uri'	/;"	f
test_fail_not_a_uri	data/data_raw/train.py	/^utf-8	def	test_fail_not_a_uri	(	self	)	:	\\n	    	self	.	assertFilterErrors	(	'not a valid uri'	/;"	f
test_fail_wrong_argon2_type	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_fail_wrong_argon2_type	(	self	)	:	\\n	    	verify_secret	(	TEST_HASH_D	,	TEST_PAS/;"	f
test_fail_wrong_argon2_type	data/data_raw/valid.py	/^utf-8	def	test_fail_wrong_argon2_type	(	self	)	:	\\n	    	verify_secret	(	TEST_HASH_D	,	TEST_PAS/;"	f
test_failedSTOR	data/bpe_corpus_raw/train.py	/^utf-8	def	test_failedSTOR	(	self	)	:	\\n	    	tr	=	proto_helpers	.	StringTransport	(	)	\\n	\\n	d/;"	f
test_failedSTOR	data/data_raw/train.py	/^utf-8	def	test_failedSTOR	(	self	)	:	\\n	    	tr	=	proto_helpers	.	StringTransport	(	)	\\n	\\n	d/;"	f
test_failing_unread_post	data/bpe_corpus_raw/train.py	/^utf-8	def	test_failing_unread_post	(	self	)	:	\\n	    	result	=	self	.	client	.	get	(	reverse	(	/;"	f
test_failing_unread_post	data/data_raw/train.py	/^utf-8	def	test_failing_unread_post	(	self	)	:	\\n	    	result	=	self	.	client	.	get	(	reverse	(	/;"	f
test_fails_when_src_file	data/bpe_corpus_raw/train.py	/^utf-8	def	test_fails_when_src_file	(	self	)	:	\\n	    	src_dir	=	get_tempdir	(	)	\\n	self	.	asse/;"	f
test_fails_when_src_file	data/data_raw/train.py	/^utf-8	def	test_fails_when_src_file	(	self	)	:	\\n	    	src_dir	=	get_tempdir	(	)	\\n	self	.	asse/;"	f
test_far_expiration	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_far_expiration	(	self	)	:	\\n	    	response	=	HttpResponse	(	)	\\n	response	.	set/;"	f
test_far_expiration	data/data_raw/valid.py	/^utf-8	def	test_far_expiration	(	self	)	:	\\n	    	response	=	HttpResponse	(	)	\\n	response	.	set/;"	f
test_favicon_image	data/bpe_corpus_raw/valid.py	/^utf-8	@	with_comprehensive_theme	(	'stanford-style'	)	\\n	def	test_favicon_image	(	self	)	:	\\n	/;"	f
test_favicon_image	data/data_raw/valid.py	/^utf-8	@	with_comprehensive_theme	(	'stanford-style'	)	\\n	def	test_favicon_image	(	self	)	:	\\n	/;"	f
test_fdtrc	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_fdtrc	(	self	)	:	\\n	    	a_s	=	[	1	,	2	,	10	,	1000	]	\\n	b_s	=	a_s	\\n	x_s	=	[	0/;"	f
test_fdtrc	data/data_raw/valid.py	/^utf-8	def	test_fdtrc	(	self	)	:	\\n	    	a_s	=	[	1	,	2	,	10	,	1000	]	\\n	b_s	=	a_s	\\n	x_s	=	[	0/;"	f
test_file_select	data/bpe_corpus_raw/test.py	/^utf-8	def	test_file_select	(	self	)	:	\\n	    	path	=	Gtk	.	TreePath	(	[	self	.	lib	.	files	.	in/;"	f
test_file_select	data/data_raw/test.py	/^utf-8	def	test_file_select	(	self	)	:	\\n	    	path	=	Gtk	.	TreePath	(	[	self	.	lib	.	files	.	in/;"	f
test_filter_by_product	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_filter_by_product	(	self	)	:	\\n	    	one	=	self	.	factory	.	create	(	name	=	'Foo/;"	f
test_filter_by_product	data/data_raw/valid.py	/^utf-8	def	test_filter_by_product	(	self	)	:	\\n	    	one	=	self	.	factory	.	create	(	name	=	'Foo/;"	f
test_filter_related	data/bpe_corpus_raw/train.py	/^utf-8	def	test_filter_related	(	self	)	:	\\n	    	response	=	self	.	client	.	get	(	self	.	url	,	/;"	f
test_filter_related	data/data_raw/train.py	/^utf-8	def	test_filter_related	(	self	)	:	\\n	    	response	=	self	.	client	.	get	(	self	.	url	,	/;"	f
test_find_share_should_throw_error_if_there_is_no_enough_place	data/bpe_corpus_raw/train.py	/^utf-8	def	test_find_share_should_throw_error_if_there_is_no_enough_place	(	self	)	:	\\n	    	mox/;"	f
test_find_share_should_throw_error_if_there_is_no_enough_place	data/data_raw/train.py	/^utf-8	def	test_find_share_should_throw_error_if_there_is_no_enough_place	(	self	)	:	\\n	    	mox/;"	f
test_flat_maxima	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_flat_maxima	(	self	)	:	\\n	    	x	=	np	.	array	(	[	-	1.3	,	0	,	1	,	0	,	2	,	2	,	0	/;"	f
test_flat_maxima	data/data_raw/valid.py	/^utf-8	def	test_flat_maxima	(	self	)	:	\\n	    	x	=	np	.	array	(	[	-	1.3	,	0	,	1	,	0	,	2	,	2	,	0	/;"	f
test_flavor_update	data/bpe_corpus_raw/train.py	/^utf-8	def	test_flavor_update	(	self	)	:	\\n	    	out	,	_	=	self	.	run_command	(	'flavor-update w/;"	f
test_flavor_update	data/data_raw/train.py	/^utf-8	def	test_flavor_update	(	self	)	:	\\n	    	out	,	_	=	self	.	run_command	(	'flavor-update w/;"	f
test_flyweight	data/bpe_corpus_raw/test.py	/^utf-8	def	test_flyweight	(	self	)	:	\\n	    	three_of_spades	=	self	.	card_class	(	'Spade'	,	3	)/;"	f
test_flyweight	data/data_raw/test.py	/^utf-8	def	test_flyweight	(	self	)	:	\\n	    	three_of_spades	=	self	.	card_class	(	'Spade'	,	3	)/;"	f
test_for_datetimefields_saves_as_much_precision_as_was_given	data/bpe_corpus_raw/test.py	/^utf-8	def	test_for_datetimefields_saves_as_much_precision_as_was_given	(	self	)	:	\\n	    	a1	=	/;"	f
test_for_datetimefields_saves_as_much_precision_as_was_given	data/data_raw/test.py	/^utf-8	def	test_for_datetimefields_saves_as_much_precision_as_was_given	(	self	)	:	\\n	    	a1	=	/;"	f
test_force_as_true_with_0_minentities	data/bpe_corpus_raw/train.py	/^utf-8	@	tags	(	speed	=	'quick'	,	convergence	=	'yes'	)	\\n	def	test_force_as_true_with_0_minenti/;"	f
test_force_as_true_with_0_minentities	data/data_raw/train.py	/^utf-8	@	tags	(	speed	=	'quick'	,	convergence	=	'yes'	)	\\n	def	test_force_as_true_with_0_minenti/;"	f
test_forward_dense_batchnorm	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_forward_dense_batchnorm	(	)	:	\\n	    	net	=	LIB	.	make_network	(	1	)	\\n	layer	=/;"	f
test_forward_dense_batchnorm	data/data_raw/valid.py	/^utf-8	def	test_forward_dense_batchnorm	(	)	:	\\n	    	net	=	LIB	.	make_network	(	1	)	\\n	layer	=/;"	f
test_foss_toolchain	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_foss_toolchain	(	self	)	:	\\n	    	self	.	get_toolchain	(	'foss'	,	version	=	'201/;"	f
test_foss_toolchain	data/data_raw/valid.py	/^utf-8	def	test_foss_toolchain	(	self	)	:	\\n	    	self	.	get_toolchain	(	'foss'	,	version	=	'201/;"	f
test_from_dict	data/bpe_corpus_raw/train.py	/^utf-8	def	test_from_dict	(	self	)	:	\\n	    	log_entry	=	pmap	(	{	'timestamp'	:	1	,	'task_uuid'	/;"	f
test_from_dict	data/data_raw/train.py	/^utf-8	def	test_from_dict	(	self	)	:	\\n	    	log_entry	=	pmap	(	{	'timestamp'	:	1	,	'task_uuid'	/;"	f
test_function_name	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_function_name	(	self	)	:	\\n	    	self	.	assertRaises	(	AttributeError	,	lambda	:/;"	f
test_function_name	data/data_raw/valid.py	/^utf-8	def	test_function_name	(	self	)	:	\\n	    	self	.	assertRaises	(	AttributeError	,	lambda	:/;"	f
test_generate_fallback_config_skips_bonds	data/bpe_corpus_raw/train.py	/^utf-8	def	test_generate_fallback_config_skips_bonds	(	self	)	:	\\n	    	write_file	(	os	.	path	./;"	f
test_generate_fallback_config_skips_bonds	data/data_raw/train.py	/^utf-8	def	test_generate_fallback_config_skips_bonds	(	self	)	:	\\n	    	write_file	(	os	.	path	./;"	f
test_generator_comprehension_double	data/bpe_corpus_raw/train.py	/^utf-8	def	test_generator_comprehension_double	(	)	:	\\n	    	parse_simple	(	[	(	'LEFT_PARENTHESI/;"	f
test_generator_comprehension_double	data/data_raw/train.py	/^utf-8	def	test_generator_comprehension_double	(	)	:	\\n	    	parse_simple	(	[	(	'LEFT_PARENTHESI/;"	f
test_get_billing_plan	data/bpe_corpus_raw/train.py	/^utf-8	def	test_get_billing_plan	(	create_billing_plan	)	:	\\n	    	resp	=	api_get	(	'\/v0\/billi/;"	f
test_get_billing_plan	data/data_raw/train.py	/^utf-8	def	test_get_billing_plan	(	create_billing_plan	)	:	\\n	    	resp	=	api_get	(	'\/v0\/billi/;"	f
test_get_diff_unres_review_status_counts	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_get_diff_unres_review_status_counts	(	self	)	:	\\n	    	base_run_id	=	self	.	_bas/;"	f
test_get_diff_unres_review_status_counts	data/data_raw/valid.py	/^utf-8	def	test_get_diff_unres_review_status_counts	(	self	)	:	\\n	    	base_run_id	=	self	.	_bas/;"	f
test_get_dmarc_record_with_bad_format	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_get_dmarc_record_with_bad_format	(	self	)	:	\\n	    	self	.	dmarc_txt_records	[	'/;"	f
test_get_dmarc_record_with_bad_format	data/data_raw/valid.py	/^utf-8	def	test_get_dmarc_record_with_bad_format	(	self	)	:	\\n	    	self	.	dmarc_txt_records	[	'/;"	f
test_get_first_if	data/bpe_corpus_raw/valid.py	/^utf-8	@	patch	(	\\n	'azurelinuxagent.common.osutil.default.DefaultOSUtil.get_primary_interface'	/;"	f
test_get_first_if	data/data_raw/valid.py	/^utf-8	@	patch	(	\\n	'azurelinuxagent.common.osutil.default.DefaultOSUtil.get_primary_interface'	/;"	f
test_get_model_name	data/bpe_corpus_raw/train.py	/^utf-8	def	test_get_model_name	(	self	)	:	\\n	    	queryset_mock	=	Mock	(	)	\\n	meta_mock	=	Mock	/;"	f
test_get_model_name	data/data_raw/train.py	/^utf-8	def	test_get_model_name	(	self	)	:	\\n	    	queryset_mock	=	Mock	(	)	\\n	meta_mock	=	Mock	/;"	f
test_get_org_courses	data/bpe_corpus_raw/valid.py	/^utf-8	@	patch	(	'xmodule.tabs.CourseTab.from_json'	,	side_effect	=	mock_tab_from_json	)	\\n	def	/;"	f
test_get_org_courses	data/data_raw/valid.py	/^utf-8	@	patch	(	'xmodule.tabs.CourseTab.from_json'	,	side_effect	=	mock_tab_from_json	)	\\n	def	/;"	f
test_get_parent_class	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_get_parent_class	(	self	)	:	\\n	    	self	.	assertEquals	(	ConcretePortChannel	.	/;"	f
test_get_parent_class	data/data_raw/valid.py	/^utf-8	def	test_get_parent_class	(	self	)	:	\\n	    	self	.	assertEquals	(	ConcretePortChannel	.	/;"	f
test_get_requested_mimetype_with_supported_mimetype	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_get_requested_mimetype_with_supported_mimetype	(	self	)	:	\\n	    	self	.	assertE/;"	f
test_get_requested_mimetype_with_supported_mimetype	data/data_raw/valid.py	/^utf-8	def	test_get_requested_mimetype_with_supported_mimetype	(	self	)	:	\\n	    	self	.	assertE/;"	f
test_get_summary_block	data/bpe_corpus_raw/train.py	/^utf-8	def	test_get_summary_block	(	self	)	:	\\n	    	self	.	assertEqual	(	getSummaryBlock	(	self/;"	f
test_get_summary_block	data/data_raw/train.py	/^utf-8	def	test_get_summary_block	(	self	)	:	\\n	    	self	.	assertEqual	(	getSummaryBlock	(	self/;"	f
test_get_table	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_get_table	(	self	)	:	\\n	    	node1	=	Node	(	'103'	)	\\n	node2	=	Node	(	'102'	)	\\/;"	f
test_get_table	data/data_raw/valid.py	/^utf-8	def	test_get_table	(	self	)	:	\\n	    	node1	=	Node	(	'103'	)	\\n	node2	=	Node	(	'102'	)	\\/;"	f
test_get_value_from_dict	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_get_value_from_dict	(	self	)	:	\\n	    	name	=	'test_perms'	\\n	value	=	self	.	wi/;"	f
test_get_value_from_dict	data/data_raw/valid.py	/^utf-8	def	test_get_value_from_dict	(	self	)	:	\\n	    	name	=	'test_perms'	\\n	value	=	self	.	wi/;"	f
test_get_width_at_latitude	data/bpe_corpus_raw/train.py	/^utf-8	def	test_get_width_at_latitude	(	self	)	:	\\n	    	bounds	=	Bounds	(	n_lat	=	50.0	,	s_lat	/;"	f
test_get_width_at_latitude	data/data_raw/train.py	/^utf-8	def	test_get_width_at_latitude	(	self	)	:	\\n	    	bounds	=	Bounds	(	n_lat	=	50.0	,	s_lat	/;"	f
test_getfileid_recache_cached_unit	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_getfileid_recache_cached_unit	(	self	)	:	\\n	    	checker	=	checks	.	UnitChecker	/;"	f
test_getfileid_recache_cached_unit	data/data_raw/valid.py	/^utf-8	def	test_getfileid_recache_cached_unit	(	self	)	:	\\n	    	checker	=	checks	.	UnitChecker	/;"	f
test_getting_current_version_but_deleted	data/bpe_corpus_raw/test.py	/^utf-8	def	test_getting_current_version_but_deleted	(	self	)	:	\\n	    	current	=	B	.	objects	.	c/;"	f
test_getting_current_version_but_deleted	data/data_raw/test.py	/^utf-8	def	test_getting_current_version_but_deleted	(	self	)	:	\\n	    	current	=	B	.	objects	.	c/;"	f
test_grammar_typechecking	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_grammar_typechecking	(	self	)	:	\\n	    	grammar_types	=	[	(	'title'	,	[	Property/;"	f
test_grammar_typechecking	data/data_raw/valid.py	/^utf-8	def	test_grammar_typechecking	(	self	)	:	\\n	    	grammar_types	=	[	(	'title'	,	[	Property/;"	f
test_gyro_bias	data/bpe_corpus_raw/train.py	/^utf-8	def	test_gyro_bias	(	self	)	:	\\n	    	state	,	history	,	times	=	self	.	run_static	(	gyro	/;"	f
test_gyro_bias	data/data_raw/train.py	/^utf-8	def	test_gyro_bias	(	self	)	:	\\n	    	state	,	history	,	times	=	self	.	run_static	(	gyro	/;"	f
test_handler_yield_ndb_key	data/bpe_corpus_raw/train.py	/^utf-8	def	test_handler_yield_ndb_key	(	entity	)	:	\\n	    	yield	entity	.	key	\\n		$/;"	f
test_handler_yield_ndb_key	data/data_raw/train.py	/^utf-8	def	test_handler_yield_ndb_key	(	entity	)	:	\\n	    	yield	entity	.	key	\\n		$/;"	f
test_has_expired_wrong_args	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_has_expired_wrong_args	(	self	)	:	\\n	    	cert	=	X509	(	)	\\n	self	.	assertRaise/;"	f
test_has_expired_wrong_args	data/data_raw/valid.py	/^utf-8	def	test_has_expired_wrong_args	(	self	)	:	\\n	    	cert	=	X509	(	)	\\n	self	.	assertRaise/;"	f
test_hashtags_are_not_parsed	data/bpe_corpus_raw/test.py	/^utf-8	def	test_hashtags_are_not_parsed	(	self	)	:	\\n	    	hashtags	=	parse_hashtags	(	\\n	'http/;"	f
test_hashtags_are_not_parsed	data/data_raw/test.py	/^utf-8	def	test_hashtags_are_not_parsed	(	self	)	:	\\n	    	hashtags	=	parse_hashtags	(	\\n	'http/;"	f
test_hql	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_hql	(	self	,	hql	)	:	\\n	    	create	,	insert	,	other	=	[	]	,	[	]	,	[	]	\\n	for	q/;"	f
test_hql	data/data_raw/valid.py	/^utf-8	def	test_hql	(	self	,	hql	)	:	\\n	    	create	,	insert	,	other	=	[	]	,	[	]	,	[	]	\\n	for	q/;"	f
test_http_get_text_exists_request_overwrite	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_http_get_text_exists_request_overwrite	(	self	)	:	\\n	    	filepath	=	os	.	path	./;"	f
test_http_get_text_exists_request_overwrite	data/data_raw/valid.py	/^utf-8	def	test_http_get_text_exists_request_overwrite	(	self	)	:	\\n	    	filepath	=	os	.	path	./;"	f
test_huber_and_sgd_same_results	data/bpe_corpus_raw/train.py	/^utf-8	def	test_huber_and_sgd_same_results	(	)	:	\\n	    	X	,	y	=	make_regression_with_outliers	(/;"	f
test_huber_and_sgd_same_results	data/data_raw/train.py	/^utf-8	def	test_huber_and_sgd_same_results	(	)	:	\\n	    	X	,	y	=	make_regression_with_outliers	(/;"	f
test_id_in_os_release	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_id_in_os_release	(	self	)	:	\\n	    	orcontent	=	'\\\\n'	.	join	(	[	'ID=ubuntu-co/;"	f
test_id_in_os_release	data/data_raw/valid.py	/^utf-8	def	test_id_in_os_release	(	self	)	:	\\n	    	orcontent	=	'\\\\n'	.	join	(	[	'ID=ubuntu-co/;"	f
test_idtoken_sign_validation	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_idtoken_sign_validation	(	self	)	:	\\n	    	SIGKEYS	=	self	.	_get_keys	(	)	\\n	RS/;"	f
test_idtoken_sign_validation	data/data_raw/valid.py	/^utf-8	def	test_idtoken_sign_validation	(	self	)	:	\\n	    	SIGKEYS	=	self	.	_get_keys	(	)	\\n	RS/;"	f
test_image	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_image	(	self	)	:	\\n	    	self	.	assertEqual	(	self	.	image	.	image	(	)	,	'<img s/;"	f
test_image	data/data_raw/valid.py	/^utf-8	def	test_image	(	self	)	:	\\n	    	self	.	assertEqual	(	self	.	image	.	image	(	)	,	'<img s/;"	f
test_infinite_cleanup_loop	data/bpe_corpus_raw/train.py	/^utf-8	@	patch	(	'cabot.cabotapp.tasks.clean_db.apply_async'	)	\\n	def	test_infinite_cleanup_loop/;"	f
test_infinite_cleanup_loop	data/data_raw/train.py	/^utf-8	@	patch	(	'cabot.cabotapp.tasks.clean_db.apply_async'	)	\\n	def	test_infinite_cleanup_loop/;"	f
test_info_node_positive_with_dns	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_info_node_positive_with_dns	(	self	)	:	\\n	    	host	=	'google.com'	,	3000	\\n	tr/;"	f
test_info_node_positive_with_dns	data/data_raw/valid.py	/^utf-8	def	test_info_node_positive_with_dns	(	self	)	:	\\n	    	host	=	'google.com'	,	3000	\\n	tr/;"	f
test_inheritance16	data/bpe_corpus_raw/valid.py	/^utf-8	@	setup	(	inheritance_templates	)	\\n	def	test_inheritance16	(	self	)	:	\\n	    	output	=	/;"	f
test_inheritance16	data/data_raw/valid.py	/^utf-8	@	setup	(	inheritance_templates	)	\\n	def	test_inheritance16	(	self	)	:	\\n	    	output	=	/;"	f
test_init	data/bpe_corpus_raw/train.py	/^utf-8	def	test_init	(	self	)	:	\\n	    	payload	=	payloads	.	DecryptRequestPayload	(	)	\\n	self	/;"	f
test_init	data/data_raw/train.py	/^utf-8	def	test_init	(	self	)	:	\\n	    	payload	=	payloads	.	DecryptRequestPayload	(	)	\\n	self	/;"	f
test_init_with_args	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_init_with_args	(	self	)	:	\\n	    	payload	=	payloads	.	ArchiveRequestPayload	(	u/;"	f
test_init_with_args	data/data_raw/valid.py	/^utf-8	def	test_init_with_args	(	self	)	:	\\n	    	payload	=	payloads	.	ArchiveRequestPayload	(	u/;"	f
test_innerwt_empty	data/bpe_corpus_raw/test.py	/^utf-8	def	test_innerwt_empty	(	self	)	:	\\n	    	a	=	np	.	array	(	[	]	,	dtype	=	'f8'	)	\\n	b	=	n/;"	f
test_innerwt_empty	data/data_raw/test.py	/^utf-8	def	test_innerwt_empty	(	self	)	:	\\n	    	a	=	np	.	array	(	[	]	,	dtype	=	'f8'	)	\\n	b	=	n/;"	f
test_intent_request_with_slots_but_no_value	data/bpe_corpus_raw/valid.py	/^utf-8	@	asyncio	.	coroutine	\\n	def	test_intent_request_with_slots_but_no_value	(	alexa_client	)/;"	f
test_intent_request_with_slots_but_no_value	data/data_raw/valid.py	/^utf-8	@	asyncio	.	coroutine	\\n	def	test_intent_request_with_slots_but_no_value	(	alexa_client	)/;"	f
test_interactionBetweenDifferentEvents	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_interactionBetweenDifferentEvents	(	self	)	:	\\n	    	events	=	[	]	\\n	firstEvent/;"	f
test_interactionBetweenDifferentEvents	data/data_raw/valid.py	/^utf-8	def	test_interactionBetweenDifferentEvents	(	self	)	:	\\n	    	events	=	[	]	\\n	firstEvent/;"	f
test_invalid_char	data/bpe_corpus_raw/train.py	/^utf-8	def	test_invalid_char	(	self	)	:	\\n	    	config	=	b'c\\\\xe1'	\\n	self	.	check_config_fai/;"	f
test_invalid_char	data/data_raw/train.py	/^utf-8	def	test_invalid_char	(	self	)	:	\\n	    	config	=	b'c\\\\xe1'	\\n	self	.	check_config_fai/;"	f
test_invalid_data	data/bpe_corpus_raw/valid.py	/^utf-8	@	patch_category_acl	(	{	'can_merge_posts'	:	True	}	)	\\n	def	test_invalid_data	(	self	)	:/;"	f
test_invalid_data	data/data_raw/valid.py	/^utf-8	@	patch_category_acl	(	{	'can_merge_posts'	:	True	}	)	\\n	def	test_invalid_data	(	self	)	:/;"	f
test_invalid_subject	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_invalid_subject	(	self	)	:	\\n	    	for	badObj	in	[	True	,	object	(	)	,	'hello'	,/;"	f
test_invalid_subject	data/data_raw/valid.py	/^utf-8	def	test_invalid_subject	(	self	)	:	\\n	    	for	badObj	in	[	True	,	object	(	)	,	'hello'	,/;"	f
test_invalid_timestamp	data/bpe_corpus_raw/test.py	/^utf-8	def	test_invalid_timestamp	(	self	)	:	\\n	    	invalid	=	self	.	at_policy	\\n	invalid_date/;"	f
test_invalid_timestamp	data/data_raw/test.py	/^utf-8	def	test_invalid_timestamp	(	self	)	:	\\n	    	invalid	=	self	.	at_policy	\\n	invalid_date/;"	f
test_is_installer	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_is_installer	(	self	)	:	\\n	    	if	mozinfo	.	isLinux	:	\\n	        	self	.	asser/;"	f
test_is_installer	data/data_raw/valid.py	/^utf-8	def	test_is_installer	(	self	)	:	\\n	    	if	mozinfo	.	isLinux	:	\\n	        	self	.	asser/;"	f
test_karma_and_pseudo_change	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_karma_and_pseudo_change	(	self	)	:	\\n	    	tester	=	ProfileFactory	(	)	\\n	old_p/;"	f
test_karma_and_pseudo_change	data/data_raw/valid.py	/^utf-8	def	test_karma_and_pseudo_change	(	self	)	:	\\n	    	tester	=	ProfileFactory	(	)	\\n	old_p/;"	f
test_keepalive_requires_full_packet	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_keepalive_requires_full_packet	(	self	)	:	\\n	    	h	=	BasicHandler	(	)	\\n	r	,	t/;"	f
test_keepalive_requires_full_packet	data/data_raw/valid.py	/^utf-8	def	test_keepalive_requires_full_packet	(	self	)	:	\\n	    	h	=	BasicHandler	(	)	\\n	r	,	t/;"	f
test_kind_groups	data/bpe_corpus_raw/test.py	/^utf-8	def	test_kind_groups	(	)	:	\\n	    	assert	CursorKind	.	UNEXPOSED_DECL	.	is_declaration	(	/;"	f
test_kind_groups	data/data_raw/test.py	/^utf-8	def	test_kind_groups	(	)	:	\\n	    	assert	CursorKind	.	UNEXPOSED_DECL	.	is_declaration	(	/;"	f
test_la_move_ou_noncomputers	data/bpe_corpus_raw/train.py	/^utf-8	def	test_la_move_ou_noncomputers	(	self	)	:	\\n	    	tag	=	'move_noncomputers'	\\n	u1	,	u2/;"	f
test_la_move_ou_noncomputers	data/data_raw/train.py	/^utf-8	def	test_la_move_ou_noncomputers	(	self	)	:	\\n	    	tag	=	'move_noncomputers'	\\n	u1	,	u2/;"	f
test_last_login	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_last_login	(	self	)	:	\\n	    	user	=	User	.	objects	.	create	(	username	=	'known/;"	f
test_last_login	data/data_raw/valid.py	/^utf-8	def	test_last_login	(	self	)	:	\\n	    	user	=	User	.	objects	.	create	(	username	=	'known/;"	f
test_limit_str_roundtrip	data/bpe_corpus_raw/train.py	/^utf-8	@	pytest	.	mark	.	parametrize	(	'time_unit'	,	[	'Y'	,	'M'	,	pytest	.	param	(	'W'	,	marks	=/;"	f
test_limit_str_roundtrip	data/data_raw/train.py	/^utf-8	@	pytest	.	mark	.	parametrize	(	'time_unit'	,	[	'Y'	,	'M'	,	pytest	.	param	(	'W'	,	marks	=/;"	f
test_linkify_naked_urls	data/bpe_corpus_raw/train.py	/^utf-8	def	test_linkify_naked_urls	(	self	)	:	\\n	    	self	.	assertEqual	(	gfm	(	' http:\/\/www./;"	f
test_linkify_naked_urls	data/data_raw/train.py	/^utf-8	def	test_linkify_naked_urls	(	self	)	:	\\n	    	self	.	assertEqual	(	gfm	(	' http:\/\/www./;"	f
test_listing_all_env_vars	data/bpe_corpus_raw/valid.py	/^utf-8	@	mock	.	patch	(	'oc_env.locate_oc_binary'	)	\\n	@	mock	.	patch	(	'oc_env.Utils.create_tmp/;"	f
test_listing_all_env_vars	data/data_raw/valid.py	/^utf-8	@	mock	.	patch	(	'oc_env.locate_oc_binary'	)	\\n	@	mock	.	patch	(	'oc_env.Utils.create_tmp/;"	f
test_literal_N	data/bpe_corpus_raw/train.py	/^utf-8	def	test_literal_N	(	run	)	:	\\n	    	run	(	'-N -e 0.2 -a NNNNNNNNNNNNNN'	,	'trimN3.fasta'/;"	f
test_literal_N	data/data_raw/train.py	/^utf-8	def	test_literal_N	(	run	)	:	\\n	    	run	(	'-N -e 0.2 -a NNNNNNNNNNNNNN'	,	'trimN3.fasta'/;"	f
test_lladser_pe	data/bpe_corpus_raw/train.py	/^utf-8	def	test_lladser_pe	(	self	)	:	\\n	    	obs	=	lladser_pe	(	[	3	]	,	r	=	4	)	\\n	self	.	asse/;"	f
test_lladser_pe	data/data_raw/train.py	/^utf-8	def	test_lladser_pe	(	self	)	:	\\n	    	obs	=	lladser_pe	(	[	3	]	,	r	=	4	)	\\n	self	.	asse/;"	f
test_llvm_div	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_llvm_div	(	)	:	\\n	\\n	    	def	check_div	(	start	,	end	,	divisor	,	dtype	)	:	\\n/;"	f
test_llvm_div	data/data_raw/valid.py	/^utf-8	def	test_llvm_div	(	)	:	\\n	\\n	    	def	check_div	(	start	,	end	,	divisor	,	dtype	)	:	\\n/;"	f
test_load_numpy	data/bpe_corpus_raw/train.py	/^utf-8	@	patch	(	'yellowbrick.datasets.base.pd'	,	None	)	\\n	@	pytest	.	mark	.	parametrize	(	'loa/;"	f
test_load_numpy	data/data_raw/train.py	/^utf-8	@	patch	(	'yellowbrick.datasets.base.pd'	,	None	)	\\n	@	pytest	.	mark	.	parametrize	(	'loa/;"	f
test_load_public_key	data/bpe_corpus_raw/train.py	/^utf-8	def	test_load_public_key	(	self	)	:	\\n	    	key	=	rsa	.	key	.	PublicKey	.	load_pkcs1	(	PU/;"	f
test_load_public_key	data/data_raw/train.py	/^utf-8	def	test_load_public_key	(	self	)	:	\\n	    	key	=	rsa	.	key	.	PublicKey	.	load_pkcs1	(	PU/;"	f
test_load_questions_with_missing_fields	data/bpe_corpus_raw/train.py	/^utf-8	def	test_load_questions_with_missing_fields	(	self	)	:	\\n	    	question	=	Question	(	)	\\/;"	f
test_load_questions_with_missing_fields	data/data_raw/train.py	/^utf-8	def	test_load_questions_with_missing_fields	(	self	)	:	\\n	    	question	=	Question	(	)	\\/;"	f
test_loader_download	data/bpe_corpus_raw/train.py	/^utf-8	@	pytest	.	mark	.	parametrize	(	'loader'	,	[	load_bikeshare	,	load_concrete	,	\\n	load_cre/;"	f
test_loader_download	data/data_raw/train.py	/^utf-8	@	pytest	.	mark	.	parametrize	(	'loader'	,	[	load_bikeshare	,	load_concrete	,	\\n	load_cre/;"	f
test_local_tmp_target	data/bpe_corpus_raw/valid.py	/^utf-8	@	mock	.	patch	(	'luigi.file.LocalTarget.__init__'	)	\\n	@	mock	.	patch	(	'luigi.file.Loca/;"	f
test_local_tmp_target	data/data_raw/valid.py	/^utf-8	@	mock	.	patch	(	'luigi.file.LocalTarget.__init__'	)	\\n	@	mock	.	patch	(	'luigi.file.Loca/;"	f
test_localized_dateTimeField_with_inputformat	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_localized_dateTimeField_with_inputformat	(	self	)	:	\\n	    	f	=	forms	.	DateTime/;"	f
test_localized_dateTimeField_with_inputformat	data/data_raw/valid.py	/^utf-8	def	test_localized_dateTimeField_with_inputformat	(	self	)	:	\\n	    	f	=	forms	.	DateTime/;"	f
test_logistic_regression_preds_labels	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_logistic_regression_preds_labels	(	)	:	\\n	    	g	=	np	.	array	(	[	1.0	,	1.0	,	1./;"	f
test_logistic_regression_preds_labels	data/data_raw/valid.py	/^utf-8	def	test_logistic_regression_preds_labels	(	)	:	\\n	    	g	=	np	.	array	(	[	1.0	,	1.0	,	1./;"	f
test_logout	data/bpe_corpus_raw/train.py	/^utf-8	def	test_logout	(	self	)	:	\\n	    	utils	.	login	(	self	)	\\n	response	=	self	.	client	.	/;"	f
test_logout	data/data_raw/train.py	/^utf-8	def	test_logout	(	self	)	:	\\n	    	utils	.	login	(	self	)	\\n	response	=	self	.	client	.	/;"	f
test_longDescriptionOverride	data/bpe_corpus_raw/train.py	/^utf-8	def	test_longDescriptionOverride	(	self	)	:	\\n	    	longDescription	=	'fig'	\\n	rpm	,	srp/;"	f
test_longDescriptionOverride	data/data_raw/train.py	/^utf-8	def	test_longDescriptionOverride	(	self	)	:	\\n	    	longDescription	=	'fig'	\\n	rpm	,	srp/;"	f
test_lytro_raw_illum_reading	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_lytro_raw_illum_reading	(	)	:	\\n	    	need_internet	(	)	\\n	raw_file	=	get_remot/;"	f
test_lytro_raw_illum_reading	data/data_raw/valid.py	/^utf-8	def	test_lytro_raw_illum_reading	(	)	:	\\n	    	need_internet	(	)	\\n	raw_file	=	get_remot/;"	f
test_mag_offset	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_mag_offset	(	self	)	:	\\n	    	mag	=	[	300	,	0	,	900	]	\\n	state	,	history	,	time/;"	f
test_mag_offset	data/data_raw/valid.py	/^utf-8	def	test_mag_offset	(	self	)	:	\\n	    	mag	=	[	300	,	0	,	900	]	\\n	state	,	history	,	time/;"	f
test_managed_state_wrapper	data/bpe_corpus_raw/train.py	/^utf-8	def	test_managed_state_wrapper	(	self	)	:	\\n	    	draft	=	MyPost	.	__dict__	[	'state'	]	./;"	f
test_managed_state_wrapper	data/data_raw/train.py	/^utf-8	def	test_managed_state_wrapper	(	self	)	:	\\n	    	draft	=	MyPost	.	__dict__	[	'state'	]	./;"	f
test_map_view_comment	data/bpe_corpus_raw/test.py	/^utf-8	def	test_map_view_comment	(	self	)	:	\\n	    	dbmap	=	self	.	to_map	(	[	CREATE_STMT	,	COMM/;"	f
test_map_view_comment	data/data_raw/test.py	/^utf-8	def	test_map_view_comment	(	self	)	:	\\n	    	dbmap	=	self	.	to_map	(	[	CREATE_STMT	,	COMM/;"	f
test_marshall	data/bpe_corpus_raw/train.py	/^utf-8	def	test_marshall	(	self	)	:	\\n	    	item	=	Item	(	self	.	client	,	name	=	'an-item'	,	age/;"	f
test_marshall	data/data_raw/train.py	/^utf-8	def	test_marshall	(	self	)	:	\\n	    	item	=	Item	(	self	.	client	,	name	=	'an-item'	,	age/;"	f
test_master_slave_same_backup	data/bpe_corpus_raw/train.py	/^utf-8	def	test_master_slave_same_backup	(	self	)	:	\\n	    	tablet_master	.	mquery	(	'vt_test_ke/;"	f
test_master_slave_same_backup	data/data_raw/train.py	/^utf-8	def	test_master_slave_same_backup	(	self	)	:	\\n	    	tablet_master	.	mquery	(	'vt_test_ke/;"	f
test_mdstrip_filter_with_excerpt	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_mdstrip_filter_with_excerpt	(	self	,	app	)	:	\\n	    	text	=	''	.	join	(	[	'excer/;"	f
test_mdstrip_filter_with_excerpt	data/data_raw/valid.py	/^utf-8	def	test_mdstrip_filter_with_excerpt	(	self	,	app	)	:	\\n	    	text	=	''	.	join	(	[	'excer/;"	f
test_media_play_pause	data/bpe_corpus_raw/train.py	/^utf-8	def	test_media_play_pause	(	self	)	:	\\n	    	assert	self	.	player	.	state	==	STATE_OFF	\\/;"	f
test_media_play_pause	data/data_raw/train.py	/^utf-8	def	test_media_play_pause	(	self	)	:	\\n	    	assert	self	.	player	.	state	==	STATE_OFF	\\/;"	f
test_memmapping_pool_for_large_arrays_in_return	data/bpe_corpus_raw/test.py	/^utf-8	@	with_numpy	\\n	@	with_multiprocessing	\\n	@	parametrize	(	'factory'	,	[	MemmappingPool	,/;"	f
test_memmapping_pool_for_large_arrays_in_return	data/data_raw/test.py	/^utf-8	@	with_numpy	\\n	@	with_multiprocessing	\\n	@	parametrize	(	'factory'	,	[	MemmappingPool	,/;"	f
test_merge_action	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_merge_action	(	self	)	:	\\n	    	self	.	assertTrue	(	'merge_tags'	in	self	.	ma	.	/;"	f
test_merge_action	data/data_raw/valid.py	/^utf-8	def	test_merge_action	(	self	)	:	\\n	    	self	.	assertTrue	(	'merge_tags'	in	self	.	ma	.	/;"	f
test_merge_pool_kwargs_none	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_merge_pool_kwargs_none	(	self	)	:	\\n	    	p	=	PoolManager	(	strict	=	True	)	\\n	/;"	f
test_merge_pool_kwargs_none	data/data_raw/valid.py	/^utf-8	def	test_merge_pool_kwargs_none	(	self	)	:	\\n	    	p	=	PoolManager	(	strict	=	True	)	\\n	/;"	f
test_merge_rings_permutations	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_merge_rings_permutations	(	)	:	\\n	    	for	i	in	range	(	16	)	:	\\n	        	f1	=/;"	f
test_merge_rings_permutations	data/data_raw/valid.py	/^utf-8	def	test_merge_rings_permutations	(	)	:	\\n	    	for	i	in	range	(	16	)	:	\\n	        	f1	=/;"	f
test_merge_same	data/bpe_corpus_raw/train.py	/^utf-8	def	test_merge_same	(	self	)	:	\\n	    	self	.	hod	=	HierarchicalOrderedDict	(	)	\\n	self	/;"	f
test_merge_same	data/data_raw/train.py	/^utf-8	def	test_merge_same	(	self	)	:	\\n	    	self	.	hod	=	HierarchicalOrderedDict	(	)	\\n	self	/;"	f
test_message	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_message	(	self	)	:	\\n	    	event	=	self	.	forwardAndVerify	(	dict	(	)	)	\\n	self/;"	f
test_message	data/data_raw/valid.py	/^utf-8	def	test_message	(	self	)	:	\\n	    	event	=	self	.	forwardAndVerify	(	dict	(	)	)	\\n	self/;"	f
test_metamodel_provider_advanced_test3_inheritance2	data/bpe_corpus_raw/train.py	/^utf-8	def	test_metamodel_provider_advanced_test3_inheritance2	(	)	:	\\n	    	this_folder	=	dirna/;"	f
test_metamodel_provider_advanced_test3_inheritance2	data/data_raw/train.py	/^utf-8	def	test_metamodel_provider_advanced_test3_inheritance2	(	)	:	\\n	    	this_folder	=	dirna/;"	f
test_method_reference_from_array_type	data/bpe_corpus_raw/train.py	/^utf-8	@	unittest	.	expectedFailure	\\n	def	test_method_reference_from_array_type	(	self	)	:	\\n	/;"	f
test_method_reference_from_array_type	data/data_raw/train.py	/^utf-8	@	unittest	.	expectedFailure	\\n	def	test_method_reference_from_array_type	(	self	)	:	\\n	/;"	f
test_migrate_with_one_cert	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_migrate_with_one_cert	(	self	)	:	\\n	    	importers	=	[	{	'repo_id'	:	'repo_1'	,	/;"	f
test_migrate_with_one_cert	data/data_raw/valid.py	/^utf-8	def	test_migrate_with_one_cert	(	self	)	:	\\n	    	importers	=	[	{	'repo_id'	:	'repo_1'	,	/;"	f
test_mime_meta_characters_in_from_header	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_mime_meta_characters_in_from_header	(	self	)	:	\\n	    	self	.	env	.	config	.	set/;"	f
test_mime_meta_characters_in_from_header	data/data_raw/valid.py	/^utf-8	def	test_mime_meta_characters_in_from_header	(	self	)	:	\\n	    	self	.	env	.	config	.	set/;"	f
test_min_token_len_not_set	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_min_token_len_not_set	(	self	)	:	\\n	    	corpus	=	self	.	corpus_class	(	self	.	e/;"	f
test_min_token_len_not_set	data/data_raw/valid.py	/^utf-8	def	test_min_token_len_not_set	(	self	)	:	\\n	    	corpus	=	self	.	corpus_class	(	self	.	e/;"	f
test_missing_attributes	data/bpe_corpus_raw/test.py	/^utf-8	def	test_missing_attributes	(	self	,	device	,	circuit	,	bgp	)	:	\\n	    	with	pytest	.	rai/;"	f
test_missing_attributes	data/data_raw/test.py	/^utf-8	def	test_missing_attributes	(	self	,	device	,	circuit	,	bgp	)	:	\\n	    	with	pytest	.	rai/;"	f
test_mocked_source_ok	data/bpe_corpus_raw/train.py	/^utf-8	@	patch	.	object	(	lyrics	.	Backend	,	'fetch_url'	,	MockFetchUrl	(	)	)	\\n	def	test_mocked/;"	f
test_mocked_source_ok	data/data_raw/train.py	/^utf-8	@	patch	.	object	(	lyrics	.	Backend	,	'fetch_url'	,	MockFetchUrl	(	)	)	\\n	def	test_mocked/;"	f
test_msg_parse	data/bpe_corpus_raw/train.py	/^utf-8	def	test_msg_parse	(	)	:	\\n	    	multibit	=	"""\\n\\n-----BEGIN BITCOIN SIGNED MESSAGE---/;"	f
test_msg_parse	data/data_raw/train.py	/^utf-8	def	test_msg_parse	(	)	:	\\n	    	multibit	=	"""\\n\\n-----BEGIN BITCOIN SIGNED MESSAGE---/;"	f
test_multi_word_object_with_ca	data/bpe_corpus_raw/train.py	/^utf-8	def	test_multi_word_object_with_ca	(	self	)	:	\\n	    	filename	=	'multi_word_object_custo/;"	f
test_multi_word_object_with_ca	data/data_raw/train.py	/^utf-8	def	test_multi_word_object_with_ca	(	self	)	:	\\n	    	filename	=	'multi_word_object_custo/;"	f
test_multiple_builders_and_platform_specifiers	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_multiple_builders_and_platform_specifiers	(	self	)	:	\\n	    	test_expectations_b/;"	f
test_multiple_builders_and_platform_specifiers	data/data_raw/valid.py	/^utf-8	def	test_multiple_builders_and_platform_specifiers	(	self	)	:	\\n	    	test_expectations_b/;"	f
test_multiple_calls	data/bpe_corpus_raw/valid.py	/^utf-8	@	unittest	.	skipUnless	(	Image	,	'PIL not installed'	)	\\n	def	test_multiple_calls	(	self/;"	f
test_multiple_calls	data/data_raw/valid.py	/^utf-8	@	unittest	.	skipUnless	(	Image	,	'PIL not installed'	)	\\n	def	test_multiple_calls	(	self/;"	f
test_multiply	data/bpe_corpus_raw/train.py	/^utf-8	def	test_multiply	(	ctx_factory	)	:	\\n	    	context	=	ctx_factory	(	)	\\n	queue	=	cl	.	Co/;"	f
test_multiply	data/data_raw/train.py	/^utf-8	def	test_multiply	(	ctx_factory	)	:	\\n	    	context	=	ctx_factory	(	)	\\n	queue	=	cl	.	Co/;"	f
test_n_dimensional_cartesian_to_cylindrical	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_n_dimensional_cartesian_to_cylindrical	(	self	)	:	\\n	    	a_i	=	np	.	array	(	[	3/;"	f
test_n_dimensional_cartesian_to_cylindrical	data/data_raw/valid.py	/^utf-8	def	test_n_dimensional_cartesian_to_cylindrical	(	self	)	:	\\n	    	a_i	=	np	.	array	(	[	3/;"	f
test_name_query	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_name_query	(	self	)	:	\\n	    	fileA	=	DispatchTestHelpers	.	upload_file	(	self	./;"	f
test_name_query	data/data_raw/valid.py	/^utf-8	def	test_name_query	(	self	)	:	\\n	    	fileA	=	DispatchTestHelpers	.	upload_file	(	self	./;"	f
test_name_validator_direction_constructor_gives_correct_object	data/bpe_corpus_raw/train.py	/^utf-8	def	test_name_validator_direction_constructor_gives_correct_object	(	self	)	:	\\n	    	nam/;"	f
test_name_validator_direction_constructor_gives_correct_object	data/data_raw/train.py	/^utf-8	def	test_name_validator_direction_constructor_gives_correct_object	(	self	)	:	\\n	    	nam/;"	f
test_names	data/bpe_corpus_raw/test.py	/^utf-8	def	test_names	(	self	)	:	\\n	    	with	self	.	_lock	:	\\n	        	return	list	(	t	.	test/;"	f
test_names	data/data_raw/test.py	/^utf-8	def	test_names	(	self	)	:	\\n	    	with	self	.	_lock	:	\\n	        	return	list	(	t	.	test/;"	f
test_nan_inf_float	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_nan_inf_float	(	)	:	\\n	    	for	t	in	[	np	.	float32	,	np	.	double	,	np	.	longdou/;"	f
test_nan_inf_float	data/data_raw/valid.py	/^utf-8	def	test_nan_inf_float	(	)	:	\\n	    	for	t	in	[	np	.	float32	,	np	.	double	,	np	.	longdou/;"	f
test_nb3	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_nb3	(	self	)	:	\\n	    	with	self	.	fopen	(	'test3.ipynb'	,	'r'	)	as	f	:	\\n	    /;"	f
test_nb3	data/data_raw/valid.py	/^utf-8	def	test_nb3	(	self	)	:	\\n	    	with	self	.	fopen	(	'test3.ipynb'	,	'r'	)	as	f	:	\\n	    /;"	f
test_needs_update_legacy_last_update_check	data/bpe_corpus_raw/valid.py	/^utf-8	@	mock	.	patch	(	'os.path.exists'	,	mock	.	Mock	(	return_value	=	True	)	)	\\n	@	mock	.	pat/;"	f
test_needs_update_legacy_last_update_check	data/data_raw/valid.py	/^utf-8	@	mock	.	patch	(	'os.path.exists'	,	mock	.	Mock	(	return_value	=	True	)	)	\\n	@	mock	.	pat/;"	f
test_negative_exp_id	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_negative_exp_id	(	self	)	:	\\n	    	self	.	assertRaises	(	GeneratorInputError	,	g/;"	f
test_negative_exp_id	data/data_raw/valid.py	/^utf-8	def	test_negative_exp_id	(	self	)	:	\\n	    	self	.	assertRaises	(	GeneratorInputError	,	g/;"	f
test_nested_multipart	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_nested_multipart	(	self	)	:	\\n	    	msg	=	MIMEMultipart	(	'alternative'	)	\\n	se/;"	f
test_nested_multipart	data/data_raw/valid.py	/^utf-8	def	test_nested_multipart	(	self	)	:	\\n	    	msg	=	MIMEMultipart	(	'alternative'	)	\\n	se/;"	f
test_nested_sequence	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_nested_sequence	(	)	:	\\n	\\n	\\n	    	@	attr	.	s	\\n	class	WrappedIntent	(	objec/;"	f
test_nested_sequence	data/data_raw/valid.py	/^utf-8	def	test_nested_sequence	(	)	:	\\n	\\n	\\n	    	@	attr	.	s	\\n	class	WrappedIntent	(	objec/;"	f
test_newest_revision_is_not_spam	data/bpe_corpus_raw/train.py	/^utf-8	def	test_newest_revision_is_not_spam	(	self	)	:	\\n	    	spam_revisions	=	self	.	create_re/;"	f
test_newest_revision_is_not_spam	data/data_raw/train.py	/^utf-8	def	test_newest_revision_is_not_spam	(	self	)	:	\\n	    	spam_revisions	=	self	.	create_re/;"	f
test_noMessageValidStatusNoLocation	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_noMessageValidStatusNoLocation	(	self	)	:	\\n	    	e	=	error	.	PageRedirect	(	'20/;"	f
test_noMessageValidStatusNoLocation	data/data_raw/valid.py	/^utf-8	def	test_noMessageValidStatusNoLocation	(	self	)	:	\\n	    	e	=	error	.	PageRedirect	(	'20/;"	f
test_noOptions	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_noOptions	(	self	)	:	\\n	    	ValidationOnlyLauncher	(	)	.	Run	(	)	\\n		$/;"	f
test_noOptions	data/data_raw/valid.py	/^utf-8	def	test_noOptions	(	self	)	:	\\n	    	ValidationOnlyLauncher	(	)	.	Run	(	)	\\n		$/;"	f
test_no_config	data/bpe_corpus_raw/train.py	/^utf-8	def	test_no_config	(	self	)	:	\\n	    	self	.	setup_helper	(	config	=	False	)	\\n	plugin	=/;"	f
test_no_config	data/data_raw/train.py	/^utf-8	def	test_no_config	(	self	)	:	\\n	    	self	.	setup_helper	(	config	=	False	)	\\n	plugin	=/;"	f
test_no_double_slash_url_encoding	data/bpe_corpus_raw/train.py	/^utf-8	def	test_no_double_slash_url_encoding	(	self	)	:	\\n	    	input_map	=	{	'test'	:	'test\/te/;"	f
test_no_double_slash_url_encoding	data/data_raw/train.py	/^utf-8	def	test_no_double_slash_url_encoding	(	self	)	:	\\n	    	input_map	=	{	'test'	:	'test\/te/;"	f
test_no_dunder_path_fallback_to_dunder_file	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_no_dunder_path_fallback_to_dunder_file	(	self	)	:	\\n	    	ac	=	AppConfig	(	'labe/;"	f
test_no_dunder_path_fallback_to_dunder_file	data/data_raw/valid.py	/^utf-8	def	test_no_dunder_path_fallback_to_dunder_file	(	self	)	:	\\n	    	ac	=	AppConfig	(	'labe/;"	f
test_no_future_duplicate_migration_numbers	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_no_future_duplicate_migration_numbers	(	self	)	:	\\n	    	path	=	os	.	path	.	dirn/;"	f
test_no_future_duplicate_migration_numbers	data/data_raw/valid.py	/^utf-8	def	test_no_future_duplicate_migration_numbers	(	self	)	:	\\n	    	path	=	os	.	path	.	dirn/;"	f
test_no_hist_matplotlib_version	data/bpe_corpus_raw/train.py	/^utf-8	@	pytest	.	mark	.	skipif	(	MPL_VERS_MAJ	>=	2	,	reason	=	\\n	'test requires mpl earlier tha/;"	f
test_no_hist_matplotlib_version	data/data_raw/train.py	/^utf-8	@	pytest	.	mark	.	skipif	(	MPL_VERS_MAJ	>=	2	,	reason	=	\\n	'test requires mpl earlier tha/;"	f
test_no_such_collectable	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_no_such_collectable	(	self	)	:	\\n	    	log	=	logging	.	getLogger	(	'test_no_such/;"	f
test_no_such_collectable	data/data_raw/valid.py	/^utf-8	def	test_no_such_collectable	(	self	)	:	\\n	    	log	=	logging	.	getLogger	(	'test_no_such/;"	f
test_no_trusted_proxy_lock	data/bpe_corpus_raw/train.py	/^utf-8	@	patch	(	'lockdown.tests.tests.middleware.settings.REMOTE_ADDR_EXCEPTIONS'	,	[	\\n	'192.1/;"	f
test_no_trusted_proxy_lock	data/data_raw/train.py	/^utf-8	@	patch	(	'lockdown.tests.tests.middleware.settings.REMOTE_ADDR_EXCEPTIONS'	,	[	\\n	'192.1/;"	f
test_not_equal_on_not_equal_derivation_parameters	data/bpe_corpus_raw/train.py	/^utf-8	def	test_not_equal_on_not_equal_derivation_parameters	(	self	)	:	\\n	    	a	=	payloads	.	D/;"	f
test_not_equal_on_not_equal_derivation_parameters	data/data_raw/train.py	/^utf-8	def	test_not_equal_on_not_equal_derivation_parameters	(	self	)	:	\\n	    	a	=	payloads	.	D/;"	f
test_not_wraps_links	data/bpe_corpus_raw/valid.py	/^utf-8	@	ddt	.	data	(	'<a href="https:\/\/www.google.com\/">https:\/\/www.google.com\/<\/a>'	,	\\/;"	f
test_not_wraps_links	data/data_raw/valid.py	/^utf-8	@	ddt	.	data	(	'<a href="https:\/\/www.google.com\/">https:\/\/www.google.com\/<\/a>'	,	\\/;"	f
test_null_byte_in_filename	data/bpe_corpus_raw/test.py	/^utf-8	def	test_null_byte_in_filename	(	self	)	:	\\n	    	with	zipfile	.	ZipFile	(	TESTFN	,	mode	/;"	f
test_null_byte_in_filename	data/data_raw/test.py	/^utf-8	def	test_null_byte_in_filename	(	self	)	:	\\n	    	with	zipfile	.	ZipFile	(	TESTFN	,	mode	/;"	f
test_ordering_override	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_ordering_override	(	self	)	:	\\n	    	self	.	assertFileContains	(	'file2.txt'	,	'/;"	f
test_ordering_override	data/data_raw/valid.py	/^utf-8	def	test_ordering_override	(	self	)	:	\\n	    	self	.	assertFileContains	(	'file2.txt'	,	'/;"	f
test_organization_list_in_presence_of_groups	data/bpe_corpus_raw/train.py	/^utf-8	def	test_organization_list_in_presence_of_groups	(	self	)	:	\\n	    	org1	=	factories	.	Or/;"	f
test_organization_list_in_presence_of_groups	data/data_raw/train.py	/^utf-8	def	test_organization_list_in_presence_of_groups	(	self	)	:	\\n	    	org1	=	factories	.	Or/;"	f
test_outcome_service_registered	data/bpe_corpus_raw/valid.py	/^utf-8	@	patch	(	'lti_provider.views.render_courseware'	)	\\n	@	patch	(	'lti_provider.views.store/;"	f
test_outcome_service_registered	data/data_raw/valid.py	/^utf-8	@	patch	(	'lti_provider.views.render_courseware'	)	\\n	@	patch	(	'lti_provider.views.store/;"	f
test_override_def	data/bpe_corpus_raw/test.py	/^utf-8	def	test_override_def	(	self	)	:	\\n	    	menu_on	(	self	.	source_page	(	'extern.c'	)	,	'v/;"	f
test_override_def	data/data_raw/test.py	/^utf-8	def	test_override_def	(	self	)	:	\\n	    	menu_on	(	self	.	source_page	(	'extern.c'	)	,	'v/;"	f
test_override_parametrized_fixture_conftest_conftest	data/bpe_corpus_raw/test.py	/^utf-8	def	test_override_parametrized_fixture_conftest_conftest	(	self	,	testdir	)	:	\\n	    	tes/;"	f
test_override_parametrized_fixture_conftest_conftest	data/data_raw/test.py	/^utf-8	def	test_override_parametrized_fixture_conftest_conftest	(	self	,	testdir	)	:	\\n	    	tes/;"	f
test_owner_is_self_no_state_change_and_multiple_operations	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_owner_is_self_no_state_change_and_multiple_operations	(	self	)	:	\\n	    	ticket	/;"	f
test_owner_is_self_no_state_change_and_multiple_operations	data/data_raw/valid.py	/^utf-8	def	test_owner_is_self_no_state_change_and_multiple_operations	(	self	)	:	\\n	    	ticket	/;"	f
test_package_search_with_include_drafts_option_includes_drafts_for_user	data/bpe_corpus_raw/train.py	/^utf-8	def	test_package_search_with_include_drafts_option_includes_drafts_for_user	(	\\n	self	)	:/;"	f
test_package_search_with_include_drafts_option_includes_drafts_for_user	data/data_raw/train.py	/^utf-8	def	test_package_search_with_include_drafts_option_includes_drafts_for_user	(	\\n	self	)	:/;"	f
test_parse_invalid	data/bpe_corpus_raw/train.py	/^utf-8	def	test_parse_invalid	(	self	,	data_class	)	:	\\n	    	with	pytest	.	raises	(	TLSValidati/;"	f
test_parse_invalid	data/data_raw/train.py	/^utf-8	def	test_parse_invalid	(	self	,	data_class	)	:	\\n	    	with	pytest	.	raises	(	TLSValidati/;"	f
test_parse_literal_http_header	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_parse_literal_http_header	(	self	)	:	\\n	    	g	=	get_language_from_request	\\n	r/;"	f
test_parse_literal_http_header	data/data_raw/valid.py	/^utf-8	def	test_parse_literal_http_header	(	self	)	:	\\n	    	g	=	get_language_from_request	\\n	r/;"	f
test_parse_test	data/bpe_corpus_raw/train.py	/^utf-8	def	test_parse_test	(	self	)	:	\\n	    	myinput	=	{	'url'	:	'\/ping'	,	'method'	:	'DELETE'/;"	f
test_parse_test	data/data_raw/train.py	/^utf-8	def	test_parse_test	(	self	)	:	\\n	    	myinput	=	{	'url'	:	'\/ping'	,	'method'	:	'DELETE'/;"	f
test_passes_arguments	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_passes_arguments	(	self	)	:	\\n	    	ue	=	UnicodeEncoder	(	'latin1'	,	'xmlcharref/;"	f
test_passes_arguments	data/data_raw/valid.py	/^utf-8	def	test_passes_arguments	(	self	)	:	\\n	    	ue	=	UnicodeEncoder	(	'latin1'	,	'xmlcharref/;"	f
test_path_with_pserver_and_form_user_and_password	data/bpe_corpus_raw/train.py	/^utf-8	def	test_path_with_pserver_and_form_user_and_password	(	self	)	:	\\n	    	self	.	_test_bui/;"	f
test_path_with_pserver_and_form_user_and_password	data/data_raw/train.py	/^utf-8	def	test_path_with_pserver_and_form_user_and_password	(	self	)	:	\\n	    	self	.	_test_bui/;"	f
test_performRequestUsesFreeConnection	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_performRequestUsesFreeConnection	(	self	)	:	\\n	\\n	    	def	_checkResult	(	resul/;"	f
test_performRequestUsesFreeConnection	data/data_raw/valid.py	/^utf-8	def	test_performRequestUsesFreeConnection	(	self	)	:	\\n	\\n	    	def	_checkResult	(	resul/;"	f
test_performs_throttle	data/bpe_corpus_raw/train.py	/^utf-8	def	test_performs_throttle	(	self	)	:	\\n	    	dispatcher	=	get_cloud_client_dispatcher	(	/;"	f
test_performs_throttle	data/data_raw/train.py	/^utf-8	def	test_performs_throttle	(	self	)	:	\\n	    	dispatcher	=	get_cloud_client_dispatcher	(	/;"	f
test_permanent_watches	data/bpe_corpus_raw/valid.py	/^utf-8	@	mock	.	patch	(	'glob.glob'	)	\\n	@	mock	.	patch	(	'os.path.isdir'	)	\\n	@	mock	.	patch	(/;"	f
test_permanent_watches	data/data_raw/valid.py	/^utf-8	@	mock	.	patch	(	'glob.glob'	)	\\n	@	mock	.	patch	(	'os.path.isdir'	)	\\n	@	mock	.	patch	(/;"	f
test_permutation	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_permutation	(	self	)	:	\\n	    	random	=	RandomStreams	(	utt	.	fetch_seed	(	)	)	\\/;"	f
test_permutation	data/data_raw/valid.py	/^utf-8	def	test_permutation	(	self	)	:	\\n	    	random	=	RandomStreams	(	utt	.	fetch_seed	(	)	)	\\/;"	f
test_policy_dictionary_gets_linkified	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_policy_dictionary_gets_linkified	(	self	)	:	\\n	    	self	.	mock_group	.	list_pol/;"	f
test_policy_dictionary_gets_linkified	data/data_raw/valid.py	/^utf-8	def	test_policy_dictionary_gets_linkified	(	self	)	:	\\n	    	self	.	mock_group	.	list_pol/;"	f
test_poller_bad_node	data/bpe_corpus_raw/train.py	/^utf-8	def	test_poller_bad_node	(	self	)	:	\\n	    	polled_response	=	api_validate_node_pollers	(/;"	f
test_poller_bad_node	data/data_raw/train.py	/^utf-8	def	test_poller_bad_node	(	self	)	:	\\n	    	polled_response	=	api_validate_node_pollers	(/;"	f
test_post_install_messages_yarn	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_post_install_messages_yarn	(	self	)	:	\\n	    	self	.	_make_yarn	(	)	\\n	self	.	a/;"	f
test_post_install_messages_yarn	data/data_raw/valid.py	/^utf-8	def	test_post_install_messages_yarn	(	self	)	:	\\n	    	self	.	_make_yarn	(	)	\\n	self	.	a/;"	f
test_post_passing_oauth2_with_jwt_auth_priority	data/bpe_corpus_raw/valid.py	/^utf-8	@	unittest	.	skipUnless	(	oauth2_provider	,	DJANGO_OAUTH2_PROVIDER_NOT_INSTALLED	)	\\n	def/;"	f
test_post_passing_oauth2_with_jwt_auth_priority	data/data_raw/valid.py	/^utf-8	@	unittest	.	skipUnless	(	oauth2_provider	,	DJANGO_OAUTH2_PROVIDER_NOT_INSTALLED	)	\\n	def/;"	f
test_predicate_error	data/bpe_corpus_raw/train.py	/^utf-8	def	test_predicate_error	(	self	)	:	\\n	    	data	=	[	'10'	,	'20'	,	'XX'	,	40	]	\\n	differ/;"	f
test_predicate_error	data/data_raw/train.py	/^utf-8	def	test_predicate_error	(	self	)	:	\\n	    	data	=	[	'10'	,	'20'	,	'XX'	,	40	]	\\n	differ/;"	f
test_predict_is_intervals_mh	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_predict_is_intervals_mh	(	)	:	\\n	    	model	=	ARIMAX	(	formula	=	'y ~ x1'	,	data/;"	f
test_predict_is_intervals_mh	data/data_raw/valid.py	/^utf-8	def	test_predict_is_intervals_mh	(	)	:	\\n	    	model	=	ARIMAX	(	formula	=	'y ~ x1'	,	data/;"	f
test_prev_next_track	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_prev_next_track	(	self	)	:	\\n	    	assert	setup_component	(	self	.	hass	,	mp	.	D/;"	f
test_prev_next_track	data/data_raw/valid.py	/^utf-8	def	test_prev_next_track	(	self	)	:	\\n	    	assert	setup_component	(	self	.	hass	,	mp	.	D/;"	f
test_prod_without_zeros_default_acc_dtype	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_prod_without_zeros_default_acc_dtype	(	self	)	:	\\n	    	axes	=	[	None	,	0	,	1	,	/;"	f
test_prod_without_zeros_default_acc_dtype	data/data_raw/valid.py	/^utf-8	def	test_prod_without_zeros_default_acc_dtype	(	self	)	:	\\n	    	axes	=	[	None	,	0	,	1	,	/;"	f
test_producer_throughput	data/bpe_corpus_raw/valid.py	/^utf-8	@	cluster	(	num_nodes	=	5	)	\\n	@	parametrize	(	acks	=	1	,	topic	=	TOPIC_REP_ONE	)	\\n	@	p/;"	f
test_producer_throughput	data/data_raw/valid.py	/^utf-8	@	cluster	(	num_nodes	=	5	)	\\n	@	parametrize	(	acks	=	1	,	topic	=	TOPIC_REP_ONE	)	\\n	@	p/;"	f
test_profile_topics_invalid_slug	data/bpe_corpus_raw/train.py	/^utf-8	def	test_profile_topics_invalid_slug	(	self	)	:	\\n	    	utils	.	login	(	self	)	\\n	respon/;"	f
test_profile_topics_invalid_slug	data/data_raw/train.py	/^utf-8	def	test_profile_topics_invalid_slug	(	self	)	:	\\n	    	utils	.	login	(	self	)	\\n	respon/;"	f
test_protons	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_protons	(	self	)	:	\\n	    	with	pytest	.	warns	(	exceptions	.	PhysicsWarning	,	m/;"	f
test_protons	data/data_raw/valid.py	/^utf-8	def	test_protons	(	self	)	:	\\n	    	with	pytest	.	warns	(	exceptions	.	PhysicsWarning	,	m/;"	f
test_proxy_skip	data/bpe_corpus_raw/valid.py	/^utf-8	@	attr	(	requires	=	'core_integration'	)	\\n	def	test_proxy_skip	(	self	)	:	\\n	    	proxi/;"	f
test_proxy_skip	data/data_raw/valid.py	/^utf-8	@	attr	(	requires	=	'core_integration'	)	\\n	def	test_proxy_skip	(	self	)	:	\\n	    	proxi/;"	f
test_psconvert_int_options	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_psconvert_int_options	(	)	:	\\n	    	fig	=	Figure	(	)	\\n	fig	.	basemap	(	R	=	'10/;"	f
test_psconvert_int_options	data/data_raw/valid.py	/^utf-8	def	test_psconvert_int_options	(	)	:	\\n	    	fig	=	Figure	(	)	\\n	fig	.	basemap	(	R	=	'10/;"	f
test_pseudo_empty_fixtures	data/bpe_corpus_raw/train.py	/^utf-8	def	test_pseudo_empty_fixtures	(	self	)	:	\\n	    	new_io	=	StringIO	(	)	\\n	management	.	/;"	f
test_pseudo_empty_fixtures	data/data_raw/train.py	/^utf-8	def	test_pseudo_empty_fixtures	(	self	)	:	\\n	    	new_io	=	StringIO	(	)	\\n	management	.	/;"	f
test_publicize_image_unauthorized	data/bpe_corpus_raw/train.py	/^utf-8	def	test_publicize_image_unauthorized	(	self	)	:	\\n	    	rules	=	{	'add_image'	:	'@'	,	'p/;"	f
test_publicize_image_unauthorized	data/data_raw/train.py	/^utf-8	def	test_publicize_image_unauthorized	(	self	)	:	\\n	    	rules	=	{	'add_image'	:	'@'	,	'p/;"	f
test_pull	data/bpe_corpus_raw/valid.py	/^utf-8	@	mock	.	patch	(	'kazoo.client.KazooClient.exists'	,	mock	.	Mock	(	set_spec	=	True	)	)	\\n/;"	f
test_pull	data/data_raw/valid.py	/^utf-8	@	mock	.	patch	(	'kazoo.client.KazooClient.exists'	,	mock	.	Mock	(	set_spec	=	True	)	)	\\n/;"	f
test_pull_manifest_changes_when_syncing	data/bpe_corpus_raw/train.py	/^utf-8	def	test_pull_manifest_changes_when_syncing	(	git_worktree	,	git_server	)	:	\\n	    	manif/;"	f
test_pull_manifest_changes_when_syncing	data/data_raw/train.py	/^utf-8	def	test_pull_manifest_changes_when_syncing	(	git_worktree	,	git_server	)	:	\\n	    	manif/;"	f
test_put_finalize_invalid_validation_info_json_format	data/bpe_corpus_raw/train.py	/^utf-8	@	webapi_test_template	\\n	def	test_put_finalize_invalid_validation_info_json_format	(	sel/;"	f
test_put_finalize_invalid_validation_info_json_format	data/data_raw/train.py	/^utf-8	@	webapi_test_template	\\n	def	test_put_finalize_invalid_validation_info_json_format	(	sel/;"	f
test_pypandoc_formatting_examples	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_pypandoc_formatting_examples	(	self	)	:	\\n	    	org_example	=	"""* Basic tests\\/;"	f
test_pypandoc_formatting_examples	data/data_raw/valid.py	/^utf-8	def	test_pypandoc_formatting_examples	(	self	)	:	\\n	    	org_example	=	"""* Basic tests\\/;"	f
test_python_lines	data_utils/data_to_text.py	/^test_python_lines = tokenized_python[val_end:]$/;"	v
test_python_module_is_importable	data/bpe_corpus_raw/train.py	/^utf-8	@	unittest	.	skip	(	'Need third party module override'	)	\\n	def	test_python_module_is_imp/;"	f
test_python_module_is_importable	data/data_raw/train.py	/^utf-8	@	unittest	.	skip	(	'Need third party module override'	)	\\n	def	test_python_module_is_imp/;"	f
test_queries_content_type_restriction	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_queries_content_type_restriction	(	self	)	:	\\n	    	mpk	=	ManualPK	.	objects	.	c/;"	f
test_queries_content_type_restriction	data/data_raw/valid.py	/^utf-8	def	test_queries_content_type_restriction	(	self	)	:	\\n	    	mpk	=	ManualPK	.	objects	.	c/;"	f
test_queue_system_exec_from_queue_while_system_exec_is_running	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_queue_system_exec_from_queue_while_system_exec_is_running	(	self	)	:	\\n	    	sna/;"	f
test_queue_system_exec_from_queue_while_system_exec_is_running	data/data_raw/valid.py	/^utf-8	def	test_queue_system_exec_from_queue_while_system_exec_is_running	(	self	)	:	\\n	    	sna/;"	f
test_read	data/bpe_corpus_raw/train.py	/^utf-8	@	patch	(	'collectd_rabbitmq.rabbit.urllib2.urlopen'	)	\\n	def	test_read	(	self	,	mock_url/;"	f
test_read	data/data_raw/train.py	/^utf-8	@	patch	(	'collectd_rabbitmq.rabbit.urllib2.urlopen'	)	\\n	def	test_read	(	self	,	mock_url/;"	f
test_read_empty_cookies	data/bpe_corpus_raw/train.py	/^utf-8	def	test_read_empty_cookies	(	test_session	,	agent_status_in_discussion_2	)	:	\\n	    	ass/;"	f
test_read_empty_cookies	data/data_raw/train.py	/^utf-8	def	test_read_empty_cookies	(	test_session	,	agent_status_in_discussion_2	)	:	\\n	    	ass/;"	f
test_readall	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_readall	(	self	)	:	\\n	    	self	.	_test_reading	(	data_to_write	=	b'hello\\\\nwo/;"	f
test_readall	data/data_raw/valid.py	/^utf-8	def	test_readall	(	self	)	:	\\n	    	self	.	_test_reading	(	data_to_write	=	b'hello\\\\nwo/;"	f
test_reading_creation	data/bpe_corpus_raw/train.py	/^utf-8	def	test_reading_creation	(	self	)	:	\\n	    	self	.	assertFalse	(	DsmrReading	.	objects	./;"	f
test_reading_creation	data/data_raw/train.py	/^utf-8	def	test_reading_creation	(	self	)	:	\\n	    	self	.	assertFalse	(	DsmrReading	.	objects	./;"	f
test_real_xhtml_document	data/bpe_corpus_raw/train.py	/^utf-8	def	test_real_xhtml_document	(	self	)	:	\\n	    	markup	=	(	\\n	b'<?xml version="1.0" enco/;"	f
test_real_xhtml_document	data/data_raw/train.py	/^utf-8	def	test_real_xhtml_document	(	self	)	:	\\n	    	markup	=	(	\\n	b'<?xml version="1.0" enco/;"	f
test_rect	data/bpe_corpus_raw/train.py	/^utf-8	def	test_rect	(	self	)	:	\\n	    	n3x3	=	coord_net_spec	(	ks	=	3	,	stride	=	1	,	pad	=	0	)	/;"	f
test_rect	data/data_raw/train.py	/^utf-8	def	test_rect	(	self	)	:	\\n	    	n3x3	=	coord_net_spec	(	ks	=	3	,	stride	=	1	,	pad	=	0	)	/;"	f
test_recursive_embedding	data/bpe_corpus_raw/train.py	/^utf-8	def	test_recursive_embedding	(	self	)	:	\\n	\\n	\\n	    	class	TreeNode	(	EmbeddedDocument/;"	f
test_recursive_embedding	data/data_raw/train.py	/^utf-8	def	test_recursive_embedding	(	self	)	:	\\n	\\n	\\n	    	class	TreeNode	(	EmbeddedDocument/;"	f
test_redefinedClassFunction	data/bpe_corpus_raw/train.py	/^utf-8	def	test_redefinedClassFunction	(	self	)	:	\\n	    	self	.	flakes	(	\\n	"""\\n        clas/;"	f
test_redefinedClassFunction	data/data_raw/train.py	/^utf-8	def	test_redefinedClassFunction	(	self	)	:	\\n	    	self	.	flakes	(	\\n	"""\\n        clas/;"	f
test_reflect_select	data/bpe_corpus_raw/test.py	/^utf-8	@	with_engine_connection	\\n	def	test_reflect_select	(	self	,	engine	,	connection	)	:	\\n	/;"	f
test_reflect_select	data/data_raw/test.py	/^utf-8	@	with_engine_connection	\\n	def	test_reflect_select	(	self	,	engine	,	connection	)	:	\\n	/;"	f
test_register_channel_without_route	data/bpe_corpus_raw/train.py	/^utf-8	def	test_register_channel_without_route	(	)	:	\\n	    	from	rasa	.	core	.	channels	import	/;"	f
test_register_channel_without_route	data/data_raw/train.py	/^utf-8	def	test_register_channel_without_route	(	)	:	\\n	    	from	rasa	.	core	.	channels	import	/;"	f
test_regression_8106	data/bpe_corpus_raw/test.py	/^utf-8	def	test_regression_8106	(	self	)	:	\\n	    	us	=	TUser	.	objects	.	create	(	name	=	'std'	/;"	f
test_regression_8106	data/data_raw/test.py	/^utf-8	def	test_regression_8106	(	self	)	:	\\n	    	us	=	TUser	.	objects	.	create	(	name	=	'std'	/;"	f
test_regular_graph	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_regular_graph	(	self	)	:	\\n	    	generator	=	graph_util	(	)	\\n	num_experiments	/;"	f
test_regular_graph	data/data_raw/valid.py	/^utf-8	def	test_regular_graph	(	self	)	:	\\n	    	generator	=	graph_util	(	)	\\n	num_experiments	/;"	f
test_remove_person_and_fail_publish	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_remove_person_and_fail_publish	(	self	)	:	\\n	    	self	.	test_add_person	(	)	\\n/;"	f
test_remove_person_and_fail_publish	data/data_raw/valid.py	/^utf-8	def	test_remove_person_and_fail_publish	(	self	)	:	\\n	    	self	.	test_add_person	(	)	\\n/;"	f
test_render_anonymous	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_render_anonymous	(	self	)	:	\\n	    	user	=	User	.	objects	.	get	(	username	=	'gr/;"	f
test_render_anonymous	data/data_raw/valid.py	/^utf-8	def	test_render_anonymous	(	self	)	:	\\n	    	user	=	User	.	objects	.	get	(	username	=	'gr/;"	f
test_repr	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_repr	(	self	)	:	\\n	    	actual	=	repr	(	self	.	coll	)	\\n	self	.	assertIn	(	'Sor/;"	f
test_repr	data/data_raw/valid.py	/^utf-8	def	test_repr	(	self	)	:	\\n	    	actual	=	repr	(	self	.	coll	)	\\n	self	.	assertIn	(	'Sor/;"	f
test_requires_guest	data/bpe_corpus_raw/test.py	/^utf-8	def	test_requires_guest	(	monkeypatch	)	:	\\n	\\n	    	@	staticmethod	\\n	def	mock_gcs	(	)/;"	f
test_requires_guest	data/data_raw/test.py	/^utf-8	def	test_requires_guest	(	monkeypatch	)	:	\\n	\\n	    	@	staticmethod	\\n	def	mock_gcs	(	)/;"	f
test_retrieve	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_retrieve	(	self	)	:	\\n	    	self	.	check_method	(	'retrieve'	,	'primary key'	,	'/;"	f
test_retrieve	data/data_raw/valid.py	/^utf-8	def	test_retrieve	(	self	)	:	\\n	    	self	.	check_method	(	'retrieve'	,	'primary key'	,	'/;"	f
test_retrieve_issue_from_content_fails	data/bpe_corpus_raw/train.py	/^utf-8	def	test_retrieve_issue_from_content_fails	(	self	)	:	\\n	    	self	.	instance	.	content_u/;"	f
test_retrieve_issue_from_content_fails	data/data_raw/train.py	/^utf-8	def	test_retrieve_issue_from_content_fails	(	self	)	:	\\n	    	self	.	instance	.	content_u/;"	f
test_return_class_content_by_accepts	data/bpe_corpus_raw/train.py	/^utf-8	@	route	(	'\/return\/by\/accept\/class'	)	\\n	def	test_return_class_content_by_accepts	(	s/;"	f
test_return_class_content_by_accepts	data/data_raw/train.py	/^utf-8	@	route	(	'\/return\/by\/accept\/class'	)	\\n	def	test_return_class_content_by_accepts	(	s/;"	f
test_return_serialized_api_response	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_return_serialized_api_response	(	self	)	:	\\n	    	self	.	lifo_buffer	.	clean	(	)/;"	f
test_return_serialized_api_response	data/data_raw/valid.py	/^utf-8	def	test_return_serialized_api_response	(	self	)	:	\\n	    	self	.	lifo_buffer	.	clean	(	)/;"	f
test_reviewable_attributes	data/bpe_corpus_raw/train.py	/^utf-8	@	ddt	.	data	(	(	all_models	.	Review	.	NotificationTypes	.	EMAIL_TYPE	,	1	)	,	(	all_models/;"	f
test_reviewable_attributes	data/data_raw/train.py	/^utf-8	@	ddt	.	data	(	(	all_models	.	Review	.	NotificationTypes	.	EMAIL_TYPE	,	1	)	,	(	all_models/;"	f
test_rfc2822_date_with_timezone	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_rfc2822_date_with_timezone	(	self	)	:	\\n	    	self	.	assertEqual	(	feedgenerator/;"	f
test_rfc2822_date_with_timezone	data/data_raw/valid.py	/^utf-8	def	test_rfc2822_date_with_timezone	(	self	)	:	\\n	    	self	.	assertEqual	(	feedgenerator/;"	f
test_rsa_private_key_has_correct_repr	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_rsa_private_key_has_correct_repr	(	self	)	:	\\n	    	key	=	pem	.	RSAPrivateKey	(	/;"	f
test_rsa_private_key_has_correct_repr	data/data_raw/valid.py	/^utf-8	def	test_rsa_private_key_has_correct_repr	(	self	)	:	\\n	    	key	=	pem	.	RSAPrivateKey	(	/;"	f
test_saml_validation_view_invalid_ticket	data/bpe_corpus_raw/train.py	/^utf-8	def	test_saml_validation_view_invalid_ticket	(	self	)	:	\\n	    	temp_st	=	ServiceTicketFa/;"	f
test_saml_validation_view_invalid_ticket	data/data_raw/train.py	/^utf-8	def	test_saml_validation_view_invalid_ticket	(	self	)	:	\\n	    	temp_st	=	ServiceTicketFa/;"	f
test_sane_args1	data/bpe_corpus_raw/test.py	/^utf-8	def	test_sane_args1	(	self	)	:	\\n	    	cmd	=	Command	(	)	\\n	cmd	.	init_args	(	[	'--cente/;"	f
test_sane_args1	data/data_raw/test.py	/^utf-8	def	test_sane_args1	(	self	)	:	\\n	    	cmd	=	Command	(	)	\\n	cmd	.	init_args	(	[	'--cente/;"	f
test_sanity_pass_with_non_declarative_objects	data/bpe_corpus_raw/train.py	/^utf-8	def	test_sanity_pass_with_non_declarative_objects	(	ini_settings	,	dbsession	)	:	\\n	    	/;"	f
test_sanity_pass_with_non_declarative_objects	data/data_raw/train.py	/^utf-8	def	test_sanity_pass_with_non_declarative_objects	(	ini_settings	,	dbsession	)	:	\\n	    	/;"	f
test_save_only_saves_projects	data/bpe_corpus_raw/train.py	/^utf-8	@	with_context	\\n	def	test_save_only_saves_projects	(	self	)	:	\\n	    	bad_object	=	dict/;"	f
test_save_only_saves_projects	data/data_raw/train.py	/^utf-8	@	with_context	\\n	def	test_save_only_saves_projects	(	self	)	:	\\n	    	bad_object	=	dict/;"	f
test_say	data/bpe_corpus_raw/test.py	/^utf-8	def	test_say	(	self	)	:	\\n	    	self	.	client	.	say	(	'thechannel'	,	'the message'	)	\\n	/;"	f
test_say	data/data_raw/test.py	/^utf-8	def	test_say	(	self	)	:	\\n	    	self	.	client	.	say	(	'thechannel'	,	'the message'	)	\\n	/;"	f
test_scan_chan_switch	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_scan_chan_switch	(	dev	,	apdev	)	:	\\n	    	csa_supported	(	dev	[	0	]	)	\\n	hapd	/;"	f
test_scan_chan_switch	data/data_raw/valid.py	/^utf-8	def	test_scan_chan_switch	(	dev	,	apdev	)	:	\\n	    	csa_supported	(	dev	[	0	]	)	\\n	hapd	/;"	f
test_search	data/bpe_corpus_raw/train.py	/^utf-8	@	requires_network	\\n	def	test_search	(	self	)	:	\\n	    	output	=	self	.	run_command	(	'/;"	f
test_search	data/data_raw/train.py	/^utf-8	@	requires_network	\\n	def	test_search	(	self	)	:	\\n	    	output	=	self	.	run_command	(	'/;"	f
test_search_flag_in_blockette	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_search_flag_in_blockette	(	self	)	:	\\n	    	npts	=	2000	\\n	np	.	random	.	seed	(/;"	f
test_search_flag_in_blockette	data/data_raw/valid.py	/^utf-8	def	test_search_flag_in_blockette	(	self	)	:	\\n	    	npts	=	2000	\\n	np	.	random	.	seed	(/;"	f
test_search_rec_name_like	data/bpe_corpus_raw/valid.py	/^utf-8	@	with_transaction	(	)	\\n	def	test_search_rec_name_like	(	self	)	:	\\n	    	pool	=	Pool	(/;"	f
test_search_rec_name_like	data/data_raw/valid.py	/^utf-8	@	with_transaction	(	)	\\n	def	test_search_rec_name_like	(	self	)	:	\\n	    	pool	=	Pool	(/;"	f
test_sens	data/bpe_corpus_raw/train.py	/^utf-8	def	test_sens	(	self	)	:	\\n	    	assert	_parse_compressed	(	'sens(2, axis(ABS_X))'	)	.	st/;"	f
test_sens	data/data_raw/train.py	/^utf-8	def	test_sens	(	self	)	:	\\n	    	assert	_parse_compressed	(	'sens(2, axis(ABS_X))'	)	.	st/;"	f
test_sentences	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_sentences	(	)	:	\\n	    	language	=	factory	.	getlanguage	(	'ar'	)	\\n	sentences	/;"	f
test_sentences	data/data_raw/valid.py	/^utf-8	def	test_sentences	(	)	:	\\n	    	language	=	factory	.	getlanguage	(	'ar'	)	\\n	sentences	/;"	f
test_sequence_error	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_sequence_error	(	)	:	\\n	    	effs	=	[	Effect	(	'a'	)	,	Effect	(	Error	(	ZeroDivi/;"	f
test_sequence_error	data/data_raw/valid.py	/^utf-8	def	test_sequence_error	(	)	:	\\n	    	effs	=	[	Effect	(	'a'	)	,	Effect	(	Error	(	ZeroDivi/;"	f
test_sequence_length	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_sequence_length	(	all_terms	)	:	\\n	\\n	    	@	as_subprocess	\\n	def	child	(	kind/;"	f
test_sequence_length	data/data_raw/valid.py	/^utf-8	def	test_sequence_length	(	all_terms	)	:	\\n	\\n	    	@	as_subprocess	\\n	def	child	(	kind/;"	f
test_serialize_single_resource_with_only_id_field	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_serialize_single_resource_with_only_id_field	(	self	)	:	\\n	\\n	\\n	    	class	Us/;"	f
test_serialize_single_resource_with_only_id_field	data/data_raw/valid.py	/^utf-8	def	test_serialize_single_resource_with_only_id_field	(	self	)	:	\\n	\\n	\\n	    	class	Us/;"	f
test_service_call_with_ascii_qos_retain_flags	data/bpe_corpus_raw/train.py	/^utf-8	def	test_service_call_with_ascii_qos_retain_flags	(	self	)	:	\\n	    	self	.	hass	.	servic/;"	f
test_service_call_with_ascii_qos_retain_flags	data/data_raw/train.py	/^utf-8	def	test_service_call_with_ascii_qos_retain_flags	(	self	)	:	\\n	    	self	.	hass	.	servic/;"	f
test_session_rename	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_session_rename	(	session	)	:	\\n	    	TEST_SESSION_NAME	=	session	.	get	(	'sessio/;"	f
test_session_rename	data/data_raw/valid.py	/^utf-8	def	test_session_rename	(	session	)	:	\\n	    	TEST_SESSION_NAME	=	session	.	get	(	'sessio/;"	f
test_sessionmanager_save	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_sessionmanager_save	(	self	)	:	\\n	    	self	.	session	[	'y'	]	=	1	\\n	self	.	ses/;"	f
test_sessionmanager_save	data/data_raw/valid.py	/^utf-8	def	test_sessionmanager_save	(	self	)	:	\\n	    	self	.	session	[	'y'	]	=	1	\\n	self	.	ses/;"	f
test_setLevel_chain_protein	data/bpe_corpus_raw/train.py	/^utf-8	def	test_setLevel_chain_protein	(	self	)	:	\\n	    	mols	=	self	.	mols	.	chains	.	setLevel/;"	f
test_setLevel_chain_protein	data/data_raw/train.py	/^utf-8	def	test_setLevel_chain_protein	(	self	)	:	\\n	    	mols	=	self	.	mols	.	chains	.	setLevel/;"	f
test_set_config_value	data/bpe_corpus_raw/test.py	/^utf-8	def	test_set_config_value	(	self	)	:	\\n	    	widget	=	widgets	.	ConfigWidget	(	)	\\n	with/;"	f
test_set_config_value	data/data_raw/test.py	/^utf-8	def	test_set_config_value	(	self	)	:	\\n	    	widget	=	widgets	.	ConfigWidget	(	)	\\n	with/;"	f
test_set_filegroups	data/bpe_corpus_raw/train.py	/^utf-8	def	test_set_filegroups	(	self	)	:	\\n	    	test_cases	=	[	{	'file_location'	:	'{}\/chelan/;"	f
test_set_filegroups	data/data_raw/train.py	/^utf-8	def	test_set_filegroups	(	self	)	:	\\n	    	test_cases	=	[	{	'file_location'	:	'{}\/chelan/;"	f
test_setup_config_full	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_setup_config_full	(	self	)	:	\\n	    	config	=	{	'logentries'	:	{	'token'	:	'secr/;"	f
test_setup_config_full	data/data_raw/valid.py	/^utf-8	def	test_setup_config_full	(	self	)	:	\\n	    	config	=	{	'logentries'	:	{	'token'	:	'secr/;"	f
test_shallow_loader	data/bpe_corpus_raw/train.py	/^utf-8	def	test_shallow_loader	(	self	)	:	\\n	    	egg_name	=	'%s\/test_egg.egg'	%	self	.	egg_dir/;"	f
test_shallow_loader	data/data_raw/train.py	/^utf-8	def	test_shallow_loader	(	self	)	:	\\n	    	egg_name	=	'%s\/test_egg.egg'	%	self	.	egg_dir/;"	f
test_sharded_oplogsize_sccc	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_sharded_oplogsize_sccc	(	self	)	:	\\n	    	self	.	check_sccc	(	)	\\n	self	.	run_t/;"	f
test_sharded_oplogsize_sccc	data/data_raw/valid.py	/^utf-8	def	test_sharded_oplogsize_sccc	(	self	)	:	\\n	    	self	.	check_sccc	(	)	\\n	self	.	run_t/;"	f
test_sharedRevisions	data/bpe_corpus_raw/train.py	/^utf-8	@	inlineCallbacks	\\n	def	test_sharedRevisions	(	self	)	:	\\n	    	yield	self	.	_createSha/;"	f
test_sharedRevisions	data/data_raw/train.py	/^utf-8	@	inlineCallbacks	\\n	def	test_sharedRevisions	(	self	)	:	\\n	    	yield	self	.	_createSha/;"	f
test_shortcut_view_without_get_absolute_url	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_shortcut_view_without_get_absolute_url	(	self	)	:	\\n	    	request	=	HttpRequest	/;"	f
test_shortcut_view_without_get_absolute_url	data/data_raw/valid.py	/^utf-8	def	test_shortcut_view_without_get_absolute_url	(	self	)	:	\\n	    	request	=	HttpRequest	/;"	f
test_showanswer_default	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_showanswer_default	(	self	)	:	\\n	    	problem	=	CapaFactory	.	create	(	)	\\n	sel/;"	f
test_showanswer_default	data/data_raw/valid.py	/^utf-8	def	test_showanswer_default	(	self	)	:	\\n	    	problem	=	CapaFactory	.	create	(	)	\\n	sel/;"	f
test_shutdownDisconnectsCleanly	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_shutdownDisconnectsCleanly	(	self	)	:	\\n	    	lostOK	=	[	False	]	\\n	\\n	\\n	cla/;"	f
test_shutdownDisconnectsCleanly	data/data_raw/valid.py	/^utf-8	def	test_shutdownDisconnectsCleanly	(	self	)	:	\\n	    	lostOK	=	[	False	]	\\n	\\n	\\n	cla/;"	f
test_signature_errors	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_signature_errors	(	self	)	:	\\n	    	f	=	generated_jit	(	nopython	=	True	)	(	bad_/;"	f
test_signature_errors	data/data_raw/valid.py	/^utf-8	def	test_signature_errors	(	self	)	:	\\n	    	f	=	generated_jit	(	nopython	=	True	)	(	bad_/;"	f
test_single_dataset_element	data/bpe_corpus_raw/train.py	/^utf-8	def	test_single_dataset_element	(	self	)	:	\\n	    	assert_raises	(	ValueError	,	mlab	.	Ga/;"	f
test_single_dataset_element	data/data_raw/train.py	/^utf-8	def	test_single_dataset_element	(	self	)	:	\\n	    	assert_raises	(	ValueError	,	mlab	.	Ga/;"	f
test_single_finished_assessment	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_single_finished_assessment	(	self	)	:	\\n	    	finish_date	=	datetime	.	datetime	/;"	f
test_single_finished_assessment	data/data_raw/valid.py	/^utf-8	def	test_single_finished_assessment	(	self	)	:	\\n	    	finish_date	=	datetime	.	datetime	/;"	f
test_single_parameterset	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_single_parameterset	(	self	)	:	\\n	    	warnings	.	filterwarnings	(	'error'	,	cat/;"	f
test_single_parameterset	data/data_raw/valid.py	/^utf-8	def	test_single_parameterset	(	self	)	:	\\n	    	warnings	.	filterwarnings	(	'error'	,	cat/;"	f
test_source_out_attribute_is_not_integer	data/bpe_corpus_raw/train.py	/^utf-8	def	test_source_out_attribute_is_not_integer	(	self	)	:	\\n	    	with	pytest	.	raises	(	Ty/;"	f
test_source_out_attribute_is_not_integer	data/data_raw/train.py	/^utf-8	def	test_source_out_attribute_is_not_integer	(	self	)	:	\\n	    	with	pytest	.	raises	(	Ty/;"	f
test_spanning_last_chunk	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_spanning_last_chunk	(	self	)	:	\\n	    	t	=	Template	(	\\n	'{% load reviewtags %}/;"	f
test_spanning_last_chunk	data/data_raw/valid.py	/^utf-8	def	test_spanning_last_chunk	(	self	)	:	\\n	    	t	=	Template	(	\\n	'{% load reviewtags %}/;"	f
test_sparse_array_clear	data/bpe_corpus_raw/test.py	/^utf-8	def	test_sparse_array_clear	(	)	:	\\n	    	s	=	core	.	SparseArray	.	all_on	(	)	\\n	s	.	cle/;"	f
test_sparse_array_clear	data/data_raw/test.py	/^utf-8	def	test_sparse_array_clear	(	)	:	\\n	    	s	=	core	.	SparseArray	.	all_on	(	)	\\n	s	.	cle/;"	f
test_square_copy	data/bpe_corpus_raw/train.py	/^utf-8	def	test_square_copy	(	)	:	\\n	    	orig	=	Square	(	[	0	,	1	,	2	,	4	]	,	{	'density'	:	750	/;"	f
test_square_copy	data/data_raw/train.py	/^utf-8	def	test_square_copy	(	)	:	\\n	    	orig	=	Square	(	[	0	,	1	,	2	,	4	]	,	{	'density'	:	750	/;"	f
test_startedConnecting	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_startedConnecting	(	self	)	:	\\n	    	result	=	[	]	\\n	\\n	\\n	class	Factory	(	ob/;"	f
test_startedConnecting	data/data_raw/valid.py	/^utf-8	def	test_startedConnecting	(	self	)	:	\\n	    	result	=	[	]	\\n	\\n	\\n	class	Factory	(	ob/;"	f
test_stream_stale_follows	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_stream_stale_follows	(	self	)	:	\\n	    	self	.	user2	.	delete	(	)	\\n	self	.	ass/;"	f
test_stream_stale_follows	data/data_raw/valid.py	/^utf-8	def	test_stream_stale_follows	(	self	)	:	\\n	    	self	.	user2	.	delete	(	)	\\n	self	.	ass/;"	f
test_strict_event_format	data/bpe_corpus_raw/train.py	/^utf-8	def	test_strict_event_format	(	self	)	:	\\n	    	captured_events	=	[	]	\\n	with	self	.	cap/;"	f
test_strict_event_format	data/data_raw/train.py	/^utf-8	def	test_strict_event_format	(	self	)	:	\\n	    	captured_events	=	[	]	\\n	with	self	.	cap/;"	f
test_string_literal	data/bpe_corpus_raw/train.py	/^utf-8	def	test_string_literal	(	self	)	:	\\n	    	self	.	assertEqual	(	Expression	(	'PASS'	)	.	e/;"	f
test_string_literal	data/data_raw/train.py	/^utf-8	def	test_string_literal	(	self	)	:	\\n	    	self	.	assertEqual	(	Expression	(	'PASS'	)	.	e/;"	f
test_style_guide_manager_pre_file_ignores_parsing	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_style_guide_manager_pre_file_ignores_parsing	(	)	:	\\n	    	formatter	=	mock	.	cr/;"	f
test_style_guide_manager_pre_file_ignores_parsing	data/data_raw/valid.py	/^utf-8	def	test_style_guide_manager_pre_file_ignores_parsing	(	)	:	\\n	    	formatter	=	mock	.	cr/;"	f
test_style_keyword	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_style_keyword	(	self	)	:	\\n	    	stylestr	=	np	.	array2string	(	np	.	array	(	1.5/;"	f
test_style_keyword	data/data_raw/valid.py	/^utf-8	def	test_style_keyword	(	self	)	:	\\n	    	stylestr	=	np	.	array2string	(	np	.	array	(	1.5/;"	f
test_subtract_credit	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_subtract_credit	(	self	)	:	\\n	    	prior	=	randrange	(	1	,	1000	)	\\n	subscriber/;"	f
test_subtract_credit	data/data_raw/valid.py	/^utf-8	def	test_subtract_credit	(	self	)	:	\\n	    	prior	=	randrange	(	1	,	1000	)	\\n	subscriber/;"	f
test_success	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_success	(	self	)	:	\\n	    	response	=	self	.	client	.	post	(	reverse	(	'misago:r/;"	f
test_success	data/data_raw/valid.py	/^utf-8	def	test_success	(	self	)	:	\\n	    	response	=	self	.	client	.	post	(	reverse	(	'misago:r/;"	f
test_superclass_at_subclass	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_superclass_at_subclass	(	self	)	:	\\n	    	data	=	{	'data'	:	{	'type'	:	'employee/;"	f
test_superclass_at_subclass	data/data_raw/valid.py	/^utf-8	def	test_superclass_at_subclass	(	self	)	:	\\n	    	data	=	{	'data'	:	{	'type'	:	'employee/;"	f
test_surf_regular	data/bpe_corpus_raw/train.py	/^utf-8	def	test_surf_regular	(	fig	,	contour	=	1	)	:	\\n	\\n	    	def	f	(	x	,	y	)	:	\\n	        	/;"	f
test_surf_regular	data/data_raw/train.py	/^utf-8	def	test_surf_regular	(	fig	,	contour	=	1	)	:	\\n	\\n	    	def	f	(	x	,	y	)	:	\\n	        	/;"	f
test_suuid	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_suuid	(	self	)	:	\\n	    	s1	=	suuid	(	)	\\n	self	.	assertEqual	(	len	(	s1	)	,	22/;"	f
test_suuid	data/data_raw/valid.py	/^utf-8	def	test_suuid	(	self	)	:	\\n	    	s1	=	suuid	(	)	\\n	self	.	assertEqual	(	len	(	s1	)	,	22/;"	f
test_target_color_type	data/bpe_corpus_raw/valid.py	/^utf-8	@	pytest	.	mark	.	parametrize	(	'value,expected'	,	[	(	[	'a'	,	'b'	,	'a'	,	'b'	,	'c'	]	,	\\/;"	f
test_target_color_type	data/data_raw/valid.py	/^utf-8	@	pytest	.	mark	.	parametrize	(	'value,expected'	,	[	(	[	'a'	,	'b'	,	'a'	,	'b'	,	'c'	]	,	\\/;"	f
test_teamclientpermissions_budi	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_teamclientpermissions_budi	(	self	)	:	\\n	    	dachshunds	=	self	.	fixtures	.	dac/;"	f
test_teamclientpermissions_budi	data/data_raw/valid.py	/^utf-8	def	test_teamclientpermissions_budi	(	self	)	:	\\n	    	dachshunds	=	self	.	fixtures	.	dac/;"	f
test_temporal_f_m	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_temporal_f_m	(	)	:	\\n	    	ens	=	get_ensemble	(	TemporalEnsemble	,	'threading'	,/;"	f
test_temporal_f_m	data/data_raw/valid.py	/^utf-8	def	test_temporal_f_m	(	)	:	\\n	    	ens	=	get_ensemble	(	TemporalEnsemble	,	'threading'	,/;"	f
test_termini	data/bpe_corpus_raw/train.py	/^utf-8	def	test_termini	(	self	)	:	\\n	    	self	.	assertTrue	(	residue	.	RNAResidue	.	has	(	'G5'/;"	f
test_termini	data/data_raw/train.py	/^utf-8	def	test_termini	(	self	)	:	\\n	    	self	.	assertTrue	(	residue	.	RNAResidue	.	has	(	'G5'/;"	f
test_testAverage1	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_testAverage1	(	self	)	:	\\n	    	ott	=	array	(	[	0.0	,	1.0	,	2.0	,	3.0	]	,	mask	=/;"	f
test_testAverage1	data/data_raw/valid.py	/^utf-8	def	test_testAverage1	(	self	)	:	\\n	    	ott	=	array	(	[	0.0	,	1.0	,	2.0	,	3.0	]	,	mask	=/;"	f
test_tiling_path_3	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_tiling_path_3	(	)	:	\\n	    	fp_in	=	StringIO	(	test_1_input_tp_as_text	)	\\n	con/;"	f
test_tiling_path_3	data/data_raw/valid.py	/^utf-8	def	test_tiling_path_3	(	)	:	\\n	    	fp_in	=	StringIO	(	test_1_input_tp_as_text	)	\\n	con/;"	f
test_timer	data/bpe_corpus_raw/train.py	/^utf-8	def	test_timer	(	self	)	:	\\n	    	timer	=	self	.	profile	.	timer	(	'test'	)	\\n	timer	.	_/;"	f
test_timer	data/data_raw/train.py	/^utf-8	def	test_timer	(	self	)	:	\\n	    	timer	=	self	.	profile	.	timer	(	'test'	)	\\n	timer	.	_/;"	f
test_toString	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_toString	(	self	)	:	\\n	    	self	.	assertEqual	(	'    This is a bogus entry.  '	/;"	f
test_toString	data/data_raw/valid.py	/^utf-8	def	test_toString	(	self	)	:	\\n	    	self	.	assertEqual	(	'    This is a bogus entry.  '	/;"	f
test_to_numpy_and_back	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_to_numpy_and_back	(	self	)	:	\\n	    	img	=	sitk	.	GaussianSource	(	sitk	.	sitkFl/;"	f
test_to_numpy_and_back	data/data_raw/valid.py	/^utf-8	def	test_to_numpy_and_back	(	self	)	:	\\n	    	img	=	sitk	.	GaussianSource	(	sitk	.	sitkFl/;"	f
test_transaction_nevra_ops_update	data/bpe_corpus_raw/train.py	/^utf-8	def	test_transaction_nevra_ops_update	(	self	)	:	\\n	    	yum_history	=	support	.	HistoryS/;"	f
test_transaction_nevra_ops_update	data/data_raw/train.py	/^utf-8	def	test_transaction_nevra_ops_update	(	self	)	:	\\n	    	yum_history	=	support	.	HistoryS/;"	f
test_trialPathInsert	data/bpe_corpus_raw/train.py	/^utf-8	def	test_trialPathInsert	(	self	)	:	\\n	    	script	=	self	.	bin	.	child	(	'trial'	)	\\n	i/;"	f
test_trialPathInsert	data/data_raw/train.py	/^utf-8	def	test_trialPathInsert	(	self	)	:	\\n	    	script	=	self	.	bin	.	child	(	'trial'	)	\\n	i/;"	f
test_tunein	data/bpe_corpus_raw/train.py	/^utf-8	def	test_tunein	(	)	:	\\n	    	tunein	=	MusicService	(	'TuneIn'	)	\\n	assert	tunein	\\n	as/;"	f
test_tunein	data/data_raw/train.py	/^utf-8	def	test_tunein	(	)	:	\\n	    	tunein	=	MusicService	(	'TuneIn'	)	\\n	assert	tunein	\\n	as/;"	f
test_type_3	data/bpe_corpus_raw/train.py	/^utf-8	def	test_type_3	(	self	)	:	\\n	    	self	.	w	.	type	(	'3'	)	\\n	eq_	(	self	.	w	.	text	,	'1/;"	f
test_type_3	data/data_raw/train.py	/^utf-8	def	test_type_3	(	self	)	:	\\n	    	self	.	w	.	type	(	'3'	)	\\n	eq_	(	self	.	w	.	text	,	'1/;"	f
test_unauthorized	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_unauthorized	(	self	)	:	\\n	    	self	.	client	.	logout	(	)	\\n	response	=	self	./;"	f
test_unauthorized	data/data_raw/valid.py	/^utf-8	def	test_unauthorized	(	self	)	:	\\n	    	self	.	client	.	logout	(	)	\\n	response	=	self	./;"	f
test_unavailableReceivedEmptySender	data/bpe_corpus_raw/test.py	/^utf-8	def	test_unavailableReceivedEmptySender	(	self	)	:	\\n	    	self	.	_testPresence	(	sender	/;"	f
test_unavailableReceivedEmptySender	data/data_raw/test.py	/^utf-8	def	test_unavailableReceivedEmptySender	(	self	)	:	\\n	    	self	.	_testPresence	(	sender	/;"	f
test_unblock_interface_not_blocked_none	data/bpe_corpus_raw/train.py	/^utf-8	@	mock	.	patch	(	'wifiphisher.common.interfaces.pyw'	)	\\n	def	test_unblock_interface_not_/;"	f
test_unblock_interface_not_blocked_none	data/data_raw/train.py	/^utf-8	@	mock	.	patch	(	'wifiphisher.common.interfaces.pyw'	)	\\n	def	test_unblock_interface_not_/;"	f
test_ungrouping	data/bpe_corpus_raw/train.py	/^utf-8	def	test_ungrouping	(	self	)	:	\\n	    	n	=	self	.	create	(	items	.	NodeItem	,	UML	.	Node	/;"	f
test_ungrouping	data/data_raw/train.py	/^utf-8	def	test_ungrouping	(	self	)	:	\\n	    	n	=	self	.	create	(	items	.	NodeItem	,	UML	.	Node	/;"	f
test_unique_form_order	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_unique_form_order	(	session	)	:	\\n	    	species_by_form_order	=	{	}	\\n	query	=	/;"	f
test_unique_form_order	data/data_raw/valid.py	/^utf-8	def	test_unique_form_order	(	session	)	:	\\n	    	species_by_form_order	=	{	}	\\n	query	=	/;"	f
test_unitsafe_functions	data/bpe_corpus_raw/valid.py	/^utf-8	@	attr	(	'codegen-independent'	)	\\n	def	test_unitsafe_functions	(	)	:	\\n	    	from	brian/;"	f
test_unitsafe_functions	data/data_raw/valid.py	/^utf-8	@	attr	(	'codegen-independent'	)	\\n	def	test_unitsafe_functions	(	)	:	\\n	    	from	brian/;"	f
test_unpaginated	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_unpaginated	(	self	)	:	\\n	    	browsers	=	[	BrowserFactory	(	)	for	_	in	xrange	(/;"	f
test_unpaginated	data/data_raw/valid.py	/^utf-8	def	test_unpaginated	(	self	)	:	\\n	    	browsers	=	[	BrowserFactory	(	)	for	_	in	xrange	(/;"	f
test_unregistered	data/bpe_corpus_raw/test.py	/^utf-8	def	test_unregistered	(	self	)	:	\\n	    	self	.	assertEqual	(	self	.	lua	(	'workers'	,	36/;"	f
test_unregistered	data/data_raw/test.py	/^utf-8	def	test_unregistered	(	self	)	:	\\n	    	self	.	assertEqual	(	self	.	lua	(	'workers'	,	36/;"	f
test_unversioned_entry	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_unversioned_entry	(	self	)	:	\\n	    	self	.	assertEqual	(	get_endpoints	(	tenant/;"	f
test_unversioned_entry	data/data_raw/valid.py	/^utf-8	def	test_unversioned_entry	(	self	)	:	\\n	    	self	.	assertEqual	(	get_endpoints	(	tenant/;"	f
test_update	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_update	(	self	)	:	\\n	    	with	mock	.	patch	.	object	(	self	.	client	,	'assert_h/;"	f
test_update	data/data_raw/valid.py	/^utf-8	def	test_update	(	self	)	:	\\n	    	with	mock	.	patch	.	object	(	self	.	client	,	'assert_h/;"	f
test_update_children	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_update_children	(	self	)	:	\\n	    	locator	=	BlockUsageLocator	(	CourseLocator	(/;"	f
test_update_children	data/data_raw/valid.py	/^utf-8	def	test_update_children	(	self	)	:	\\n	    	locator	=	BlockUsageLocator	(	CourseLocator	(/;"	f
test_update_instance_with_raw_instance	data/bpe_corpus_raw/train.py	/^utf-8	def	test_update_instance_with_raw_instance	(	self	)	:	\\n	    	User	.	objects	.	create	(	u/;"	f
test_update_instance_with_raw_instance	data/data_raw/train.py	/^utf-8	def	test_update_instance_with_raw_instance	(	self	)	:	\\n	    	User	.	objects	.	create	(	u/;"	f
test_update_latest_version_does_not_change_modified_by	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_update_latest_version_does_not_change_modified_by	(	self	)	:	\\n	    	u	=	self	.	/;"	f
test_update_latest_version_does_not_change_modified_by	data/data_raw/valid.py	/^utf-8	def	test_update_latest_version_does_not_change_modified_by	(	self	)	:	\\n	    	u	=	self	.	/;"	f
test_url_cookies	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_url_cookies	(	self	)	:	\\n	    	result	=	self	.	client	.	get	(	reverse	(	'pages-c/;"	f
test_url_cookies	data/data_raw/valid.py	/^utf-8	def	test_url_cookies	(	self	)	:	\\n	    	result	=	self	.	client	.	get	(	reverse	(	'pages-c/;"	f
test_use_certificate_chain_file_unicode	data/bpe_corpus_raw/train.py	/^utf-8	def	test_use_certificate_chain_file_unicode	(	self	,	tmpfile	)	:	\\n	    	self	.	_use_cert/;"	f
test_use_certificate_chain_file_unicode	data/data_raw/train.py	/^utf-8	def	test_use_certificate_chain_file_unicode	(	self	,	tmpfile	)	:	\\n	    	self	.	_use_cert/;"	f
test_user	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_user	(	self	)	:	\\n	    	self	.	assertEqual	(	[	]	,	list	(	User	.	objects	.	all	(/;"	f
test_user	data/data_raw/valid.py	/^utf-8	def	test_user	(	self	)	:	\\n	    	self	.	assertEqual	(	[	]	,	list	(	User	.	objects	.	all	(/;"	f
test_user_can_only_see_default_image_for_private_profile	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_user_can_only_see_default_image_for_private_profile	(	self	)	:	\\n	    	year_of_b/;"	f
test_user_can_only_see_default_image_for_private_profile	data/data_raw/valid.py	/^utf-8	def	test_user_can_only_see_default_image_for_private_profile	(	self	)	:	\\n	    	year_of_b/;"	f
test_user_issues_empty	data/bpe_corpus_raw/test.py	/^utf-8	def	test_user_issues_empty	(	self	)	:	\\n	    	output	=	self	.	app	.	get	(	'\/api\/0\/user/;"	f
test_user_issues_empty	data/data_raw/test.py	/^utf-8	def	test_user_issues_empty	(	self	)	:	\\n	    	output	=	self	.	app	.	get	(	'\/api\/0\/user/;"	f
test_valid_fig_config_detected_on_build	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_valid_fig_config_detected_on_build	(	self	)	:	\\n	    	config	=	{	'postgres'	:	{	/;"	f
test_valid_fig_config_detected_on_build	data/data_raw/valid.py	/^utf-8	def	test_valid_fig_config_detected_on_build	(	self	)	:	\\n	    	config	=	{	'postgres'	:	{	/;"	f
test_valid_limit	data/bpe_corpus_raw/test.py	/^utf-8	def	test_valid_limit	(	self	)	:	\\n	    	self	.	assertEqual	(	python_to_couch	(	{	'limit'	/;"	f
test_valid_limit	data/data_raw/test.py	/^utf-8	def	test_valid_limit	(	self	)	:	\\n	    	self	.	assertEqual	(	python_to_couch	(	{	'limit'	/;"	f
test_valid_mozillians_urls	data/bpe_corpus_raw/test.py	/^utf-8	def	test_valid_mozillians_urls	(	self	)	:	\\n	    	mozillians_urls	=	[	'http:\/\/www.mozil/;"	f
test_valid_mozillians_urls	data/data_raw/test.py	/^utf-8	def	test_valid_mozillians_urls	(	self	)	:	\\n	    	mozillians_urls	=	[	'http:\/\/www.mozil/;"	f
test_value_attribute_of_StopIteration_exception	data/bpe_corpus_raw/train.py	/^utf-8	def	test_value_attribute_of_StopIteration_exception	(	self	)	:	\\n	    	trace	=	[	]	\\n	\\/;"	f
test_value_attribute_of_StopIteration_exception	data/data_raw/train.py	/^utf-8	def	test_value_attribute_of_StopIteration_exception	(	self	)	:	\\n	    	trace	=	[	]	\\n	\\/;"	f
test_verified_status	data/bpe_corpus_raw/valid.py	/^utf-8	@	ddt	.	data	(	'2018-06-06 16:38:17'	,	None	)	\\n	def	test_verified_status	(	self	,	verifi/;"	f
test_verified_status	data/data_raw/valid.py	/^utf-8	@	ddt	.	data	(	'2018-06-06 16:38:17'	,	None	)	\\n	def	test_verified_status	(	self	,	verifi/;"	f
test_verify_process	data/bpe_corpus_raw/test.py	/^utf-8	def	test_verify_process	(	self	)	:	\\n	    	params	=	'key_format=S,value_format=S'	\\n	sel/;"	f
test_verify_process	data/data_raw/test.py	/^utf-8	def	test_verify_process	(	self	)	:	\\n	    	params	=	'key_format=S,value_format=S'	\\n	sel/;"	f
test_view_config_changes	data/bpe_corpus_raw/train.py	/^utf-8	@	test_util	.	patch_get_utility	(	)	\\n	def	test_view_config_changes	(	self	,	mock_output	/;"	f
test_view_config_changes	data/data_raw/train.py	/^utf-8	@	test_util	.	patch_get_utility	(	)	\\n	def	test_view_config_changes	(	self	,	mock_output	/;"	f
test_with_python_api	data/bpe_corpus_raw/valid.py	/^utf-8	@	skipUnlessDarwin	\\n	@	add_test_categories	(	[	'pyapi'	]	)	\\n	def	test_with_python_api	/;"	f
test_with_python_api	data/data_raw/valid.py	/^utf-8	@	skipUnlessDarwin	\\n	@	add_test_categories	(	[	'pyapi'	]	)	\\n	def	test_with_python_api	/;"	f
test_write_data_validations_1	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_write_data_validations_1	(	self	)	:	\\n	    	self	.	worksheet	.	data_validation	(/;"	f
test_write_data_validations_1	data/data_raw/valid.py	/^utf-8	def	test_write_data_validations_1	(	self	)	:	\\n	    	self	.	worksheet	.	data_validation	(/;"	f
test_write_font_12	data/bpe_corpus_raw/train.py	/^utf-8	def	test_write_font_12	(	self	)	:	\\n	    	properties	=	{	'color'	:	'#FF0000'	}	\\n	xf_for/;"	f
test_write_font_12	data/data_raw/train.py	/^utf-8	def	test_write_font_12	(	self	)	:	\\n	    	properties	=	{	'color'	:	'#FF0000'	}	\\n	xf_for/;"	f
test_write_missing_template_attribute	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_write_missing_template_attribute	(	self	)	:	\\n	    	payload	=	payloads	.	Registe/;"	f
test_write_missing_template_attribute	data/data_raw/valid.py	/^utf-8	def	test_write_missing_template_attribute	(	self	)	:	\\n	    	payload	=	payloads	.	Registe/;"	f
test_write_xf_14	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_write_xf_14	(	self	)	:	\\n	    	xf_format	=	Format	(	)	\\n	xf_format	.	set_align	/;"	f
test_write_xf_14	data/data_raw/valid.py	/^utf-8	def	test_write_xf_14	(	self	)	:	\\n	    	xf_format	=	Format	(	)	\\n	xf_format	.	set_align	/;"	f
test_wrong_passphrase_on_key_expiration	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_wrong_passphrase_on_key_expiration	(	self	)	:	\\n	    	today	=	datetime	.	date	.	/;"	f
test_wrong_passphrase_on_key_expiration	data/data_raw/valid.py	/^utf-8	def	test_wrong_passphrase_on_key_expiration	(	self	)	:	\\n	    	today	=	datetime	.	date	.	/;"	f
test_wslua_tvb_no_tree	data/bpe_corpus_raw/train.py	/^utf-8	def	test_wslua_tvb_no_tree	(	self	,	check_lua_script	)	:	\\n	    	check_lua_script	(	self	/;"	f
test_wslua_tvb_no_tree	data/data_raw/train.py	/^utf-8	def	test_wslua_tvb_no_tree	(	self	,	check_lua_script	)	:	\\n	    	check_lua_script	(	self	/;"	f
test_xor	data/bpe_corpus_raw/test.py	/^utf-8	def	test_xor	(	)	:	\\n	    	assert_equals	(	'#f'	,	interpret	(	'(xor #f #f)'	,	env	)	)	\\n/;"	f
test_xor	data/data_raw/test.py	/^utf-8	def	test_xor	(	)	:	\\n	    	assert_equals	(	'#f'	,	interpret	(	'(xor #f #f)'	,	env	)	)	\\n/;"	f
test_zero_tops	data/bpe_corpus_raw/valid.py	/^utf-8	def	test_zero_tops	(	self	)	:	\\n	    	net_proto	=	silent_net	(	)	\\n	net	=	self	.	load_ne/;"	f
test_zero_tops	data/data_raw/valid.py	/^utf-8	def	test_zero_tops	(	self	)	:	\\n	    	net_proto	=	silent_net	(	)	\\n	net	=	self	.	load_ne/;"	f
testcase_insert	data/bpe_corpus_raw/valid.py	/^utf-8	def	testcase_insert	(	self	)	:	\\n	    	groupssnapshot	=	list	(	PCSCReaderGroups	(	)	.	ins/;"	f
testcase_insert	data/data_raw/valid.py	/^utf-8	def	testcase_insert	(	self	)	:	\\n	    	groupssnapshot	=	list	(	PCSCReaderGroups	(	)	.	ins/;"	f
text	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	text	(	self	)	:	\\n	    	content	=	None	\\n	encoding	=	self	.	encoding	/;"	f
text	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	text	(	self	)	:	\\n	    	content	=	None	\\n	encoding	=	self	.	encoding	/;"	f
textbox	data/bpe_corpus_raw/valid.py	/^utf-8	def	textbox	(	msg	=	''	,	title	=	' '	,	text	=	''	,	codebox	=	0	)	:	\\n	    	if	msg	==	None/;"	f
textbox	data/data_raw/valid.py	/^utf-8	def	textbox	(	msg	=	''	,	title	=	' '	,	text	=	''	,	codebox	=	0	)	:	\\n	    	if	msg	==	None/;"	f
tfrecord_iterator	data/bpe_corpus_raw/valid.py	/^utf-8	def	tfrecord_iterator	(	filenames	,	gzipped	=	False	,	example_spec	=	None	)	:	\\n	    	wit/;"	f
tfrecord_iterator	data/data_raw/valid.py	/^utf-8	def	tfrecord_iterator	(	filenames	,	gzipped	=	False	,	example_spec	=	None	)	:	\\n	    	wit/;"	f
tg_get_file	data/bpe_corpus_raw/valid.py	/^utf-8	def	tg_get_file	(	file_id	:	str	,	mp4	:	bool	=	False	)	:	\\n	    	result	=	global_vars	.	f/;"	f
tg_get_file	data/data_raw/valid.py	/^utf-8	def	tg_get_file	(	file_id	:	str	,	mp4	:	bool	=	False	)	:	\\n	    	result	=	global_vars	.	f/;"	f
theme_formset_errors	data/bpe_corpus_raw/valid.py	/^utf-8	@	register	.	simple_tag	\\n	def	theme_formset_errors	(	*	args	,	**	kwargs	)	:	\\n	    	ret/;"	f
theme_formset_errors	data/data_raw/valid.py	/^utf-8	@	register	.	simple_tag	\\n	def	theme_formset_errors	(	*	args	,	**	kwargs	)	:	\\n	    	ret/;"	f
thickness	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	thickness	(	self	)	:	\\n	    	return	self	[	'thickness'	]	\\n		$/;"	f
thickness	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	thickness	(	self	)	:	\\n	    	return	self	[	'thickness'	]	\\n		$/;"	f
thin	data/bpe_corpus_raw/train.py	/^utf-8	def	thin	(	self	,	rel_err	=	0.0001	,	trim_zeros	=	True	,	preserve_range	=	True	,	\\n	fast_/;"	f
thin	data/data_raw/train.py	/^utf-8	def	thin	(	self	,	rel_err	=	0.0001	,	trim_zeros	=	True	,	preserve_range	=	True	,	\\n	fast_/;"	f
threshold_deletion	data/bpe_corpus_raw/train.py	/^utf-8	def	threshold_deletion	(	self	,	threshold	=	None	)	:	\\n	    	if	threshold	is	not	None	:	\\/;"	f
threshold_deletion	data/data_raw/train.py	/^utf-8	def	threshold_deletion	(	self	,	threshold	=	None	)	:	\\n	    	if	threshold	is	not	None	:	\\/;"	f
thresholdize	data/bpe_corpus_raw/train.py	/^utf-8	def	thresholdize	(	img	,	threshold	=	0.5	)	:	\\n	    	img_new	=	[	]	\\n	if	threshold	==	'a/;"	f
thresholdize	data/data_raw/train.py	/^utf-8	def	thresholdize	(	img	,	threshold	=	0.5	)	:	\\n	    	img_new	=	[	]	\\n	if	threshold	==	'a/;"	f
tick_values	data/bpe_corpus_raw/test.py	/^utf-8	def	tick_values	(	self	,	vmin	,	vmax	)	:	\\n	    	return	[	]	\\n		$/;"	f
tick_values	data/data_raw/test.py	/^utf-8	def	tick_values	(	self	,	vmin	,	vmax	)	:	\\n	    	return	[	]	\\n		$/;"	f
tickets	data/bpe_corpus_raw/valid.py	/^utf-8	@	base	.	apimethod	\\n	def	tickets	(	self	,	page	=	None	,	per_page	=	None	)	:	\\n	    	par/;"	f
tickets	data/data_raw/valid.py	/^utf-8	@	base	.	apimethod	\\n	def	tickets	(	self	,	page	=	None	,	per_page	=	None	)	:	\\n	    	par/;"	f
tied_rnn_seq2seq	data/bpe_corpus_raw/train.py	/^utf-8	def	tied_rnn_seq2seq	(	encoder_inputs	,	decoder_inputs	,	cell	,	loop_function	=	\\n	None	,/;"	f
tied_rnn_seq2seq	data/data_raw/train.py	/^utf-8	def	tied_rnn_seq2seq	(	encoder_inputs	,	decoder_inputs	,	cell	,	loop_function	=	\\n	None	,/;"	f
time	data/bpe_corpus_raw/train.py	/^utf-8	def	time	(	self	)	:	\\n	    	return	Timer	(	self	.	observe	)	\\n		$/;"	f
time	data/bpe_corpus_raw/valid.py	/^utf-8	def	time	(	self	)	:	\\n	    	return	self	.	_datetime	.	time	(	)	\\n		$/;"	f
time	data/data_raw/train.py	/^utf-8	def	time	(	self	)	:	\\n	    	return	Timer	(	self	.	observe	)	\\n		$/;"	f
time	data/data_raw/valid.py	/^utf-8	def	time	(	self	)	:	\\n	    	return	self	.	_datetime	.	time	(	)	\\n		$/;"	f
timedelta_as_seconds	data/bpe_corpus_raw/test.py	/^utf-8	def	timedelta_as_seconds	(	td	)	:	\\n	    	return	td	.	days	*	86400	+	td	.	seconds	\\n		$/;"	f
timedelta_as_seconds	data/data_raw/test.py	/^utf-8	def	timedelta_as_seconds	(	td	)	:	\\n	    	return	td	.	days	*	86400	+	td	.	seconds	\\n		$/;"	f
timeformat	data/bpe_corpus_raw/valid.py	/^utf-8	@	register	.	filter	\\n	def	timeformat	(	value	)	:	\\n	    	from	decimal	import	Decimal	,	/;"	f
timeformat	data/data_raw/valid.py	/^utf-8	@	register	.	filter	\\n	def	timeformat	(	value	)	:	\\n	    	from	decimal	import	Decimal	,	/;"	f
timeout	data/data_raw/vocab.py	/^timeout=%s)'$/;"	v
timestamp	data/bpe_corpus_raw/train.py	/^utf-8	@	identity	\\n	def	timestamp	(	self	)	:	\\n	    	return	self	.	__timestamp	\\n		$/;"	f
timestamp	data/data_raw/train.py	/^utf-8	@	identity	\\n	def	timestamp	(	self	)	:	\\n	    	return	self	.	__timestamp	\\n		$/;"	f
timeuntil	data/bpe_corpus_raw/valid.py	/^utf-8	def	timeuntil	(	d	,	now	=	None	)	:	\\n	    	if	not	now	:	\\n	        	if	getattr	(	d	,	'tz/;"	f
timeuntil	data/data_raw/valid.py	/^utf-8	def	timeuntil	(	d	,	now	=	None	)	:	\\n	    	if	not	now	:	\\n	        	if	getattr	(	d	,	'tz/;"	f
tips_df	data/bpe_corpus_raw/valid.py	/^utf-8	@	pytest	.	fixture	\\n	def	tips_df	(	datapath	)	:	\\n	    	return	read_csv	(	datapath	(	'i/;"	f
tips_df	data/data_raw/valid.py	/^utf-8	@	pytest	.	fixture	\\n	def	tips_df	(	datapath	)	:	\\n	    	return	read_csv	(	datapath	(	'i/;"	f
title	data/bpe_corpus_raw/valid.py	/^utf-8	def	title	(	self	,	text	)	:	\\n	    	self	.	__write	(	'Title'	,	text	)	\\n		$/;"	f
title	data/data_raw/valid.py	/^utf-8	def	title	(	self	,	text	)	:	\\n	    	self	.	__write	(	'Title'	,	text	)	\\n		$/;"	f
tix_resetoptions	data/bpe_corpus_raw/valid.py	/^utf-8	def	tix_resetoptions	(	self	,	newScheme	,	newFontSet	,	newScmPrio	=	None	)	:	\\n	    	if	n/;"	f
tix_resetoptions	data/data_raw/valid.py	/^utf-8	def	tix_resetoptions	(	self	,	newScheme	,	newFontSet	,	newScmPrio	=	None	)	:	\\n	    	if	n/;"	f
tmpl_left	data/bpe_corpus_raw/train.py	/^utf-8	@	staticmethod	\\n	def	tmpl_left	(	s	,	chars	)	:	\\n	    	return	s	[	0	:	_int_arg	(	chars	/;"	f
tmpl_left	data/data_raw/train.py	/^utf-8	@	staticmethod	\\n	def	tmpl_left	(	s	,	chars	)	:	\\n	    	return	s	[	0	:	_int_arg	(	chars	/;"	f
to16bit	data/bpe_corpus_raw/valid.py	/^utf-8	def	to16bit	(	array	)	:	\\n	    	return	old_div	(	65535.0	*	array	,	nanmax	(	array	)	)	.	a/;"	f
to16bit	data/data_raw/valid.py	/^utf-8	def	to16bit	(	array	)	:	\\n	    	return	old_div	(	65535.0	*	array	,	nanmax	(	array	)	)	.	a/;"	f
toDOM	data/bpe_corpus_raw/train.py	/^utf-8	def	toDOM	(	self	,	bds	=	None	,	parent	=	None	,	element_name	=	None	)	:	\\n	    	if	bds	is/;"	f
toDOM	data/data_raw/train.py	/^utf-8	def	toDOM	(	self	,	bds	=	None	,	parent	=	None	,	element_name	=	None	)	:	\\n	    	if	bds	is/;"	f
toDict	data/bpe_corpus_raw/train.py	/^utf-8	def	toDict	(	self	)	:	\\n	    	d	=	super	(	ImageBuild	,	self	)	.	toDict	(	)	\\n	if	self	.	/;"	f
toDict	data/data_raw/train.py	/^utf-8	def	toDict	(	self	)	:	\\n	    	d	=	super	(	ImageBuild	,	self	)	.	toDict	(	)	\\n	if	self	.	/;"	f
toSingleBonds	data/bpe_corpus_raw/valid.py	/^utf-8	def	toSingleBonds	(	self	)	:	\\n	    	cython	.	declare	(	atom1	=	Atom	,	atom2	=	Atom	,	bon/;"	f
toSingleBonds	data/data_raw/valid.py	/^utf-8	def	toSingleBonds	(	self	)	:	\\n	    	cython	.	declare	(	atom1	=	Atom	,	atom2	=	Atom	,	bon/;"	f
toUuid	data/bpe_corpus_raw/test.py	/^utf-8	def	toUuid	(	fullClassName	)	:	\\n	    	return	uuid	.	uuid5	(	uuid	.	NAMESPACE_URL	,	str	(/;"	f
toUuid	data/data_raw/test.py	/^utf-8	def	toUuid	(	fullClassName	)	:	\\n	    	return	uuid	.	uuid5	(	uuid	.	NAMESPACE_URL	,	str	(/;"	f
to_METRICWX	data/bpe_corpus_raw/valid.py	/^utf-8	def	to_METRICWX	(	datadict	)	:	\\n	    	return	to_std_system	(	datadict	,	weewx	.	METRICWX/;"	f
to_METRICWX	data/data_raw/valid.py	/^utf-8	def	to_METRICWX	(	datadict	)	:	\\n	    	return	to_std_system	(	datadict	,	weewx	.	METRICWX/;"	f
to_date	data/bpe_corpus_raw/valid.py	/^utf-8	def	to_date	(	dt	,	tzinfo	=	None	,	format	=	None	)	:	\\n	    	d	=	to_datetime	(	dt	,	tzinf/;"	f
to_date	data/data_raw/valid.py	/^utf-8	def	to_date	(	dt	,	tzinfo	=	None	,	format	=	None	)	:	\\n	    	d	=	to_datetime	(	dt	,	tzinf/;"	f
to_dense	data/bpe_corpus_raw/valid.py	/^utf-8	def	to_dense	(	self	,	name	=	'to_dense'	)	:	\\n	    	with	self	.	_name_scope	(	name	)	:	\\/;"	f
to_dense	data/data_raw/valid.py	/^utf-8	def	to_dense	(	self	,	name	=	'to_dense'	)	:	\\n	    	with	self	.	_name_scope	(	name	)	:	\\/;"	f
to_dict	data/bpe_corpus_raw/test.py	/^utf-8	def	to_dict	(	self	)	:	\\n	    	result	=	{	}	\\n	for	attr	,	_	in	iteritems	(	self	.	swagge/;"	f
to_dict	data/bpe_corpus_raw/train.py	/^utf-8	def	to_dict	(	self	)	:	\\n	    	result	=	super	(	Progress	,	self	)	.	to_dict	(	)	\\n	label/;"	f
to_dict	data/bpe_corpus_raw/train.py	/^utf-8	def	to_dict	(	self	)	:	\\n	    	result	=	{	}	\\n	for	attr	,	_	in	six	.	iteritems	(	self	.	/;"	f
to_dict	data/data_raw/test.py	/^utf-8	def	to_dict	(	self	)	:	\\n	    	result	=	{	}	\\n	for	attr	,	_	in	iteritems	(	self	.	swagge/;"	f
to_dict	data/data_raw/train.py	/^utf-8	def	to_dict	(	self	)	:	\\n	    	result	=	super	(	Progress	,	self	)	.	to_dict	(	)	\\n	label/;"	f
to_dict	data/data_raw/train.py	/^utf-8	def	to_dict	(	self	)	:	\\n	    	result	=	{	}	\\n	for	attr	,	_	in	six	.	iteritems	(	self	.	/;"	f
to_frb	data/bpe_corpus_raw/valid.py	/^utf-8	def	to_frb	(	self	,	width	,	resolution	,	center	=	None	,	height	=	None	,	periodic	=	False	/;"	f
to_frb	data/data_raw/valid.py	/^utf-8	def	to_frb	(	self	,	width	,	resolution	,	center	=	None	,	height	=	None	,	periodic	=	False	/;"	f
to_int32	data/bpe_corpus_raw/valid.py	/^utf-8	def	to_int32	(	x	,	name	=	'ToInt32'	)	:	\\n	    	return	cast	(	x	,	dtypes	.	int32	,	name	=/;"	f
to_int32	data/data_raw/valid.py	/^utf-8	def	to_int32	(	x	,	name	=	'ToInt32'	)	:	\\n	    	return	cast	(	x	,	dtypes	.	int32	,	name	=/;"	f
to_json	data/bpe_corpus_raw/valid.py	/^utf-8	def	to_json	(	self	)	:	\\n	    	cursor	=	self	.	_get_cursor	(	)	\\n	cursor_object	=	False	/;"	f
to_json	data/data_raw/valid.py	/^utf-8	def	to_json	(	self	)	:	\\n	    	cursor	=	self	.	_get_cursor	(	)	\\n	cursor_object	=	False	/;"	f
to_local_timezone	data/bpe_corpus_raw/valid.py	/^utf-8	def	to_local_timezone	(	datetime	)	:	\\n	    	return	get_i18n	(	)	.	to_local_timezone	(	da/;"	f
to_local_timezone	data/data_raw/valid.py	/^utf-8	def	to_local_timezone	(	datetime	)	:	\\n	    	return	get_i18n	(	)	.	to_local_timezone	(	da/;"	f
to_pojo	data/bpe_corpus_raw/valid.py	/^utf-8	def	to_pojo	(	self	,	pojo_name	=	''	,	path	=	''	,	get_jar	=	True	)	:	\\n	    	assert_is_ty/;"	f
to_pojo	data/data_raw/valid.py	/^utf-8	def	to_pojo	(	self	,	pojo_name	=	''	,	path	=	''	,	get_jar	=	True	)	:	\\n	    	assert_is_ty/;"	f
to_proto	data/bpe_corpus_raw/train.py	/^utf-8	def	to_proto	(	*	tops	)	:	\\n	    	layers	=	OrderedDict	(	)	\\n	autonames	=	Counter	(	)	\\/;"	f
to_proto	data/data_raw/train.py	/^utf-8	def	to_proto	(	*	tops	)	:	\\n	    	layers	=	OrderedDict	(	)	\\n	autonames	=	Counter	(	)	\\/;"	f
to_py	data/bpe_corpus_raw/train.py	/^utf-8	def	to_py	(	self	)	:	\\n	    	return	self	.	to_python	(	)	\\n		$/;"	f
to_py	data/data_raw/train.py	/^utf-8	def	to_py	(	self	)	:	\\n	    	return	self	.	to_python	(	)	\\n		$/;"	f
to_records	data/bpe_corpus_raw/valid.py	/^utf-8	def	to_records	(	self	,	index	=	True	,	convert_datetime64	=	True	)	:	\\n	    	if	index	:	\\/;"	f
to_records	data/data_raw/valid.py	/^utf-8	def	to_records	(	self	,	index	=	True	,	convert_datetime64	=	True	)	:	\\n	    	if	index	:	\\/;"	f
to_script	data/bpe_corpus_raw/valid.py	/^utf-8	def	to_script	(	self	)	:	\\n	    	script	=	''	\\n	if	not	self	.	use_finder	:	\\n	        	/;"	f
to_script	data/data_raw/valid.py	/^utf-8	def	to_script	(	self	)	:	\\n	    	script	=	''	\\n	if	not	self	.	use_finder	:	\\n	        	/;"	f
to_spatial_layer	data/bpe_corpus_raw/train.py	/^utf-8	def	to_spatial_layer	(	self	,	target_time	=	None	)	:	\\n	    	return	RasterLayer	(	LayerTy/;"	f
to_spatial_layer	data/data_raw/train.py	/^utf-8	def	to_spatial_layer	(	self	,	target_time	=	None	)	:	\\n	    	return	RasterLayer	(	LayerTy/;"	f
to_str	data/bpe_corpus_raw/valid.py	/^utf-8	def	goto	(	self	,	href	,	method	=	'get'	,	**	args	)	:	\\n	    	scheme	,	host	,	path	,	quer/;"	f	function:goto	file:
to_str	data/data_raw/valid.py	/^utf-8	def	goto	(	self	,	href	,	method	=	'get'	,	**	args	)	:	\\n	    	scheme	,	host	,	path	,	quer/;"	f	function:goto	file:
to_string	data/bpe_corpus_raw/valid.py	/^utf-8	def	to_string	(	self	)	:	\\n	    	chunks	=	[	]	\\n	for	val	in	self	.	_values	:	\\n	       /;"	f
to_string	data/data_raw/valid.py	/^utf-8	def	to_string	(	self	)	:	\\n	    	chunks	=	[	]	\\n	for	val	in	self	.	_values	:	\\n	       /;"	f
to_wire	data/bpe_corpus_raw/valid.py	/^utf-8	def	to_wire	(	self	,	file	=	None	,	compress	=	None	,	origin	=	None	)	:	\\n	    	if	file	is/;"	f
to_wire	data/data_raw/valid.py	/^utf-8	def	to_wire	(	self	,	file	=	None	,	compress	=	None	,	origin	=	None	)	:	\\n	    	if	file	is/;"	f
to_xml	data/bpe_corpus_raw/train.py	/^utf-8	def	to_xml	(	self	)	:	\\n	    	s	=	'<?xml version="1.0" encoding="UTF-8"?>'	\\n	s	+=	'<Lif/;"	f
to_xml	data/data_raw/train.py	/^utf-8	def	to_xml	(	self	)	:	\\n	    	s	=	'<?xml version="1.0" encoding="UTF-8"?>'	\\n	s	+=	'<Lif/;"	f
to_yaml	data/bpe_corpus_raw/train.py	/^utf-8	def	to_yaml	(	self	,	adict	)	:	\\n	    	return	yaml	.	safe_dump	(	adict	)	\\n		$/;"	f
to_yaml	data/bpe_corpus_raw/valid.py	/^utf-8	def	to_yaml	(	self	)	:	\\n	    	return	yaml	.	dump	(	self	.	to_dict	(	)	,	default_flow_sty/;"	f
to_yaml	data/data_raw/train.py	/^utf-8	def	to_yaml	(	self	,	adict	)	:	\\n	    	return	yaml	.	safe_dump	(	adict	)	\\n		$/;"	f
to_yaml	data/data_raw/valid.py	/^utf-8	def	to_yaml	(	self	)	:	\\n	    	return	yaml	.	dump	(	self	.	to_dict	(	)	,	default_flow_sty/;"	f
to_zulu_string	data/bpe_corpus_raw/valid.py	/^utf-8	def	to_zulu_string	(	dt	)	:	\\n	    	if	dt	.	tzinfo	is	None	or	dt	.	tzinfo	.	utcoffset	(	d/;"	f
to_zulu_string	data/data_raw/valid.py	/^utf-8	def	to_zulu_string	(	dt	)	:	\\n	    	if	dt	.	tzinfo	is	None	or	dt	.	tzinfo	.	utcoffset	(	d/;"	f
todo	data/bpe_corpus_raw/train.py	/^utf-8	def	todo	(	self	,	p_identifier	)	:	\\n	    	result	=	None	\\n	\\n	def	todo_by_uid	(	p_iden/;"	f
todo	data/data_raw/train.py	/^utf-8	def	todo	(	self	,	p_identifier	)	:	\\n	    	result	=	None	\\n	\\n	def	todo_by_uid	(	p_iden/;"	f
todo_by_linenumber	data/bpe_corpus_raw/train.py	/^utf-8	def	todo	(	self	,	p_identifier	)	:	\\n	    	result	=	None	\\n	\\n	def	todo_by_uid	(	p_iden/;"	f	function:todo.todo_by_uid	file:
todo_by_linenumber	data/data_raw/train.py	/^utf-8	def	todo	(	self	,	p_identifier	)	:	\\n	    	result	=	None	\\n	\\n	def	todo_by_uid	(	p_iden/;"	f	function:todo.todo_by_uid	file:
todo_by_regexp	data/bpe_corpus_raw/train.py	/^utf-8	def	todo	(	self	,	p_identifier	)	:	\\n	    	result	=	None	\\n	\\n	def	todo_by_uid	(	p_iden/;"	f	function:todo.todo_by_uid.todo_by_linenumber	file:
todo_by_regexp	data/data_raw/train.py	/^utf-8	def	todo	(	self	,	p_identifier	)	:	\\n	    	result	=	None	\\n	\\n	def	todo_by_uid	(	p_iden/;"	f	function:todo.todo_by_uid.todo_by_linenumber	file:
todo_by_uid	data/bpe_corpus_raw/train.py	/^utf-8	def	todo	(	self	,	p_identifier	)	:	\\n	    	result	=	None	\\n	\\n	def	todo_by_uid	(	p_iden/;"	f	function:todo	file:
todo_by_uid	data/data_raw/train.py	/^utf-8	def	todo	(	self	,	p_identifier	)	:	\\n	    	result	=	None	\\n	\\n	def	todo_by_uid	(	p_iden/;"	f	function:todo	file:
toggle_nop_keepalive	data/bpe_corpus_raw/train.py	/^utf-8	def	toggle_nop_keepalive	(	self	)	:	\\n	    	if	self	.	nop_keep_alive	and	self	.	nop_keep_/;"	f
toggle_nop_keepalive	data/data_raw/train.py	/^utf-8	def	toggle_nop_keepalive	(	self	)	:	\\n	    	if	self	.	nop_keep_alive	and	self	.	nop_keep_/;"	f
tokenize_docstring	data_utils/data_to_text.py	/^def tokenize_docstring(docstring):$/;"	f
tokenize_line	data/bpe_corpus_raw/train.py	/^utf-8	@	classmethod	\\n	def	tokenize_line	(	cls	,	filename	,	expectation_string	,	line_number	)	/;"	f
tokenize_line	data/data_raw/train.py	/^utf-8	@	classmethod	\\n	def	tokenize_line	(	cls	,	filename	,	expectation_string	,	line_number	)	/;"	f
tokenize_python	data_utils/data_to_text.py	/^def tokenize_python(fn_string):$/;"	f
tokenize_row	data_utils/data_to_text.py	/^def tokenize_row(row):$/;"	f
tokenized_docstring	data_utils/data_to_text.py	/^tokenized_python, tokenized_docstring = zip(*results)$/;"	v
tokenized_python	data_utils/data_to_text.py	/^tokenized_python, tokenized_docstring = zip(*results)$/;"	v
tokens_with_unknowns	data/bpe_corpus_raw/valid.py	/^utf-8	def	tokens_with_unknowns	(	self	)	:	\\n	    	unknowns	=	self	.	unknowns_by_pos	\\n	for	_	i/;"	f
tokens_with_unknowns	data/data_raw/valid.py	/^utf-8	def	tokens_with_unknowns	(	self	)	:	\\n	    	unknowns	=	self	.	unknowns_by_pos	\\n	for	_	i/;"	f
tolist	data/bpe_corpus_raw/valid.py	/^utf-8	def	tolist	(	self	)	:	\\n	    	return	list	(	self	.	asobject	)	\\n		$/;"	f
tolist	data/data_raw/valid.py	/^utf-8	def	tolist	(	self	)	:	\\n	    	return	list	(	self	.	asobject	)	\\n		$/;"	f
tool_decorator	data/bpe_corpus_raw/test.py	/^utf-8	def	__call__	(	self	,	*	args	,	**	kwargs	)	:	\\n	    	if	args	:	\\n	        	raise	TypeErr/;"	f	function:__call__	file:
tool_decorator	data/data_raw/test.py	/^utf-8	def	__call__	(	self	,	*	args	,	**	kwargs	)	:	\\n	    	if	args	:	\\n	        	raise	TypeErr/;"	f	function:__call__	file:
top	data/bpe_corpus_raw/valid.py	/^utf-8	def	top	(	self	,	k	)	:	\\n	    	if	not	1	<=	k	<=	len	(	self	)	:	\\n	        	raise	ValueEr/;"	f
top	data/data_raw/valid.py	/^utf-8	def	top	(	self	,	k	)	:	\\n	    	if	not	1	<=	k	<=	len	(	self	)	:	\\n	        	raise	ValueEr/;"	f
topic_continuum_set_post	data/bpe_corpus_raw/valid.py	/^utf-8	def	topic_continuum_set_post	(	self	,	_topics_continuum_set	)	:	\\n	    	return	\\n		$/;"	f
topic_continuum_set_post	data/data_raw/valid.py	/^utf-8	def	topic_continuum_set_post	(	self	,	_topics_continuum_set	)	:	\\n	    	return	\\n		$/;"	f
topological_sort	data/bpe_corpus_raw/valid.py	/^utf-8	def	topological_sort	(	self	)	:	\\n	    	result	=	[	]	\\n	alist	=	{	}	\\n	for	k	,	v	in	sel/;"	f
topological_sort	data/data_raw/valid.py	/^utf-8	def	topological_sort	(	self	)	:	\\n	    	result	=	[	]	\\n	alist	=	{	}	\\n	for	k	,	v	in	sel/;"	f
total_concentration	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	total_concentration	(	self	)	:	\\n	    	return	self	.	_total_concentrat/;"	f
total_concentration	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	total_concentration	(	self	)	:	\\n	    	return	self	.	_total_concentrat/;"	f
total_seconds	data/bpe_corpus_raw/valid.py	/^utf-8	def	total_seconds	(	self	)	:	\\n	    	return	self	.	_maybe_mask_results	(	1e-09	*	self	.	a/;"	f
total_seconds	data/data_raw/valid.py	/^utf-8	def	total_seconds	(	self	)	:	\\n	    	return	self	.	_maybe_mask_results	(	1e-09	*	self	.	a/;"	f
trace	data/bpe_corpus_raw/train.py	/^utf-8	def	trace	(	X	)	:	\\n	    	return	extract_diag	(	X	)	.	sum	(	)	\\n		$/;"	f
trace	data/data_raw/train.py	/^utf-8	def	trace	(	X	)	:	\\n	    	return	extract_diag	(	X	)	.	sum	(	)	\\n		$/;"	f
track	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	track	(	self	)	:	\\n	    	return	self	.	device	.	track	\\n		$/;"	f
track	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	track	(	self	)	:	\\n	    	return	self	.	device	.	track	\\n		$/;"	f
trading_account	data/bpe_corpus_raw/valid.py	/^utf-8	def	trading_account	(	self	,	cdty	)	:	\\n	    	key	=	namespace	,	mnemonic	=	cdty	.	namespa/;"	f
trading_account	data/data_raw/valid.py	/^utf-8	def	trading_account	(	self	,	cdty	)	:	\\n	    	key	=	namespace	,	mnemonic	=	cdty	.	namespa/;"	f
train_doc_lines	data_utils/data_to_text.py	/^train_doc_lines = tokenized_docstring[:train_end]$/;"	v
train_end	data_utils/data_to_text.py	/^train_end = int(train_prop * num_lines)$/;"	v
train_path	models/preprocess.py	/^    def train_path(lang):$/;"	f	function:main	file:
train_prop	data_utils/data_to_text.py	/^train_prop, val_prop = 0.8, 0.1$/;"	v
train_python_lines	data_utils/data_to_text.py	/^train_python_lines = tokenized_python[:train_end]$/;"	v
training	data/bpe_corpus_raw/train.py	/^utf-8	def	training	(	self	,	loss	,	learning_rate	,	momentum	)	:	\\n	    	tf	.	summary	.	scalar	(/;"	f
training	data/data_raw/train.py	/^utf-8	def	training	(	self	,	loss	,	learning_rate	,	momentum	)	:	\\n	    	tf	.	summary	.	scalar	(/;"	f
training_frame	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	training_frame	(	self	)	:	\\n	    	return	self	.	_parms	.	get	(	'traini/;"	f
training_frame	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	training_frame	(	self	)	:	\\n	    	return	self	.	_parms	.	get	(	'traini/;"	f
transactions	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	transactions	(	self	)	:	\\n	    	return	tuple	(	tx	for	tx	in	self	.	_tr/;"	f
transactions	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	transactions	(	self	)	:	\\n	    	return	tuple	(	tx	for	tx	in	self	.	_tr/;"	f
transform	data/bpe_corpus_raw/train.py	/^utf-8	def	transform	(	self	,	usage_info	,	block_structure	)	:	\\n	    	required_content	=	self	./;"	f
transform	data/bpe_corpus_raw/valid.py	/^utf-8	@	filterable	\\n	def	sessions	(	self	,	filters	,	options	)	:	\\n	\\n	    	def	transform	(	/;"	f	function:sessions	file:
transform	data/data_raw/train.py	/^utf-8	def	transform	(	self	,	usage_info	,	block_structure	)	:	\\n	    	required_content	=	self	./;"	f
transform	data/data_raw/valid.py	/^utf-8	@	filterable	\\n	def	sessions	(	self	,	filters	,	options	)	:	\\n	\\n	    	def	transform	(	/;"	f	function:sessions	file:
transform_line	data/bpe_corpus_raw/test.py	/^utf-8	def	transform_line	(	self	,	line	,	continue_prompt	)	:	\\n	    	for	transformer	in	self	.	/;"	f
transform_line	data/data_raw/test.py	/^utf-8	def	transform_line	(	self	,	line	,	continue_prompt	)	:	\\n	    	for	transformer	in	self	.	/;"	f
transform_op_if_inside_handler	data/bpe_corpus_raw/train.py	/^utf-8	def	transform_op_if_inside_handler	(	info	,	op	,	keep_if_possible	=	True	)	:	\\n	    	if	o/;"	f
transform_op_if_inside_handler	data/data_raw/train.py	/^utf-8	def	transform_op_if_inside_handler	(	info	,	op	,	keep_if_possible	=	True	)	:	\\n	    	if	o/;"	f
transform_resource_filename	data/bpe_corpus_raw/train.py	/^utf-8	def	transform_resource_filename	(	*	filename	)	:	\\n	    	return	os	.	path	.	join	(	paths	/;"	f
transform_resource_filename	data/data_raw/train.py	/^utf-8	def	transform_resource_filename	(	*	filename	)	:	\\n	    	return	os	.	path	.	join	(	paths	/;"	f
transform_wildmons	data/bpe_corpus_raw/train.py	/^utf-8	def	transform_wildmons	(	asm	,	map_internal_ids	)	:	\\n	    	asmlines	=	asm	.	split	(	'\\\\/;"	f
transform_wildmons	data/data_raw/train.py	/^utf-8	def	transform_wildmons	(	asm	,	map_internal_ids	)	:	\\n	    	asmlines	=	asm	.	split	(	'\\\\/;"	f
transition_to_unpublished	data/bpe_corpus_raw/valid.py	/^utf-8	@	schedule_require_active	\\n	def	transition_to_unpublished	(	self	)	:	\\n	    	initial_st/;"	f
transition_to_unpublished	data/data_raw/valid.py	/^utf-8	@	schedule_require_active	\\n	def	transition_to_unpublished	(	self	)	:	\\n	    	initial_st/;"	f
transitive_inputs	data/bpe_corpus_raw/valid.py	/^utf-8	def	transitive_inputs	(	self	,	node_name	,	include_control	=	True	,	\\n	include_reversed_r/;"	f
transitive_inputs	data/data_raw/valid.py	/^utf-8	def	transitive_inputs	(	self	,	node_name	,	include_control	=	True	,	\\n	include_reversed_r/;"	f
translate	data/bpe_corpus_raw/test.py	/^utf-8	def	translate	(	self	,	hWndFrom	=	HWND_DESKTOP	,	hWndTo	=	HWND_DESKTOP	)	:	\\n	    	return/;"	f
translate	data/bpe_corpus_raw/valid.py	/^utf-8	def	translate	(	self	,	*	args	)	:	\\n	    	t	=	Vector	(	*	args	)	\\n	self	.	setTranslate	(/;"	f
translate	data/bpe_corpus_raw/valid.py	/^utf-8	def	translate	(	self	,	values	,	target_language	,	format_	=	None	,	source_language	=	\\n	N/;"	f
translate	data/data_raw/test.py	/^utf-8	def	translate	(	self	,	hWndFrom	=	HWND_DESKTOP	,	hWndTo	=	HWND_DESKTOP	)	:	\\n	    	return/;"	f
translate	data/data_raw/valid.py	/^utf-8	def	translate	(	self	,	*	args	)	:	\\n	    	t	=	Vector	(	*	args	)	\\n	self	.	setTranslate	(/;"	f
translate	data/data_raw/valid.py	/^utf-8	def	translate	(	self	,	values	,	target_language	,	format_	=	None	,	source_language	=	\\n	N/;"	f
translate_idps	data/bpe_corpus_raw/test.py	/^utf-8	@	staticmethod	\\n	def	translate_idps	(	idps	,	api_version	)	:	\\n	    	idp_list	=	[	]	\\n/;"	f
translate_idps	data/data_raw/test.py	/^utf-8	@	staticmethod	\\n	def	translate_idps	(	idps	,	api_version	)	:	\\n	    	idp_list	=	[	]	\\n/;"	f
translation	data/bpe_corpus_raw/test.py	/^utf-8	def	translation	(	self	,	youtube_id	,	transcripts	)	:	\\n	    	sub	,	other_lang	=	transcri/;"	f
translation	data/data_raw/test.py	/^utf-8	def	translation	(	self	,	youtube_id	,	transcripts	)	:	\\n	    	sub	,	other_lang	=	transcri/;"	f
trapz	data/bpe_corpus_raw/valid.py	/^utf-8	def	trapz	(	y	,	x	=	None	,	dx	=	1.0	,	axis	=	-	1	)	:	\\n	    	y	=	asanyarray	(	y	)	\\n	if	/;"	f
trapz	data/data_raw/valid.py	/^utf-8	def	trapz	(	y	,	x	=	None	,	dx	=	1.0	,	axis	=	-	1	)	:	\\n	    	y	=	asanyarray	(	y	)	\\n	if	/;"	f
traverse_hiearchy	data/bpe_corpus_raw/train.py	/^utf-8	def	traverse_hiearchy	(	service	)	:	\\n	    	accounts	=	service	.	management	(	)	.	account/;"	f
traverse_hiearchy	data/data_raw/train.py	/^utf-8	def	traverse_hiearchy	(	service	)	:	\\n	    	accounts	=	service	.	management	(	)	.	account/;"	f
tree_serialize	data/bpe_corpus_raw/valid.py	/^utf-8	def	tree_serialize	(	tree_handle	,	name	=	None	)	:	\\n	    	_ctx	=	_context	.	context	(	)	/;"	f
tree_serialize	data/data_raw/valid.py	/^utf-8	def	tree_serialize	(	tree_handle	,	name	=	None	)	:	\\n	    	_ctx	=	_context	.	context	(	)	/;"	f
tremolo	data/bpe_corpus_raw/train.py	/^utf-8	def	tremolo	(	self	,	speed	=	6.0	,	depth	=	40.0	)	:	\\n	    	if	not	is_number	(	speed	)	or/;"	f
tremolo	data/data_raw/train.py	/^utf-8	def	tremolo	(	self	,	speed	=	6.0	,	depth	=	40.0	)	:	\\n	    	if	not	is_number	(	speed	)	or/;"	f
trigger	data/bpe_corpus_raw/valid.py	/^utf-8	def	trigger	(	self	)	:	\\n	    	tnow	=	time	.	time	(	)	\\n	if	tnow	<	self	.	last_time	:	\\/;"	f
trigger	data/data_raw/valid.py	/^utf-8	def	trigger	(	self	)	:	\\n	    	tnow	=	time	.	time	(	)	\\n	if	tnow	<	self	.	last_time	:	\\/;"	f
trigger_previews	data/bpe_corpus_raw/valid.py	/^utf-8	@	XBlock	.	json_handler	\\n	def	trigger_previews	(	self	,	request_body	,	suffix	)	:	\\n	  /;"	f
trigger_previews	data/data_raw/valid.py	/^utf-8	@	XBlock	.	json_handler	\\n	def	trigger_previews	(	self	,	request_body	,	suffix	)	:	\\n	  /;"	f
tril	data/bpe_corpus_raw/train.py	/^utf-8	def	tril	(	m	,	k	=	0	)	:	\\n	    	m	=	asanyarray	(	m	)	\\n	mask	=	tri	(	*	m	.	shape	[	-	2	/;"	f
tril	data/data_raw/train.py	/^utf-8	def	tril	(	m	,	k	=	0	)	:	\\n	    	m	=	asanyarray	(	m	)	\\n	mask	=	tri	(	*	m	.	shape	[	-	2	/;"	f
triple	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	triple	(	self	)	:	\\n	    	with	ffi	.	OutputString	(	owned	=	False	)	as/;"	f
triple	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	triple	(	self	)	:	\\n	    	with	ffi	.	OutputString	(	owned	=	False	)	as/;"	f
truediv	data/bpe_corpus_raw/valid.py	/^utf-8	def	truediv	(	x	,	y	,	name	=	None	)	:	\\n	    	return	_truediv_python3	(	x	,	y	,	name	)	\\/;"	f
truediv	data/data_raw/valid.py	/^utf-8	def	truediv	(	x	,	y	,	name	=	None	)	:	\\n	    	return	_truediv_python3	(	x	,	y	,	name	)	\\/;"	f
trunc	data/bpe_corpus_raw/valid.py	/^utf-8	def	trunc	(	self	,	*	args	,	**	kwargs	)	:	\\n	    	return	op	.	trunc	(	self	,	*	args	,	**	/;"	f
trunc	data/data_raw/valid.py	/^utf-8	def	trunc	(	self	,	*	args	,	**	kwargs	)	:	\\n	    	return	op	.	trunc	(	self	,	*	args	,	**	/;"	f
truncate_html_words	data/bpe_corpus_raw/train.py	/^utf-8	def	truncate_html_words	(	s	,	num	,	end_text	=	'...'	)	:	\\n	    	s	=	force_unicode	(	s	)	/;"	f
truncate_html_words	data/data_raw/train.py	/^utf-8	def	truncate_html_words	(	s	,	num	,	end_text	=	'...'	)	:	\\n	    	s	=	force_unicode	(	s	)	/;"	f
trusted	data/bpe_corpus_raw/valid.py	/^utf-8	def	trusted	(	self	,	scope	=	None	)	:	\\n	    	trust	=	[	(	x	[	'scope'	]	,	x	[	'vk'	]	)	fo/;"	f
trusted	data/data_raw/valid.py	/^utf-8	def	trusted	(	self	,	scope	=	None	)	:	\\n	    	trust	=	[	(	x	[	'scope'	]	,	x	[	'vk'	]	)	fo/;"	f
try_open_completions_event	data/bpe_corpus_raw/train.py	/^utf-8	def	try_open_completions_event	(	self	,	event	)	:	\\n	    	lastchar	=	self	.	text	.	get	(	/;"	f
try_open_completions_event	data/data_raw/train.py	/^utf-8	def	try_open_completions_event	(	self	,	event	)	:	\\n	    	lastchar	=	self	.	text	.	get	(	/;"	f
try_passwordless_ssh	data/bpe_corpus_raw/valid.py	/^utf-8	def	try_passwordless_ssh	(	server	,	keyfile	,	paramiko	=	None	)	:	\\n	    	if	paramiko	is	/;"	f
try_passwordless_ssh	data/data_raw/valid.py	/^utf-8	def	try_passwordless_ssh	(	server	,	keyfile	,	paramiko	=	None	)	:	\\n	    	if	paramiko	is	/;"	f
ttest_rel	data/bpe_corpus_raw/valid.py	/^utf-8	def	ttest_rel	(	a	,	b	,	axis	=	0	,	nan_policy	=	'propagate'	)	:	\\n	    	a	,	b	,	axis	=	_c/;"	f
ttest_rel	data/data_raw/valid.py	/^utf-8	def	ttest_rel	(	a	,	b	,	axis	=	0	,	nan_policy	=	'propagate'	)	:	\\n	    	a	,	b	,	axis	=	_c/;"	f
tunnel_patch	data/bpe_corpus_raw/train.py	/^utf-8	def	tunnel_patch	(	http	)	:	\\n	    	request_orig	=	http	.	request	\\n	\\n	def	new_request/;"	f
tunnel_patch	data/data_raw/train.py	/^utf-8	def	tunnel_patch	(	http	)	:	\\n	    	request_orig	=	http	.	request	\\n	\\n	def	new_request/;"	f
tuple	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	tuple	(	self	)	:	\\n	    	return	self	.	major	,	self	.	minor	,	self	.	p/;"	f
tuple	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	tuple	(	self	)	:	\\n	    	return	tuple	(	[	self	[	i	]	.	tuple	for	i	in	/;"	f
tuple	data/bpe_corpus_raw/valid.py	/^utf-8	def	tuple	(	self	)	:	\\n	    	return	self	.	__tuple	\\n		$/;"	f
tuple	data/data_raw/train.py	/^utf-8	@	property	\\n	def	tuple	(	self	)	:	\\n	    	return	self	.	major	,	self	.	minor	,	self	.	p/;"	f
tuple	data/data_raw/train.py	/^utf-8	@	property	\\n	def	tuple	(	self	)	:	\\n	    	return	tuple	(	[	self	[	i	]	.	tuple	for	i	in	/;"	f
tuple	data/data_raw/valid.py	/^utf-8	def	tuple	(	self	)	:	\\n	    	return	self	.	__tuple	\\n		$/;"	f
tuple_signature_for_components	data/bpe_corpus_raw/train.py	/^utf-8	@	staticmethod	\\n	def	tuple_signature_for_components	(	components	:	Sequence	[	Mapping	[	/;"	f
tuple_signature_for_components	data/data_raw/train.py	/^utf-8	@	staticmethod	\\n	def	tuple_signature_for_components	(	components	:	Sequence	[	Mapping	[	/;"	f
type	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	type	(	self	)	:	\\n	    	return	self	.	_type	\\n		$/;"	f
type	data/data_raw/train.py	/^utf-8	@	property	\\n	def	type	(	self	)	:	\\n	    	return	self	.	_type	\\n		$/;"	f
type_description	data/bpe_corpus_raw/test.py	/^utf-8	def	type_description	(	name	,	types	)	:	\\n	    	return	types	[	dereference_type	(	name	)	/;"	f
type_description	data/data_raw/test.py	/^utf-8	def	type_description	(	name	,	types	)	:	\\n	    	return	types	[	dereference_type	(	name	)	/;"	f
typify	data/bpe_corpus_raw/train.py	/^utf-8	def	typify	(	fn	,	hkt	=	None	)	:	\\n	    	args	=	[	chr	(	i	)	for	i	in	range	(	97	,	98	+	fn/;"	f
typify	data/data_raw/train.py	/^utf-8	def	typify	(	fn	,	hkt	=	None	)	:	\\n	    	args	=	[	chr	(	i	)	for	i	in	range	(	97	,	98	+	fn/;"	f
tz_aware_fixture	data/bpe_corpus_raw/valid.py	/^utf-8	@	td	.	parametrize_fixture_doc	(	str	(	TIMEZONES	[	1	:	]	)	)	\\n	@	pytest	.	fixture	(	para/;"	f
tz_aware_fixture	data/data_raw/valid.py	/^utf-8	@	td	.	parametrize_fixture_doc	(	str	(	TIMEZONES	[	1	:	]	)	)	\\n	@	pytest	.	fixture	(	para/;"	f
tzname	data/bpe_corpus_raw/train.py	/^utf-8	def	tzname	(	self	,	dt	,	is_dst	=	None	)	:	\\n	    	return	self	.	_tzname	\\n		$/;"	f
tzname	data/data_raw/train.py	/^utf-8	def	tzname	(	self	,	dt	,	is_dst	=	None	)	:	\\n	    	return	self	.	_tzname	\\n		$/;"	f
uCSIsCatP	data/bpe_corpus_raw/valid.py	/^utf-8	def	uCSIsCatP	(	code	)	:	\\n	    	ret	=	libxml2mod	.	xmlUCSIsCatP	(	code	)	\\n	return	ret	/;"	f
uCSIsCatP	data/data_raw/valid.py	/^utf-8	def	uCSIsCatP	(	code	)	:	\\n	    	ret	=	libxml2mod	.	xmlUCSIsCatP	(	code	)	\\n	return	ret	/;"	f
uCSIsCurrencySymbols	data/bpe_corpus_raw/valid.py	/^utf-8	def	uCSIsCurrencySymbols	(	code	)	:	\\n	    	ret	=	libxml2mod	.	xmlUCSIsCurrencySymbols	(	/;"	f
uCSIsCurrencySymbols	data/data_raw/valid.py	/^utf-8	def	uCSIsCurrencySymbols	(	code	)	:	\\n	    	ret	=	libxml2mod	.	xmlUCSIsCurrencySymbols	(	/;"	f
uCSIsSmallFormVariants	data/bpe_corpus_raw/train.py	/^utf-8	def	uCSIsSmallFormVariants	(	code	)	:	\\n	    	ret	=	libxml2mod	.	xmlUCSIsSmallFormVariant/;"	f
uCSIsSmallFormVariants	data/data_raw/train.py	/^utf-8	def	uCSIsSmallFormVariants	(	code	)	:	\\n	    	ret	=	libxml2mod	.	xmlUCSIsSmallFormVariant/;"	f
uCSIsSpacingModifierLetters	data/bpe_corpus_raw/train.py	/^utf-8	def	uCSIsSpacingModifierLetters	(	code	)	:	\\n	    	ret	=	libxml2mod	.	xmlUCSIsSpacingModi/;"	f
uCSIsSpacingModifierLetters	data/data_raw/train.py	/^utf-8	def	uCSIsSpacingModifierLetters	(	code	)	:	\\n	    	ret	=	libxml2mod	.	xmlUCSIsSpacingModi/;"	f
udnpgettext	data/bpe_corpus_raw/valid.py	/^utf-8	def	udnpgettext	(	self	,	domain	,	context	,	singular	,	plural	,	num	)	:	\\n	    	return	se/;"	f
udnpgettext	data/data_raw/valid.py	/^utf-8	def	udnpgettext	(	self	,	domain	,	context	,	singular	,	plural	,	num	)	:	\\n	    	return	se/;"	f
unary_predicate	data/bpe_corpus_raw/train.py	/^utf-8	def	unary_predicate	(	func	)	:	\\n	    	func	.	argtypes	=	[	GEOM_PTR	]	\\n	func	.	restype	/;"	f
unary_predicate	data/data_raw/train.py	/^utf-8	def	unary_predicate	(	func	)	:	\\n	    	func	.	argtypes	=	[	GEOM_PTR	]	\\n	func	.	restype	/;"	f
unblind	data/bpe_corpus_raw/valid.py	/^utf-8	def	unblind	(	self	,	M	,	B	)	:	\\n	    	wasString	=	0	\\n	if	isinstance	(	M	,	types	.	Stri/;"	f
unblind	data/data_raw/valid.py	/^utf-8	def	unblind	(	self	,	M	,	B	)	:	\\n	    	wasString	=	0	\\n	if	isinstance	(	M	,	types	.	Stri/;"	f
unescape	data/bpe_corpus_raw/valid.py	/^utf-8	def	unescape	(	s	)	:	\\n	    	return	s	.	replace	(	'\\\\\\\\n'	,	'\\\\n'	)	.	replace	(	'\\/;"	f
unescape	data/data_raw/valid.py	/^utf-8	def	unescape	(	s	)	:	\\n	    	return	s	.	replace	(	'\\\\\\\\n'	,	'\\\\n'	)	.	replace	(	'\\/;"	f
unexpected	data/bpe_corpus_raw/test.py	/^utf-8	def	_setCssText	(	self	,	cssText	)	:	\\n	    	self	.	_checkReadonly	(	)	\\n	tokenizer	=	se/;"	f	function:_setCssText.ident	file:
unexpected	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	unexpected	(	self	)	:	\\n	    	return	self	.	_unexpected	(	)	\\n		$/;"	f
unexpected	data/data_raw/test.py	/^utf-8	def	_setCssText	(	self	,	cssText	)	:	\\n	    	self	.	_checkReadonly	(	)	\\n	tokenizer	=	se/;"	f	function:_setCssText.ident	file:
unexpected	data/data_raw/train.py	/^utf-8	@	property	\\n	def	unexpected	(	self	)	:	\\n	    	return	self	.	_unexpected	(	)	\\n		$/;"	f
unicode	data/bpe_corpus_raw/train.py	/^utf-8	def	unicode	(	self	,	width	)	:	\\n	    	from	time	import	time	\\n	try	:	\\n	        	time_/;"	f
unicode	data/data_raw/train.py	/^utf-8	def	unicode	(	self	,	width	)	:	\\n	    	from	time	import	time	\\n	try	:	\\n	        	time_/;"	f
unicode_is_ascii	data/bpe_corpus_raw/valid.py	/^utf-8	def	unicode_is_ascii	(	u_string	)	:	\\n	    	assert	isinstance	(	u_string	,	str	)	\\n	try	/;"	f
unicode_is_ascii	data/data_raw/valid.py	/^utf-8	def	unicode_is_ascii	(	u_string	)	:	\\n	    	assert	isinstance	(	u_string	,	str	)	\\n	try	/;"	f
unified_diff	data/bpe_corpus_raw/valid.py	/^utf-8	def	unified_diff	(	a	,	b	,	fromfile	=	''	,	tofile	=	''	,	fromfiledate	=	''	,	tofiledate	=	/;"	f
unified_diff	data/data_raw/valid.py	/^utf-8	def	unified_diff	(	a	,	b	,	fromfile	=	''	,	tofile	=	''	,	fromfiledate	=	''	,	tofiledate	=	/;"	f
union	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	union	(	geoms	)	:	\\n	    	if	len	(	geoms	)	==	0	:	\\n	        	ret/;"	f
union	data/bpe_corpus_raw/valid.py	/^utf-8	def	union	(	self	,	other	)	:	\\n	    	self	.	_assert_can_do_setop	(	other	)	\\n	other	,	re/;"	f
union	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	union	(	geoms	)	:	\\n	    	if	len	(	geoms	)	==	0	:	\\n	        	ret/;"	f
union	data/data_raw/valid.py	/^utf-8	def	union	(	self	,	other	)	:	\\n	    	self	.	_assert_can_do_setop	(	other	)	\\n	other	,	re/;"	f
unique_id	data/bpe_corpus_raw/valid.py	/^utf-8	def	unique_id	(	name	)	:	\\n	    	return	'{0}-{1}-{2}'	.	format	(	name	,	int	(	time	.	time/;"	f
unique_id	data/data_raw/valid.py	/^utf-8	def	unique_id	(	name	)	:	\\n	    	return	'{0}-{1}-{2}'	.	format	(	name	,	int	(	time	.	time/;"	f
unit_of_measurement	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	unit_of_measurement	(	self	)	:	\\n	    	return	self	.	_unit_of_measurem/;"	f
unit_of_measurement	data/data_raw/train.py	/^utf-8	@	property	\\n	def	unit_of_measurement	(	self	)	:	\\n	    	return	self	.	_unit_of_measurem/;"	f
unit_variance_mlpg_matrix	data/bpe_corpus_raw/test.py	/^utf-8	def	unit_variance_mlpg_matrix	(	windows	,	T	)	:	\\n	    	win_mats	=	build_win_mats	(	windo/;"	f
unit_variance_mlpg_matrix	data/data_raw/test.py	/^utf-8	def	unit_variance_mlpg_matrix	(	windows	,	T	)	:	\\n	    	win_mats	=	build_win_mats	(	windo/;"	f
unix_md5_passwd	data/bpe_corpus_raw/train.py	/^utf-8	def	unix_md5_passwd	(	password	,	salt	,	magic	=	'$1$'	,	**	kwargs	)	:	\\n	\\n	    	def	_en/;"	f
unix_md5_passwd	data/data_raw/train.py	/^utf-8	def	unix_md5_passwd	(	password	,	salt	,	magic	=	'$1$'	,	**	kwargs	)	:	\\n	\\n	    	def	_en/;"	f
unpack	data/bpe_corpus_raw/valid.py	/^utf-8	def	unpack	(	ctypes_obj	,	string	,	bytes	=	None	)	:	\\n	    	if	bytes	is	None	:	\\n	      /;"	f
unpack	data/bpe_corpus_raw/valid.py	/^utf-8	def	unpack	(	self	,	format_str	,	data_range	)	:	\\n	    	new_format_str	=	''	.	join	(	'%c%/;"	f
unpack	data/data_raw/valid.py	/^utf-8	def	unpack	(	ctypes_obj	,	string	,	bytes	=	None	)	:	\\n	    	if	bytes	is	None	:	\\n	      /;"	f
unpack	data/data_raw/valid.py	/^utf-8	def	unpack	(	self	,	format_str	,	data_range	)	:	\\n	    	new_format_str	=	''	.	join	(	'%c%/;"	f
unpack_from	data/bpe_corpus_raw/train.py	/^utf-8	def	unpack_from	(	self	,	block	,	offset	=	0	)	:	\\n	    	self	.	_unpack_ident	(	block	,	of/;"	f
unpack_from	data/data_raw/train.py	/^utf-8	def	unpack_from	(	self	,	block	,	offset	=	0	)	:	\\n	    	self	.	_unpack_ident	(	block	,	of/;"	f
unpack_linkage	data/bpe_corpus_raw/valid.py	/^utf-8	def	_unpack_document	(	self	,	document	)	:	\\n	\\n	    	def	unpack_linkage	(	linkage	)	:	\\/;"	f	function:_unpack_document	file:
unpack_linkage	data/data_raw/valid.py	/^utf-8	def	_unpack_document	(	self	,	document	)	:	\\n	\\n	    	def	unpack_linkage	(	linkage	)	:	\\/;"	f	function:_unpack_document	file:
unpack_object	data/bpe_corpus_raw/valid.py	/^utf-8	def	_unpack_document	(	self	,	document	)	:	\\n	\\n	    	def	unpack_linkage	(	linkage	)	:	\\/;"	f	function:_unpack_document.unpack_linkage	file:
unpack_object	data/data_raw/valid.py	/^utf-8	def	_unpack_document	(	self	,	document	)	:	\\n	\\n	    	def	unpack_linkage	(	linkage	)	:	\\/;"	f	function:_unpack_document.unpack_linkage	file:
unregister	data/bpe_corpus_raw/valid.py	/^utf-8	def	unregister	(	self	)	:	\\n	    	if	self	.	impl	:	\\n	        	if	self	.	callback	is	not/;"	f
unregister	data/bpe_corpus_raw/valid.py	/^utf-8	def	unregister	(	self	,	entry_point	)	:	\\n	    	self	.	registered_providers	.	remove	(	en/;"	f
unregister	data/data_raw/valid.py	/^utf-8	def	unregister	(	self	)	:	\\n	    	if	self	.	impl	:	\\n	        	if	self	.	callback	is	not/;"	f
unregister	data/data_raw/valid.py	/^utf-8	def	unregister	(	self	,	entry_point	)	:	\\n	    	self	.	registered_providers	.	remove	(	en/;"	f
unregisterFromConference	data/bpe_corpus_raw/valid.py	/^utf-8	@	endpoints	.	method	(	CONF_GET_REQUEST	,	BooleanMessage	,	path	=	\\n	'conference\/{websaf/;"	f
unregisterFromConference	data/data_raw/valid.py	/^utf-8	@	endpoints	.	method	(	CONF_GET_REQUEST	,	BooleanMessage	,	path	=	\\n	'conference\/{websaf/;"	f
unsave_photo	data/bpe_corpus_raw/valid.py	/^utf-8	def	unsave_photo	(	self	,	media_id	,	removed_collection_ids	=	None	)	:	\\n	    	endpoint	=/;"	f
unsave_photo	data/data_raw/valid.py	/^utf-8	def	unsave_photo	(	self	,	media_id	,	removed_collection_ids	=	None	)	:	\\n	    	endpoint	=/;"	f
unsorted_segment_max	data/bpe_corpus_raw/train.py	/^utf-8	def	unsorted_segment_max	(	data	,	segment_ids	,	num_segments	,	name	=	None	)	:	\\n	    	_c/;"	f
unsorted_segment_max	data/data_raw/train.py	/^utf-8	def	unsorted_segment_max	(	data	,	segment_ids	,	num_segments	,	name	=	None	)	:	\\n	    	_c/;"	f
unsubscribe	data/bpe_corpus_raw/train.py	/^utf-8	def	unsubscribe	(	name	)	:	\\n	$/;"	f
unsubscribe	data/data_raw/train.py	/^utf-8	def	unsubscribe	(	name	)	:	\\n	$/;"	f
unwatch	data/bpe_corpus_raw/train.py	/^utf-8	def	unwatch	(	self	)	:	\\n	    	warnings	.	warn	(	DeprecationWarning	(	'Call UNWATCH from /;"	f
unwatch	data/data_raw/train.py	/^utf-8	def	unwatch	(	self	)	:	\\n	    	warnings	.	warn	(	DeprecationWarning	(	'Call UNWATCH from /;"	f
upcast	data/bpe_corpus_raw/train.py	/^utf-8	@	staticmethod	\\n	def	relaxed_value_for_var	(	value	,	var	)	:	\\n	    	assert	isinstance	/;"	f	function:relaxed_value_for_var	file:
upcast	data/data_raw/train.py	/^utf-8	@	staticmethod	\\n	def	relaxed_value_for_var	(	value	,	var	)	:	\\n	    	assert	isinstance	/;"	f	function:relaxed_value_for_var	file:
update	data/bpe_corpus_raw/test.py	/^utf-8	def	update	(	self	,	iterable	)	:	\\n	    	inserted_any	=	False	\\n	for	header	in	iterable	/;"	f
update	data/bpe_corpus_raw/test.py	/^utf-8	def	update	(	self	,	override	)	:	\\n	    	override	=	override	.	copy	(	)	\\n	for	k	in	self/;"	f
update	data/bpe_corpus_raw/train.py	/^utf-8	def	update	(	*	args	,	**	kwds	)	:	\\n	    	if	len	(	args	)	>	2	:	\\n	        	raise	TypeEr/;"	f
update	data/bpe_corpus_raw/train.py	/^utf-8	def	update	(	*	args	,	**	kwds	)	:	\\n	    	if	not	args	:	\\n	        	raise	TypeError	(	\\/;"	f
update	data/bpe_corpus_raw/train.py	/^utf-8	def	update	(	self	)	:	\\n	    	self	.	_api_data	.	update	(	)	\\n	self	.	_site_data	=	self	/;"	f
update	data/bpe_corpus_raw/train.py	/^utf-8	def	update	(	self	,	path	,	value	,	index	=	None	,	curr_value	=	None	)	:	\\n	    	try	:	\\n/;"	f
update	data/bpe_corpus_raw/train.py	/^utf-8	def	update	(	self	,	pipeline_id	,	pipeline	)	:	\\n	    	url	=	common	.	PIPELINES_URL	+	pip/;"	f
update	data/bpe_corpus_raw/train.py	/^utf-8	def	update	(	self	,	resource_group_name	,	parameters	,	custom_headers	=	None	,	raw	=	\\n	F/;"	f
update	data/bpe_corpus_raw/train.py	/^utf-8	def	update	(	self	,	view	,	settings	)	:	\\n	    	v_id	=	view	.	buffer_id	(	)	\\n	log	.	deb/;"	f
update	data/bpe_corpus_raw/valid.py	/^utf-8	def	update	(	self	,	data	)	:	\\n	    	expect_byte_string	(	data	)	\\n	result	=	_raw_ripemd/;"	f
update	data/bpe_corpus_raw/valid.py	/^utf-8	def	update	(	self	,	data	)	:	\\n	    	result	=	_raw_sha1_lib	.	SHA1_update	(	self	.	_state/;"	f
update	data/bpe_corpus_raw/valid.py	/^utf-8	def	update	(	self	,	other	)	:	\\n	    	self	.	totalchecks	+=	other	.	totalchecks	\\n	self	/;"	f
update	data/bpe_corpus_raw/valid.py	/^utf-8	def	update	(	self	,	path	,	value	,	index	=	None	,	curr_value	=	None	)	:	\\n	    	try	:	\\n/;"	f
update	data/data_raw/test.py	/^utf-8	def	update	(	self	,	iterable	)	:	\\n	    	inserted_any	=	False	\\n	for	header	in	iterable	/;"	f
update	data/data_raw/test.py	/^utf-8	def	update	(	self	,	override	)	:	\\n	    	override	=	override	.	copy	(	)	\\n	for	k	in	self/;"	f
update	data/data_raw/train.py	/^utf-8	def	update	(	*	args	,	**	kwds	)	:	\\n	    	if	len	(	args	)	>	2	:	\\n	        	raise	TypeEr/;"	f
update	data/data_raw/train.py	/^utf-8	def	update	(	*	args	,	**	kwds	)	:	\\n	    	if	not	args	:	\\n	        	raise	TypeError	(	\\/;"	f
update	data/data_raw/train.py	/^utf-8	def	update	(	self	)	:	\\n	    	self	.	_api_data	.	update	(	)	\\n	self	.	_site_data	=	self	/;"	f
update	data/data_raw/train.py	/^utf-8	def	update	(	self	,	path	,	value	,	index	=	None	,	curr_value	=	None	)	:	\\n	    	try	:	\\n/;"	f
update	data/data_raw/train.py	/^utf-8	def	update	(	self	,	pipeline_id	,	pipeline	)	:	\\n	    	url	=	common	.	PIPELINES_URL	+	pip/;"	f
update	data/data_raw/train.py	/^utf-8	def	update	(	self	,	resource_group_name	,	parameters	,	custom_headers	=	None	,	raw	=	\\n	F/;"	f
update	data/data_raw/train.py	/^utf-8	def	update	(	self	,	view	,	settings	)	:	\\n	    	v_id	=	view	.	buffer_id	(	)	\\n	log	.	deb/;"	f
update	data/data_raw/valid.py	/^utf-8	def	update	(	self	,	data	)	:	\\n	    	expect_byte_string	(	data	)	\\n	result	=	_raw_ripemd/;"	f
update	data/data_raw/valid.py	/^utf-8	def	update	(	self	,	data	)	:	\\n	    	result	=	_raw_sha1_lib	.	SHA1_update	(	self	.	_state/;"	f
update	data/data_raw/valid.py	/^utf-8	def	update	(	self	,	other	)	:	\\n	    	self	.	totalchecks	+=	other	.	totalchecks	\\n	self	/;"	f
update	data/data_raw/valid.py	/^utf-8	def	update	(	self	,	path	,	value	,	index	=	None	,	curr_value	=	None	)	:	\\n	    	try	:	\\n/;"	f
updateMetricDataColumns	data/bpe_corpus_raw/valid.py	/^utf-8	def	updateMetricDataColumns	(	conn	,	metricDataObj	,	fields	)	:	\\n	    	update	=	schema	./;"	f
updateMetricDataColumns	data/data_raw/valid.py	/^utf-8	def	updateMetricDataColumns	(	conn	,	metricDataObj	,	fields	)	:	\\n	    	update	=	schema	./;"	f
updateOnWalletChange	data/bpe_corpus_raw/test.py	/^utf-8	def	updateOnWalletChange	(	self	,	ignoredInt	=	None	)	:	\\n	    	wltID	=	self	.	getSelecte/;"	f
updateOnWalletChange	data/data_raw/test.py	/^utf-8	def	updateOnWalletChange	(	self	,	ignoredInt	=	None	)	:	\\n	    	wltID	=	self	.	getSelecte/;"	f
updatePixelCoords	data/bpe_corpus_raw/train.py	/^utf-8	def	updatePixelCoords	(	self	)	:	\\n	    	self	.	xedge	=	self	.	yedge	=	self	.	xcent	=	sel/;"	f
updatePixelCoords	data/data_raw/train.py	/^utf-8	def	updatePixelCoords	(	self	)	:	\\n	    	self	.	xedge	=	self	.	yedge	=	self	.	xcent	=	sel/;"	f
update_access_rules	data/bpe_corpus_raw/valid.py	/^utf-8	def	update_access_rules	(	self	,	context	,	snapshot_instance_id	,	\\n	delete_all_rules	=	F/;"	f
update_access_rules	data/data_raw/valid.py	/^utf-8	def	update_access_rules	(	self	,	context	,	snapshot_instance_id	,	\\n	delete_all_rules	=	F/;"	f
update_actor	data/bpe_corpus_raw/train.py	/^utf-8	def	update_actor	(	state_action_matrix	,	observation	,	action	,	delta	,	\\n	beta_matrix	=	/;"	f
update_actor	data/data_raw/train.py	/^utf-8	def	update_actor	(	state_action_matrix	,	observation	,	action	,	delta	,	\\n	beta_matrix	=	/;"	f
update_cached_response	data/bpe_corpus_raw/valid.py	/^utf-8	def	update_cached_response	(	self	,	request	,	response	)	:	\\n	    	cache_url	=	self	.	cac/;"	f
update_cached_response	data/data_raw/valid.py	/^utf-8	def	update_cached_response	(	self	,	request	,	response	)	:	\\n	    	cache_url	=	self	.	cac/;"	f
update_chain	data/bpe_corpus_raw/train.py	/^utf-8	def	update_chain	(	graph	,	loc	,	du	,	ud	)	:	\\n	    	ins	=	graph	.	get_ins_from_loc	(	loc/;"	f
update_chain	data/data_raw/train.py	/^utf-8	def	update_chain	(	graph	,	loc	,	du	,	ud	)	:	\\n	    	ins	=	graph	.	get_ins_from_loc	(	loc/;"	f
update_contexts_for	data/bpe_corpus_raw/valid.py	/^utf-8	def	update_contexts_for	(	resource_type	)	:	\\n	    	return	permissions_for	(	get_user	(	)/;"	f
update_contexts_for	data/data_raw/valid.py	/^utf-8	def	update_contexts_for	(	resource_type	)	:	\\n	    	return	permissions_for	(	get_user	(	)/;"	f
update_discounted_rewards	data/bpe_corpus_raw/train.py	/^utf-8	def	update_discounted_rewards	(	self	)	:	\\n	    	if	self	.	n_step	==	-	1	or	self	.	n_step/;"	f
update_discounted_rewards	data/data_raw/train.py	/^utf-8	def	update_discounted_rewards	(	self	)	:	\\n	    	if	self	.	n_step	==	-	1	or	self	.	n_step/;"	f
update_endpoint	data/bpe_corpus_raw/train.py	/^utf-8	def	update_endpoint	(	self	,	endpoint_id	,	endpoint_ref	)	:	\\n	    	raise	exception	.	Not/;"	f
update_endpoint	data/data_raw/train.py	/^utf-8	def	update_endpoint	(	self	,	endpoint_id	,	endpoint_ref	)	:	\\n	    	raise	exception	.	Not/;"	f
update_environment	data/bpe_corpus_raw/train.py	/^utf-8	@	open_only	\\n	def	update_environment	(	self	,	environment	)	:	\\n	    	for	name	,	value	/;"	f
update_environment	data/data_raw/train.py	/^utf-8	@	open_only	\\n	def	update_environment	(	self	,	environment	)	:	\\n	    	for	name	,	value	/;"	f
update_hostnetwork	data/bpe_corpus_raw/train.py	/^utf-8	@	utils	.	supported_filters	(	optional_support_keys	=	UPDATED_NETWORK_FIELDS	,	\\n	ignore_/;"	f
update_hostnetwork	data/data_raw/train.py	/^utf-8	@	utils	.	supported_filters	(	optional_support_keys	=	UPDATED_NETWORK_FIELDS	,	\\n	ignore_/;"	f
update_neighbors	data/bpe_corpus_raw/valid.py	/^utf-8	def	update_neighbors	(	self	)	:	\\n	    	self	.	neighborhood	=	self	.	model	.	grid	.	get_n/;"	f
update_neighbors	data/data_raw/valid.py	/^utf-8	def	update_neighbors	(	self	)	:	\\n	    	self	.	neighborhood	=	self	.	model	.	grid	.	get_n/;"	f
update_object	data/bpe_corpus_raw/train.py	/^utf-8	def	update_object	(	self	)	:	\\n	    	if	not	self	.	_locked	:	\\n	        	try	:	\\n	     /;"	f
update_object	data/data_raw/train.py	/^utf-8	def	update_object	(	self	)	:	\\n	    	if	not	self	.	_locked	:	\\n	        	try	:	\\n	     /;"	f
update_password	data/bpe_corpus_raw/test.py	/^utf-8	def	update_password	(	self	,	user	,	password	)	:	\\n	    	raise	Exception	\\n		$/;"	f
update_password	data/data_raw/test.py	/^utf-8	def	update_password	(	self	,	user	,	password	)	:	\\n	    	raise	Exception	\\n		$/;"	f
update_portfolio	data/bpe_corpus_raw/train.py	/^utf-8	def	update_portfolio	(	self	)	:	\\n	    	if	not	self	.	_dirty_portfolio	:	\\n	        	ret/;"	f
update_portfolio	data/data_raw/train.py	/^utf-8	def	update_portfolio	(	self	)	:	\\n	    	if	not	self	.	_dirty_portfolio	:	\\n	        	ret/;"	f
update_report_acknowledgements	data/bpe_corpus_raw/valid.py	/^utf-8	@	requires	(	[	'ReportIdList'	]	)	\\n	@	boolean_arguments	(	'Acknowledged'	)	\\n	@	structu/;"	f
update_report_acknowledgements	data/data_raw/valid.py	/^utf-8	@	requires	(	[	'ReportIdList'	]	)	\\n	@	boolean_arguments	(	'Acknowledged'	)	\\n	@	structu/;"	f
update_results	data/bpe_corpus_raw/train.py	/^utf-8	def	update_results	(	self	)	:	\\n	    	try	:	\\n	        	self	.	_run_openmc	(	)	\\n	self	/;"	f
update_results	data/data_raw/train.py	/^utf-8	def	update_results	(	self	)	:	\\n	    	try	:	\\n	        	self	.	_run_openmc	(	)	\\n	self	/;"	f
update_role	data/bpe_corpus_raw/train.py	/^utf-8	def	update_role	(	self	,	role	,	**	attrs	)	:	\\n	    	return	self	.	_update	(	_role	.	Role/;"	f
update_role	data/data_raw/train.py	/^utf-8	def	update_role	(	self	,	role	,	**	attrs	)	:	\\n	    	return	self	.	_update	(	_role	.	Role/;"	f
updatecache	data/bpe_corpus_raw/valid.py	/^utf-8	def	updatecache	(	filename	,	module_globals	=	None	)	:	\\n	    	if	filename	in	cache	:	\\n/;"	f
updatecache	data/data_raw/valid.py	/^utf-8	def	updatecache	(	filename	,	module_globals	=	None	)	:	\\n	    	if	filename	in	cache	:	\\n/;"	f
upfirdn	data/bpe_corpus_raw/train.py	/^utf-8	def	upfirdn	(	h	,	x	,	up	=	1	,	down	=	1	,	axis	=	-	1	)	:	\\n	    	x	=	np	.	asarray	(	x	)	\\/;"	f
upfirdn	data/data_raw/train.py	/^utf-8	def	upfirdn	(	h	,	x	,	up	=	1	,	down	=	1	,	axis	=	-	1	)	:	\\n	    	x	=	np	.	asarray	(	x	)	\\/;"	f
upgrade	data/bpe_corpus_raw/valid.py	/^utf-8	def	upgrade	(	self	,	value	)	:	\\n	    	self	.	_checked	=	True	\\n	try	:	\\n	        	retu/;"	f
upgrade	data/data_raw/valid.py	/^utf-8	def	upgrade	(	self	,	value	)	:	\\n	    	self	.	_checked	=	True	\\n	try	:	\\n	        	retu/;"	f
upgrade_database	data/bpe_corpus_raw/train.py	/^utf-8	def	upgrade_database	(	)	:	\\n	    	from	django	.	conf	import	settings	\\n	from	django	.	u/;"	f
upgrade_database	data/data_raw/train.py	/^utf-8	def	upgrade_database	(	)	:	\\n	    	from	django	.	conf	import	settings	\\n	from	django	.	u/;"	f
upload	data/bpe_corpus_raw/valid.py	/^utf-8	def	upload	(	resource	,	path	,	body	,	chunksize	=	4	*	1024	*	1024	,	\\n	progress_callback	/;"	f
upload	data/bpe_corpus_raw/valid.py	/^utf-8	def	upload	(	self	,	file_obj	,	to_username	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
upload	data/data_raw/valid.py	/^utf-8	def	upload	(	resource	,	path	,	body	,	chunksize	=	4	*	1024	*	1024	,	\\n	progress_callback	/;"	f
upload	data/data_raw/valid.py	/^utf-8	def	upload	(	self	,	file_obj	,	to_username	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
upsell_url	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	upsell_url	(	self	)	:	\\n	    	if	self	.	_upsell_url_present	:	\\n	    /;"	f
upsell_url	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	upsell_url	(	self	)	:	\\n	    	if	self	.	_upsell_url_present	:	\\n	    /;"	f
url	data/bpe_corpus_raw/test.py	/^utf-8	@	grammar	(	str_types	)	\\n	def	url	(	value	)	:	\\n	$/;"	f
url	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	url	(	self	)	:	\\n	    	return	reverse	(	'auth_logout'	)	\\n		$/;"	f
url	data/data_raw/test.py	/^utf-8	@	grammar	(	str_types	)	\\n	def	url	(	value	)	:	\\n	$/;"	f
url	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	url	(	self	)	:	\\n	    	return	reverse	(	'auth_logout'	)	\\n		$/;"	f
url_encode_stream	data/bpe_corpus_raw/train.py	/^utf-8	def	url_encode_stream	(	obj	,	stream	=	None	,	charset	=	'utf-8'	,	encode_keys	=	False	,	\\/;"	f
url_encode_stream	data/data_raw/train.py	/^utf-8	def	url_encode_stream	(	obj	,	stream	=	None	,	charset	=	'utf-8'	,	encode_keys	=	False	,	\\/;"	f
url_fix_common_typos	data/bpe_corpus_raw/valid.py	/^utf-8	def	url_fix_common_typos	(	url	)	:	\\n	    	if	url	.	startswith	(	'http\/\/'	)	:	\\n	     /;"	f
url_fix_common_typos	data/data_raw/valid.py	/^utf-8	def	url_fix_common_typos	(	url	)	:	\\n	    	if	url	.	startswith	(	'http\/\/'	)	:	\\n	     /;"	f
url_unquote	data/bpe_corpus_raw/train.py	/^utf-8	def	url_unquote	(	string	,	charset	=	'utf-8'	,	errors	=	'replace'	,	unsafe	=	''	)	:	\\n	  /;"	f
url_unquote	data/data_raw/train.py	/^utf-8	def	url_unquote	(	string	,	charset	=	'utf-8'	,	errors	=	'replace'	,	unsafe	=	''	)	:	\\n	  /;"	f
urlopen	data/bpe_corpus_raw/valid.py	/^utf-8	def	urlopen	(	self	,	method	,	url	,	redirect	=	True	,	**	kw	)	:	\\n	    	u	=	parse_url	(	u/;"	f
urlopen	data/data_raw/valid.py	/^utf-8	def	urlopen	(	self	,	method	,	url	,	redirect	=	True	,	**	kw	)	:	\\n	    	u	=	parse_url	(	u/;"	f
urlparse	data/bpe_corpus_raw/valid.py	/^utf-8	def	urlparse	(	uri	,	encoding	=	'utf-8'	)	:	\\n	    	return	ParseResult	.	from_string	(	ur/;"	f
urlparse	data/data_raw/valid.py	/^utf-8	def	urlparse	(	uri	,	encoding	=	'utf-8'	)	:	\\n	    	return	ParseResult	.	from_string	(	ur/;"	f
urlquote_plus	data/bpe_corpus_raw/train.py	/^utf-8	def	urlquote_plus	(	url	,	safe	=	''	)	:	\\n	    	return	force_unicode	(	urllib	.	quote_plu/;"	f
urlquote_plus	data/data_raw/train.py	/^utf-8	def	urlquote_plus	(	url	,	safe	=	''	)	:	\\n	    	return	force_unicode	(	urllib	.	quote_plu/;"	f
urlsafe_base64_decode	data/bpe_corpus_raw/train.py	/^utf-8	def	urlsafe_base64_decode	(	s	)	:	\\n	    	s	=	force_bytes	(	s	)	\\n	try	:	\\n	        	re/;"	f
urlsafe_base64_decode	data/data_raw/train.py	/^utf-8	def	urlsafe_base64_decode	(	s	)	:	\\n	    	s	=	force_bytes	(	s	)	\\n	try	:	\\n	        	re/;"	f
usage_count	data/bpe_corpus_raw/valid.py	/^utf-8	def	usage_count	(	self	)	:	\\n	    	return	self	.	_uc	\\n		$/;"	f
usage_count	data/data_raw/valid.py	/^utf-8	def	usage_count	(	self	)	:	\\n	    	return	self	.	_uc	\\n		$/;"	f
use_cert_app	data/bpe_corpus_raw/valid.py	/^utf-8	def	use_cert_app	(	self	)	:	\\n	    	self	.	executor	.	logger	.	info	(	'Homescreen loaded'/;"	f
use_cert_app	data/data_raw/valid.py	/^utf-8	def	use_cert_app	(	self	)	:	\\n	    	self	.	executor	.	logger	.	info	(	'Homescreen loaded'/;"	f
user	data/bpe_corpus_raw/valid.py	/^utf-8	@	immutable_property	\\n	def	user	(	self	)	:	\\n	    	try	:	\\n	        	return	User	.	obj/;"	f
user	data/data_raw/valid.py	/^utf-8	@	immutable_property	\\n	def	user	(	self	)	:	\\n	    	try	:	\\n	        	return	User	.	obj/;"	f
user_data_dir	data/bpe_corpus_raw/train.py	/^utf-8	def	user_data_dir	(	appname	=	None	,	appauthor	=	None	,	version	=	None	,	roaming	=	False	)/;"	f
user_data_dir	data/data_raw/train.py	/^utf-8	def	user_data_dir	(	appname	=	None	,	appauthor	=	None	,	version	=	None	,	roaming	=	False	)/;"	f
user_datapath	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	user_datapath	(	self	)	:	\\n	    	return	self	.	state_dirs	.	user_data	/;"	f
user_datapath	data/data_raw/train.py	/^utf-8	@	property	\\n	def	user_datapath	(	self	)	:	\\n	    	return	self	.	state_dirs	.	user_data	/;"	f
user_exists	data/bpe_corpus_raw/train.py	/^utf-8	def	user_exists	(	self	,	user	,	note	=	None	,	loglevel	=	logging	.	DEBUG	)	:	\\n	    	shut/;"	f
user_exists	data/data_raw/train.py	/^utf-8	def	user_exists	(	self	,	user	,	note	=	None	,	loglevel	=	logging	.	DEBUG	)	:	\\n	    	shut/;"	f
user_gated_from_block	data/bpe_corpus_raw/train.py	/^utf-8	def	transform	(	self	,	usage_info	,	block_structure	)	:	\\n	    	required_content	=	self	./;"	f	function:transform	file:
user_gated_from_block	data/data_raw/train.py	/^utf-8	def	transform	(	self	,	usage_info	,	block_structure	)	:	\\n	    	required_content	=	self	./;"	f	function:transform	file:
user_is_admin	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	user_is_admin	(	user_db	)	:	\\n	    	return	True	\\n		$/;"	f
user_is_admin	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	user_is_admin	(	user_db	)	:	\\n	    	return	True	\\n		$/;"	f
user_post_anonymous_askbot_content	data/bpe_corpus_raw/valid.py	/^utf-8	def	user_post_anonymous_askbot_content	(	user	,	session_key	)	:	\\n	    	is_on_read_only_g/;"	f
user_post_anonymous_askbot_content	data/data_raw/valid.py	/^utf-8	def	user_post_anonymous_askbot_content	(	user	,	session_key	)	:	\\n	    	is_on_read_only_g/;"	f
users_setPresence	data/bpe_corpus_raw/valid.py	/^utf-8	def	users_setPresence	(	self	,	*	,	presence	:	str	,	**	kwargs	)	->	SlackResponse	:	\\n	   /;"	f
users_setPresence	data/data_raw/valid.py	/^utf-8	def	users_setPresence	(	self	,	*	,	presence	:	str	,	**	kwargs	)	->	SlackResponse	:	\\n	   /;"	f
ustring_to_string	data/bpe_corpus_raw/train.py	/^utf-8	def	ustring_to_string	(	ptr	,	length	=	None	)	:	\\n	    	error_message	=	''	\\n	if	length	/;"	f
ustring_to_string	data/data_raw/train.py	/^utf-8	def	ustring_to_string	(	ptr	,	length	=	None	)	:	\\n	    	error_message	=	''	\\n	if	length	/;"	f
utc_now_iso	data/bpe_corpus_raw/valid.py	/^utf-8	def	utc_now_iso	(	)	:	\\n	    	utcnow	=	datetime	.	utcnow	(	)	\\n	return	utcnow	.	isoforma/;"	f
utc_now_iso	data/data_raw/valid.py	/^utf-8	def	utc_now_iso	(	)	:	\\n	    	utcnow	=	datetime	.	utcnow	(	)	\\n	return	utcnow	.	isoforma/;"	f
utcnow	data/bpe_corpus_raw/train.py	/^utf-8	def	utcnow	(	)	:	\\n	    	return	datetime	.	datetime	.	now	(	pytz	.	utc	)	\\n		$/;"	f
utcnow	data/data_raw/train.py	/^utf-8	def	utcnow	(	)	:	\\n	    	return	datetime	.	datetime	.	now	(	pytz	.	utc	)	\\n		$/;"	f
v_font	data/bpe_corpus_raw/valid.py	/^utf-8	def	__init__	(	self	,	arg	=	None	,	color	=	None	,	colorsrc	=	None	,	family	=	None	,	\\n	fa/;"	x	function:__init__	file:
v_font	data/data_raw/valid.py	/^utf-8	def	__init__	(	self	,	arg	=	None	,	color	=	None	,	colorsrc	=	None	,	family	=	None	,	\\n	fa/;"	x	function:__init__	file:
val_doc_lines	data_utils/data_to_text.py	/^val_doc_lines = tokenized_docstring[train_end:val_end]$/;"	v
val_end	data_utils/data_to_text.py	/^val_end = int((train_prop + val_prop) * num_lines)$/;"	v
val_prop	data_utils/data_to_text.py	/^train_prop, val_prop = 0.8, 0.1$/;"	v
val_python_lines	data_utils/data_to_text.py	/^val_python_lines = tokenized_python[train_end:val_end]$/;"	v
valid_history	data/bpe_corpus_raw/valid.py	/^utf-8	def	valid_history	(	attempts	,	idx	)	:	\\n	    	if	not	sequential_problem_numbers	(	attemp/;"	f
valid_history	data/data_raw/valid.py	/^utf-8	def	valid_history	(	attempts	,	idx	)	:	\\n	    	if	not	sequential_problem_numbers	(	attemp/;"	f
valid_key	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	valid_key	(	key	,	sep	=	'.'	)	:	\\n	    	common_separators	=	list	(/;"	f
valid_key	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	valid_key	(	key	,	sep	=	'.'	)	:	\\n	    	common_separators	=	list	(/;"	f
valid_range	data/bpe_corpus_raw/valid.py	/^utf-8	def	valid_range	(	git_range	)	:	\\n	    	cmd	=	'git'	,	'log'	,	'--oneline'	,	git_range	\\n/;"	f
valid_range	data/data_raw/valid.py	/^utf-8	def	valid_range	(	git_range	)	:	\\n	    	cmd	=	'git'	,	'log'	,	'--oneline'	,	git_range	\\n/;"	f
validate	data/bpe_corpus_raw/train.py	/^utf-8	def	validate	(	self	,	validator	,	preserve_errors	=	False	,	copy	=	False	,	section	=	None	/;"	f
validate	data/bpe_corpus_raw/valid.py	/^utf-8	def	validate	(	self	,	key	,	required	=	True	,	dtype	=	None	,	list_like	=	False	,	\\n	raise/;"	f
validate	data/data_raw/train.py	/^utf-8	def	validate	(	self	,	validator	,	preserve_errors	=	False	,	copy	=	False	,	section	=	None	/;"	f
validate	data/data_raw/valid.py	/^utf-8	def	validate	(	self	,	key	,	required	=	True	,	dtype	=	None	,	list_like	=	False	,	\\n	raise/;"	f
validate_acl	data/bpe_corpus_raw/valid.py	/^utf-8	def	validate_acl	(	self	)	:	\\n	    	for	_	,	acl	in	self	.	access_control_list	:	\\n	     /;"	f
validate_acl	data/data_raw/valid.py	/^utf-8	def	validate_acl	(	self	)	:	\\n	    	for	_	,	acl	in	self	.	access_control_list	:	\\n	     /;"	f
validate_auth_time	data/bpe_corpus_raw/valid.py	/^utf-8	def	validate_auth_time	(	self	)	:	\\n	    	auth_time	=	self	.	get	(	'auth_time'	)	\\n	if	s/;"	f
validate_auth_time	data/data_raw/valid.py	/^utf-8	def	validate_auth_time	(	self	)	:	\\n	    	auth_time	=	self	.	get	(	'auth_time'	)	\\n	if	s/;"	f
validate_csrf_token	data/bpe_corpus_raw/valid.py	/^utf-8	def	validate_csrf_token	(	self	,	field	)	:	\\n	    	if	field	.	current_token	!=	field	.	da/;"	f
validate_csrf_token	data/data_raw/valid.py	/^utf-8	def	validate_csrf_token	(	self	,	field	)	:	\\n	    	if	field	.	current_token	!=	field	.	da/;"	f
validate_csv_sample	data/bpe_corpus_raw/valid.py	/^utf-8	def	validate_csv_sample	(	csvSampleDict	,	request	)	:	\\n	    	failed	=	[	]	\\n	isToSkipRo/;"	f
validate_csv_sample	data/data_raw/valid.py	/^utf-8	def	validate_csv_sample	(	csvSampleDict	,	request	)	:	\\n	    	failed	=	[	]	\\n	isToSkipRo/;"	f
validate_entry	data/bpe_corpus_raw/train.py	/^utf-8	def	validate	(	self	,	validator	,	preserve_errors	=	False	,	copy	=	False	,	section	=	None	/;"	f	function:validate	file:
validate_entry	data/data_raw/train.py	/^utf-8	def	validate	(	self	,	validator	,	preserve_errors	=	False	,	copy	=	False	,	section	=	None	/;"	f	function:validate	file:
validate_field	data/bpe_corpus_raw/valid.py	/^utf-8	def	validate_field	(	self	,	errors	,	opts	,	f	)	:	\\n	    	pass	\\n		$/;"	f
validate_field	data/data_raw/valid.py	/^utf-8	def	validate_field	(	self	,	errors	,	opts	,	f	)	:	\\n	    	pass	\\n		$/;"	f
validate_fields	data/bpe_corpus_raw/valid.py	/^utf-8	def	validate_fields	(	self	,	cmemb_data	,	key	)	:	\\n	    	error_msg	=	[	]	\\n	if	key	==	'/;"	f
validate_fields	data/data_raw/valid.py	/^utf-8	def	validate_fields	(	self	,	cmemb_data	,	key	)	:	\\n	    	error_msg	=	[	]	\\n	if	key	==	'/;"	f
validate_full_path	data/bpe_corpus_raw/train.py	/^utf-8	def	validate_full_path	(	path	:	list	)	->	bool	:	\\n	    	if	len	(	path	)	!=	3	:	\\n	     /;"	f
validate_full_path	data/data_raw/train.py	/^utf-8	def	validate_full_path	(	path	:	list	)	->	bool	:	\\n	    	if	len	(	path	)	!=	3	:	\\n	     /;"	f
validate_query_params	data/bpe_corpus_raw/valid.py	/^utf-8	def	validate_query_params	(	self	,	strict	=	True	)	:	\\n	    	if	not	(	self	.	api_key	or	d/;"	f
validate_query_params	data/data_raw/valid.py	/^utf-8	def	validate_query_params	(	self	,	strict	=	True	)	:	\\n	    	if	not	(	self	.	api_key	or	d/;"	f
validate_question	data/bpe_corpus_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	validate_question	(	question	)	:	\\n	    	error	=	django_forms	.	Va/;"	f
validate_question	data/data_raw/valid.py	/^utf-8	@	staticmethod	\\n	def	validate_question	(	question	)	:	\\n	    	error	=	django_forms	.	Va/;"	f
validate_record	data/bpe_corpus_raw/valid.py	/^utf-8	def	validate_record	(	memory_handler	,	instance	,	record_constraints	=	None	,	\\n	max_dept/;"	f
validate_record	data/data_raw/valid.py	/^utf-8	def	validate_record	(	memory_handler	,	instance	,	record_constraints	=	None	,	\\n	max_dept/;"	f
validate_timeframe	data/bpe_corpus_raw/train.py	/^utf-8	def	validate_timeframe	(	start	,	end	)	:	\\n	    	if	start	>=	end	:	\\n	        	raise	Val/;"	f
validate_timeframe	data/data_raw/train.py	/^utf-8	def	validate_timeframe	(	start	,	end	)	:	\\n	    	if	start	>=	end	:	\\n	        	raise	Val/;"	f
validator	data/bpe_corpus_raw/valid.py	/^utf-8	def	validator	(	application	)	:	\\n	\\n	    	def	lint_app	(	*	args	,	**	kw	)	:	\\n	       /;"	f
validator	data/data_raw/valid.py	/^utf-8	def	validator	(	application	)	:	\\n	\\n	    	def	lint_app	(	*	args	,	**	kw	)	:	\\n	       /;"	f
value	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	value	(	self	)	:	\\n	    	return	self	[	'value'	]	\\n		$/;"	f
value	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	value	(	self	)	:	\\n	    	return	self	[	'value'	]	\\n		$/;"	f
value_encode	data/bpe_corpus_raw/train.py	/^utf-8	def	value_encode	(	self	,	val	)	:	\\n	    	strval	=	str	(	val	)	\\n	return	strval	,	strval/;"	f
value_encode	data/data_raw/train.py	/^utf-8	def	value_encode	(	self	,	val	)	:	\\n	    	strval	=	str	(	val	)	\\n	return	strval	,	strval/;"	f
value_match	data/bpe_corpus_raw/train.py	/^utf-8	@	classmethod	\\n	def	value_match	(	cls	,	pattern	,	value	)	:	\\n	    	return	cls	.	string/;"	f
value_match	data/data_raw/train.py	/^utf-8	@	classmethod	\\n	def	value_match	(	cls	,	pattern	,	value	)	:	\\n	    	return	cls	.	string/;"	f
values	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	values	(	self	)	:	\\n	    	return	self	[	'values'	]	\\n		$/;"	f
values	data/bpe_corpus_raw/train.py	/^utf-8	def	values	(	)	:	\\n	$/;"	f
values	data/bpe_corpus_raw/train.py	/^utf-8	def	values	(	self	)	:	\\n	    	raise	NotImplementedError	(	'This method must be implemente/;"	f
values	data/bpe_corpus_raw/valid.py	/^utf-8	@	grammar	(	list	)	\\n	def	values	(	value	)	:	\\n	    	for	row	in	value	:	\\n	        	_as/;"	f
values	data/data_raw/train.py	/^utf-8	@	property	\\n	def	values	(	self	)	:	\\n	    	return	self	[	'values'	]	\\n		$/;"	f
values	data/data_raw/train.py	/^utf-8	def	values	(	)	:	\\n	$/;"	f
values	data/data_raw/train.py	/^utf-8	def	values	(	self	)	:	\\n	    	raise	NotImplementedError	(	'This method must be implemente/;"	f
values	data/data_raw/valid.py	/^utf-8	@	grammar	(	list	)	\\n	def	values	(	value	)	:	\\n	    	for	row	in	value	:	\\n	        	_as/;"	f
var	data/bpe_corpus_raw/train.py	/^utf-8	def	var	(	self	,	name	,	min_value	,	max_value	,	size	,	op	,	step	=	1	,	split_to_cores	=	\\/;"	f
var	data/data_raw/train.py	/^utf-8	def	var	(	self	,	name	,	min_value	,	max_value	,	size	,	op	,	step	=	1	,	split_to_cores	=	\\/;"	f
variables	data/bpe_corpus_raw/train.py	/^utf-8	@	cached_method	\\n	def	variables	(	self	)	:	\\n	    	N	=	self	.	variable_names	(	)	[	:	se/;"	f
variables	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	variables	(	self	)	:	\\n	    	return	self	.	args	[	-	1	]	.	args	\\n		$/;"	f
variables	data/data_raw/train.py	/^utf-8	@	cached_method	\\n	def	variables	(	self	)	:	\\n	    	N	=	self	.	variable_names	(	)	[	:	se/;"	f
variables	data/data_raw/train.py	/^utf-8	@	property	\\n	def	variables	(	self	)	:	\\n	    	return	self	.	args	[	-	1	]	.	args	\\n		$/;"	f
variational_expectations	data/bpe_corpus_raw/test.py	/^utf-8	def	variational_expectations	(	self	,	Y	,	m	,	v	,	gh_points	=	None	,	Y_metadata	=	None	)	:/;"	f
variational_expectations	data/data_raw/test.py	/^utf-8	def	variational_expectations	(	self	,	Y	,	m	,	v	,	gh_points	=	None	,	Y_metadata	=	None	)	:/;"	f
vector_space_dimension	data/bpe_corpus_raw/valid.py	/^utf-8	def	vector_space_dimension	(	self	,	name	=	'vector_space_dimension'	)	:	\\n	    	with	ops	/;"	f
vector_space_dimension	data/data_raw/valid.py	/^utf-8	def	vector_space_dimension	(	self	,	name	=	'vector_space_dimension'	)	:	\\n	    	with	ops	/;"	f
verify	data/bpe_corpus_raw/valid.py	/^utf-8	@	abc	.	abstractmethod	\\n	def	verify	(	self	,	key_material	,	expected_key	)	:	\\n	$/;"	f
verify	data/data_raw/valid.py	/^utf-8	@	abc	.	abstractmethod	\\n	def	verify	(	self	,	key_material	,	expected_key	)	:	\\n	$/;"	f
verifyShareFields	data/bpe_corpus_raw/test.py	/^utf-8	def	verifyShareFields	(	share	,	fields	)	:	\\n	    	if	len	(	fields	)	>	1	and	'value'	in	f/;"	f
verifyShareFields	data/data_raw/test.py	/^utf-8	def	verifyShareFields	(	share	,	fields	)	:	\\n	    	if	len	(	fields	)	>	1	and	'value'	in	f/;"	f
verify_checksum	data/bpe_corpus_raw/train.py	/^utf-8	def	verify_checksum	(	self	)	:	\\n	    	checksum	=	self	.	cbUncomp	<<	16	|	self	.	cbData	\\/;"	f
verify_checksum	data/data_raw/train.py	/^utf-8	def	verify_checksum	(	self	)	:	\\n	    	checksum	=	self	.	cbUncomp	<<	16	|	self	.	cbData	\\/;"	f
verify_command_form	data/bpe_corpus_raw/valid.py	/^utf-8	def	find_executables	(	self	)	:	\\n	    	assert	self	.	_is_customised	\\n	exe_cache	=	self/;"	f	function:find_executables.cached_find_executable	file:
verify_command_form	data/data_raw/valid.py	/^utf-8	def	find_executables	(	self	)	:	\\n	    	assert	self	.	_is_customised	\\n	exe_cache	=	self/;"	f	function:find_executables.cached_find_executable	file:
verify_json_objects_for_server	data/bpe_corpus_raw/valid.py	/^utf-8	def	verify_json_objects_for_server	(	self	,	server_and_json	)	:	\\n	    	verify_requests	=/;"	f
verify_json_objects_for_server	data/data_raw/valid.py	/^utf-8	def	verify_json_objects_for_server	(	self	,	server_and_json	)	:	\\n	    	verify_requests	=/;"	f
verify_metainfo	data/bpe_corpus_raw/valid.py	/^utf-8	@	trial_timeout	(	10	)	\\n	def	test_connect_to_tracker	(	self	)	:	\\n	\\n	    	def	verify_/;"	f	function:test_connect_to_tracker	file:
verify_metainfo	data/data_raw/valid.py	/^utf-8	@	trial_timeout	(	10	)	\\n	def	test_connect_to_tracker	(	self	)	:	\\n	\\n	    	def	verify_/;"	f	function:test_connect_to_tracker	file:
verify_unsafe_email	data/bpe_corpus_raw/train.py	/^utf-8	def	verify_unsafe_email	(	self	,	view	,	check_for_POST_params	=	True	)	:	\\n	    	with	sel/;"	f
verify_unsafe_email	data/data_raw/train.py	/^utf-8	def	verify_unsafe_email	(	self	,	view	,	check_for_POST_params	=	True	)	:	\\n	    	with	sel/;"	f
version	data/bpe_corpus_raw/valid.py	/^utf-8	@	deprecated	(	'APISite.version()'	,	since	=	'20141225'	)	\\n	def	version	(	self	,	code	)	/;"	f
version	data/data_raw/valid.py	/^utf-8	@	deprecated	(	'APISite.version()'	,	since	=	'20141225'	)	\\n	def	version	(	self	,	code	)	/;"	f
vert_entropy	data/bpe_corpus_raw/valid.py	/^utf-8	def	vert_entropy	(	self	,	v_min	=	2	,	resampled_dist	=	None	)	:	\\n	    	if	resampled_dist/;"	f
vert_entropy	data/data_raw/valid.py	/^utf-8	def	vert_entropy	(	self	,	v_min	=	2	,	resampled_dist	=	None	)	:	\\n	    	if	resampled_dist/;"	f
vgg_fc	data/bpe_corpus_raw/valid.py	/^utf-8	def	vgg_fc	(	filters	,	weight_decay	=	0.0	,	block_name	=	'block5'	)	:	\\n	\\n	    	def	f	(/;"	f
vgg_fc	data/data_raw/valid.py	/^utf-8	def	vgg_fc	(	filters	,	weight_decay	=	0.0	,	block_name	=	'block5'	)	:	\\n	\\n	    	def	f	(/;"	f
view	data/bpe_corpus_raw/valid.py	/^utf-8	def	view	(	self	,	dtype	=	None	)	:	\\n	    	return	self	.	_constructor	(	self	.	_values	.	/;"	f
view	data/bpe_corpus_raw/valid.py	/^utf-8	def	view	(	self	,	url	)	:	\\n	    	if	url	.	endswith	(	'.txt'	)	:	\\n	        	response	.	/;"	f
view	data/data_raw/valid.py	/^utf-8	def	view	(	self	,	dtype	=	None	)	:	\\n	    	return	self	.	_constructor	(	self	.	_values	.	/;"	f
view	data/data_raw/valid.py	/^utf-8	def	view	(	self	,	url	)	:	\\n	    	if	url	.	endswith	(	'.txt'	)	:	\\n	        	response	.	/;"	f
view_mnist_eval	data/bpe_corpus_raw/valid.py	/^utf-8	def	view_mnist_eval	(	identifier	,	train_X	,	train_Y	,	synth_X	,	synth_Y	,	test_X	,	\\n	te/;"	f
view_mnist_eval	data/data_raw/valid.py	/^utf-8	def	view_mnist_eval	(	identifier	,	train_X	,	train_Y	,	synth_X	,	synth_Y	,	test_X	,	\\n	te/;"	f
viewportSize	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	viewportSize	(	self	)	:	\\n	    	stageView	=	self	.	__appController	.	_/;"	f
viewportSize	data/data_raw/train.py	/^utf-8	@	property	\\n	def	viewportSize	(	self	)	:	\\n	    	stageView	=	self	.	__appController	.	_/;"	f
viewports	data/bpe_corpus_raw/test.py	/^utf-8	@	abstractmethod	\\n	def	viewports	(	self	)	:	\\n	    	return	[	]	\\n		$/;"	f
viewports	data/data_raw/test.py	/^utf-8	@	abstractmethod	\\n	def	viewports	(	self	)	:	\\n	    	return	[	]	\\n		$/;"	f
views	data/bpe_corpus_raw/train.py	/^utf-8	def	views	(	self	)	:	\\n	    	return	iter	(	datalab	.	utils	.	Iterator	(	self	.	_retrieve_/;"	f
views	data/data_raw/train.py	/^utf-8	def	views	(	self	)	:	\\n	    	return	iter	(	datalab	.	utils	.	Iterator	(	self	.	_retrieve_/;"	f
vimeo_download_by_id	data/bpe_corpus_raw/valid.py	/^utf-8	def	vimeo_download_by_id	(	id	,	title	=	None	,	output_dir	=	'.'	,	merge	=	True	,	\\n	info_/;"	f
vimeo_download_by_id	data/data_raw/valid.py	/^utf-8	def	vimeo_download_by_id	(	id	,	title	=	None	,	output_dir	=	'.'	,	merge	=	True	,	\\n	info_/;"	f
virtualenv_name	data/bpe_corpus_raw/valid.py	/^utf-8	def	virtualenv_name	(	)	:	\\n	    	url_list	=	virtualenv_list	(	)	\\n	list_number	=	len	(	/;"	f
virtualenv_name	data/data_raw/valid.py	/^utf-8	def	virtualenv_name	(	)	:	\\n	    	url_list	=	virtualenv_list	(	)	\\n	list_number	=	len	(	/;"	f
visible	data/bpe_corpus_raw/valid.py	/^utf-8	def	visible_only	(	bpy_data	)	:	\\n	\\n	    	def	visible	(	obj	)	:	\\n	        	return	any/;"	f	function:visible_only	file:
visible	data/data_raw/valid.py	/^utf-8	def	visible_only	(	bpy_data	)	:	\\n	\\n	    	def	visible	(	obj	)	:	\\n	        	return	any/;"	f	function:visible_only	file:
visible_only	data/bpe_corpus_raw/valid.py	/^utf-8	def	visible_only	(	bpy_data	)	:	\\n	\\n	    	def	visible	(	obj	)	:	\\n	        	return	any/;"	f
visible_only	data/data_raw/valid.py	/^utf-8	def	visible_only	(	bpy_data	)	:	\\n	\\n	    	def	visible	(	obj	)	:	\\n	        	return	any/;"	f
visit_Attribute	data/bpe_corpus_raw/valid.py	/^utf-8	def	visit_Attribute	(	self	,	node	)	:	\\n	    	if	node	.	attr	==	'format'	:	\\n	        	s/;"	f
visit_Attribute	data/data_raw/valid.py	/^utf-8	def	visit_Attribute	(	self	,	node	)	:	\\n	    	if	node	.	attr	==	'format'	:	\\n	        	s/;"	f
visit_FunctionDef	data_utils/build_dataset.py	/^        def visit_FunctionDef(self, node):$/;"	m	class:get_fns_from_file.GetFunctions
visit_MergedSequenceNode	data/bpe_corpus_raw/valid.py	/^utf-8	def	visit_MergedSequenceNode	(	self	,	node	)	:	\\n	    	self	.	visitchildren	(	node	)	\\n	/;"	f
visit_MergedSequenceNode	data/data_raw/valid.py	/^utf-8	def	visit_MergedSequenceNode	(	self	,	node	)	:	\\n	    	self	.	visitchildren	(	node	)	\\n	/;"	f
visit_Try	data/bpe_corpus_raw/test.py	/^utf-8	def	visit_Try	(	self	,	node	)	:	\\n	    	for	handler	in	node	.	handlers	:	\\n	        	if	/;"	f
visit_Try	data/data_raw/test.py	/^utf-8	def	visit_Try	(	self	,	node	)	:	\\n	    	for	handler	in	node	.	handlers	:	\\n	        	if	/;"	f
visit_binary	data/bpe_corpus_raw/train.py	/^utf-8	@	_memoized_configured_property	\\n	def	_equivalent_columns	(	self	)	:	\\n	    	result	=	u/;"	f	function:_equivalent_columns	file:
visit_binary	data/data_raw/train.py	/^utf-8	@	_memoized_configured_property	\\n	def	_equivalent_columns	(	self	)	:	\\n	    	result	=	u/;"	f	function:_equivalent_columns	file:
visit_getattr	data/bpe_corpus_raw/test.py	/^utf-8	def	visit_getattr	(	self	,	node	)	:	\\n	    	attrname	=	node	.	attrname	\\n	if	self	.	is_f/;"	f
visit_getattr	data/data_raw/test.py	/^utf-8	def	visit_getattr	(	self	,	node	)	:	\\n	    	attrname	=	node	.	attrname	\\n	if	self	.	is_f/;"	f
visit_lambda	data/bpe_corpus_raw/valid.py	/^utf-8	def	visit_lambda	(	self	,	node	)	:	\\n	    	args	=	node	.	args	.	accept	(	self	)	\\n	body	/;"	f
visit_lambda	data/data_raw/valid.py	/^utf-8	def	visit_lambda	(	self	,	node	)	:	\\n	    	args	=	node	.	args	.	accept	(	self	)	\\n	body	/;"	f
visitor	data/bpe_corpus_raw/valid.py	/^utf-8	def	visitor	(	self	)	:	\\n	    	if	self	.	_visitor	is	None	:	\\n	        	raise	Exception	/;"	f
visitor	data/data_raw/valid.py	/^utf-8	def	visitor	(	self	)	:	\\n	    	if	self	.	_visitor	is	None	:	\\n	        	raise	Exception	/;"	f
voidptr_output	data/bpe_corpus_raw/train.py	/^utf-8	def	voidptr_output	(	func	,	argtypes	)	:	\\n	    	func	.	argtypes	=	argtypes	\\n	func	.	re/;"	f
voidptr_output	data/data_raw/train.py	/^utf-8	def	voidptr_output	(	func	,	argtypes	)	:	\\n	    	func	.	argtypes	=	argtypes	\\n	func	.	re/;"	f
volume_mode	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	volume_mode	(	self	)	:	\\n	    	return	self	.	_volume_mode	\\n		$/;"	f
volume_mode	data/data_raw/train.py	/^utf-8	@	property	\\n	def	volume_mode	(	self	)	:	\\n	    	return	self	.	_volume_mode	\\n		$/;"	f
vpn_device_configuration_script	data/bpe_corpus_raw/valid.py	/^utf-8	def	vpn_device_configuration_script	(	self	,	resource_group_name	,	\\n	virtual_network_gat/;"	f
vpn_device_configuration_script	data/data_raw/valid.py	/^utf-8	def	vpn_device_configuration_script	(	self	,	resource_group_name	,	\\n	virtual_network_gat/;"	f
vs_fancy_display	data/bpe_corpus_raw/valid.py	/^utf-8	@	dtu	.	contract	(	bgr	=	'array'	,	segment_list	=	SegmentList	,	width	=	'int,>=1'	)	\\n	de/;"	f
vs_fancy_display	data/data_raw/valid.py	/^utf-8	@	dtu	.	contract	(	bgr	=	'array'	,	segment_list	=	SegmentList	,	width	=	'int,>=1'	)	\\n	de/;"	f
wait	data/bpe_corpus_raw/test.py	/^utf-8	def	wait	(	self	,	operation	,	action	=	None	,	get	=	True	)	:	\\n	    	if	get	:	\\n	       /;"	f
wait	data/bpe_corpus_raw/valid.py	/^utf-8	@	coroutine	\\n	def	wait	(	fs	,	*	,	loop	=	None	,	timeout	=	None	,	return_when	=	ALL_COMPL/;"	f
wait	data/bpe_corpus_raw/valid.py	/^utf-8	def	wait	(	)	:	\\n	    	io_loop	=	ioloop	.	IOLoop	(	)	\\n	io_loop	.	add_callback	(	start	)/;"	f
wait	data/bpe_corpus_raw/valid.py	/^utf-8	def	wait	(	self	,	seconds	=	None	)	:	\\n	    	seconds	=	5	if	seconds	is	None	else	seconds	/;"	f
wait	data/data_raw/test.py	/^utf-8	def	wait	(	self	,	operation	,	action	=	None	,	get	=	True	)	:	\\n	    	if	get	:	\\n	       /;"	f
wait	data/data_raw/valid.py	/^utf-8	@	coroutine	\\n	def	wait	(	fs	,	*	,	loop	=	None	,	timeout	=	None	,	return_when	=	ALL_COMPL/;"	f
wait	data/data_raw/valid.py	/^utf-8	def	wait	(	)	:	\\n	    	io_loop	=	ioloop	.	IOLoop	(	)	\\n	io_loop	.	add_callback	(	start	)/;"	f
wait	data/data_raw/valid.py	/^utf-8	def	wait	(	self	,	seconds	=	None	)	:	\\n	    	seconds	=	5	if	seconds	is	None	else	seconds	/;"	f
waitProcess	data/bpe_corpus_raw/test.py	/^utf-8	def	waitProcess	(	self	,	process	)	:	\\n	    	process	.	wait_and_log	(	)	\\n		$/;"	f
waitProcess	data/data_raw/test.py	/^utf-8	def	waitProcess	(	self	,	process	)	:	\\n	    	process	.	wait_and_log	(	)	\\n		$/;"	f
wait_for_multiple_replicas	data/bpe_corpus_raw/valid.py	/^utf-8	@	test	(	runs_after	=	[	wait_for_delete_non_affinity_master	]	)	\\n	def	wait_for_multiple_/;"	f
wait_for_multiple_replicas	data/data_raw/valid.py	/^utf-8	@	test	(	runs_after	=	[	wait_for_delete_non_affinity_master	]	)	\\n	def	wait_for_multiple_/;"	f
wait_for_playback	data/bpe_corpus_raw/valid.py	/^utf-8	def	wait_for_playback	(	self	)	:	\\n	    	with	self	.	_playback_cond	:	\\n	        	self	./;"	f
wait_for_playback	data/data_raw/valid.py	/^utf-8	def	wait_for_playback	(	self	)	:	\\n	    	with	self	.	_playback_cond	:	\\n	        	self	./;"	f
wait_on_event	data/bpe_corpus_raw/valid.py	/^utf-8	def	wait_on_event	(	self	,	session	,	in_event_type	,	timeout	)	:	\\n	    	raise	NotImpleme/;"	f
wait_on_event	data/data_raw/valid.py	/^utf-8	def	wait_on_event	(	self	,	session	,	in_event_type	,	timeout	)	:	\\n	    	raise	NotImpleme/;"	f
walk	data/bpe_corpus_raw/train.py	/^utf-8	def	walk	(	self	)	:	\\n	    	yield	self	\\n	if	self	.	is_multipart	(	)	:	\\n	        	for	/;"	f
walk	data/bpe_corpus_raw/valid.py	/^utf-8	def	_graph	(	self	)	:	\\n	    	expression	=	self	.	expression	\\n	\\n	def	walk	(	node	)	:	/;"	f	function:_graph	file:
walk	data/data_raw/train.py	/^utf-8	def	walk	(	self	)	:	\\n	    	yield	self	\\n	if	self	.	is_multipart	(	)	:	\\n	        	for	/;"	f
walk	data/data_raw/valid.py	/^utf-8	def	_graph	(	self	)	:	\\n	    	expression	=	self	.	expression	\\n	\\n	def	walk	(	node	)	:	/;"	f	function:_graph	file:
walkModules	data/bpe_corpus_raw/valid.py	/^utf-8	def	walkModules	(	self	,	importPackages	=	False	)	:	\\n	    	for	package	in	self	.	iterMod/;"	f
walkModules	data/data_raw/valid.py	/^utf-8	def	walkModules	(	self	,	importPackages	=	False	)	:	\\n	    	for	package	in	self	.	iterMod/;"	f
walk_trees	data/bpe_corpus_raw/valid.py	/^utf-8	def	walk_trees	(	store	,	tree1_id	,	tree2_id	,	prune_identical	=	False	)	:	\\n	    	mode1	/;"	f
walk_trees	data/data_raw/valid.py	/^utf-8	def	walk_trees	(	store	,	tree1_id	,	tree2_id	,	prune_identical	=	False	)	:	\\n	    	mode1	/;"	f
walk_user	data/bpe_corpus_raw/valid.py	/^utf-8	@	require_format	(	'etree'	)	\\n	def	walk_user	(	self	,	user_id	=	'me'	,	per_page	=	50	,	*/;"	f
walk_user	data/data_raw/valid.py	/^utf-8	@	require_format	(	'etree'	)	\\n	def	walk_user	(	self	,	user_id	=	'me'	,	per_page	=	50	,	*/;"	f
walkdir_py	data_utils/build_dataset.py	/^def walkdir_py(rootdir):$/;"	f
walkdir_py	data_utils/get_file_contents.py	/^def walkdir_py(rootdir):$/;"	f
wantsWriteEvent	data/bpe_corpus_raw/valid.py	/^utf-8	def	wantsWriteEvent	(	self	)	:	\\n	    	if	self	.	result	!=	None	:	\\n	        	return	sel/;"	f
wantsWriteEvent	data/data_raw/valid.py	/^utf-8	def	wantsWriteEvent	(	self	)	:	\\n	    	if	self	.	result	!=	None	:	\\n	        	return	sel/;"	f
warmup	data/bpe_corpus_raw/valid.py	/^utf-8	def	warmup	(	self	)	:	\\n	    	if	self	.	model_name	!=	ModelID	.	DRQA	:	\\n	        	_	,	_/;"	f
warmup	data/data_raw/valid.py	/^utf-8	def	warmup	(	self	)	:	\\n	    	if	self	.	model_name	!=	ModelID	.	DRQA	:	\\n	        	_	,	_/;"	f
warn	data/bpe_corpus_raw/train.py	/^utf-8	def	testSignResumable	(	self	)	:	\\n	    	expected	=	sigs	.	TEST_SIGN_RESUMABLE	\\n	\\n	\\/;"	f	member:testSignResumable.MockLogger.__init__	file:
warn	data/data_raw/train.py	/^utf-8	def	testSignResumable	(	self	)	:	\\n	    	expected	=	sigs	.	TEST_SIGN_RESUMABLE	\\n	\\n	\\/;"	f	member:testSignResumable.MockLogger.__init__	file:
warn_empty	data/bpe_corpus_raw/train.py	/^utf-8	def	warn_empty	(	self	,	title	,	subtitle	=	''	,	icon	=	None	)	:	\\n	    	if	len	(	self	.	_/;"	f
warn_empty	data/data_raw/train.py	/^utf-8	def	warn_empty	(	self	,	title	,	subtitle	=	''	,	icon	=	None	)	:	\\n	    	if	len	(	self	.	_/;"	f
warn_exception	data/bpe_corpus_raw/valid.py	/^utf-8	def	warn_exception	(	func	,	*	args	,	**	kwargs	)	:	\\n	    	try	:	\\n	        	return	func/;"	f
warn_exception	data/data_raw/valid.py	/^utf-8	def	warn_exception	(	func	,	*	args	,	**	kwargs	)	:	\\n	    	try	:	\\n	        	return	func/;"	f
warn_if_insufficient	data/bpe_corpus_raw/valid.py	/^utf-8	@	set_module	(	'numpy'	)	\\n	def	binary_repr	(	num	,	width	=	None	)	:	\\n	\\n	    	def	war/;"	f	function:binary_repr	file:
warn_if_insufficient	data/data_raw/valid.py	/^utf-8	@	set_module	(	'numpy'	)	\\n	def	binary_repr	(	num	,	width	=	None	)	:	\\n	\\n	    	def	war/;"	f	function:binary_repr	file:
watch_buffer	data/bpe_corpus_raw/valid.py	/^utf-8	def	watch_buffer	(	self	,	pid	,	address	,	size	,	action	=	None	)	:	\\n	    	self	.	__set_b/;"	f
watch_buffer	data/data_raw/valid.py	/^utf-8	def	watch_buffer	(	self	,	pid	,	address	,	size	,	action	=	None	)	:	\\n	    	self	.	__set_b/;"	f
web1	data/bpe_corpus_raw/valid.py	/^utf-8	@	pytest	.	yield_fixture	(	)	\\n	def	web1	(	docker_compose	)	:	\\n	    	container	=	docker/;"	f
web1	data/data_raw/valid.py	/^utf-8	@	pytest	.	yield_fixture	(	)	\\n	def	web1	(	docker_compose	)	:	\\n	    	container	=	docker/;"	f
webMaster	data/bpe_corpus_raw/train.py	/^utf-8	def	webMaster	(	self	,	webMaster	=	None	)	:	\\n	    	if	webMaster	is	not	None	:	\\n	      /;"	f
webMaster	data/data_raw/train.py	/^utf-8	def	webMaster	(	self	,	webMaster	=	None	)	:	\\n	    	if	webMaster	is	not	None	:	\\n	      /;"	f
webhooks	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	webhooks	(	self	)	:	\\n	    	return	self	.	_webhooks	\\n		$/;"	f
webhooks	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	webhooks	(	self	)	:	\\n	    	return	self	.	_webhooks	\\n		$/;"	f
websocket_request	data/bpe_corpus_raw/test.py	/^utf-8	@	retry_if_exception	\\n	def	websocket_request	(	url	,	request_json	:	dict	=	None	)	:	\\n	/;"	f
websocket_request	data/data_raw/test.py	/^utf-8	@	retry_if_exception	\\n	def	websocket_request	(	url	,	request_json	:	dict	=	None	)	:	\\n	/;"	f
where	data/bpe_corpus_raw/test.py	/^utf-8	def	where	(	self	,	clause	)	:	\\n	    	e	=	self	.	_clone	(	)	\\n	e	.	element	=	self	.	elem/;"	f
where	data/data_raw/test.py	/^utf-8	def	where	(	self	,	clause	)	:	\\n	    	e	=	self	.	_clone	(	)	\\n	e	.	element	=	self	.	elem/;"	f
which	data/bpe_corpus_raw/valid.py	/^utf-8	def	which	(	path	,	item	,	direction	=	0	,	history	=	False	,	executable	=	False	)	:	\\n	   /;"	f
which	data/data_raw/valid.py	/^utf-8	def	which	(	path	,	item	,	direction	=	0	,	history	=	False	,	executable	=	False	)	:	\\n	   /;"	f
willSplit	data/bpe_corpus_raw/train.py	/^utf-8	def	willSplit	(	self	,	ical	)	:	\\n	    	fullyInFuture	=	False	\\n	now	=	self	.	now	.	dupl/;"	f
willSplit	data/data_raw/train.py	/^utf-8	def	willSplit	(	self	,	ical	)	:	\\n	    	fullyInFuture	=	False	\\n	now	=	self	.	now	.	dupl/;"	f
win_id	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	win_id	(	self	)	:	\\n	    	ret	=	self	.	_get_attr	(	'winId'	)	\\n	retur/;"	f
win_id	data/data_raw/train.py	/^utf-8	@	property	\\n	def	win_id	(	self	)	:	\\n	    	ret	=	self	.	_get_attr	(	'winId'	)	\\n	retur/;"	f
window_	data/bpe_corpus_raw/train.py	/^utf-8	def	window_	(	self	,	args	)	:	\\n	    	if	self	.	_mode	.	is_text_mode	:	\\n	        	raise/;"	f
window_	data/data_raw/train.py	/^utf-8	def	window_	(	self	,	args	)	:	\\n	    	if	self	.	_mode	.	is_text_mode	:	\\n	        	raise/;"	f
window_names	data/bpe_corpus_raw/train.py	/^utf-8	def	window_names	(	self	)	:	\\n	    	return	self	.	tk	.	splitlist	(	self	.	tk	.	call	(	sel/;"	f
window_names	data/data_raw/train.py	/^utf-8	def	window_names	(	self	)	:	\\n	    	return	self	.	tk	.	splitlist	(	self	.	tk	.	call	(	sel/;"	f
winfo_parent	data/bpe_corpus_raw/valid.py	/^utf-8	def	winfo_parent	(	self	)	:	\\n	    	return	self	.	tk	.	call	(	'winfo'	,	'parent'	,	self	./;"	f
winfo_parent	data/data_raw/valid.py	/^utf-8	def	winfo_parent	(	self	)	:	\\n	    	return	self	.	tk	.	call	(	'winfo'	,	'parent'	,	self	./;"	f
winfo_vrootheight	data/bpe_corpus_raw/valid.py	/^utf-8	def	winfo_vrootheight	(	self	)	:	\\n	    	return	getint	(	self	.	tk	.	call	(	'winfo'	,	'vr/;"	f
winfo_vrootheight	data/data_raw/valid.py	/^utf-8	def	winfo_vrootheight	(	self	)	:	\\n	    	return	getint	(	self	.	tk	.	call	(	'winfo'	,	'vr/;"	f
with_dict	data/bpe_corpus_raw/valid.py	/^utf-8	def	with_dict	(	self	,	dict_object	)	:	\\n	    	return	self	.	with_config_source	(	DictCon/;"	f
with_dict	data/data_raw/valid.py	/^utf-8	def	with_dict	(	self	,	dict_object	)	:	\\n	    	return	self	.	with_config_source	(	DictCon/;"	f
with_metaclass	data/bpe_corpus_raw/valid.py	/^utf-8	def	with_metaclass	(	meta	,	base	=	object	)	:	\\n	    	return	meta	(	'NewBase'	,	(	base	,	/;"	f
with_metaclass	data/data_raw/valid.py	/^utf-8	def	with_metaclass	(	meta	,	base	=	object	)	:	\\n	    	return	meta	(	'NewBase'	,	(	base	,	/;"	f
with_partname	data/bpe_corpus_raw/valid.py	/^utf-8	def	with_partname	(	self	,	partname	)	:	\\n	    	self	.	_partname	=	partname	\\n	return	se/;"	f
with_partname	data/data_raw/valid.py	/^utf-8	def	with_partname	(	self	,	partname	)	:	\\n	    	self	.	_partname	=	partname	\\n	return	se/;"	f
with_space_to_batch	data/bpe_corpus_raw/train.py	/^utf-8	def	with_space_to_batch	(	input	,	dilation_rate	,	padding	,	op	,	filter_shape	=	\\n	None	,/;"	f
with_space_to_batch	data/data_raw/train.py	/^utf-8	def	with_space_to_batch	(	input	,	dilation_rate	,	padding	,	op	,	filter_shape	=	\\n	None	,/;"	f
within_group_type	data/bpe_corpus_raw/valid.py	/^utf-8	def	within_group_type	(	self	,	within_group	)	:	\\n	    	return	None	\\n		$/;"	f
within_group_type	data/data_raw/valid.py	/^utf-8	def	within_group_type	(	self	,	within_group	)	:	\\n	    	return	None	\\n		$/;"	f
without_bounds	data/bpe_corpus_raw/valid.py	/^utf-8	def	without_bounds	(	self	)	:	\\n	    	if	self	.	is_bounded	(	)	:	\\n	        	g	=	copy	(	/;"	f
without_bounds	data/data_raw/valid.py	/^utf-8	def	without_bounds	(	self	)	:	\\n	    	if	self	.	is_bounded	(	)	:	\\n	        	g	=	copy	(	/;"	f
wkb	data/bpe_corpus_raw/train.py	/^utf-8	@	property	\\n	def	wkb	(	self	)	:	\\n	    	if	sys	.	byteorder	==	'little'	:	\\n	        	b/;"	f
wkb	data/data_raw/train.py	/^utf-8	@	property	\\n	def	wkb	(	self	)	:	\\n	    	if	sys	.	byteorder	==	'little'	:	\\n	        	b/;"	f
wkt	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	wkt	(	self	)	:	\\n	    	return	capi	.	to_wkt	(	self	.	ptr	,	byref	(	c_c/;"	f
wkt	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	wkt	(	self	)	:	\\n	    	return	capi	.	to_wkt	(	self	.	ptr	,	byref	(	c_c/;"	f
wm_focusmodel	data/bpe_corpus_raw/valid.py	/^utf-8	def	wm_focusmodel	(	self	,	model	=	None	)	:	\\n	    	return	self	.	tk	.	call	(	'wm'	,	'foc/;"	f
wm_focusmodel	data/data_raw/valid.py	/^utf-8	def	wm_focusmodel	(	self	,	model	=	None	)	:	\\n	    	return	self	.	tk	.	call	(	'wm'	,	'foc/;"	f
workbookPassword	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	workbookPassword	(	self	)	:	\\n	    	return	self	.	_workbook_password	\\/;"	f
workbookPassword	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	workbookPassword	(	self	)	:	\\n	    	return	self	.	_workbook_password	\\/;"	f
worker	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	worker	(	self	)	:	\\n	    	return	self	.	_worker	\\n		$/;"	f
worker	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	worker	(	self	)	:	\\n	    	return	self	.	_worker	\\n		$/;"	f
workers	data_utils/data_to_text.py	/^workers = Pool(12)$/;"	v
workspace	data/bpe_corpus_raw/train.py	/^utf-8	def	workspace	(	self	)	:	\\n	    	return	self	.	_workspace	\\n		$/;"	f
workspace	data/data_raw/train.py	/^utf-8	def	workspace	(	self	)	:	\\n	    	return	self	.	_workspace	\\n		$/;"	f
wr_xlsx_sections	data/bpe_corpus_raw/valid.py	/^utf-8	def	wr_xlsx_sections	(	fout_xlsx	,	xlsx_data	,	**	kws	)	:	\\n	    	from	goatools	.	wr_tbl_/;"	f
wr_xlsx_sections	data/data_raw/valid.py	/^utf-8	def	wr_xlsx_sections	(	fout_xlsx	,	xlsx_data	,	**	kws	)	:	\\n	    	from	goatools	.	wr_tbl_/;"	f
wrap	data/bpe_corpus_raw/valid.py	/^utf-8	def	gen_test	(	func	=	None	,	timeout	=	None	)	:	\\n	    	if	timeout	is	None	:	\\n	        /;"	f	function:gen_test	file:
wrap	data/data_raw/valid.py	/^utf-8	def	gen_test	(	func	=	None	,	timeout	=	None	)	:	\\n	    	if	timeout	is	None	:	\\n	        /;"	f	function:gen_test	file:
wrap_rich_text_lines	data/bpe_corpus_raw/valid.py	/^utf-8	def	wrap_rich_text_lines	(	inp	,	cols	)	:	\\n	    	new_line_indices	=	[	]	\\n	if	not	isins/;"	f
wrap_rich_text_lines	data/data_raw/valid.py	/^utf-8	def	wrap_rich_text_lines	(	inp	,	cols	)	:	\\n	    	new_line_indices	=	[	]	\\n	if	not	isins/;"	f
wrap_section	data/bpe_corpus_raw/train.py	/^utf-8	def	wrap_section	(	event_prefixed_mac	,	sect_id	=	None	)	:	\\n	    	starting_buffer	=	list/;"	f
wrap_section	data/data_raw/train.py	/^utf-8	def	wrap_section	(	event_prefixed_mac	,	sect_id	=	None	)	:	\\n	    	starting_buffer	=	list/;"	f
wrapped_view	data/bpe_corpus_raw/valid.py	/^utf-8	def	csrf_response_exempt	(	view_func	)	:	\\n	\\n	    	def	wrapped_view	(	*	args	,	**	kwarg/;"	f	function:csrf_response_exempt	file:
wrapped_view	data/data_raw/valid.py	/^utf-8	def	csrf_response_exempt	(	view_func	)	:	\\n	\\n	    	def	wrapped_view	(	*	args	,	**	kwarg/;"	f	function:csrf_response_exempt	file:
wrapper	data/bpe_corpus_raw/test.py	/^utf-8	def	coroutine	(	func	)	:	\\n	    	if	_inspect_iscoroutinefunction	(	func	)	:	\\n	        	/;"	f	function:coroutine.coro	file:
wrapper	data/bpe_corpus_raw/test.py	/^utf-8	def	memoize_when_activated	(	fun	)	:	\\n	\\n	    	@	functools	.	wraps	(	fun	)	\\n	def	wrap/;"	f	function:memoize_when_activated	file:
wrapper	data/bpe_corpus_raw/train.py	/^utf-8	def	__parse_kwargs	(	func	)	:	\\n	\\n	    	def	wrapper	(	self	,	verb	,	request	,	**	kwargs/;"	f	function:__parse_kwargs	file:
wrapper	data/bpe_corpus_raw/train.py	/^utf-8	def	action_logging	(	f	)	:	\\n	\\n	    	@	functools	.	wraps	(	f	)	\\n	def	wrapper	(	*	args/;"	f	function:action_logging	file:
wrapper	data/bpe_corpus_raw/train.py	/^utf-8	def	add_metaclass	(	metaclass	)	:	\\n	\\n	    	def	wrapper	(	cls	)	:	\\n	        	orig_var/;"	f	function:add_metaclass	file:
wrapper	data/bpe_corpus_raw/train.py	/^utf-8	def	error	(	self	,	code	=	500	)	:	\\n	\\n	    	def	wrapper	(	handler	)	:	\\n	        	self/;"	f	function:error	file:
wrapper	data/bpe_corpus_raw/valid.py	/^utf-8	def	_log_result_decorator	(	fct	)	:	\\n	\\n	    	def	wrapper	(	*	args	,	**	kw	)	:	\\n	    /;"	f	function:_log_result_decorator	file:
wrapper	data/bpe_corpus_raw/valid.py	/^utf-8	def	safecall	(	func	)	:	\\n	\\n	    	def	wrapper	(	*	args	,	**	kwargs	)	:	\\n	        	try/;"	f	function:safecall	file:
wrapper	data/data_raw/test.py	/^utf-8	def	coroutine	(	func	)	:	\\n	    	if	_inspect_iscoroutinefunction	(	func	)	:	\\n	        	/;"	f	function:coroutine.coro	file:
wrapper	data/data_raw/test.py	/^utf-8	def	memoize_when_activated	(	fun	)	:	\\n	\\n	    	@	functools	.	wraps	(	fun	)	\\n	def	wrap/;"	f	function:memoize_when_activated	file:
wrapper	data/data_raw/train.py	/^utf-8	def	__parse_kwargs	(	func	)	:	\\n	\\n	    	def	wrapper	(	self	,	verb	,	request	,	**	kwargs/;"	f	function:__parse_kwargs	file:
wrapper	data/data_raw/train.py	/^utf-8	def	action_logging	(	f	)	:	\\n	\\n	    	@	functools	.	wraps	(	f	)	\\n	def	wrapper	(	*	args/;"	f	function:action_logging	file:
wrapper	data/data_raw/train.py	/^utf-8	def	add_metaclass	(	metaclass	)	:	\\n	\\n	    	def	wrapper	(	cls	)	:	\\n	        	orig_var/;"	f	function:add_metaclass	file:
wrapper	data/data_raw/train.py	/^utf-8	def	error	(	self	,	code	=	500	)	:	\\n	\\n	    	def	wrapper	(	handler	)	:	\\n	        	self/;"	f	function:error	file:
wrapper	data/data_raw/valid.py	/^utf-8	def	_log_result_decorator	(	fct	)	:	\\n	\\n	    	def	wrapper	(	*	args	,	**	kw	)	:	\\n	    /;"	f	function:_log_result_decorator	file:
wrapper	data/data_raw/valid.py	/^utf-8	def	safecall	(	func	)	:	\\n	\\n	    	def	wrapper	(	*	args	,	**	kwargs	)	:	\\n	        	try/;"	f	function:safecall	file:
write	data/bpe_corpus_raw/train.py	/^utf-8	def	print_	(	*	args	,	**	kwargs	)	:	\\n	    	fp	=	kwargs	.	pop	(	'file'	,	sys	.	stdout	)	\\/;"	f	function:print_	file:
write	data/bpe_corpus_raw/train.py	/^utf-8	def	stream_encode_multipart	(	values	,	use_tempfile	=	True	,	threshold	=	1024	*	500	,	\\n	/;"	f	function:stream_encode_multipart.write_binary	file:
write	data/bpe_corpus_raw/train.py	/^utf-8	def	write	(	self	,	s	)	:	\\n	    	if	self	.	comptype	==	'gz'	:	\\n	        	self	.	crc	=	s/;"	f
write	data/bpe_corpus_raw/train.py	/^utf-8	def	write	(	self	,	text	,	fg	=	'black'	,	bg	=	'white'	)	:	\\n	    	if	isinstance	(	text	,	/;"	f
write	data/bpe_corpus_raw/valid.py	/^utf-8	def	print_	(	*	args	,	**	kwargs	)	:	\\n	    	fp	=	kwargs	.	pop	(	'file'	,	sys	.	stdout	)	\\/;"	f	function:print_	file:
write	data/bpe_corpus_raw/valid.py	/^utf-8	def	write	(	self	,	data	)	:	\\n	    	self	.	_checkClosed	(	)	\\n	if	not	self	.	_sslobj	:	\\/;"	f
write	data/bpe_corpus_raw/valid.py	/^utf-8	def	write	(	self	,	msg	)	:	\\n	    	if	self	.	should	(	'self'	)	:	\\n	        	caller_self/;"	f
write	data/bpe_corpus_raw/valid.py	/^utf-8	def	write	(	self	,	outfile	,	rows	)	:	\\n	    	if	self	.	interlace	:	\\n	        	fmt	=	'B/;"	f
write	data/data_raw/train.py	/^utf-8	def	print_	(	*	args	,	**	kwargs	)	:	\\n	    	fp	=	kwargs	.	pop	(	'file'	,	sys	.	stdout	)	\\/;"	f	function:print_	file:
write	data/data_raw/train.py	/^utf-8	def	stream_encode_multipart	(	values	,	use_tempfile	=	True	,	threshold	=	1024	*	500	,	\\n	/;"	f	function:stream_encode_multipart.write_binary	file:
write	data/data_raw/train.py	/^utf-8	def	write	(	self	,	s	)	:	\\n	    	if	self	.	comptype	==	'gz'	:	\\n	        	self	.	crc	=	s/;"	f
write	data/data_raw/train.py	/^utf-8	def	write	(	self	,	text	,	fg	=	'black'	,	bg	=	'white'	)	:	\\n	    	if	isinstance	(	text	,	/;"	f
write	data/data_raw/valid.py	/^utf-8	def	print_	(	*	args	,	**	kwargs	)	:	\\n	    	fp	=	kwargs	.	pop	(	'file'	,	sys	.	stdout	)	\\/;"	f	function:print_	file:
write	data/data_raw/valid.py	/^utf-8	def	write	(	self	,	data	)	:	\\n	    	self	.	_checkClosed	(	)	\\n	if	not	self	.	_sslobj	:	\\/;"	f
write	data/data_raw/valid.py	/^utf-8	def	write	(	self	,	msg	)	:	\\n	    	if	self	.	should	(	'self'	)	:	\\n	        	caller_self/;"	f
write	data/data_raw/valid.py	/^utf-8	def	write	(	self	,	outfile	,	rows	)	:	\\n	    	if	self	.	interlace	:	\\n	        	fmt	=	'B/;"	f
writeErr	data/bpe_corpus_raw/train.py	/^utf-8	def	writeErr	(	self	,	data	)	:	\\n	    	self	.	err	+=	data	\\n		$/;"	f
writeErr	data/data_raw/train.py	/^utf-8	def	writeErr	(	self	,	data	)	:	\\n	    	self	.	err	+=	data	\\n		$/;"	f
writeSetting	data/bpe_corpus_raw/valid.py	/^utf-8	@	classmethod	\\n	def	writeSetting	(	cls	,	attribute	,	value	)	:	\\n	    	try	:	\\n	      /;"	f
writeSetting	data/data_raw/valid.py	/^utf-8	@	classmethod	\\n	def	writeSetting	(	cls	,	attribute	,	value	)	:	\\n	    	try	:	\\n	      /;"	f
write_binary	data/bpe_corpus_raw/train.py	/^utf-8	def	stream_encode_multipart	(	values	,	use_tempfile	=	True	,	threshold	=	1024	*	500	,	\\n	/;"	f	function:stream_encode_multipart	file:
write_binary	data/data_raw/train.py	/^utf-8	def	stream_encode_multipart	(	values	,	use_tempfile	=	True	,	threshold	=	1024	*	500	,	\\n	/;"	f	function:stream_encode_multipart	file:
write_dataset	data/bpe_corpus_raw/train.py	/^utf-8	def	write_dataset	(	df	,	file_name	,	out_path	=	'.'	+	os	.	path	.	sep	)	:	\\n	    	df_trai/;"	f
write_dataset	data/data_raw/train.py	/^utf-8	def	write_dataset	(	df	,	file_name	,	out_path	=	'.'	+	os	.	path	.	sep	)	:	\\n	    	df_trai/;"	f
write_fiducials	data/bpe_corpus_raw/train.py	/^utf-8	@	verbose	\\n	def	write_fiducials	(	fname	,	pts	,	coord_frame	=	FIFF	.	FIFFV_COORD_UNKNOWN/;"	f
write_fiducials	data/data_raw/train.py	/^utf-8	@	verbose	\\n	def	write_fiducials	(	fname	,	pts	,	coord_frame	=	FIFF	.	FIFFV_COORD_UNKNOWN/;"	f
write_file	data/bpe_corpus_raw/valid.py	/^utf-8	def	write_file	(	self	,	check	=	True	)	:	\\n	    	if	check	:	\\n	        	self	.	check	(	f/;"	f
write_file	data/bpe_corpus_raw/valid.py	/^utf-8	def	write_file	(	self	,	what	,	filename	,	data	)	:	\\n	    	log	.	info	(	'writing %s to %s/;"	f
write_file	data/data_raw/valid.py	/^utf-8	def	write_file	(	self	,	check	=	True	)	:	\\n	    	if	check	:	\\n	        	self	.	check	(	f/;"	f
write_file	data/data_raw/valid.py	/^utf-8	def	write_file	(	self	,	what	,	filename	,	data	)	:	\\n	    	log	.	info	(	'writing %s to %s/;"	f
write_generic	data/bpe_corpus_raw/train.py	/^utf-8	def	write_generic	(	ioobj	,	target	=	None	,	obj	=	None	,	return_writer	=	False	)	:	\\n	   /;"	f
write_generic	data/data_raw/train.py	/^utf-8	def	write_generic	(	ioobj	,	target	=	None	,	obj	=	None	,	return_writer	=	False	)	:	\\n	   /;"	f
write_hdf5_array	data/bpe_corpus_raw/valid.py	/^utf-8	@	io_hdf5	.	with_write_hdf5	\\n	def	write_hdf5_array	(	array	,	h5g	,	path	=	None	,	attrs	=/;"	f
write_hdf5_array	data/data_raw/valid.py	/^utf-8	@	io_hdf5	.	with_write_hdf5	\\n	def	write_hdf5_array	(	array	,	h5g	,	path	=	None	,	attrs	=/;"	f
write_headers	data/bpe_corpus_raw/valid.py	/^utf-8	def	write_headers	(	self	,	start_line	,	headers	,	chunk	=	None	,	callback	=	None	)	:	\\n	 /;"	f
write_headers	data/data_raw/valid.py	/^utf-8	def	write_headers	(	self	,	start_line	,	headers	,	chunk	=	None	,	callback	=	None	)	:	\\n	 /;"	f
write_manifest	data/bpe_corpus_raw/test.py	/^utf-8	def	write_manifest	(	self	)	:	\\n	    	if	sys	.	version_info	>=	(	3	,	)	:	\\n	        	fil/;"	f
write_manifest	data/data_raw/test.py	/^utf-8	def	write_manifest	(	self	)	:	\\n	    	if	sys	.	version_info	>=	(	3	,	)	:	\\n	        	fil/;"	f
write_object_diff	data/bpe_corpus_raw/test.py	/^utf-8	def	write_object_diff	(	f	,	store	,	old_file	,	new_file	,	diff_binary	=	False	)	:	\\n	    /;"	f
write_object_diff	data/data_raw/test.py	/^utf-8	def	write_object_diff	(	f	,	store	,	old_file	,	new_file	,	diff_binary	=	False	)	:	\\n	    /;"	f
write_pin_flag_map	data/bpe_corpus_raw/valid.py	/^utf-8	def	write_pin_flag_map	(	pin_flag_map	,	pin_flags_filename	)	:	\\n	    	if	pin_flags_filen/;"	f
write_pin_flag_map	data/data_raw/valid.py	/^utf-8	def	write_pin_flag_map	(	pin_flag_map	,	pin_flags_filename	)	:	\\n	    	if	pin_flags_filen/;"	f
write_srcattr	data/bpe_corpus_raw/test.py	/^utf-8	def	write_srcattr	(	self	,	srcattr_list	)	:	\\n	    	if	len	(	srcattr_list	)	==	0	:	\\n	  /;"	f
write_srcattr	data/data_raw/test.py	/^utf-8	def	write_srcattr	(	self	,	srcattr_list	)	:	\\n	    	if	len	(	srcattr_list	)	==	0	:	\\n	  /;"	f
write_tipsy_param	data/bpe_corpus_raw/valid.py	/^utf-8	def	write_tipsy_param	(	sim	,	tipsyfile	)	:	\\n	    	lenunit	,	massunit	,	timeunit	=	get_t/;"	f
write_tipsy_param	data/data_raw/valid.py	/^utf-8	def	write_tipsy_param	(	sim	,	tipsyfile	)	:	\\n	    	lenunit	,	massunit	,	timeunit	=	get_t/;"	f
write_to_fd	data/bpe_corpus_raw/train.py	/^utf-8	def	write_to_fd	(	self	,	data	)	:	\\n	    	raise	NotImplementedError	(	)	\\n		$/;"	f
write_to_fd	data/data_raw/train.py	/^utf-8	def	write_to_fd	(	self	,	data	)	:	\\n	    	raise	NotImplementedError	(	)	\\n		$/;"	f
write_vocab_and_sums	data/bpe_corpus_raw/train.py	/^utf-8	def	write_vocab_and_sums	(	vocab	,	sums	,	vocab_filename	,	sums_filename	)	:	\\n	    	with/;"	f
write_vocab_and_sums	data/data_raw/train.py	/^utf-8	def	write_vocab_and_sums	(	vocab	,	sums	,	vocab_filename	,	sums_filename	)	:	\\n	    	with/;"	f
writeparam	data/bpe_corpus_raw/valid.py	/^utf-8	def	writeparam	(	self	,	pos	)	:	\\n	    	name	=	'$'	+	pos	.	skipcurrent	(	)	\\n	if	not	nam/;"	f
writeparam	data/data_raw/valid.py	/^utf-8	def	writeparam	(	self	,	pos	)	:	\\n	    	name	=	'$'	+	pos	.	skipcurrent	(	)	\\n	if	not	nam/;"	f
writerows	data/bpe_corpus_raw/valid.py	/^utf-8	def	writerows	(	self	,	values_list	)	:	\\n	    	has_empty	=	False	\\n	if	self	.	quote_empt/;"	f
writerows	data/data_raw/valid.py	/^utf-8	def	writerows	(	self	,	values_list	)	:	\\n	    	has_empty	=	False	\\n	if	self	.	quote_empt/;"	f
wsgi_internal_server_error_json	data/bpe_corpus_raw/valid.py	/^utf-8	def	wsgi_internal_server_error_json	(	self	,	start_response	:	Callable	,	message	:	\\n	str/;"	f
wsgi_internal_server_error_json	data/data_raw/valid.py	/^utf-8	def	wsgi_internal_server_error_json	(	self	,	start_response	:	Callable	,	message	:	\\n	str/;"	f
x0f_x03	data/bpe_corpus_raw/valid.py	/^utf-8	def	x0f_x03	(	o	,	sock	,	data	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
x0f_x03	data/data_raw/valid.py	/^utf-8	def	x0f_x03	(	o	,	sock	,	data	)	:	\\n	    	raise	NotImplementedError	\\n		$/;"	f
xl_rowcol_to_cell_fast	data/bpe_corpus_raw/train.py	/^utf-8	def	xl_rowcol_to_cell_fast	(	row	,	col	)	:	\\n	    	if	col	in	COL_NAMES	:	\\n	        	col/;"	f
xl_rowcol_to_cell_fast	data/data_raw/train.py	/^utf-8	def	xl_rowcol_to_cell_fast	(	row	,	col	)	:	\\n	    	if	col	in	COL_NAMES	:	\\n	        	col/;"	f
xonshconfig	data/bpe_corpus_raw/valid.py	/^utf-8	def	xonshconfig	(	env	)	:	\\n	    	xcd	=	env	.	get	(	'XONSH_CONFIG_DIR'	)	\\n	xc	=	os	.	pa/;"	f
xonshconfig	data/data_raw/valid.py	/^utf-8	def	xonshconfig	(	env	)	:	\\n	    	xcd	=	env	.	get	(	'XONSH_CONFIG_DIR'	)	\\n	xc	=	os	.	pa/;"	f
xpath	data/bpe_corpus_raw/train.py	/^utf-8	def	xpath	(	node	,	expr	)	:	\\n	    	path	=	bsoupxpath	.	get_path	(	expr	)	\\n	return	path/;"	f
xpath	data/data_raw/train.py	/^utf-8	def	xpath	(	node	,	expr	)	:	\\n	    	path	=	bsoupxpath	.	get_path	(	expr	)	\\n	return	path/;"	f
yanchor	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	yanchor	(	self	)	:	\\n	    	return	self	[	'yanchor'	]	\\n		$/;"	f
yanchor	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	yanchor	(	self	)	:	\\n	    	return	self	[	'yanchor'	]	\\n		$/;"	f
year	data/bpe_corpus_raw/valid.py	/^utf-8	@	ColumnFn	(	type_indicator	=	mdb	.	MDB_INT_16	)	\\n	def	year	(	val	)	:	\\n	    	try	:	\\n/;"	f
year	data/data_raw/valid.py	/^utf-8	@	ColumnFn	(	type_indicator	=	mdb	.	MDB_INT_16	)	\\n	def	year	(	val	)	:	\\n	    	try	:	\\n/;"	f
ylim	data/bpe_corpus_raw/test.py	/^utf-8	def	ylim	(	*	args	,	**	kwargs	)	:	\\n	    	ax	=	gca	(	)	\\n	if	not	args	and	not	kwargs	:	\\/;"	f
ylim	data/data_raw/test.py	/^utf-8	def	ylim	(	*	args	,	**	kwargs	)	:	\\n	    	ax	=	gca	(	)	\\n	if	not	args	and	not	kwargs	:	\\/;"	f
yocto_kernel_patch_list	data/bpe_corpus_raw/valid.py	/^utf-8	def	yocto_kernel_patch_list	(	scripts_path	,	machine	)	:	\\n	    	patches	=	read_patch_ite/;"	f
yocto_kernel_patch_list	data/data_raw/valid.py	/^utf-8	def	yocto_kernel_patch_list	(	scripts_path	,	machine	)	:	\\n	    	patches	=	read_patch_ite/;"	f
z	data/bpe_corpus_raw/valid.py	/^utf-8	@	property	\\n	def	z	(	self	)	:	\\n	    	return	self	[	'z'	]	\\n		$/;"	f
z	data/data_raw/valid.py	/^utf-8	@	property	\\n	def	z	(	self	)	:	\\n	    	return	self	[	'z'	]	\\n		$/;"	f
z_to_vector	data/bpe_corpus_raw/valid.py	/^utf-8	def	z_to_vector	(	vector	)	:	\\n	    	norm	=	get_norm	(	vector	)	\\n	if	norm	==	0	:	\\n	  /;"	f
z_to_vector	data/data_raw/valid.py	/^utf-8	def	z_to_vector	(	vector	)	:	\\n	    	norm	=	get_norm	(	vector	)	\\n	if	norm	==	0	:	\\n	  /;"	f
zeros	data/bpe_corpus_raw/test.py	/^utf-8	def	zeros	(	shape	,	dtype	=	None	,	order	=	'C'	)	:	\\n	    	a	=	ndarray	.	__new__	(	matrix/;"	f
zeros	data/data_raw/test.py	/^utf-8	def	zeros	(	shape	,	dtype	=	None	,	order	=	'C'	)	:	\\n	    	a	=	ndarray	.	__new__	(	matrix/;"	f
zip_dataset	data/bpe_corpus_raw/train.py	/^utf-8	def	zip_dataset	(	input_datasets	,	output_types	,	output_shapes	,	name	=	None	)	:	\\n	    /;"	f
zip_dataset	data/data_raw/train.py	/^utf-8	def	zip_dataset	(	input_datasets	,	output_types	,	output_shapes	,	name	=	None	)	:	\\n	    /;"	f
zipfile_files	data/bpe_corpus_raw/valid.py	/^utf-8	def	zipfile_files	(	fname	)	:	\\n	    	zf	=	zipfile	.	ZipFile	(	fname	,	'r'	)	\\n	return	[/;"	f
zipfile_files	data/data_raw/valid.py	/^utf-8	def	zipfile_files	(	fname	)	:	\\n	    	zf	=	zipfile	.	ZipFile	(	fname	,	'r'	)	\\n	return	[/;"	f
zk_client	data/bpe_corpus_raw/valid.py	/^utf-8	def	zk_client	(	host	,	scheme	,	credential	)	:	\\n	    	if	not	re	.	match	(	'.*:\\\\\\\\d+/;"	f
zk_client	data/data_raw/valid.py	/^utf-8	def	zk_client	(	host	,	scheme	,	credential	)	:	\\n	    	if	not	re	.	match	(	'.*:\\\\\\\\d+/;"	f
